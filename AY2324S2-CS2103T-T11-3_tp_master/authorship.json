[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cleowenxuan"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions) [![codecov](https://codecov.io/gh/AY2324S2-CS2103T-T11-3/tp/graph/badge.svg?token\u003dBLAYKG2PXC)](https://codecov.io/gh/AY2324S2-CS2103T-T11-3/tp)","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"# EventBook","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"As a student leader overseeing various events, it can be challenging to stay organized with numerous contacts across different events. EventBook is designed to simplify the management of contacts across various events. With EventBook, you can effortlessly organize and access contact details of individuals in different events, streamlining the process of communication and coordination.","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":"## Documentation","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":"For the detailed documentation of this project, see the **[EventBook Product Website](https://ay2324s2-cs2103t-t11-3.github.io/tp/index.html)**.","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":"### Acknowledgement","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"cleowenxuan":1,"peterXGD":8,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"cleowenxuan"},"content":"run {","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"cleowenxuan"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"cleowenxuan"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"jonpwk"},"content":"    archiveFileName \u003d \u0027EventBook.jar\u0027","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"cleowenxuan":4,"jonpwk":1,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"peienlim"},"content":"### Owen","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"peienlim"},"content":"\u003cimg src\u003d\"images/owenong1.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"peienlim"},"content":"[[github](https://github.com/owenong1)]","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"peienlim"},"content":"* Role: Developer","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"peienlim"},"content":"### Yifei","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"peienlim"},"content":"\u003cimg src\u003d\"images/peterxgd.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"peienlim"},"content":"[[github](http://github.com/peterXGD)]","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"peienlim"},"content":"* Role: Developer","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"peienlim"},"content":"### Cleo","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"peienlim"},"content":"\u003cimg src\u003d\"images/cleowenxuan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"peienlim"},"content":"[[github](http://github.com/cleowenxuan)]","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"peienlim"},"content":"### Jonathan","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"peienlim"},"content":"\u003cimg src\u003d\"images/jonpwk.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"peienlim"},"content":"[[github](http://github.com/jonpwk)]","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"peienlim"},"content":"### Pei En","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"peienlim"},"content":"\u003cimg src\u003d\"images/peienlim.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"peienlim"},"content":"[[github](http://github.com/peienlim)]","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"peienlim":17,"-":28}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"owenong1"},"content":"  title: \"Developer Guide :)\"","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"cleowenxuan"},"content":"# EventBook Developer Guide","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well }_","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"peienlim"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object) and all `Tag` objects (which are contained in a `UniqueTagList` object).","lastModifiedDate":"2024-03-28"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"jonpwk"},"content":"### \\[Proposed\\] Creating and Deleting Tag Objects","lastModifiedDate":"2024-03-29"},{"lineNumber":154,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":155,"author":{"gitId":"jonpwk"},"content":"As part of the functionality of EventBook, a myriad of tag objects might be required to facilitate organisation of","lastModifiedDate":"2024-03-29"},{"lineNumber":156,"author":{"gitId":"jonpwk"},"content":"contacts within the program. EventBook aims to support this capability by providing the ability to create or delete","lastModifiedDate":"2024-03-29"},{"lineNumber":157,"author":{"gitId":"jonpwk"},"content":"standalone tags separate from people.","lastModifiedDate":"2024-03-29"},{"lineNumber":158,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":159,"author":{"gitId":"jonpwk"},"content":"The proposed mechanism is as follows:","lastModifiedDate":"2024-03-29"},{"lineNumber":160,"author":{"gitId":"jonpwk"},"content":"* `ctag`: Creates a Tag object that will be stored in a global Tag array within the `ModelManager` class.","lastModifiedDate":"2024-03-29"},{"lineNumber":161,"author":{"gitId":"jonpwk"},"content":"* `dtag`: Deletes a Tag object that is currently stored in the global Tag array within the `ModelManager` class. This","lastModifiedDate":"2024-03-29"},{"lineNumber":162,"author":{"gitId":"jonpwk"},"content":"will also delete all instances of the Tag object within the program.","lastModifiedDate":"2024-03-29"},{"lineNumber":163,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":164,"author":{"gitId":"jonpwk"},"content":"Each Tag object that exists in the program must exist within this global Tag array. Existing functions such as","lastModifiedDate":"2024-03-29"},{"lineNumber":165,"author":{"gitId":"jonpwk"},"content":"`add` will support the creation of Tag objects to be added to this global Tag array.","lastModifiedDate":"2024-03-29"},{"lineNumber":166,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":167,"author":{"gitId":"jonpwk"},"content":"An example usage scenario illustrates how the `ctag` feature operates:","lastModifiedDate":"2024-03-29"},{"lineNumber":168,"author":{"gitId":"jonpwk"},"content":"1. The user launches the application. The application will be in its initial state showing the full list","lastModifiedDate":"2024-03-29"},{"lineNumber":169,"author":{"gitId":"jonpwk"},"content":"of contacts in the EventBook.","lastModifiedDate":"2024-03-29"},{"lineNumber":170,"author":{"gitId":"jonpwk"},"content":"2. The user executes `ctag Friend`, creating a new Tag object named `Friend`.","lastModifiedDate":"2024-03-29"},{"lineNumber":171,"author":{"gitId":"jonpwk"},"content":"3. The user can then tag people in the program with the new `Friend` tag.","lastModifiedDate":"2024-03-29"},{"lineNumber":172,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":173,"author":{"gitId":"jonpwk"},"content":"An example usage scenario illustrates how the `dtag` feature operates:","lastModifiedDate":"2024-03-29"},{"lineNumber":174,"author":{"gitId":"jonpwk"},"content":"1. The user launches the application. The application will be in its initial state showing the full list of","lastModifiedDate":"2024-03-29"},{"lineNumber":175,"author":{"gitId":"jonpwk"},"content":"contacts in the EventBook.","lastModifiedDate":"2024-03-29"},{"lineNumber":176,"author":{"gitId":"jonpwk"},"content":"2. The user executes `dtag Friend`, deleting the Tag object named `Friend`.","lastModifiedDate":"2024-03-29"},{"lineNumber":177,"author":{"gitId":"jonpwk"},"content":"3. All instances of `Friend` will be deleted from the EventBook.","lastModifiedDate":"2024-03-29"},{"lineNumber":178,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":179,"author":{"gitId":"owenong1"},"content":"### \\[Proposed\\] Importing and Exporting as .csv file","lastModifiedDate":"2024-03-29"},{"lineNumber":180,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":181,"author":{"gitId":"owenong1"},"content":"As student leaders, a common and easily accessible file format type for event contacts would be .csv. Eventbook","lastModifiedDate":"2024-03-29"},{"lineNumber":182,"author":{"gitId":"owenong1"},"content":"aims to support the ability to import and export contacts using .csv files to facilitate fast and effective contact","lastModifiedDate":"2024-03-29"},{"lineNumber":183,"author":{"gitId":"owenong1"},"content":"upload and sharing.","lastModifiedDate":"2024-03-29"},{"lineNumber":184,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":185,"author":{"gitId":"owenong1"},"content":"The proposed mechanism is as follows:","lastModifiedDate":"2024-03-29"},{"lineNumber":186,"author":{"gitId":"owenong1"},"content":"* Import: Facilitated by the `import` command that takes a path parameter. The file named `import.csv` at the given","lastModifiedDate":"2024-03-29"},{"lineNumber":187,"author":{"gitId":"owenong1"},"content":"path will be read in a set format. The contact details in the csv will then be imported into the address book following","lastModifiedDate":"2024-03-29"},{"lineNumber":188,"author":{"gitId":"owenong1"},"content":"the format of the add command (Implication being that each field in the .csv should be compatible with the current","lastModifiedDate":"2024-03-29"},{"lineNumber":189,"author":{"gitId":"owenong1"},"content":"implementation of the address book, and follow all conventions of the add command like formatting and non-duplicates)","lastModifiedDate":"2024-03-29"},{"lineNumber":190,"author":{"gitId":"owenong1"},"content":"* Export: Facilitated by the `export` command that takes no parameters. The command will access the `UniquePersonList`","lastModifiedDate":"2024-03-29"},{"lineNumber":191,"author":{"gitId":"owenong1"},"content":"found in the `1AddressBook` of the `Model` and parse through the relevant data, formatting it into the relevant fields.","lastModifiedDate":"2024-03-29"},{"lineNumber":192,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":193,"author":{"gitId":"owenong1"},"content":"The .csv should be formatted with the first row having the non-case sensitive headers (separate cells marked with `|`):","lastModifiedDate":"2024-03-29"},{"lineNumber":194,"author":{"gitId":"owenong1"},"content":"* `Name | Number | Email | Address | Tag`","lastModifiedDate":"2024-03-29"},{"lineNumber":195,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":196,"author":{"gitId":"owenong1"},"content":"An example usage scenario illustrates how the import feature operates:","lastModifiedDate":"2024-03-29"},{"lineNumber":197,"author":{"gitId":"owenong1"},"content":"1. The user launches the application. The application will be in its initial state showing the full list of contacts","lastModifiedDate":"2024-03-29"},{"lineNumber":198,"author":{"gitId":"owenong1"},"content":"in the EventBook.","lastModifiedDate":"2024-03-29"},{"lineNumber":199,"author":{"gitId":"owenong1"},"content":"2. The user executes `import ./import/import.csv` , with import.csv having 2 rows:","lastModifiedDate":"2024-03-29"},{"lineNumber":200,"author":{"gitId":"owenong1"},"content":"   1. `Name | Number | Email | Address | Tag`","lastModifiedDate":"2024-03-29"},{"lineNumber":201,"author":{"gitId":"owenong1"},"content":"   2. `John | 94756383 | john@mail.com | NUS UTown | BestFriend`","lastModifiedDate":"2024-03-29"},{"lineNumber":202,"author":{"gitId":"owenong1"},"content":"3. The contact `John` is imported into the address book, with parameters as above.","lastModifiedDate":"2024-03-29"},{"lineNumber":203,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":204,"author":{"gitId":"owenong1"},"content":"An example usage scenario illustrates how the export feature operates:","lastModifiedDate":"2024-03-29"},{"lineNumber":205,"author":{"gitId":"owenong1"},"content":"1. The user launches the application. The application will be in its initial state showing the full list of contacts","lastModifiedDate":"2024-03-29"},{"lineNumber":206,"author":{"gitId":"owenong1"},"content":"   in the EventBook.","lastModifiedDate":"2024-03-29"},{"lineNumber":207,"author":{"gitId":"owenong1"},"content":"2. The user executes `export` to export all contacts","lastModifiedDate":"2024-03-29"},{"lineNumber":208,"author":{"gitId":"owenong1"},"content":"3. All contacts in the address book will be exported to ./export/export.csv according to the format","lastModifiedDate":"2024-03-29"},{"lineNumber":209,"author":{"gitId":"owenong1"},"content":"`Name | Number | Email | Address | Tag`","lastModifiedDate":"2024-03-29"},{"lineNumber":210,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":211,"author":{"gitId":"peienlim"},"content":"### \\[Proposed\\] Event switching feature","lastModifiedDate":"2024-03-28"},{"lineNumber":212,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":213,"author":{"gitId":"peienlim"},"content":"As our target audience are student leaders, and they may be in-charge of multiple events throughout their course in NUS, we are proposing to implement a event-switching feature which allows them to switch between events and view contacts specific to each event.","lastModifiedDate":"2024-03-28"},{"lineNumber":214,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":215,"author":{"gitId":"peienlim"},"content":"The proposed event switching feature introduces the concept of event-specific filtering to the existing EventBook. The key operations and components of the proposed implementation include:","lastModifiedDate":"2024-03-28"},{"lineNumber":216,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":217,"author":{"gitId":"peienlim"},"content":"* Filtering Mechanism: filters contacts in the EventBook based on event tag, allowing for selective display of contacts based on event tag.","lastModifiedDate":"2024-03-28"},{"lineNumber":218,"author":{"gitId":"peienlim"},"content":"* UI enhancements: allow users to see each event as a tab and after navigating to a particular tab, they will be able to view contacts of members under that event.","lastModifiedDate":"2024-03-28"},{"lineNumber":219,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":220,"author":{"gitId":"peienlim"},"content":"An example usage scenario illustrates how the event switching feature operates:","lastModifiedDate":"2024-03-28"},{"lineNumber":221,"author":{"gitId":"peienlim"},"content":"1. The user launches the application. The application will be in its initial state showing the full list of contacts in the EventBook.","lastModifiedDate":"2024-03-28"},{"lineNumber":222,"author":{"gitId":"peienlim"},"content":"2. The user switches tabs to a particular event by executing `switch eventTagName`. The `filteredPersons` list in `Model` class will be updated and user will be able to see all contacts of members under this event.","lastModifiedDate":"2024-03-28"},{"lineNumber":223,"author":{"gitId":"peienlim"},"content":"3. User can further filter contacts by executing `search tagName`. This displays users in this event with the specified tag.","lastModifiedDate":"2024-03-28"},{"lineNumber":224,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":225,"author":{"gitId":"peienlim"},"content":"Alternative 1 (Proposed Choice): Extend the existing Tag class to accommodate event-specific tags, allowing for flexible filtering based on events.","lastModifiedDate":"2024-03-28"},{"lineNumber":226,"author":{"gitId":"peienlim"},"content":"Pros: Utilizes existing data structure without introducing additional complexity, easier to implement.","lastModifiedDate":"2024-03-28"},{"lineNumber":227,"author":{"gitId":"peienlim"},"content":"Cons: Requires modifications to the tagging system to support event-specific tags, less OOP","lastModifiedDate":"2024-03-28"},{"lineNumber":228,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":229,"author":{"gitId":"peienlim"},"content":"Alternative 2: Introduce separate address books for each event, providing a clear separation of contacts by events.","lastModifiedDate":"2024-03-28"},{"lineNumber":230,"author":{"gitId":"peienlim"},"content":"Pros: Offers a straightforward organization of data by events.","lastModifiedDate":"2024-03-28"},{"lineNumber":231,"author":{"gitId":"peienlim"},"content":"Cons: Increases complexity by managing multiple address books, harder to implement.","lastModifiedDate":"2024-03-28"},{"lineNumber":232,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":233,"author":{"gitId":"cleowenxuan"},"content":"### \\[Proposed\\] Deleting by Name and Index feature","lastModifiedDate":"2024-03-29"},{"lineNumber":234,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":235,"author":{"gitId":"cleowenxuan"},"content":"As our student leaders will be in-charge of multiple events, they will tend to encounter a large amount of contacts saved in the EventBook. As such, we are proposing to implement delete by name or index feature which allows them to delete the contacts by names. This saves their time of scrolling through the large amount of contacts before deleting them by index.","lastModifiedDate":"2024-03-29"},{"lineNumber":236,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":237,"author":{"gitId":"cleowenxuan"},"content":"This proposed delete name and index feature introduces the concept of deleting the contacts by either name or index.","lastModifiedDate":"2024-03-29"},{"lineNumber":238,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":239,"author":{"gitId":"cleowenxuan"},"content":"Given below is an example usage scenario and how delete mechanism behaves at each step.","lastModifiedDate":"2024-03-29"},{"lineNumber":240,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":241,"author":{"gitId":"cleowenxuan"},"content":"Step 1: The user launches the application. The application will be in its initial state showing the full list of contacts in the EventBook.","lastModifiedDate":"2024-03-29"},{"lineNumber":242,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":243,"author":{"gitId":"cleowenxuan"},"content":"Step 2: The user executes `delete John Doe` command to delete the person named John Doe in the EventBook. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete John Doe` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2024-03-29"},{"lineNumber":244,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":245,"author":{"gitId":"cleowenxuan"},"content":"**Note:** If the command fails the execution, it means that the person does not exist and an error indicating that the person is not found will be shown.","lastModifiedDate":"2024-03-29"},{"lineNumber":246,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":247,"author":{"gitId":"cleowenxuan"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2024-03-29"},{"lineNumber":248,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":249,"author":{"gitId":"cleowenxuan"},"content":"\u003cpuml src\u003d\"diagrams/DeleteActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":250,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":251,"author":{"gitId":"cleowenxuan"},"content":"#### Design considerations:","lastModifiedDate":"2024-03-29"},{"lineNumber":252,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":253,"author":{"gitId":"cleowenxuan"},"content":"**Aspect: How delete executes:**","lastModifiedDate":"2024-03-29"},{"lineNumber":254,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":255,"author":{"gitId":"cleowenxuan"},"content":"* **Alternative 1 (Proposed Choice):** Delete the name from the address book.","lastModifiedDate":"2024-03-29"},{"lineNumber":256,"author":{"gitId":"cleowenxuan"},"content":"    * Pros: Easy to search for the person by typing their full exact name.","lastModifiedDate":"2024-03-29"},{"lineNumber":257,"author":{"gitId":"cleowenxuan"},"content":"    * Cons: May have some issues with typing the full exact name if the person\u0027s full name that you want to delete is unknown to you.","lastModifiedDate":"2024-03-29"},{"lineNumber":258,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":259,"author":{"gitId":"cleowenxuan"},"content":"* **Alternative 2:**  Search for the name of the person and delete the index from the address book.","lastModifiedDate":"2024-03-29"},{"lineNumber":260,"author":{"gitId":"cleowenxuan"},"content":"    * Pros: Able to see which name you want to delete by searching for their name.","lastModifiedDate":"2024-03-29"},{"lineNumber":261,"author":{"gitId":"cleowenxuan"},"content":"    * Cons: Having to search and delete is slower than simply deleting the person by name.","lastModifiedDate":"2024-03-29"},{"lineNumber":262,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12"},{"lineNumber":303,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Logic.puml\" alt\u003d\"UndoSequenceDiagram-Logic\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":315,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":319,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Model.puml\" alt\u003d\"UndoSequenceDiagram-Model\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":321,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":325,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"peterXGD"},"content":"### \\[Proposed\\] Grouping Students by an EventTag.","lastModifiedDate":"2024-03-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":356,"author":{"gitId":"peterXGD"},"content":"As our student leaders will be in-charge of multiple events, they will need to know which student is involved in which event. As such, we are propose an EventTag feature pack which allows you to have easy access to the event features students are tagged with.","lastModifiedDate":"2024-03-29"},{"lineNumber":357,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":358,"author":{"gitId":"peterXGD"},"content":"This proposed event tag feature introduces a new class EventTag, which allows students leaders to tag students involved in an event with its respective EventTag, which also contains the event description, such as start and end dates, event details, etc.","lastModifiedDate":"2024-03-29"},{"lineNumber":359,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":360,"author":{"gitId":"peterXGD"},"content":"The key operations and components of the proposed implementation include:","lastModifiedDate":"2024-03-29"},{"lineNumber":361,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":362,"author":{"gitId":"peterXGD"},"content":"* **Creates an EventTag** with starting date, ending date and event description.","lastModifiedDate":"2024-03-29"},{"lineNumber":363,"author":{"gitId":"peterXGD"},"content":"* **Filter students** based on the event they are tagged to.","lastModifiedDate":"2024-03-29"},{"lineNumber":364,"author":{"gitId":"peterXGD"},"content":"* The ability for to **see the event description and time easily.**","lastModifiedDate":"2024-03-29"},{"lineNumber":365,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":366,"author":{"gitId":"peterXGD"},"content":"An example usage scenario illustrates how the EventTag feature operates:","lastModifiedDate":"2024-03-29"},{"lineNumber":367,"author":{"gitId":"peterXGD"},"content":"1. The user launches the application. The application will be in its initial state showing the full list of contacts in the EventBook.","lastModifiedDate":"2024-03-29"},{"lineNumber":368,"author":{"gitId":"peterXGD"},"content":"2. The user sees the description of an EventTag a person is tagged with by either using CLI or by clicking a button.","lastModifiedDate":"2024-03-29"},{"lineNumber":369,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":370,"author":{"gitId":"peterXGD"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2024-03-29"},{"lineNumber":371,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":372,"author":{"gitId":"peterXGD"},"content":"\u003cpuml src\u003d\"diagrams/EventTagActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":373,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":374,"author":{"gitId":"peterXGD"},"content":"#### Design considerations:","lastModifiedDate":"2024-03-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"peterXGD"},"content":"**Aspect: How EventTag works:**","lastModifiedDate":"2024-03-29"},{"lineNumber":377,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":378,"author":{"gitId":"peterXGD"},"content":"* **Alternative 1 (Proposed Choice):** You can group students by EventTag using the search function that shows people with a common tag.","lastModifiedDate":"2024-03-29"},{"lineNumber":379,"author":{"gitId":"peterXGD"},"content":"    * Pros: Easy to search for the different event Tags and displays them easily.","lastModifiedDate":"2024-03-29"},{"lineNumber":380,"author":{"gitId":"peterXGD"},"content":"    * Cons: You have to type the name of the event Tag every time you need to see who is in which group, which can be annoying.","lastModifiedDate":"2024-03-29"},{"lineNumber":381,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":382,"author":{"gitId":"peterXGD"},"content":"* **Alternative 2:** Have a GUI feature which allows you to display people currently in group \"X\" by clicking a tab in the EventBook called \"X\".","lastModifiedDate":"2024-03-29"},{"lineNumber":383,"author":{"gitId":"peterXGD"},"content":"    * Pros: Easy to navigate between different groups.","lastModifiedDate":"2024-03-29"},{"lineNumber":384,"author":{"gitId":"peterXGD"},"content":"    * Cons: If you have too many groups to manage it will take a while for you to find an EventTag group every time you switch the group you are looking at.","lastModifiedDate":"2024-03-29"},{"lineNumber":385,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":386,"author":{"gitId":"peterXGD"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2024-03-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":397,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":398,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":399,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":400,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":414,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"jonpwk"},"content":"* student leaders planning school events","lastModifiedDate":"2024-03-07"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"jonpwk"},"content":"**Value proposition**: Easy way to share _project hierarchy_ / Manage project details and personnel / Quick onboarding of new team members","lastModifiedDate":"2024-03-07"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"jonpwk"},"content":"| Priority | As a(n) …​             | I want to …​                                         | So that I can…​                                             |","lastModifiedDate":"2024-03-07"},{"lineNumber":425,"author":{"gitId":"peterXGD"},"content":"|----------|------------------------|------------------------------------------------------|-------------------------------------------------------------|","lastModifiedDate":"2024-03-29"},{"lineNumber":426,"author":{"gitId":"jonpwk"},"content":"| `* * *`  | user                   | include tags when adding people                      | tag people based on their roles                             |","lastModifiedDate":"2024-03-07"},{"lineNumber":427,"author":{"gitId":"jonpwk"},"content":"| `* * *`  | user                   | search by tags                                       | find groups of people                                       |","lastModifiedDate":"2024-03-07"},{"lineNumber":428,"author":{"gitId":"jonpwk"},"content":"| `* * *`  | user                   | have different tagging options                       | keep my contacts organised and search effectively           |","lastModifiedDate":"2024-03-07"},{"lineNumber":429,"author":{"gitId":"jonpwk"},"content":"| `* *`    | user                   | delete by name OR index                              | manage my contacts easier                                   |","lastModifiedDate":"2024-03-07"},{"lineNumber":430,"author":{"gitId":"jonpwk"},"content":"| `* *`    | user                   | add contacts with partial information                | keep my contacts as up to date as possible                  |","lastModifiedDate":"2024-03-07"},{"lineNumber":431,"author":{"gitId":"peterXGD"},"content":"| `* * *`  | user                   | have knowledge on what event a person is involved in | keep my contacts easily                                     |","lastModifiedDate":"2024-03-29"},{"lineNumber":432,"author":{"gitId":"peterXGD"},"content":"| `* *`    | user                   | know details about an event, such as its time, etc   | keep a clear mind on who is doing what and not get confused |","lastModifiedDate":"2024-03-29"},{"lineNumber":433,"author":{"gitId":"jonpwk"},"content":"| `*`      | user                   | sort my tags based on event (and subsequently role)  | visualise my contacts in a neat way                         |","lastModifiedDate":"2024-03-07"},{"lineNumber":434,"author":{"gitId":"jonpwk"},"content":"| `* *`    | user                   | have a space to write notes for each contact         | note my thoughts in an organised way                        |","lastModifiedDate":"2024-03-07"},{"lineNumber":435,"author":{"gitId":"jonpwk"},"content":"| `* *`    | user proficient in CLI | have short form commands                             | use the programe faster                                     |","lastModifiedDate":"2024-03-07"},{"lineNumber":436,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"jonpwk"},"content":"### Use cases (UC)","lastModifiedDate":"2024-03-07"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"jonpwk"},"content":"(For all use cases below, the **System** is the `EventBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2024-03-07"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"jonpwk"},"content":"**\u003cu\u003eUse case 1: Delete a person\u003c/u\u003e**","lastModifiedDate":"2024-03-07"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"jonpwk"},"content":"2.  EventBook shows a list of persons","lastModifiedDate":"2024-03-07"},{"lineNumber":450,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"jonpwk"},"content":"4.  EventBook deletes the person","lastModifiedDate":"2024-03-07"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"jonpwk"},"content":"    * 3a1. EventBook shows an error message.","lastModifiedDate":"2024-03-07"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"jonpwk"},"content":"**\u003cu\u003eUse case 2: Add a person\u003c/u\u003e**","lastModifiedDate":"2024-03-07"},{"lineNumber":468,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":469,"author":{"gitId":"jonpwk"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":470,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":471,"author":{"gitId":"jonpwk"},"content":"1.  User adds person to EventBook","lastModifiedDate":"2024-03-07"},{"lineNumber":472,"author":{"gitId":"jonpwk"},"content":"2.  EventBook shows a list of persons with added person","lastModifiedDate":"2024-03-07"},{"lineNumber":473,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":474,"author":{"gitId":"jonpwk"},"content":"    Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":475,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":476,"author":{"gitId":"jonpwk"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":477,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":478,"author":{"gitId":"jonpwk"},"content":"* 1a. The given parameters for the person is invalid.","lastModifiedDate":"2024-03-07"},{"lineNumber":479,"author":{"gitId":"jonpwk"},"content":"  * 1a1. EventBook shows an error message.","lastModifiedDate":"2024-03-07"},{"lineNumber":480,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":481,"author":{"gitId":"jonpwk"},"content":"    Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":482,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":483,"author":{"gitId":"jonpwk"},"content":"**\u003cu\u003eUse case 3: Search by tag\u003c/u\u003e**","lastModifiedDate":"2024-03-07"},{"lineNumber":484,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":485,"author":{"gitId":"jonpwk"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":486,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":487,"author":{"gitId":"jonpwk"},"content":"1.  User requests a search based on tag options","lastModifiedDate":"2024-03-07"},{"lineNumber":488,"author":{"gitId":"jonpwk"},"content":"2.  EventBook shows a list of persons with given tag options","lastModifiedDate":"2024-03-07"},{"lineNumber":489,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":490,"author":{"gitId":"jonpwk"},"content":"    Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":491,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":492,"author":{"gitId":"jonpwk"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":493,"author":{"gitId":"jonpwk"},"content":"* 1a. The given tag options are invalid.","lastModifiedDate":"2024-03-07"},{"lineNumber":494,"author":{"gitId":"jonpwk"},"content":"  * 1a1. EventBook shows an error message.","lastModifiedDate":"2024-03-07"},{"lineNumber":495,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":496,"author":{"gitId":"jonpwk"},"content":"    Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":497,"author":{"gitId":"jonpwk"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-03-07"},{"lineNumber":498,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":499,"author":{"gitId":"jonpwk"},"content":"    Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":500,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":501,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"jonpwk"},"content":"4.  The system should work on both 32-bit and 64-bit systems.","lastModifiedDate":"2024-03-11"},{"lineNumber":509,"author":{"gitId":"jonpwk"},"content":"5.  The system should respond within 2 seconds.","lastModifiedDate":"2024-03-11"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09"},{"lineNumber":516,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"jonpwk"},"content":"* **Project hierarchy**: The structure of a project team, including team members and organisational structure","lastModifiedDate":"2024-03-07"},{"lineNumber":518,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":526,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":527,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"jonpwk"},"content":"   2. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2024-03-11"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"jonpwk"},"content":"2. Saving window preferences","lastModifiedDate":"2024-03-11"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"jonpwk"},"content":"   2. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":544,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"jonpwk"},"content":"3. _{ more test cases …​ }_","lastModifiedDate":"2024-03-11"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"jonpwk"},"content":"   2. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":555,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"jonpwk"},"content":"   3. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":558,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"jonpwk"},"content":"   4. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":561,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"jonpwk"},"content":"2. _{ more test cases …​ }_","lastModifiedDate":"2024-03-11"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"jonpwk"},"content":"2. _{ more test cases …​ }_","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"cleowenxuan":31,"owenong1":33,"peterXGD":34,"jonpwk":90,"peienlim":23,"-":360}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"User Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"cleowenxuan"},"content":"# EventBook User Guide","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"cleowenxuan"},"content":"EventBook is a **desktop app for Student Leaders to manage the contacts from different events, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, EventBook can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2024-04-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"cleowenxuan"},"content":"1. Download the latest `EventBook.jar` from [here](https://github.com/AY2324S2-CS2103T-T11-3/tp/releases).","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"cleowenxuan"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your EventBook.","lastModifiedDate":"2024-04-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"jonpwk"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar EventBook.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2023-01-01"},{"lineNumber":34,"author":{"gitId":"cleowenxuan"},"content":"   * `assign 1 t/E-event1` : Assigns the 1st contact shown in the current list with the event tag named `event1`.","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"cleowenxuan"},"content":"   * `assign John t/tag1` : Assigns the contact named John in the current list with the tag named `tag1`.","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":37,"author":{"gitId":"cleowenxuan"},"content":"   * `ctag Friend` : Creates a tag name `Friend`.","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"peterXGD"},"content":"   * `ctag t/E-orientation dc/Orientation! sd/2024-04-04 02:02:02 ed/2024-04-05 02:02:02` : Creates an event tag.","lastModifiedDate":"2024-04-05"},{"lineNumber":39,"author":{"gitId":"cleowenxuan"},"content":"   * `dtag Friend` : Deletes a tag named `Friend`.","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"cleowenxuan"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"peterXGD"},"content":"   * `devent fire` : Deletes an event tag called fire","lastModifiedDate":"2024-04-05"},{"lineNumber":42,"author":{"gitId":"cleowenxuan"},"content":"   * `delete John Doe` : Deletes the contact named John Doe shown in the current list.","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":44,"author":{"gitId":"jonpwk"},"content":"   * `import` : Imports contacts from `.\\import\\import.csv`.","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"jonpwk"},"content":"   * `search Friend` : Displays all contacts with the tag \u0027Friend\u0027.","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"peienlim"},"content":"   * `switch Flag` : Switches to \u0027Flag\u0027 event tab to show contacts.","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"cleowenxuan"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2024-04-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Adds a person to the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"**Tip:** A person can have any number of tags (including 0)","lastModifiedDate":"2023-09-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"cleowenxuan"},"content":"Format: `edit (NAME or INDEX) [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2024-04-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"cleowenxuan"},"content":"* Edits the person at the specified `INDEX` or `NAME`.","lastModifiedDate":"2024-04-04"},{"lineNumber":113,"author":{"gitId":"cleowenxuan"},"content":"* The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-04-04"},{"lineNumber":114,"author":{"gitId":"cleowenxuan"},"content":"* The name refers to the name shown in the displayed person list. The name must be **exactly** what is shown in the displayed person list.","lastModifiedDate":"2024-04-04"},{"lineNumber":115,"author":{"gitId":"cleowenxuan"},"content":"* For example, `edit John Doe t/friends` instead of `edit John t/friends`.","lastModifiedDate":"2024-04-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"cleowenxuan"},"content":"*  `edit Ben n/Betsy Crower t/` Edits the person named Ben to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2024-04-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"jonpwk"},"content":"### Creating a tag : `ctag`","lastModifiedDate":"2024-03-25"},{"lineNumber":128,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":129,"author":{"gitId":"peterXGD"},"content":"Creates a tag in the address book or an event tag.","lastModifiedDate":"2024-04-04"},{"lineNumber":130,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":131,"author":{"gitId":"cleowenxuan"},"content":"Format 1: `ctag TAG_NAME`","lastModifiedDate":"2024-04-10"},{"lineNumber":132,"author":{"gitId":"jonpwk"},"content":"* The provided name has to be a unique tag name that does not already exist in the address book.","lastModifiedDate":"2024-03-25"},{"lineNumber":133,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":134,"author":{"gitId":"jonpwk"},"content":"Examples:","lastModifiedDate":"2024-03-25"},{"lineNumber":135,"author":{"gitId":"cleowenxuan"},"content":"* `ctag Friend` Creates a tag named `Friend`.","lastModifiedDate":"2024-04-04"},{"lineNumber":136,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":137,"author":{"gitId":"peterXGD"},"content":"Format 2: `ctag t/E-eventName dc/Description sd/yyyy-MM-dd HH:mm:ss ed/yyyy-MM-dd HH:mm:ss`","lastModifiedDate":"2024-04-05"},{"lineNumber":138,"author":{"gitId":"peterXGD"},"content":"* The provided name has to be a unique tag name that does not already exist in the address book.","lastModifiedDate":"2024-04-04"},{"lineNumber":139,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":140,"author":{"gitId":"peterXGD"},"content":"Examples:","lastModifiedDate":"2024-04-04"},{"lineNumber":141,"author":{"gitId":"peterXGD"},"content":"* `ctag t/E-orientation dc/Orientation! sd/2024-04-04 02:02:02 ed/2024-04-05 02:02:02`","lastModifiedDate":"2024-04-05"},{"lineNumber":142,"author":{"gitId":"peterXGD"},"content":"* Creates an EventTag called orientation that starts from 2024-04-04 02:02:02 to 2024-04-05 02:02:02.","lastModifiedDate":"2024-04-05"},{"lineNumber":143,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":144,"author":{"gitId":"cleowenxuan"},"content":"### Deleting a tag : `dtag`","lastModifiedDate":"2024-04-10"},{"lineNumber":145,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":146,"author":{"gitId":"jonpwk"},"content":"Deletes a tag in the address book.","lastModifiedDate":"2024-03-25"},{"lineNumber":147,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":148,"author":{"gitId":"cleowenxuan"},"content":"Format: `dtag TAG_NAME`","lastModifiedDate":"2024-04-10"},{"lineNumber":149,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":150,"author":{"gitId":"jonpwk"},"content":"* The provided name has to be a unique tag name that does not already exist in the address book.","lastModifiedDate":"2024-03-25"},{"lineNumber":151,"author":{"gitId":"jonpwk"},"content":"* The provided tag has to exist in the EventBook.","lastModifiedDate":"2024-03-25"},{"lineNumber":152,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":153,"author":{"gitId":"jonpwk"},"content":"Examples:","lastModifiedDate":"2024-03-25"},{"lineNumber":154,"author":{"gitId":"cleowenxuan"},"content":"* `dtag Friend` Deletes a tag named `Friend`.","lastModifiedDate":"2024-04-04"},{"lineNumber":155,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":156,"author":{"gitId":"cleowenxuan"},"content":"### Deleting an EventTag : `devent`","lastModifiedDate":"2024-04-10"},{"lineNumber":157,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":158,"author":{"gitId":"peterXGD"},"content":"Deletes an event tag in the address book.","lastModifiedDate":"2024-04-05"},{"lineNumber":159,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":160,"author":{"gitId":"cleowenxuan"},"content":"Format: `devent EVENT_TAG_NAME`","lastModifiedDate":"2024-04-10"},{"lineNumber":161,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":162,"author":{"gitId":"peterXGD"},"content":"* The provided name has to be a unique event tag name that already exist in the address book.","lastModifiedDate":"2024-04-05"},{"lineNumber":163,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":164,"author":{"gitId":"peterXGD"},"content":"Examples:","lastModifiedDate":"2024-04-05"},{"lineNumber":165,"author":{"gitId":"peterXGD"},"content":"* `devent bonfire` Deletes an EventTag named `bonfire`.","lastModifiedDate":"2024-04-05"},{"lineNumber":166,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":167,"author":{"gitId":"jonpwk"},"content":"### Assigning a tag : `assign`","lastModifiedDate":"2024-04-02"},{"lineNumber":168,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":169,"author":{"gitId":"jonpwk"},"content":"Assigns a tag in the address book to a specified person.","lastModifiedDate":"2024-04-02"},{"lineNumber":170,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":171,"author":{"gitId":"cleowenxuan"},"content":"Format: `assign (NAME or INDEX) t/TAG…​` or `assign (NAME or INDEX) t/E-EVENT_TAG…​`","lastModifiedDate":"2024-04-10"},{"lineNumber":172,"author":{"gitId":"cleowenxuan"},"content":"* Assign the person at the specified `INDEX` or `NAME` with the tag `TAG` or with the event tag `EVENT_TAG`.","lastModifiedDate":"2024-04-10"},{"lineNumber":173,"author":{"gitId":"cleowenxuan"},"content":"* The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-04-04"},{"lineNumber":174,"author":{"gitId":"cleowenxuan"},"content":"* The name refers to the name shown in the displayed person list. The name must be **exactly** what is shown in the displayed person list.","lastModifiedDate":"2024-04-04"},{"lineNumber":175,"author":{"gitId":"cleowenxuan"},"content":"* For example, `assign John Doe t/friends` instead of `assign John t/friends`.","lastModifiedDate":"2024-04-04"},{"lineNumber":176,"author":{"gitId":"cleowenxuan"},"content":"* The provided tag(s) and event tag(s) have to exist in the EventBook.","lastModifiedDate":"2024-04-04"},{"lineNumber":177,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":178,"author":{"gitId":"jonpwk"},"content":"Examples:","lastModifiedDate":"2024-04-02"},{"lineNumber":179,"author":{"gitId":"cleowenxuan"},"content":"* `assign 1 t/friends` Assigns the first person in the list to a tag named `Friends`.","lastModifiedDate":"2024-04-04"},{"lineNumber":180,"author":{"gitId":"cleowenxuan"},"content":"* `assign John Doe t/E-event1` Assigns the person named John Doe in the list to an Event Tag named `event1`.","lastModifiedDate":"2024-04-04"},{"lineNumber":181,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":182,"author":{"gitId":"jonpwk"},"content":"### Searching by tag : `search`","lastModifiedDate":"2024-03-25"},{"lineNumber":183,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":184,"author":{"gitId":"cleowenxuan"},"content":"Displays all the people that are tagged with `TAG_NAME`.","lastModifiedDate":"2024-04-10"},{"lineNumber":185,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":186,"author":{"gitId":"cleowenxuan"},"content":"Format: `search TAG_NAME`","lastModifiedDate":"2024-04-10"},{"lineNumber":187,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":188,"author":{"gitId":"jonpwk"},"content":"* The search is case-sensitive.","lastModifiedDate":"2024-03-25"},{"lineNumber":189,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":190,"author":{"gitId":"jonpwk"},"content":"Examples:","lastModifiedDate":"2024-03-25"},{"lineNumber":191,"author":{"gitId":"cleowenxuan"},"content":"* `search Friend` Displays all people tagged as `Friend`.","lastModifiedDate":"2024-04-04"},{"lineNumber":192,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":193,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":194,"author":{"gitId":"peienlim"},"content":"### Switching between events : `switch`","lastModifiedDate":"2024-04-04"},{"lineNumber":195,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":196,"author":{"gitId":"cleowenxuan"},"content":"Format: `switch EVENT_TAG_NAME`","lastModifiedDate":"2024-04-10"},{"lineNumber":197,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":198,"author":{"gitId":"cleowenxuan"},"content":"Switches to tab with EVENT_TAG_NAME.","lastModifiedDate":"2024-04-10"},{"lineNumber":199,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":200,"author":{"gitId":"peienlim"},"content":"* The search is case-sensitive.","lastModifiedDate":"2024-04-04"},{"lineNumber":201,"author":{"gitId":"peienlim"},"content":"* The default tab is the `All` tab with full list of contacts displayed.","lastModifiedDate":"2024-04-04"},{"lineNumber":202,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":203,"author":{"gitId":"peienlim"},"content":"Examples:","lastModifiedDate":"2024-04-04"},{"lineNumber":204,"author":{"gitId":"peienlim"},"content":"* `search Flag` Switches to \u0027Flag\u0027 event tab and shows all members tagged with \u0027Flag\u0027 event tag.","lastModifiedDate":"2024-04-04"},{"lineNumber":205,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"cleowenxuan"},"content":"Format: `delete (NAME or INDEX)`","lastModifiedDate":"2024-04-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"jonpwk"},"content":"* Deletes the person at the specified `INDEX` or `NAME`.","lastModifiedDate":"2024-03-25"},{"lineNumber":231,"author":{"gitId":"cleowenxuan"},"content":"* The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-04-04"},{"lineNumber":232,"author":{"gitId":"cleowenxuan"},"content":"* The name refers to the name shown in the displayed person list. The name must be **exactly** what is shown in the displayed person list.","lastModifiedDate":"2024-04-04"},{"lineNumber":233,"author":{"gitId":"cleowenxuan"},"content":"* For example, `delete John Doe` instead of `delete John`.","lastModifiedDate":"2024-04-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"cleowenxuan"},"content":"* `list` followed by `delete John Doe` deletes the person named \u0027John Doe\u0027 in the address book.","lastModifiedDate":"2024-04-10"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"jonpwk"},"content":"### Importing contacts from .csv : `import`","lastModifiedDate":"2024-03-25"},{"lineNumber":246,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":247,"author":{"gitId":"owenong1"},"content":"Imports all contacts from given file path (default ./import/import.csv)","lastModifiedDate":"2024-04-04"},{"lineNumber":248,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":249,"author":{"gitId":"owenong1"},"content":"Format: `import f/PATH`","lastModifiedDate":"2024-04-04"},{"lineNumber":250,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":251,"author":{"gitId":"owenong1"},"content":"* Requires a valid file to be given in the PATH variable","lastModifiedDate":"2024-04-04"},{"lineNumber":252,"author":{"gitId":"owenong1"},"content":"* If PATH is left empty (i.e. `import f/`) the default file referenced is ./import/import.csv","lastModifiedDate":"2024-04-04"},{"lineNumber":253,"author":{"gitId":"jonpwk"},"content":"* The format of the first line of the csv should be:","lastModifiedDate":"2024-03-25"},{"lineNumber":254,"author":{"gitId":"owenong1"},"content":"  `NAME,NUMBER,EMAIL,ADDRESS,EVENTS,TAGS`","lastModifiedDate":"2024-04-10"},{"lineNumber":255,"author":{"gitId":"owenong1"},"content":"* There should be no trailing empty characters (\u0027 \u0027) in any cell.","lastModifiedDate":"2024-04-04"},{"lineNumber":256,"author":{"gitId":"owenong1"},"content":"* The titles are non-caps sensitive (`Name` pr `NaME` would also be valid)","lastModifiedDate":"2024-04-04"},{"lineNumber":257,"author":{"gitId":"owenong1"},"content":"* The format of each parameter should follow the appropriate add command format.","lastModifiedDate":"2024-04-04"},{"lineNumber":258,"author":{"gitId":"jonpwk"},"content":"* There should be no blank lines, and no conflicts with contacts in the existing address book","lastModifiedDate":"2024-03-25"},{"lineNumber":259,"author":{"gitId":"owenong1"},"content":"* The `EVENTS` portion must satisfy one of the following format requirements:","lastModifiedDate":"2024-04-10"},{"lineNumber":260,"author":{"gitId":"owenong1"},"content":"  1. `N/A` if the contact is not in any events, else a field error will occur","lastModifiedDate":"2024-04-10"},{"lineNumber":261,"author":{"gitId":"owenong1"},"content":"  2. `t/E-eventName dc/Description sd/yyyy-MM-dd HH:mm:ss ed/yyyy-MM-dd HH:mm:ss` for the first instance of each","lastModifiedDate":"2024-04-10"},{"lineNumber":262,"author":{"gitId":"owenong1"},"content":"      unique event, unless said tag already exists in the address book, in which case iii. can be used","lastModifiedDate":"2024-04-10"},{"lineNumber":263,"author":{"gitId":"owenong1"},"content":"  3. `t/E-eventName` for existing events or previously declared events","lastModifiedDate":"2024-04-10"},{"lineNumber":264,"author":{"gitId":"owenong1"},"content":"     * e.g. If the first contact has `t/E-orientation dc/Orientation! sd/2024-04-04 02:02:02 ed/2024-04-05 02:02:02`,","lastModifiedDate":"2024-04-05"},{"lineNumber":265,"author":{"gitId":"owenong1"},"content":"       then further contacts may simply have `t/E-orientation` under the `EVENTS` fields","lastModifiedDate":"2024-04-05"},{"lineNumber":266,"author":{"gitId":"owenong1"},"content":"* The `TAGS` and `EVENTS` portion accept multiple tags delimited by the `|` character (e.g. Friend|Colleague). A","lastModifiedDate":"2024-04-10"},{"lineNumber":267,"author":{"gitId":"owenong1"},"content":"  consequence of this is that tags containing `|` in their name cannot be imported","lastModifiedDate":"2024-04-10"},{"lineNumber":268,"author":{"gitId":"owenong1"},"content":"* The default download contains a sample .csv file that one can refer to","lastModifiedDate":"2024-04-10"},{"lineNumber":269,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":270,"author":{"gitId":"owenong1"},"content":"Examples:","lastModifiedDate":"2024-04-04"},{"lineNumber":271,"author":{"gitId":"owenong1"},"content":"* `import f/./import/import.csv` imports the contacts from the specified file","lastModifiedDate":"2024-04-04"},{"lineNumber":272,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":273,"author":{"gitId":"owenong1"},"content":"### Exporting contacts from address book : `export`","lastModifiedDate":"2024-04-04"},{"lineNumber":274,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":275,"author":{"gitId":"owenong1"},"content":"Exports all contacts to ./export/export.csv","lastModifiedDate":"2024-04-04"},{"lineNumber":276,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":277,"author":{"gitId":"owenong1"},"content":"Format: `export`","lastModifiedDate":"2024-04-04"},{"lineNumber":278,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":279,"author":{"gitId":"owenong1"},"content":"* If a file export.csv is already present at ./export, it will be overwritten with the","lastModifiedDate":"2024-04-04"},{"lineNumber":280,"author":{"gitId":"owenong1"},"content":"  current address book data","lastModifiedDate":"2024-04-04"},{"lineNumber":281,"author":{"gitId":"owenong1"},"content":"* The export file format is the same as the output format given in `import`","lastModifiedDate":"2024-04-04"},{"lineNumber":282,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":283,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":284,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"cleowenxuan"},"content":"EventBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2024-04-10"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":296,"author":{"gitId":"cleowenxuan"},"content":"EventBook data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2024-04-10"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":298,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":300,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":301,"author":{"gitId":"cleowenxuan"},"content":"If your changes to the data file makes its format invalid, EventBook will discard all data and start with an empty data file at the next run.  Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":302,"author":{"gitId":"cleowenxuan"},"content":"Furthermore, certain edits can cause the EventBook to behave in unexpected ways (e.g., if a value entered is outside the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2024-04-10"},{"lineNumber":303,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":305,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"Action     | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"-----------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-12"},{"lineNumber":328,"author":{"gitId":"-"},"content":"**Add**    | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"cleowenxuan"},"content":"**Assign** | `assign (NAME or INDEX) [t/TAG]…​` or `assign (NAME or INDEX) [t/E-TAG]…​` \u003cbr\u003e e.g.,`assign 2 t/tag1` or `assign John Doe t/E-event1`","lastModifiedDate":"2024-04-04"},{"lineNumber":330,"author":{"gitId":"-"},"content":"**Clear**  | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"cleowenxuan"},"content":"**Delete** | `delete (NAME or INDEX)` \u003cbr\u003e e.g., `delete 3` or `delete John Doe`","lastModifiedDate":"2024-04-04"},{"lineNumber":332,"author":{"gitId":"cleowenxuan"},"content":"**Edit**   | `edit (NAME or INDEX) [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` \u003cbr\u003e e.g., `edit 2 n/James Lee e/jameslee@example.com` or`edit John Doe n/James Lee e/jameslee@example.com`","lastModifiedDate":"2024-04-04"},{"lineNumber":333,"author":{"gitId":"-"},"content":"**Find**   | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"**List**   | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"**Help**   | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"cleowenxuan"},"content":"**Create Tag** | `ctag TAG_NAME` \u003cbr\u003e e.g., `ctag Friend`","lastModifiedDate":"2024-04-10"},{"lineNumber":337,"author":{"gitId":"peterXGD"},"content":"**Create EventTag** | `ctag t/E-eventName dc/ Description sd/yyyy-MM-dd HH:mm:ss ed/yyyy-MM-dd HH:mm:ss` \u003cbr\u003e e.g., `ctag t/E-orientation dc/Orientation! sd/2024-04-04 02:02:02 ed/2024-04-05 02:02:02`","lastModifiedDate":"2024-04-05"},{"lineNumber":338,"author":{"gitId":"cleowenxuan"},"content":"**Delete Tag** | `dtag TAG_NAME` \u003cbr\u003e e.g., `dtag Friend`","lastModifiedDate":"2024-04-10"},{"lineNumber":339,"author":{"gitId":"cleowenxuan"},"content":"**Delete Event** | `devent EVENT_TAG_NAME` \u003cbr\u003e e.g., `devent fire`","lastModifiedDate":"2024-04-10"},{"lineNumber":340,"author":{"gitId":"owenong1"},"content":"**Import** | `import f/PATH` \u003cbr\u003e e.g., `import f/./import/import.csv`","lastModifiedDate":"2024-04-05"},{"lineNumber":341,"author":{"gitId":"owenong1"},"content":"**Export** | `export`","lastModifiedDate":"2024-04-05"},{"lineNumber":342,"author":{"gitId":"cleowenxuan"},"content":"**Search Tag** | `search TAG_NAME` \u003cbr\u003e e.g., `search Friend`","lastModifiedDate":"2024-04-10"},{"lineNumber":343,"author":{"gitId":"cleowenxuan"},"content":"**Switch** | `switch EVENT_TAG_NAME` \u003cbr\u003e e.g. `switch Flag`","lastModifiedDate":"2024-04-10"}],"authorContributionMap":{"cleowenxuan":57,"peterXGD":20,"owenong1":36,"jonpwk":40,"peienlim":9,"-":181}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"cleowenxuan"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003eEventBook\u003c/a\u003e","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/index.html\" class\u003d\"nav-link\"\u003eHome\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/se-edu/addressbook-level3\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#quick-start)","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#features)","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * [Appendix: Requirements]({{ baseUrl }}/DeveloperGuide.html#appendix-requirements)","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  * [Appendix: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* Tutorials","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Tracing code]({{ baseUrl }}/tutorials/TracingCode.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * [Adding a command]({{ baseUrl }}/tutorials/AddRemark.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  * [Removing Fields]({{ baseUrl }}/tutorials/RemovingFields.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"cleowenxuan":1,"-":66}},{"path":"docs/diagrams/DeleteActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cleowenxuan"},"content":"@startuml","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"cleowenxuan"},"content":"skin rose","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"cleowenxuan"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"cleowenxuan"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"cleowenxuan"},"content":"start","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"cleowenxuan"},"content":":User provides name or index to delete;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"cleowenxuan"},"content":"if (Is name provided?) then (yes)","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"cleowenxuan"},"content":"  :Find person by name;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"cleowenxuan"},"content":"  if (Person found?) then (yes)","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"cleowenxuan"},"content":"    :Delete person;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"cleowenxuan"},"content":"    :Display success message;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"cleowenxuan"},"content":"  else (no)","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"cleowenxuan"},"content":"    :Display error message;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"cleowenxuan"},"content":"  endif","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"cleowenxuan"},"content":"else (no)","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"cleowenxuan"},"content":"  :Find person by index;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"cleowenxuan"},"content":"  if (Person found?) then (yes)","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"cleowenxuan"},"content":"    :Delete person;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"cleowenxuan"},"content":"    :Display success message;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"cleowenxuan"},"content":"  else (no)","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"cleowenxuan"},"content":"    :Display error message;","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"cleowenxuan"},"content":"  endif","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"cleowenxuan"},"content":"endif","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"cleowenxuan"},"content":"stop","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"cleowenxuan"},"content":"@enduml","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"cleowenxuan":25}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"cleowenxuan"},"content":"[-\u003e LogicManager : execute(\"delete John Doe\")","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"cleowenxuan"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete John Doe\")","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"cleowenxuan"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"John Doe\")","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser :","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute(m)","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"cleowenxuan"},"content":"DeleteCommand -\u003e Model : deletePerson(\"John Doe\")","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : r","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"cleowenxuan":4,"-":66}},{"path":"docs/diagrams/EventTagActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"@startuml","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"!include style.puml","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"skinparam monochrome black","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"start","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":":Launch the address book;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":"if (Search person associated with a tag) then (yes)","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":"  :Tag found;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":"  if (Is EventTag) then (yes)","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":"    :Displays EventTag description and date;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":"  else (no)","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"peterXGD"},"content":"    :Displays error message;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"peterXGD"},"content":"  endif","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":"else (no)","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"peterXGD"},"content":"  :Displays error message;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"peterXGD"},"content":"endif","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"peterXGD"},"content":"stop","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"peterXGD"},"content":"@enduml","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"peterXGD":19}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"peienlim"},"content":"Class UniqueTagList","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"peienlim"},"content":"AddressBook *--\u003e \"1\" UniqueTagList","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"peienlim"},"content":"UniqueTagList --\u003e \"~*\" Tag","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"peienlim"},"content":"Person --\u003e \"*\" Tag","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":53,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"peienlim":6,"-":53}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage as StoragePackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"peienlim"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"peienlim":2,"-":43}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"owenong1"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 1, true);","lastModifiedDate":"2024-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"owenong1":1,"-":185}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"peienlim"},"content":"import javafx.collections.ObservableSet;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"peienlim"},"content":"import seedu.address.model.tag.EventTag;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":38,"author":{"gitId":"peienlim"},"content":"    ObservableSet\u003cEventTag\u003e getEventTagList();","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"peienlim":4,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"peienlim"},"content":"import javafx.collections.ObservableSet;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"peienlim"},"content":"import seedu.address.model.tag.EventTag;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":76,"author":{"gitId":"peienlim"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":77,"author":{"gitId":"peienlim"},"content":"    public ObservableSet\u003cEventTag\u003e getEventTagList() {","lastModifiedDate":"2024-04-01"},{"lineNumber":78,"author":{"gitId":"peienlim"},"content":"        return model.getEventTagList();","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"peienlim":7,"-":88}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"jonpwk"},"content":"    public static final String MESSAGE_INVALID_TAG \u003d \"The tag provided does not exist\";","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"cleowenxuan"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_NAME \u003d \"The person name provided is invalid\";","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":51,"author":{"gitId":"cleowenxuan"},"content":"        builder.append(\"; EventTags: \");","lastModifiedDate":"2024-04-05"},{"lineNumber":52,"author":{"gitId":"cleowenxuan"},"content":"        if (!person.getEventTags().isEmpty()) {","lastModifiedDate":"2024-04-05"},{"lineNumber":53,"author":{"gitId":"cleowenxuan"},"content":"            builder.append(\"[\");","lastModifiedDate":"2024-04-05"},{"lineNumber":54,"author":{"gitId":"cleowenxuan"},"content":"            person.getEventTags().forEach(eventTag -\u003e builder.append(eventTag.tagName).append(\", \"));","lastModifiedDate":"2024-04-05"},{"lineNumber":55,"author":{"gitId":"cleowenxuan"},"content":"            builder.delete(builder.length() - 2, builder.length());","lastModifiedDate":"2024-04-05"},{"lineNumber":56,"author":{"gitId":"cleowenxuan"},"content":"            builder.append(\"]\");","lastModifiedDate":"2024-04-05"},{"lineNumber":57,"author":{"gitId":"cleowenxuan"},"content":"        } else {","lastModifiedDate":"2024-04-05"},{"lineNumber":58,"author":{"gitId":"cleowenxuan"},"content":"            builder.append(\"[]\");","lastModifiedDate":"2024-04-05"},{"lineNumber":59,"author":{"gitId":"cleowenxuan"},"content":"        }","lastModifiedDate":"2024-04-05"},{"lineNumber":60,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cleowenxuan":12,"jonpwk":1,"-":51}},{"path":"src/main/java/seedu/address/logic/commands/AssignCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonpwk"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"jonpwk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"jonpwk"},"content":"import java.util.List;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"jonpwk"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"jonpwk"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"jonpwk"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"jonpwk"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"jonpwk"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"jonpwk"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"jonpwk"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"jonpwk"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"jonpwk"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"jonpwk"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"jonpwk"},"content":" * Assigns a person from the address book with the given tags.","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"jonpwk"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"jonpwk"},"content":"public class AssignCommand extends Command {","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"jonpwk"},"content":"    public static final String COMMAND_WORD \u003d \"assign\";","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"jonpwk"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"jonpwk"},"content":"            + \": Assigns the person identified by the index number or full name used in the displayed person list with\"","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"jonpwk"},"content":"            + \" the given tags.\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"jonpwk"},"content":"            + \"Parameters: INDEX (must be a positive integer) or NAME (must be the exact full name), TAGS (t/TAGNAME)\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"jonpwk"},"content":"            + \"Examples: \" + COMMAND_WORD + \" 1\" + \"t/friends\"","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"cleowenxuan"},"content":"            + \" or\" + COMMAND_WORD + \" John Doe\" + \"t/friends\"","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"cleowenxuan"},"content":"            + \" or\" + COMMAND_WORD + \" 1\" + \"t/E-eventName\";","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"jonpwk"},"content":"    public static final String MESSAGE_ASSIGN_PERSON_MISSING \u003d \"Please provide either a name or index to delete.\";","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"jonpwk"},"content":"    public static final String MESSAGE_ASSIGN_TAG_MISSING \u003d \"Please ensure that all tag(s) provided exist.\";","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"jonpwk"},"content":"    public static final String MESSAGE_ASSIGN_PERSON_SUCCESS \u003d \"Assigned Person: %1$s\";","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"jonpwk"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"jonpwk"},"content":"    private final String targetName;","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"jonpwk"},"content":"    private final Set\u003cTag\u003e targetTagList;","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"cleowenxuan"},"content":"    private final Set\u003cTag\u003e targetEventTagList;","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"jonpwk"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"jonpwk"},"content":"     * Constructs an AssignCommand with the specified target index, target name and target tag list.","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"jonpwk"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"jonpwk"},"content":"     * @param targetIndex The index of the person to be deleted.","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"jonpwk"},"content":"     * @param targetName The name of the person to be deleted.","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"jonpwk"},"content":"     * @param targetTagList The set of tags to be added to the person.","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"jonpwk"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"cleowenxuan"},"content":"    public AssignCommand(Index targetIndex, String targetName, Set\u003cTag\u003e targetTagList, Set\u003cTag\u003e targetEventTagList) {","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"jonpwk"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"jonpwk"},"content":"        this.targetName \u003d targetName;","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"jonpwk"},"content":"        this.targetTagList \u003d targetTagList;","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"cleowenxuan"},"content":"        this.targetEventTagList \u003d targetEventTagList;","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"jonpwk"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"jonpwk"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"jonpwk"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"jonpwk"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"jonpwk"},"content":"        String dummyName \u003d \" \";","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"jonpwk"},"content":"        for (Tag t : targetTagList) {","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"jonpwk"},"content":"            if (!model.hasTag(t)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"jonpwk"},"content":"                throw new CommandException(MESSAGE_ASSIGN_TAG_MISSING);","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"jonpwk"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"cleowenxuan"},"content":"        for (Tag t : targetEventTagList) {","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"cleowenxuan"},"content":"            if (!model.hasEventTag(t.tagName)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"cleowenxuan"},"content":"                throw new CommandException(MESSAGE_ASSIGN_TAG_MISSING);","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"cleowenxuan"},"content":"            }","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"cleowenxuan"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"jonpwk"},"content":"        if (targetIndex !\u003d null) {","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"jonpwk"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"jonpwk"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"jonpwk"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"jonpwk"},"content":"            Person personToAssign \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"cleowenxuan"},"content":"            model.assign(personToAssign, targetTagList, targetEventTagList);","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"jonpwk"},"content":"            return new CommandResult(String.format(MESSAGE_ASSIGN_PERSON_SUCCESS, Messages.format(personToAssign)));","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"jonpwk"},"content":"        } else if (targetName !\u003d dummyName) {","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"jonpwk"},"content":"            Optional\u003cPerson\u003e personToFind \u003d lastShownList.stream().filter(person -\u003e person.getName()","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"jonpwk"},"content":"                    .toString().equals(targetName)).findFirst();","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"jonpwk"},"content":"            if (personToFind.isPresent()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"jonpwk"},"content":"                Person personToAssign \u003d personToFind.get();","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"cleowenxuan"},"content":"                model.assign(personToAssign, targetTagList, targetEventTagList);","lastModifiedDate":"2024-04-04"},{"lineNumber":86,"author":{"gitId":"jonpwk"},"content":"                return new CommandResult(String.format(MESSAGE_ASSIGN_PERSON_SUCCESS, Messages.format(personToAssign)));","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"jonpwk"},"content":"            } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"jonpwk"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_NAME);","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"jonpwk"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"jonpwk"},"content":"        } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"jonpwk"},"content":"            throw new CommandException(MESSAGE_ASSIGN_PERSON_MISSING);","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"jonpwk"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"jonpwk"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"jonpwk"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"jonpwk"},"content":"            return true;","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"jonpwk"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"jonpwk"},"content":"        if (!(other instanceof AssignCommand)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"jonpwk"},"content":"            return false;","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"jonpwk"},"content":"        AssignCommand otherAssignCommand \u003d (AssignCommand) other;","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"jonpwk"},"content":"        return (targetIndex.equals(otherAssignCommand.targetIndex)","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"jonpwk"},"content":"                \u0026\u0026 targetTagList.equals(otherAssignCommand.targetTagList)","lastModifiedDate":"2024-04-02"},{"lineNumber":109,"author":{"gitId":"cleowenxuan"},"content":"                \u0026\u0026 targetEventTagList.equals(otherAssignCommand.targetEventTagList)","lastModifiedDate":"2024-04-04"},{"lineNumber":110,"author":{"gitId":"jonpwk"},"content":"                \u0026\u0026 targetName.equals((otherAssignCommand.targetName)));","lastModifiedDate":"2024-04-02"},{"lineNumber":111,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"jonpwk"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"jonpwk"},"content":"    public String toString() {","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"jonpwk"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"jonpwk"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"jonpwk"},"content":"                .add(\"targetName\", targetName)","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"jonpwk"},"content":"                .add(\"targetTagList\", targetTagList)","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"cleowenxuan"},"content":"                .add(\"targetTagList\", targetEventTagList)","lastModifiedDate":"2024-04-04"},{"lineNumber":120,"author":{"gitId":"jonpwk"},"content":"                .toString();","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"jonpwk"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"cleowenxuan":15,"jonpwk":107}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"peienlim"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"peienlim"},"content":"import seedu.address.model.tag.EventTag;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"peienlim"},"content":"    private final Optional\u003cEventTag\u003e eventTag;","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"peienlim"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, EventTag eventTag) {","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"peienlim"},"content":"        this.eventTag \u003d Optional.ofNullable(eventTag);","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"peienlim"},"content":"     * Constructs a {@code CommandResult} with the specified fields, with eventTag set to null.","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"peienlim"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"peienlim"},"content":"        this(feedbackToUser, showHelp, exit, null);","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"peienlim"},"content":"        this(feedbackToUser, false, false, null);","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"peienlim"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser} and {@code eventTag},","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"peienlim"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"peienlim"},"content":"    public CommandResult(String feedbackToUser, EventTag eventTag) {","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"peienlim"},"content":"        this(feedbackToUser, false, false, eventTag);","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"peienlim"},"content":"    public Optional\u003cEventTag\u003e getEventTag() {","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"peienlim"},"content":"        return eventTag;","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"peienlim":26,"-":80}},{"path":"src/main/java/seedu/address/logic/commands/CtagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonpwk"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"jonpwk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_DATE;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_TAG;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_DATE;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"jonpwk"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"jonpwk"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"jonpwk"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":"import seedu.address.model.tag.EventTag;","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"jonpwk"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"jonpwk"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"jonpwk"},"content":" * Adds a tag to the address book.","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"jonpwk"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"jonpwk"},"content":"public class CtagCommand extends Command {","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"jonpwk"},"content":"    public static final String COMMAND_WORD \u003d \"ctag\";","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"peterXGD"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a tag or event tag to the address book. \"","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"jonpwk"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"jonpwk"},"content":"            + \"tagName\\n\"","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"jonpwk"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"peterXGD"},"content":"            + \"FRIEND\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"peterXGD"},"content":"            + \"or \" + COMMAND_WORD + \" \" + PREFIX_EVENT_TAG + \" eventName\" + \" \"","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"peterXGD"},"content":"            + PREFIX_DESCRIPTION + \" Description\" + \" \"","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"peterXGD"},"content":"            + PREFIX_START_DATE + \"yyyy-MM-dd HH:mm:ss\" + \" \"","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"peterXGD"},"content":"            + PREFIX_END_DATE + \"yyyy-MM-dd HH:mm:ss\" + \" \"","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"peterXGD"},"content":"            + \"Example: \" + COMMAND_WORD + \" \";","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"peterXGD"},"content":"    public static final String MESSAGE_SUCCESS_TAG \u003d \"New tag added: %1$s\";","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"peterXGD"},"content":"    public static final String MESSAGE_SUCCESS_EVENT_TAG \u003d \"New event tag added: %1$s\";","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"peterXGD"},"content":"    public static final String MESSAGE_DUPLICATE_TAG \u003d \"This tag already exists in the address book\";","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"peterXGD"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT_TAG \u003d \"This EventTag already exists in the address book\";","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"peterXGD"},"content":"    public static final String MESSAGE_FAILED \u003d \"Failed to add any tag or event tag.\";","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"jonpwk"},"content":"    private final Tag toAdd;","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"peterXGD"},"content":"    private final EventTag toAddEvent;","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"jonpwk"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"jonpwk"},"content":"     * Creates an CtagCommand to add the specified {@code Person}","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"jonpwk"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"peterXGD"},"content":"    public CtagCommand(Tag toAdd, EventTag toAddEvent) {","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"jonpwk"},"content":"        this.toAdd \u003d toAdd;","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"peterXGD"},"content":"        this.toAddEvent \u003d toAddEvent;","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"jonpwk"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"jonpwk"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"jonpwk"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"peterXGD"},"content":"        boolean isEventTag \u003d toAddEvent !\u003d null;","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"peterXGD"},"content":"        boolean isTag \u003d toAdd !\u003d null;","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"peterXGD"},"content":"        if (isTag) {","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"jonpwk"},"content":"            if (model.hasTag(toAdd)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"peterXGD"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_TAG);","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"jonpwk"},"content":"            }","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"jonpwk"},"content":"            model.addTag(toAdd);","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"peterXGD"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS_TAG, toAdd));","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"peterXGD"},"content":"        if (isEventTag) {","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"peterXGD"},"content":"            if (model.hasEventTag(toAddEvent.tagName)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"peterXGD"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_EVENT_TAG);","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"peterXGD"},"content":"            }","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"peterXGD"},"content":"            model.addEventTag(toAddEvent);","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"peterXGD"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS_EVENT_TAG, toAddEvent));","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"peterXGD"},"content":"        return new CommandResult(MESSAGE_FAILED);","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"jonpwk"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"jonpwk"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"jonpwk"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"jonpwk"},"content":"            return true;","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"jonpwk"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"jonpwk"},"content":"        if (!(other instanceof CtagCommand)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"jonpwk"},"content":"            return false;","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"jonpwk"},"content":"        CtagCommand e \u003d (CtagCommand) other;","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"peterXGD"},"content":"        return toAdd.equals(e.toAdd) \u0026\u0026 toAddEvent.equals(e.toAddEvent);","lastModifiedDate":"2024-04-05"},{"lineNumber":88,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"jonpwk"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"jonpwk"},"content":"    public String toString() {","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"jonpwk"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"jonpwk"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"peterXGD"},"content":"                .add(\"toAddEventTag\", toAddEvent)","lastModifiedDate":"2024-04-05"},{"lineNumber":95,"author":{"gitId":"jonpwk"},"content":"                .toString();","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"jonpwk"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"peterXGD":39,"jonpwk":58}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"cleowenxuan"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"cleowenxuan"},"content":" * Deletes a person identified using it\u0027s displayed index or displayed name from the address book.","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"cleowenxuan"},"content":"            + \": Deletes the person identified by the index number or full name used in the displayed person list.\\n\"","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"cleowenxuan"},"content":"            + \"Parameters: INDEX (must be a positive integer) or NAME (must be the exact full name)\\n\"","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"cleowenxuan"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\" + \"or\" + COMMAND_WORD + \" John Doe\";","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"cleowenxuan"},"content":"    public static final String MESSAGE_DELETE_PERSON_ERROR \u003d \"Please provide either a name or index to delete.\";","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"cleowenxuan"},"content":"    private final String targetName;","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"cleowenxuan"},"content":"     * Constructs a DeleteCommand with the specified target index and target name.","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"cleowenxuan"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"cleowenxuan"},"content":"     * @param targetIndex The index of the person to be deleted.","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"cleowenxuan"},"content":"     * @param targetName The name of the person to be deleted.","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"cleowenxuan"},"content":"    public DeleteCommand(Index targetIndex, String targetName) {","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"cleowenxuan"},"content":"        this.targetName \u003d targetName;","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"cleowenxuan"},"content":"        String dummyName \u003d \" \";","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"cleowenxuan"},"content":"        if (targetIndex !\u003d null) {","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"cleowenxuan"},"content":"        } else if (targetName !\u003d dummyName) {","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"cleowenxuan"},"content":"            Optional\u003cPerson\u003e personToFind \u003d lastShownList.stream().filter(person -\u003e person.getName()","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"cleowenxuan"},"content":"                    .toString().equals(targetName)).findFirst();","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"cleowenxuan"},"content":"            if (personToFind.isPresent()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"cleowenxuan"},"content":"                Person personToDelete \u003d personToFind.get();","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"cleowenxuan"},"content":"                model.deletePerson(personToDelete);","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"cleowenxuan"},"content":"                return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"cleowenxuan"},"content":"            } else {","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"cleowenxuan"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_NAME);","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"cleowenxuan"},"content":"            }","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"cleowenxuan"},"content":"        } else {","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"cleowenxuan"},"content":"            throw new CommandException(MESSAGE_DELETE_PERSON_ERROR);","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"cleowenxuan"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex) \u0026\u0026 targetName.equals(otherDeleteCommand.targetName);","lastModifiedDate":"2024-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"cleowenxuan"},"content":"                .add(\"targetName\", targetName)","lastModifiedDate":"2024-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cleowenxuan":32,"-":62}},{"path":"src/main/java/seedu/address/logic/commands/DeventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":"import seedu.address.model.tag.EventTag;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":"/**","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":" * Format devent command for EventBook that deletes a tag.","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"peterXGD"},"content":" */","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"peterXGD"},"content":"public class DeventCommand extends Command {","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"peterXGD"},"content":"    public static final String COMMAND_WORD \u003d \"devent\";","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"peterXGD"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": delete an event tag from the list\\n\"","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"peterXGD"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"peterXGD"},"content":"            + \"EventTag name\\n\"","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"peterXGD"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-04-05"},{"lineNumber":22,"author":{"gitId":"peterXGD"},"content":"            + \"FRIEND\\n\";","lastModifiedDate":"2024-04-05"},{"lineNumber":23,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":24,"author":{"gitId":"peterXGD"},"content":"    public static final String MESSAGE_SUCCESS_DELETE \u003d \"Deleted event tag %1$s\";","lastModifiedDate":"2024-04-05"},{"lineNumber":25,"author":{"gitId":"peterXGD"},"content":"    public static final String MESSAGE_NO_EVENT_TAG \u003d \"This EventTag does not exists in the address book\";","lastModifiedDate":"2024-04-05"},{"lineNumber":26,"author":{"gitId":"peterXGD"},"content":"    public static final String MESSAGE_FAILED \u003d \"Failed to remove event tag.\";","lastModifiedDate":"2024-04-05"},{"lineNumber":27,"author":{"gitId":"peterXGD"},"content":"    private final String tagName;","lastModifiedDate":"2024-04-05"},{"lineNumber":28,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":29,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-04-05"},{"lineNumber":30,"author":{"gitId":"peterXGD"},"content":"     * Creates an CtagCommand to add the specified {@code Person}","lastModifiedDate":"2024-04-05"},{"lineNumber":31,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-04-05"},{"lineNumber":32,"author":{"gitId":"peterXGD"},"content":"    public DeventCommand(String tagName) {","lastModifiedDate":"2024-04-05"},{"lineNumber":33,"author":{"gitId":"peterXGD"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2024-04-05"},{"lineNumber":34,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":35,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":36,"author":{"gitId":"peterXGD"},"content":"    @Override","lastModifiedDate":"2024-04-05"},{"lineNumber":37,"author":{"gitId":"peterXGD"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-04-05"},{"lineNumber":38,"author":{"gitId":"peterXGD"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-05"},{"lineNumber":39,"author":{"gitId":"peterXGD"},"content":"        if (!model.hasEventTag(tagName)) {","lastModifiedDate":"2024-04-05"},{"lineNumber":40,"author":{"gitId":"peterXGD"},"content":"            throw new CommandException(MESSAGE_NO_EVENT_TAG);","lastModifiedDate":"2024-04-05"},{"lineNumber":41,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-04-05"},{"lineNumber":42,"author":{"gitId":"peterXGD"},"content":"        //get event tag to be used for checking","lastModifiedDate":"2024-04-05"},{"lineNumber":43,"author":{"gitId":"peterXGD"},"content":"        EventTag et \u003d model.getEventTag(tagName);","lastModifiedDate":"2024-04-05"},{"lineNumber":44,"author":{"gitId":"peterXGD"},"content":"        model.clearCurrentEventTag();","lastModifiedDate":"2024-04-05"},{"lineNumber":45,"author":{"gitId":"peterXGD"},"content":"        model.updateTagPersonList(et);","lastModifiedDate":"2024-04-05"},{"lineNumber":46,"author":{"gitId":"peterXGD"},"content":"        model.deleteEventTag(et);","lastModifiedDate":"2024-04-05"},{"lineNumber":47,"author":{"gitId":"peterXGD"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-05"},{"lineNumber":48,"author":{"gitId":"peterXGD"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS_DELETE, et));","lastModifiedDate":"2024-04-05"},{"lineNumber":49,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":50,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":51,"author":{"gitId":"peterXGD"},"content":"    @Override","lastModifiedDate":"2024-04-05"},{"lineNumber":52,"author":{"gitId":"peterXGD"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-05"},{"lineNumber":53,"author":{"gitId":"peterXGD"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-05"},{"lineNumber":54,"author":{"gitId":"peterXGD"},"content":"            return true;","lastModifiedDate":"2024-04-05"},{"lineNumber":55,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-04-05"},{"lineNumber":56,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":57,"author":{"gitId":"peterXGD"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-05"},{"lineNumber":58,"author":{"gitId":"peterXGD"},"content":"        if (!(other instanceof seedu.address.logic.commands.DeventCommand)) {","lastModifiedDate":"2024-04-05"},{"lineNumber":59,"author":{"gitId":"peterXGD"},"content":"            return false;","lastModifiedDate":"2024-04-05"},{"lineNumber":60,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-04-05"},{"lineNumber":61,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":62,"author":{"gitId":"peterXGD"},"content":"        seedu.address.logic.commands.DeventCommand e \u003d (seedu.address.logic.commands.DeventCommand) other;","lastModifiedDate":"2024-04-05"},{"lineNumber":63,"author":{"gitId":"peterXGD"},"content":"        return this.tagName \u003d\u003d ((DeventCommand) other).tagName;","lastModifiedDate":"2024-04-05"},{"lineNumber":64,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":65,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":66,"author":{"gitId":"peterXGD"},"content":"    @Override","lastModifiedDate":"2024-04-05"},{"lineNumber":67,"author":{"gitId":"peterXGD"},"content":"    public String toString() {","lastModifiedDate":"2024-04-05"},{"lineNumber":68,"author":{"gitId":"peterXGD"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-04-05"},{"lineNumber":69,"author":{"gitId":"peterXGD"},"content":"                .add(\"tagName\", tagName)","lastModifiedDate":"2024-04-05"},{"lineNumber":70,"author":{"gitId":"peterXGD"},"content":"                .toString();","lastModifiedDate":"2024-04-05"},{"lineNumber":71,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":72,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-04-05"},{"lineNumber":73,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-04-05"}],"authorContributionMap":{"peterXGD":73}},{"path":"src/main/java/seedu/address/logic/commands/DtagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonpwk"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"jonpwk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"jonpwk"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"jonpwk"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"jonpwk"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"jonpwk"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"jonpwk"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"jonpwk"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"jonpwk"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"jonpwk"},"content":" * Deletes a tag from the address book.","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"jonpwk"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"jonpwk"},"content":"public class DtagCommand extends Command {","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"jonpwk"},"content":"    public static final String COMMAND_WORD \u003d \"dtag\";","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"jonpwk"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"jonpwk"},"content":"            + \": Deletes the tag identified by the name used in the displayed tag list.\\n\"","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"jonpwk"},"content":"            + \"Parameters: TAGNAME\\n\"","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"jonpwk"},"content":"            + \"Example: \" + COMMAND_WORD + \" FRIEND\";","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"jonpwk"},"content":"    public static final String MESSAGE_DELETE_TAG_SUCCESS \u003d \"Deleted Tag: %1$s\";","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"jonpwk"},"content":"    private final String tagName;","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"jonpwk"},"content":"    public DtagCommand(String tagName) {","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"jonpwk"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"jonpwk"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"jonpwk"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"jonpwk"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"jonpwk"},"content":"        Tag dummyTag \u003d new Tag(tagName);","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"jonpwk"},"content":"        if (!model.hasTag(dummyTag)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"jonpwk"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TAG);","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"jonpwk"},"content":"        model.deleteTag(dummyTag);","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"jonpwk"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"jonpwk"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TAG_SUCCESS, tagName));","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"jonpwk"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"jonpwk"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"jonpwk"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"jonpwk"},"content":"            return true;","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"jonpwk"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"jonpwk"},"content":"        if (!(other instanceof DtagCommand)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"jonpwk"},"content":"            return false;","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"jonpwk"},"content":"        DtagCommand otherDeleteCommand \u003d (DtagCommand) other;","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"jonpwk"},"content":"        return tagName.equals(otherDeleteCommand.tagName);","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"jonpwk"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"jonpwk"},"content":"    public String toString() {","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"jonpwk"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"jonpwk"},"content":"                .add(\"tagName\", tagName)","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"jonpwk"},"content":"                .toString();","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"jonpwk"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"jonpwk":67}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"peienlim"},"content":"import seedu.address.model.tag.EventTag;","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"cleowenxuan"},"content":"            + \"by the index number or the name used in the displayed person list. \"","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"cleowenxuan"},"content":"            + \"Parameters: INDEX (must be a positive integer) or NAME (must be the exact name saved)\"","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"cleowenxuan"},"content":"    public static final String MESSAGE_EDIT_PERSON_ERROR \u003d \"Please provide either a valid name or index to edit.\";","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"cleowenxuan"},"content":"    private final String name;","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"cleowenxuan"},"content":"     * @param name of the person in the filtered person list to edit","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"cleowenxuan"},"content":"    public EditCommand(Index index, String name, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"cleowenxuan"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"cleowenxuan"},"content":"        String dummyName \u003d \" \";","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"cleowenxuan"},"content":"        if (index !\u003d null) {","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"cleowenxuan"},"content":"        } else if (name !\u003d dummyName) {","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"cleowenxuan"},"content":"            Optional\u003cPerson\u003e personToFind \u003d lastShownList.stream().filter(person -\u003e person.getName()","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"cleowenxuan"},"content":"                    .toString().equals(name)).findFirst();","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"cleowenxuan"},"content":"            if (personToFind.isPresent()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"cleowenxuan"},"content":"                Person personToEdit \u003d personToFind.get();","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"cleowenxuan"},"content":"                Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"cleowenxuan"},"content":"                if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"cleowenxuan"},"content":"                    throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"cleowenxuan"},"content":"                }","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"cleowenxuan"},"content":"                model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"cleowenxuan"},"content":"                model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"cleowenxuan"},"content":"                return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2024-04-02"},{"lineNumber":109,"author":{"gitId":"cleowenxuan"},"content":"            } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":110,"author":{"gitId":"cleowenxuan"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_NAME);","lastModifiedDate":"2024-04-02"},{"lineNumber":111,"author":{"gitId":"cleowenxuan"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"cleowenxuan"},"content":"        } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"cleowenxuan"},"content":"            throw new CommandException(MESSAGE_EDIT_PERSON_ERROR);","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":129,"author":{"gitId":"peienlim"},"content":"        Set\u003cEventTag\u003e updatedEventTags \u003d editPersonDescriptor.getEventTags().orElse(personToEdit.getEventTags());","lastModifiedDate":"2024-04-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"peienlim"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags, updatedEventTags);","lastModifiedDate":"2024-04-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":146,"author":{"gitId":"cleowenxuan"},"content":"        return index.equals(otherEditCommand.index) \u0026\u0026 name.equals(otherEditCommand.name)","lastModifiedDate":"2024-04-02"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":154,"author":{"gitId":"cleowenxuan"},"content":"                .add(\"name\", name)","lastModifiedDate":"2024-04-02"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"peienlim"},"content":"        private Set\u003cEventTag\u003e eventTags;","lastModifiedDate":"2024-04-02"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":183,"author":{"gitId":"peienlim"},"content":"            setEventTags(toCopy.eventTags);","lastModifiedDate":"2024-04-02"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":226,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":227,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":228,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":235,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":236,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":237,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":242,"author":{"gitId":"peienlim"},"content":"        /**","lastModifiedDate":"2024-04-02"},{"lineNumber":243,"author":{"gitId":"peienlim"},"content":"         * Sets {@code eventTags} to this object\u0027s {@code eventTags}.","lastModifiedDate":"2024-04-02"},{"lineNumber":244,"author":{"gitId":"peienlim"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2024-04-02"},{"lineNumber":245,"author":{"gitId":"peienlim"},"content":"         */","lastModifiedDate":"2024-04-02"},{"lineNumber":246,"author":{"gitId":"peienlim"},"content":"        public void setEventTags(Set\u003cEventTag\u003e eventTag) {","lastModifiedDate":"2024-04-02"},{"lineNumber":247,"author":{"gitId":"peienlim"},"content":"            this.eventTags \u003d (eventTag !\u003d null) ? new HashSet\u003c\u003e(eventTag) : null;","lastModifiedDate":"2024-04-02"},{"lineNumber":248,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":249,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":250,"author":{"gitId":"peienlim"},"content":"        /**","lastModifiedDate":"2024-04-02"},{"lineNumber":251,"author":{"gitId":"peienlim"},"content":"         * Returns an unmodifiable event tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2024-04-02"},{"lineNumber":252,"author":{"gitId":"peienlim"},"content":"         * if modification is attempted.","lastModifiedDate":"2024-04-02"},{"lineNumber":253,"author":{"gitId":"peienlim"},"content":"         * Returns {@code Optional#empty()} if {@code eventTag} is null.","lastModifiedDate":"2024-04-02"},{"lineNumber":254,"author":{"gitId":"peienlim"},"content":"         */","lastModifiedDate":"2024-04-02"},{"lineNumber":255,"author":{"gitId":"peienlim"},"content":"        public Optional\u003cSet\u003cEventTag\u003e\u003e getEventTags() {","lastModifiedDate":"2024-04-02"},{"lineNumber":256,"author":{"gitId":"peienlim"},"content":"            return (eventTags !\u003d null) ? Optional.of(Collections.unmodifiableSet(eventTags)) : Optional.empty();","lastModifiedDate":"2024-04-02"},{"lineNumber":257,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":258,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":262,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":263,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":267,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":268,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":272,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":273,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":274,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":275,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"cleowenxuan":31,"peienlim":22,"-":236}},{"path":"src/main/java/seedu/address/logic/commands/ExportCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owenong1"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"owenong1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"owenong1"},"content":"import static seedu.address.logic.commands.ImportExportSyntax.FIELDS;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"owenong1"},"content":"import static seedu.address.logic.commands.ImportExportSyntax.NUMBER_OF_FIELDS;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"owenong1"},"content":"import java.io.File;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"owenong1"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"owenong1"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"owenong1"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"owenong1"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"owenong1"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"owenong1"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"owenong1"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"owenong1"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"owenong1"},"content":"import seedu.address.model.tag.EventTag;","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"owenong1"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"owenong1"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"owenong1"},"content":" * Exports contacts from address book","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"owenong1"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"owenong1"},"content":"public class ExportCommand extends Command {","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"owenong1"},"content":"    public static final String COMMAND_WORD \u003d \"export\";","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"owenong1"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Contacts from address book have been exported!\";","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"owenong1"},"content":"    public static final String MESSAGE_FAILURE \u003d \"Something went wrong! Make sure export.csv is not open!\";","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"owenong1"},"content":"    public static final String EXPORT_PATH \u003d \"./export/export.csv\";","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"owenong1"},"content":"    private Set\u003cEventTag\u003e exported \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-05"},{"lineNumber":31,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"owenong1"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"owenong1"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"owenong1"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"owenong1"},"content":"        exportFile(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"owenong1"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"owenong1"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"owenong1"},"content":"     * Reads the current address book and exports to ./export/export.csv","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"owenong1"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"owenong1"},"content":"     * @param model as in execute()","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"owenong1"},"content":"     * @throws CommandException in the case that the file cannot be written to","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"owenong1"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"owenong1"},"content":"    private void exportFile(Model model) throws CommandException {","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"owenong1"},"content":"        ObservableList\u003cPerson\u003e list \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"owenong1"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"owenong1"},"content":"            File exportFile \u003d new File(EXPORT_PATH);","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"owenong1"},"content":"            FileWriter fw \u003d new FileWriter(exportFile);","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"owenong1"},"content":"            for (int i \u003d 0; i \u003c NUMBER_OF_FIELDS; i++) {","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"owenong1"},"content":"                fw.write(FIELDS.get(i));","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"owenong1"},"content":"                if (i + 1 !\u003d NUMBER_OF_FIELDS) {","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"owenong1"},"content":"                    fw.write(\",\");","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"owenong1"},"content":"                }","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"owenong1"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"owenong1"},"content":"            fw.write(\"\\n\");","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"owenong1"},"content":"            for (Person person : list) {","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"owenong1"},"content":"                fw.write(person.getName().toString());","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"owenong1"},"content":"                fw.write(\",\");","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"owenong1"},"content":"                fw.write(person.getPhone().toString());","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"owenong1"},"content":"                fw.write(\",\");","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"owenong1"},"content":"                fw.write(person.getEmail().toString());","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"owenong1"},"content":"                fw.write(\",\");","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"owenong1"},"content":"                fw.write(person.getAddress().toString());","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"owenong1"},"content":"                fw.write(\",\");","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":70,"author":{"gitId":"owenong1"},"content":"                Set\u003cEventTag\u003e eTags \u003d person.getEventTags();","lastModifiedDate":"2024-04-05"},{"lineNumber":71,"author":{"gitId":"owenong1"},"content":"                StringBuilder eTagsString \u003d new StringBuilder();","lastModifiedDate":"2024-04-05"},{"lineNumber":72,"author":{"gitId":"owenong1"},"content":"                for (EventTag eTag : eTags) {","lastModifiedDate":"2024-04-05"},{"lineNumber":73,"author":{"gitId":"owenong1"},"content":"                    if (exported.contains(eTag)) {","lastModifiedDate":"2024-04-05"},{"lineNumber":74,"author":{"gitId":"owenong1"},"content":"                        eTagsString.append(eTag.tagName).append(\"|\");","lastModifiedDate":"2024-04-05"},{"lineNumber":75,"author":{"gitId":"owenong1"},"content":"                    } else {","lastModifiedDate":"2024-04-05"},{"lineNumber":76,"author":{"gitId":"owenong1"},"content":"                        exported.add(eTag);","lastModifiedDate":"2024-04-05"},{"lineNumber":77,"author":{"gitId":"owenong1"},"content":"                        eTagsString.append(eTag.getCodeFormat()).append(\"|\");","lastModifiedDate":"2024-04-05"},{"lineNumber":78,"author":{"gitId":"owenong1"},"content":"                    }","lastModifiedDate":"2024-04-05"},{"lineNumber":79,"author":{"gitId":"owenong1"},"content":"                }","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"owenong1"},"content":"                eTagsString.deleteCharAt(eTagsString.length() - 1);","lastModifiedDate":"2024-04-05"},{"lineNumber":81,"author":{"gitId":"owenong1"},"content":"                fw.write(eTagsString.toString());","lastModifiedDate":"2024-04-05"},{"lineNumber":82,"author":{"gitId":"owenong1"},"content":"                fw.write(\",\");","lastModifiedDate":"2024-04-05"},{"lineNumber":83,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"owenong1"},"content":"                Set\u003cTag\u003e tags \u003d person.getTags();","lastModifiedDate":"2024-04-05"},{"lineNumber":85,"author":{"gitId":"owenong1"},"content":"                StringBuilder tagsString \u003d new StringBuilder();","lastModifiedDate":"2024-04-05"},{"lineNumber":86,"author":{"gitId":"owenong1"},"content":"                for (Tag tag : tags) {","lastModifiedDate":"2024-04-05"},{"lineNumber":87,"author":{"gitId":"owenong1"},"content":"                    tagsString.append(tag.tagName).append(\"|\");","lastModifiedDate":"2024-04-05"},{"lineNumber":88,"author":{"gitId":"owenong1"},"content":"                }","lastModifiedDate":"2024-04-05"},{"lineNumber":89,"author":{"gitId":"owenong1"},"content":"                tagsString.deleteCharAt(tagsString.length() - 1);","lastModifiedDate":"2024-04-05"},{"lineNumber":90,"author":{"gitId":"owenong1"},"content":"                fw.write(tagsString.toString());","lastModifiedDate":"2024-04-05"},{"lineNumber":91,"author":{"gitId":"owenong1"},"content":"                fw.write(\",\");","lastModifiedDate":"2024-04-05"},{"lineNumber":92,"author":{"gitId":"owenong1"},"content":"                fw.write(\"\\n\");","lastModifiedDate":"2024-04-05"},{"lineNumber":93,"author":{"gitId":"owenong1"},"content":"            }","lastModifiedDate":"2024-04-05"},{"lineNumber":94,"author":{"gitId":"owenong1"},"content":"            fw.close();","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":96,"author":{"gitId":"owenong1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"owenong1"},"content":"            throw new CommandException(MESSAGE_FAILURE);","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"owenong1"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"owenong1"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"owenong1":100}},{"path":"src/main/java/seedu/address/logic/commands/ImportCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owenong1"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"owenong1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"owenong1"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"owenong1"},"content":"import static seedu.address.logic.commands.ImportExportSyntax.FIELDS;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"owenong1"},"content":"import static seedu.address.logic.commands.ImportExportSyntax.NUMBER_OF_FIELDS;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"owenong1"},"content":"import static seedu.address.logic.commands.ImportExportSyntax.PREFIX_MAP;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"owenong1"},"content":"import java.io.File;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"owenong1"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"owenong1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"owenong1"},"content":"import java.util.List;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"owenong1"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"owenong1"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"owenong1"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"owenong1"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"owenong1"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"owenong1"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"owenong1"},"content":" * Imports contacts from csv","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"owenong1"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"owenong1"},"content":"public class ImportCommand extends Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"owenong1"},"content":"    public static final String COMMAND_WORD \u003d \"import\";","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"owenong1"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Contacts from csv have been added!\";","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"owenong1"},"content":"    public static final String MESSAGE_FILE_NOT_FOUND \u003d \"File could not be found! Check import.csv exists at ./import\";","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"owenong1"},"content":"    public static final String MESSAGE_FIELDS_FORMAT_ERROR \u003d \"An error occurred while parsing the csv! \"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"owenong1"},"content":"            + \"Check the field values!\";","lastModifiedDate":"2024-04-05"},{"lineNumber":30,"author":{"gitId":"owenong1"},"content":"    public static final String MESSAGE_VALUES_FORMAT_ERROR \u003d \"An error occurred while adding persons to the csv!\\n \"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"owenong1"},"content":"            + \"The values in the csv are converted to add command format\\n\"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"owenong1"},"content":"            + \"Make sure the values match the correct format for the add command!\\n\"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"owenong1"},"content":"            + \"The error with the add command occurred as follows:\\n\";","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"owenong1"},"content":"    public static final String MESSAGE_EVENTS_FORMAT_ERROR \u003d \"An error occurred while parsing the EVENTS/TAGS portion! \"","lastModifiedDate":"2024-04-05"},{"lineNumber":35,"author":{"gitId":"owenong1"},"content":"            + \"Make sure the first occurrence values match the correct format for the add command!\\n\"","lastModifiedDate":"2024-04-05"},{"lineNumber":36,"author":{"gitId":"owenong1"},"content":"            + \"(See UG for more details)\\n\"","lastModifiedDate":"2024-04-05"},{"lineNumber":37,"author":{"gitId":"owenong1"},"content":"            + \"The error with the command occurred as follows:\\n\";","lastModifiedDate":"2024-04-05"},{"lineNumber":38,"author":{"gitId":"owenong1"},"content":"    public static final String DEFAULT_PATH \u003d \"./import/import.csv\";","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"owenong1"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"owenong1"},"content":"            + \": Updates the Address book with contacts from the \"","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"owenong1"},"content":"            + \"csv file found at given path.\"","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"owenong1"},"content":"            + \"If path not specified, default path is: \" + DEFAULT_PATH + \"\\n\"","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"owenong1"},"content":"            + \"Parameters: path to file (prefixed with f/)\\n\"","lastModifiedDate":"2024-04-10"},{"lineNumber":45,"author":{"gitId":"owenong1"},"content":"            + \"Example: \" + COMMAND_WORD + \" f/\" + DEFAULT_PATH + \"\\n\"","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"owenong1"},"content":"            + \"Example: \" + COMMAND_WORD + \" f/\";","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"owenong1"},"content":"    private final String path;","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"owenong1"},"content":"    private final List\u003cString\u003e personsToAdd \u003d new ArrayList\u003c\u003e(); // To hold the person data from the csv","lastModifiedDate":"2024-04-05"},{"lineNumber":50,"author":{"gitId":"owenong1"},"content":"    private final List\u003cCommand\u003e commands \u003d new ArrayList\u003c\u003e(); // Holds commands to assign and generate eventTags;","lastModifiedDate":"2024-04-05"},{"lineNumber":51,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"owenong1"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"owenong1"},"content":"     * @param path of the import.csv file containing contacts to import","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"owenong1"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"owenong1"},"content":"    public ImportCommand(String path) {","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"owenong1"},"content":"        requireAllNonNull(path);","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"owenong1"},"content":"        this.path \u003d (path.isEmpty()) ? DEFAULT_PATH : path;","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"owenong1"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"owenong1"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"owenong1"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"owenong1"},"content":"        try { // parse the csv file at the path w scanner","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"owenong1"},"content":"            parse(model);","lastModifiedDate":"2024-04-05"},{"lineNumber":66,"author":{"gitId":"owenong1"},"content":"            checkFields(personsToAdd.get(0));","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"owenong1"},"content":"            personsToAdd.remove(0); // remove the fields","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"owenong1"},"content":"            addPersons(model);","lastModifiedDate":"2024-04-05"},{"lineNumber":69,"author":{"gitId":"owenong1"},"content":"            loadEventTags(model);","lastModifiedDate":"2024-04-05"},{"lineNumber":70,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"owenong1"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"owenong1"},"content":"            throw new CommandException(MESSAGE_FILE_NOT_FOUND);","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"owenong1"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"owenong1"},"content":"            throw new CommandException(MESSAGE_FIELDS_FORMAT_ERROR);","lastModifiedDate":"2024-04-01"},{"lineNumber":75,"author":{"gitId":"owenong1"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"owenong1"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"owenong1"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"owenong1"},"content":"     * Parses the data in the csv into the given list","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"owenong1"},"content":"     * Takes all the values and formats them into add command format","lastModifiedDate":"2024-04-05"},{"lineNumber":83,"author":{"gitId":"owenong1"},"content":"     * e.g. John -\u003e n/John","lastModifiedDate":"2024-04-05"},{"lineNumber":84,"author":{"gitId":"owenong1"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"owenong1"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"owenong1"},"content":"    private void parse(Model model) throws FileNotFoundException, IndexOutOfBoundsException, CommandException {","lastModifiedDate":"2024-04-05"},{"lineNumber":87,"author":{"gitId":"owenong1"},"content":"        StringBuilder currRow \u003d new StringBuilder(); // To hold the current row data","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"owenong1"},"content":"        Scanner sc \u003d new Scanner(new File(path));","lastModifiedDate":"2024-04-01"},{"lineNumber":89,"author":{"gitId":"owenong1"},"content":"        sc.useDelimiter(\",|\\r?\\n\");","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"owenong1"},"content":"        int count \u003d 0; // holds an idx to keep track of the current field","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"owenong1"},"content":"        String personName \u003d \"\";","lastModifiedDate":"2024-04-05"},{"lineNumber":92,"author":{"gitId":"owenong1"},"content":"        Boolean fieldsParsed \u003d false;","lastModifiedDate":"2024-04-05"},{"lineNumber":93,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"owenong1"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"owenong1"},"content":"            String next \u003d sc.next();","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"owenong1"},"content":"            if (count \u003d\u003d 0) {","lastModifiedDate":"2024-04-05"},{"lineNumber":97,"author":{"gitId":"owenong1"},"content":"                personName \u003d next;","lastModifiedDate":"2024-04-05"},{"lineNumber":98,"author":{"gitId":"owenong1"},"content":"            }","lastModifiedDate":"2024-04-05"},{"lineNumber":99,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"owenong1"},"content":"            if (!next.isEmpty()) { // append the field in the correct format if present","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"owenong1"},"content":"                String formatted \u003d formatFieldValue(next, FIELDS.get(count), personName, fieldsParsed);","lastModifiedDate":"2024-04-05"},{"lineNumber":102,"author":{"gitId":"owenong1"},"content":"                currRow.append(formatted);","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"owenong1"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":105,"author":{"gitId":"owenong1"},"content":"            count +\u003d 1;","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":107,"author":{"gitId":"owenong1"},"content":"            if (count \u003d\u003d NUMBER_OF_FIELDS) { // add the person data to the list once parsed","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"owenong1"},"content":"                currRow.deleteCharAt(currRow.length() - 1); // remove trailing \" \"","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"owenong1"},"content":"                personsToAdd.add(currRow.toString());","lastModifiedDate":"2024-04-05"},{"lineNumber":110,"author":{"gitId":"owenong1"},"content":"                currRow \u003d new StringBuilder();","lastModifiedDate":"2024-03-18"},{"lineNumber":111,"author":{"gitId":"owenong1"},"content":"                count \u003d 0;","lastModifiedDate":"2024-03-18"},{"lineNumber":112,"author":{"gitId":"owenong1"},"content":"                fieldsParsed \u003d true;","lastModifiedDate":"2024-04-05"},{"lineNumber":113,"author":{"gitId":"owenong1"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"owenong1"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":115,"author":{"gitId":"owenong1"},"content":"        sc.close();","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":117,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"owenong1"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"owenong1"},"content":"     * Formats the given data field into proper command format","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"owenong1"},"content":"     * e.g. John -\u003e n/John","lastModifiedDate":"2024-04-05"},{"lineNumber":121,"author":{"gitId":"owenong1"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":122,"author":{"gitId":"owenong1"},"content":"     * @param fieldValue the value to be formatted","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"owenong1"},"content":"     * @param field the field the value belongs to","lastModifiedDate":"2024-03-18"},{"lineNumber":124,"author":{"gitId":"owenong1"},"content":"     * @param personName holds the current persons name","lastModifiedDate":"2024-04-05"},{"lineNumber":125,"author":{"gitId":"owenong1"},"content":"     * @param fieldsParsed checks for whether fields are being parsed or not","lastModifiedDate":"2024-04-05"},{"lineNumber":126,"author":{"gitId":"owenong1"},"content":"     * @return the given field value formatted into command format","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"owenong1"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":128,"author":{"gitId":"owenong1"},"content":"    private String formatFieldValue(String fieldValue, String field, String personName, Boolean fieldsParsed)","lastModifiedDate":"2024-04-05"},{"lineNumber":129,"author":{"gitId":"owenong1"},"content":"            throws CommandException {","lastModifiedDate":"2024-04-05"},{"lineNumber":130,"author":{"gitId":"owenong1"},"content":"        final String rmvChar \u003d \"\\uFEFF\";","lastModifiedDate":"2024-03-18"},{"lineNumber":131,"author":{"gitId":"owenong1"},"content":"        if (fieldValue.startsWith(rmvChar)) { // to remove extra potential characters added due to csv format","lastModifiedDate":"2024-04-05"},{"lineNumber":132,"author":{"gitId":"owenong1"},"content":"            fieldValue \u003d fieldValue.substring(1);","lastModifiedDate":"2024-03-18"},{"lineNumber":133,"author":{"gitId":"owenong1"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":134,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":135,"author":{"gitId":"owenong1"},"content":"        if (field.equalsIgnoreCase(\"EVENTS\") \u0026\u0026 fieldsParsed) {","lastModifiedDate":"2024-04-05"},{"lineNumber":136,"author":{"gitId":"owenong1"},"content":"            String[] eTags \u003d fieldValue.split(\"\\\\|\");","lastModifiedDate":"2024-04-05"},{"lineNumber":137,"author":{"gitId":"owenong1"},"content":"            for (String eTag : eTags) {","lastModifiedDate":"2024-04-05"},{"lineNumber":138,"author":{"gitId":"owenong1"},"content":"                handleEventTag(eTag, personName);","lastModifiedDate":"2024-04-05"},{"lineNumber":139,"author":{"gitId":"owenong1"},"content":"            }","lastModifiedDate":"2024-04-05"},{"lineNumber":140,"author":{"gitId":"owenong1"},"content":"            return \"\";","lastModifiedDate":"2024-04-05"},{"lineNumber":141,"author":{"gitId":"owenong1"},"content":"        }","lastModifiedDate":"2024-04-05"},{"lineNumber":142,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":143,"author":{"gitId":"owenong1"},"content":"        String prefix \u003d PREFIX_MAP.get(field);","lastModifiedDate":"2024-03-18"},{"lineNumber":144,"author":{"gitId":"owenong1"},"content":"        if (field.equalsIgnoreCase(\"TAGS\") \u0026\u0026 fieldsParsed) { // handle case of multiple tags in field","lastModifiedDate":"2024-04-05"},{"lineNumber":145,"author":{"gitId":"owenong1"},"content":"            String[] tags \u003d fieldValue.split(\"\\\\|\");","lastModifiedDate":"2024-04-05"},{"lineNumber":146,"author":{"gitId":"owenong1"},"content":"            StringBuilder tagString \u003d new StringBuilder();","lastModifiedDate":"2024-04-05"},{"lineNumber":147,"author":{"gitId":"owenong1"},"content":"            for (String tag : tags) {","lastModifiedDate":"2024-04-05"},{"lineNumber":148,"author":{"gitId":"owenong1"},"content":"                tagString.append(prefix).append(tag).append(\" \");","lastModifiedDate":"2024-04-05"},{"lineNumber":149,"author":{"gitId":"owenong1"},"content":"            }","lastModifiedDate":"2024-04-05"},{"lineNumber":150,"author":{"gitId":"owenong1"},"content":"            return tagString.toString();","lastModifiedDate":"2024-04-05"},{"lineNumber":151,"author":{"gitId":"owenong1"},"content":"        }","lastModifiedDate":"2024-04-05"},{"lineNumber":152,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":153,"author":{"gitId":"owenong1"},"content":"        return prefix + fieldValue + \" \";","lastModifiedDate":"2024-03-18"},{"lineNumber":154,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":155,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":156,"author":{"gitId":"owenong1"},"content":"    /**","lastModifiedDate":"2024-04-05"},{"lineNumber":157,"author":{"gitId":"owenong1"},"content":"     * Manages the eventTags to create and assign","lastModifiedDate":"2024-04-05"},{"lineNumber":158,"author":{"gitId":"owenong1"},"content":"     *","lastModifiedDate":"2024-04-05"},{"lineNumber":159,"author":{"gitId":"owenong1"},"content":"     * @param details holds the eventTag details","lastModifiedDate":"2024-04-05"},{"lineNumber":160,"author":{"gitId":"owenong1"},"content":"     */","lastModifiedDate":"2024-04-05"},{"lineNumber":161,"author":{"gitId":"owenong1"},"content":"    private void handleEventTag(String details, String personName) throws CommandException {","lastModifiedDate":"2024-04-05"},{"lineNumber":162,"author":{"gitId":"owenong1"},"content":"        if (!details.equals(\"N/A\") \u0026\u0026 !details.equalsIgnoreCase(\"EVENTS\")) {","lastModifiedDate":"2024-04-05"},{"lineNumber":163,"author":{"gitId":"owenong1"},"content":"            try {","lastModifiedDate":"2024-04-05"},{"lineNumber":164,"author":{"gitId":"owenong1"},"content":"                AddressBookParser addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2024-04-05"},{"lineNumber":165,"author":{"gitId":"owenong1"},"content":"                if (details.trim().split(\" \").length !\u003d 1) { // case where event is defined","lastModifiedDate":"2024-04-05"},{"lineNumber":166,"author":{"gitId":"owenong1"},"content":"                    commands.add(addressBookParser.parseCommand(\"ctag \" + details));","lastModifiedDate":"2024-04-05"},{"lineNumber":167,"author":{"gitId":"owenong1"},"content":"                    String eventName \u003d details.trim().split(\" \")[0].substring(2);","lastModifiedDate":"2024-04-05"},{"lineNumber":168,"author":{"gitId":"owenong1"},"content":"                    commands.add(addressBookParser.parseCommand(\"assign \" + personName + \"t/\" + eventName));","lastModifiedDate":"2024-04-05"},{"lineNumber":169,"author":{"gitId":"owenong1"},"content":"                } else { // case where only event name is given","lastModifiedDate":"2024-04-05"},{"lineNumber":170,"author":{"gitId":"owenong1"},"content":"                    commands.add(addressBookParser.parseCommand(\"assign \" + personName + \"t/E-\" + details));","lastModifiedDate":"2024-04-05"},{"lineNumber":171,"author":{"gitId":"owenong1"},"content":"                }","lastModifiedDate":"2024-04-05"},{"lineNumber":172,"author":{"gitId":"owenong1"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2024-04-05"},{"lineNumber":173,"author":{"gitId":"owenong1"},"content":"                throw new CommandException(MESSAGE_EVENTS_FORMAT_ERROR + e.getMessage());","lastModifiedDate":"2024-04-05"},{"lineNumber":174,"author":{"gitId":"owenong1"},"content":"            }","lastModifiedDate":"2024-04-05"},{"lineNumber":175,"author":{"gitId":"owenong1"},"content":"        }","lastModifiedDate":"2024-04-05"},{"lineNumber":176,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":177,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":178,"author":{"gitId":"owenong1"},"content":"    private void loadEventTags(Model model) throws CommandException {","lastModifiedDate":"2024-04-05"},{"lineNumber":179,"author":{"gitId":"owenong1"},"content":"        try {","lastModifiedDate":"2024-04-05"},{"lineNumber":180,"author":{"gitId":"owenong1"},"content":"            AddressBookParser addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2024-04-05"},{"lineNumber":181,"author":{"gitId":"owenong1"},"content":"            // access model and add/assign events into address book","lastModifiedDate":"2024-04-05"},{"lineNumber":182,"author":{"gitId":"owenong1"},"content":"            for (Command command : commands) {","lastModifiedDate":"2024-04-05"},{"lineNumber":183,"author":{"gitId":"owenong1"},"content":"                command.execute(model);","lastModifiedDate":"2024-04-05"},{"lineNumber":184,"author":{"gitId":"owenong1"},"content":"            }","lastModifiedDate":"2024-04-05"},{"lineNumber":185,"author":{"gitId":"owenong1"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2024-04-05"},{"lineNumber":186,"author":{"gitId":"owenong1"},"content":"            throw new CommandException(MESSAGE_EVENTS_FORMAT_ERROR + e.getMessage());","lastModifiedDate":"2024-04-05"},{"lineNumber":187,"author":{"gitId":"owenong1"},"content":"        }","lastModifiedDate":"2024-04-05"},{"lineNumber":188,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":189,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":190,"author":{"gitId":"owenong1"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":191,"author":{"gitId":"owenong1"},"content":"     * Returns True if given String matches the number and order of fields specified in FIELDS","lastModifiedDate":"2024-03-18"},{"lineNumber":192,"author":{"gitId":"owenong1"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":193,"author":{"gitId":"owenong1"},"content":"     * @param fieldString String parsed from the first row of the csv file","lastModifiedDate":"2024-03-18"},{"lineNumber":194,"author":{"gitId":"owenong1"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":195,"author":{"gitId":"owenong1"},"content":"    private void checkFields(String fieldString) throws CommandException {","lastModifiedDate":"2024-03-18"},{"lineNumber":196,"author":{"gitId":"owenong1"},"content":"        StringBuilder fields \u003d new StringBuilder();","lastModifiedDate":"2024-03-18"},{"lineNumber":197,"author":{"gitId":"owenong1"},"content":"        for (String field: FIELDS) {","lastModifiedDate":"2024-03-18"},{"lineNumber":198,"author":{"gitId":"owenong1"},"content":"            fields.append(PREFIX_MAP.get(field));","lastModifiedDate":"2024-03-18"},{"lineNumber":199,"author":{"gitId":"owenong1"},"content":"            fields.append(field).append(\" \");","lastModifiedDate":"2024-03-18"},{"lineNumber":200,"author":{"gitId":"owenong1"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":201,"author":{"gitId":"owenong1"},"content":"        fields.deleteCharAt(fields.length() - 1); // adjust for extra \" \"","lastModifiedDate":"2024-03-18"},{"lineNumber":202,"author":{"gitId":"owenong1"},"content":"        if (!fieldString.equalsIgnoreCase(fields.toString())) {","lastModifiedDate":"2024-03-18"},{"lineNumber":203,"author":{"gitId":"owenong1"},"content":"            throw new CommandException(MESSAGE_FIELDS_FORMAT_ERROR);","lastModifiedDate":"2024-03-18"},{"lineNumber":204,"author":{"gitId":"owenong1"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":205,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":206,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":207,"author":{"gitId":"owenong1"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":208,"author":{"gitId":"owenong1"},"content":"     * Adds the person data from the list to the addressbook","lastModifiedDate":"2024-03-18"},{"lineNumber":209,"author":{"gitId":"owenong1"},"content":"     * Simulates the work of AddressBookParser","lastModifiedDate":"2024-03-18"},{"lineNumber":210,"author":{"gitId":"owenong1"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":211,"author":{"gitId":"owenong1"},"content":"     * @param model reference to the model to add the data into","lastModifiedDate":"2024-03-18"},{"lineNumber":212,"author":{"gitId":"owenong1"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":213,"author":{"gitId":"owenong1"},"content":"    private void addPersons(Model model) throws CommandException {","lastModifiedDate":"2024-04-05"},{"lineNumber":214,"author":{"gitId":"owenong1"},"content":"        try {","lastModifiedDate":"2024-04-05"},{"lineNumber":215,"author":{"gitId":"owenong1"},"content":"            AddressBookParser addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2024-03-18"},{"lineNumber":216,"author":{"gitId":"owenong1"},"content":"            // access model and add people into address book","lastModifiedDate":"2024-03-18"},{"lineNumber":217,"author":{"gitId":"owenong1"},"content":"            for (String person : personsToAdd) {","lastModifiedDate":"2024-04-05"},{"lineNumber":218,"author":{"gitId":"owenong1"},"content":"                String commandText \u003d \"add \" + person;","lastModifiedDate":"2024-03-18"},{"lineNumber":219,"author":{"gitId":"owenong1"},"content":"                Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2024-03-18"},{"lineNumber":220,"author":{"gitId":"owenong1"},"content":"                command.execute(model);","lastModifiedDate":"2024-03-18"},{"lineNumber":221,"author":{"gitId":"owenong1"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":222,"author":{"gitId":"owenong1"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2024-04-05"},{"lineNumber":223,"author":{"gitId":"owenong1"},"content":"            throw new CommandException(MESSAGE_VALUES_FORMAT_ERROR);","lastModifiedDate":"2024-04-05"},{"lineNumber":224,"author":{"gitId":"owenong1"},"content":"        }","lastModifiedDate":"2024-04-05"},{"lineNumber":225,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":226,"author":{"gitId":"owenong1"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"owenong1":226}},{"path":"src/main/java/seedu/address/logic/commands/ImportExportSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owenong1"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"owenong1"},"content":"import java.util.List;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"owenong1"},"content":"import java.util.Map;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"owenong1"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"owenong1"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"owenong1"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"owenong1"},"content":"public class ImportExportSyntax {","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"owenong1"},"content":"    public static final List\u003cString\u003e FIELDS \u003d List.of(","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"owenong1"},"content":"            \"NAME\", \"NUMBER\", \"EMAIL\", \"ADDRESS\", \"EVENTS\", \"TAGS\"","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"owenong1"},"content":"    ); // TO hold the fields present in the csv","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"owenong1"},"content":"    public static final int NUMBER_OF_FIELDS \u003d FIELDS.size();","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"owenong1"},"content":"    public static final Map\u003cString, String\u003e PREFIX_MAP \u003d Map.of(","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"owenong1"},"content":"            \"NAME\", \"n/\",","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"owenong1"},"content":"            \"NUMBER\", \"p/\",","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"owenong1"},"content":"            \"EMAIL\", \"e/\",","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"owenong1"},"content":"            \"ADDRESS\", \"a/\",","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"owenong1"},"content":"            \"TAGS\", \"t/\",","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"owenong1"},"content":"            \"EVENTS\", \"\"","lastModifiedDate":"2024-04-05"},{"lineNumber":22,"author":{"gitId":"owenong1"},"content":"    ); // To format the data in the csv to command format","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"owenong1"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"owenong1":23}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"peienlim"},"content":"import static seedu.address.model.AddressBook.DEFAULT_EVENT_TAG;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"peienlim"},"content":"        model.clearCurrentEventTag();","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"peienlim"},"content":"        return new CommandResult(MESSAGE_SUCCESS, DEFAULT_EVENT_TAG);","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"peienlim":3,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/SearchTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":" * Format search instructions for every command for display.","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"peterXGD"},"content":"public class SearchTagCommand extends Command {","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":"    public static final String COMMAND_WORD \u003d \"search\";","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"peterXGD"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"found all person with the tag\";","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"peterXGD"},"content":"    public static final String MESSAGE_NO_TAG \u003d \"no person with this tag is found\";","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"peterXGD"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"peterXGD"},"content":"            + \": Search people who are associated with this tag \"","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"peterXGD"},"content":"            + \"by listing the person that it is associated with.\\n\"","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"peterXGD"},"content":"            + \"Parameters: TAG (must be an existing tag) \"","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"peterXGD"},"content":"            + \"[TAG]\\n\"","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"peterXGD"},"content":"            + \"Example: \" + COMMAND_WORD + \" school\";","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"peterXGD"},"content":"    private final Tag tag;","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"peterXGD"},"content":"     * The constructor for SearchCommand","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"peterXGD"},"content":"     * @param tag the tag that you want to search the list for","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"cleowenxuan"},"content":"    public SearchTagCommand(Tag tag) {","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"peterXGD"},"content":"        requireAllNonNull(tag);","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"peterXGD"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"peterXGD"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"peterXGD"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"peterXGD"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"peterXGD"},"content":"        if (!model.hasTag(tag)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"peterXGD"},"content":"            throw new CommandException(MESSAGE_NO_TAG);","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"peterXGD"},"content":"        model.updateTagPersonList(tag);","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"peterXGD"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"peterXGD"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"peterXGD"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"peterXGD"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"peterXGD"},"content":"            return true;","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"peterXGD"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"peterXGD"},"content":"        if (!(other instanceof SearchTagCommand)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"peterXGD"},"content":"            return false;","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"peterXGD"},"content":"        SearchTagCommand e \u003d (SearchTagCommand) other;","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"peterXGD"},"content":"        return tag.equals(e.tag);","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"cleowenxuan":1,"peterXGD":61,"peienlim":1}},{"path":"src/main/java/seedu/address/logic/commands/SwitchCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cleowenxuan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"cleowenxuan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"cleowenxuan"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"cleowenxuan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"cleowenxuan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"cleowenxuan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"cleowenxuan"},"content":"import seedu.address.model.tag.EventTag;","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"cleowenxuan"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"cleowenxuan"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"cleowenxuan"},"content":" * Switch command to toggle between different events.","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"cleowenxuan"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"cleowenxuan"},"content":"public class SwitchCommand extends Command {","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"cleowenxuan"},"content":"    public static final String COMMAND_WORD \u003d \"switch\";","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"cleowenxuan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Found all persons with the tag.\";","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"cleowenxuan"},"content":"    public static final String MESSAGE_SUCCESS_EVENT_TAG \u003d \"Displaying all persons in the event: \";","lastModifiedDate":"2024-04-05"},{"lineNumber":23,"author":{"gitId":"cleowenxuan"},"content":"    public static final String MESSAGE_NO_EVENT_TAG \u003d \"No such event found.\";","lastModifiedDate":"2024-04-05"},{"lineNumber":24,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"cleowenxuan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"cleowenxuan"},"content":"            + \": Finds people who are associated with this tag \"","lastModifiedDate":"2024-04-05"},{"lineNumber":27,"author":{"gitId":"cleowenxuan"},"content":"            + \"by listing the person that it is associated with.\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"cleowenxuan"},"content":"            + \"Parameters: TAG (must be an existing tag) \"","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"cleowenxuan"},"content":"            + \"[TAG]\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"cleowenxuan"},"content":"            + \"Example: \" + COMMAND_WORD + \" school\";","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"cleowenxuan"},"content":"    private final Tag tag;","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"cleowenxuan"},"content":"     * The constructor for SwitchCommand","lastModifiedDate":"2024-04-05"},{"lineNumber":36,"author":{"gitId":"cleowenxuan"},"content":"     * @param tag the tag that you want to search the list for","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"cleowenxuan"},"content":"    public SwitchCommand(Tag tag) {","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"cleowenxuan"},"content":"        requireAllNonNull(tag);","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"cleowenxuan"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"cleowenxuan"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"cleowenxuan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"cleowenxuan"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"cleowenxuan"},"content":"        if (!model.hasEventTag(tag.tagName)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"cleowenxuan"},"content":"            throw new CommandException(MESSAGE_NO_EVENT_TAG);","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"cleowenxuan"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"cleowenxuan"},"content":"        EventTag eventTag \u003d model.getEventTag(tag.tagName);","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"cleowenxuan"},"content":"        model.updateEventTagPersonList(eventTag);","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"cleowenxuan"},"content":"        return new CommandResult(getEventTagDescription(eventTag), eventTag);","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"cleowenxuan"},"content":"    private String getEventTagDescription(EventTag eventTag) {","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"cleowenxuan"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d, yyyy HH:mm a\");","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"cleowenxuan"},"content":"        return MESSAGE_SUCCESS_EVENT_TAG + eventTag.tagName + \"\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"cleowenxuan"},"content":"                + \"Description: \" + eventTag.description + \"\\n\"","lastModifiedDate":"2024-04-05"},{"lineNumber":58,"author":{"gitId":"cleowenxuan"},"content":"                + \"Start Date: \" + eventTag.startDate.format(formatter) + \"\\n\"","lastModifiedDate":"2024-04-05"},{"lineNumber":59,"author":{"gitId":"cleowenxuan"},"content":"                + \"End Date: \" + eventTag.endDate.format(formatter) + \"\\n\";","lastModifiedDate":"2024-04-05"},{"lineNumber":60,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"cleowenxuan"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"cleowenxuan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"cleowenxuan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"cleowenxuan"},"content":"            return true;","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"cleowenxuan"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"cleowenxuan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"cleowenxuan"},"content":"        if (!(other instanceof SwitchCommand)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"cleowenxuan"},"content":"            return false;","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"cleowenxuan"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"cleowenxuan"},"content":"        SwitchCommand e \u003d (SwitchCommand) other;","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"cleowenxuan"},"content":"        return tag.equals(e.tag);","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"cleowenxuan"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"cleowenxuan":76}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"peienlim"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"peienlim"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList, new HashSet\u003c\u003e());","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"peienlim":2,"-":60}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"jonpwk"},"content":"import seedu.address.logic.commands.AssignCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"jonpwk"},"content":"import seedu.address.logic.commands.CtagCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"peterXGD"},"content":"import seedu.address.logic.commands.DeventCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"jonpwk"},"content":"import seedu.address.logic.commands.DtagCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"owenong1"},"content":"import seedu.address.logic.commands.ExportCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"owenong1"},"content":"import seedu.address.logic.commands.ImportCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"peterXGD"},"content":"import seedu.address.logic.commands.SearchTagCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"cleowenxuan"},"content":"import seedu.address.logic.commands.SwitchCommand;","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"jonpwk"},"content":"        case CtagCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"jonpwk"},"content":"            return new CtagCommandParser().parse(arguments);","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"jonpwk"},"content":"        case DtagCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"jonpwk"},"content":"            return new DtagCommandParser().parse(arguments);","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"owenong1"},"content":"        case ImportCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"owenong1"},"content":"            return new ImportCommandParser().parse(arguments);","lastModifiedDate":"2024-04-01"},{"lineNumber":96,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"owenong1"},"content":"        case ExportCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"owenong1"},"content":"            return new ExportCommand();","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"peterXGD"},"content":"        case SearchTagCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"peterXGD"},"content":"            return new SearchCommandParser().parse(arguments);","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"jonpwk"},"content":"        case AssignCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"jonpwk"},"content":"            return new AssignCommandParser().parse(arguments);","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"cleowenxuan"},"content":"        case SwitchCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-04"},{"lineNumber":107,"author":{"gitId":"cleowenxuan"},"content":"            return new SwitchCommandParser().parse(arguments);","lastModifiedDate":"2024-04-04"},{"lineNumber":108,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"peterXGD"},"content":"        case DeventCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-05"},{"lineNumber":110,"author":{"gitId":"peterXGD"},"content":"            return new DeventCommandParser().parse(arguments);","lastModifiedDate":"2024-04-05"},{"lineNumber":111,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cleowenxuan":4,"peterXGD":8,"owenong1":8,"jonpwk":12,"-":86}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"peterXGD"},"content":"    public static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"peterXGD":1,"-":147}},{"path":"src/main/java/seedu/address/logic/parser/AssignCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonpwk"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"jonpwk"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"jonpwk"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"jonpwk"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"cleowenxuan"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"jonpwk"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"jonpwk"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"jonpwk"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"jonpwk"},"content":"import seedu.address.logic.commands.AssignCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"jonpwk"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"jonpwk"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"jonpwk"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"jonpwk"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"jonpwk"},"content":" * Parses input arguments and creates a new AssignCommand object","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"jonpwk"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"jonpwk"},"content":"public class AssignCommandParser implements Parser\u003cAssignCommand\u003e {","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"jonpwk"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"jonpwk"},"content":"    public AssignCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"jonpwk"},"content":"        String[] args \u003d userInput.trim().split(\"t/\");","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"jonpwk"},"content":"        String nameOrIndex \u003d args[0];","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"jonpwk"},"content":"        String tags \u003d \" t/\" + String.join(\" t/\", Arrays.copyOfRange(args, 1, args.length));","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"jonpwk"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(tags, PREFIX_TAG);","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"jonpwk"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TAG)","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"jonpwk"},"content":"                || userInput.equals(\"\")) {","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"jonpwk"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AssignCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"cleowenxuan"},"content":"        Set\u003cTag\u003e tagList \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"cleowenxuan"},"content":"        Set\u003cTag\u003e eventTagList \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"cleowenxuan"},"content":"        for (String tagValue : argMultimap.getAllValues(PREFIX_TAG)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"cleowenxuan"},"content":"            if (tagValue.startsWith(\"E-\")) {","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"cleowenxuan"},"content":"                Tag eventTag \u003d ParserUtil.parseEventTag(tagValue.substring(2));","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"cleowenxuan"},"content":"                eventTagList.add(eventTag);","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"cleowenxuan"},"content":"            } else {","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"cleowenxuan"},"content":"                Tag normalTag \u003d ParserUtil.parseTag(tagValue);","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"cleowenxuan"},"content":"                tagList.add(normalTag);","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"cleowenxuan"},"content":"            }","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"cleowenxuan"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"jonpwk"},"content":"        try {","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"jonpwk"},"content":"            Object parsedObject \u003d ParserUtil.parseNameIndex(nameOrIndex);","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"jonpwk"},"content":"            if (parsedObject instanceof Index) {","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"jonpwk"},"content":"                Index index \u003d (Index) parsedObject;","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"jonpwk"},"content":"                String dummyName \u003d \" \";","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"cleowenxuan"},"content":"                return new AssignCommand(index, dummyName, tagList, eventTagList);","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"jonpwk"},"content":"            } else if (parsedObject instanceof Name) {","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"jonpwk"},"content":"                Name name \u003d (Name) parsedObject;","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"jonpwk"},"content":"                String nameString \u003d name.toString();","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"cleowenxuan"},"content":"                return new AssignCommand(null, nameString, tagList, eventTagList);","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"jonpwk"},"content":"            } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"jonpwk"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AssignCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"jonpwk"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"jonpwk"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"jonpwk"},"content":"            throw new ParseException(","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"jonpwk"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AssignCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"jonpwk"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"jonpwk"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"jonpwk"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"cleowenxuan":16,"jonpwk":53}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"owenong1"},"content":"    public static final Prefix PREFIX_FILE \u003d new Prefix(\"f/\");","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":"    public static final Prefix PREFIX_EVENT_TAG \u003d new Prefix(\"t/E-\");","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"peterXGD"},"content":"    public static final Prefix PREFIX_START_DATE \u003d new Prefix(\"sd/\");","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"peterXGD"},"content":"    public static final Prefix PREFIX_END_DATE \u003d new Prefix(\"ed/\");","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"peterXGD"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"dc/\");","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"owenong1":1,"peterXGD":4,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/CtagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonpwk"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"jonpwk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"jonpwk"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_DATE;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_TAG;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_DATE;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"jonpwk"},"content":"import seedu.address.logic.commands.CtagCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"jonpwk"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":"import seedu.address.model.tag.EventTag;","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"jonpwk"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"jonpwk"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"peterXGD"},"content":" * Parses input arguments and creates a new CtagCommand object.","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"jonpwk"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"jonpwk"},"content":"public class CtagCommandParser implements Parser\u003cCtagCommand\u003e {","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"jonpwk"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"jonpwk"},"content":"     * Parses the given {@code String} of arguments in the context of the CtagCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"jonpwk"},"content":"     * and returns a CtagCommand object for execution.","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"jonpwk"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"jonpwk"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"jonpwk"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"jonpwk"},"content":"    public CtagCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"jonpwk"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"jonpwk"},"content":"        String tagName \u003d args.trim();","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"peterXGD"},"content":"        CtagCommand cmd \u003d new CtagCommand(null, null);","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"jonpwk"},"content":"        if (tagName.isEmpty()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"jonpwk"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"jonpwk"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, CtagCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"peterXGD"},"content":"        boolean isEventTag \u003d ArgumentTokenizer.findPrefixPosition(args, PREFIX_EVENT_TAG.getPrefix(), 0) !\u003d -1;","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"peterXGD"},"content":"        boolean isTag \u003d tagName.split(\" \").length \u003d\u003d 1;","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"peterXGD"},"content":"        //check type of tag: e-tag or normal tag","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"peterXGD"},"content":"        if (isTag) {","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"peterXGD"},"content":"            //if we have a tag string","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"jonpwk"},"content":"            Tag tag \u003d ParserUtil.parseTag(tagName);","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"peterXGD"},"content":"            cmd \u003d new CtagCommand(tag, null);","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"peterXGD"},"content":"        } else if (isEventTag) {","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"peterXGD"},"content":"            //if we have an event tag","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"peterXGD"},"content":"            ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"peterXGD"},"content":"                    PREFIX_EVENT_TAG, PREFIX_DESCRIPTION, PREFIX_START_DATE, PREFIX_END_DATE);","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"peterXGD"},"content":"            if (!containsAllPrefix(argMultimap,","lastModifiedDate":"2024-04-05"},{"lineNumber":49,"author":{"gitId":"peterXGD"},"content":"                    PREFIX_EVENT_TAG, PREFIX_DESCRIPTION, PREFIX_START_DATE, PREFIX_END_DATE)","lastModifiedDate":"2024-04-05"},{"lineNumber":50,"author":{"gitId":"peterXGD"},"content":"                    || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"peterXGD"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CtagCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"peterXGD"},"content":"            }","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"peterXGD"},"content":"            argMultimap.verifyNoDuplicatePrefixesFor(","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"peterXGD"},"content":"                    PREFIX_EVENT_TAG, PREFIX_DESCRIPTION, PREFIX_START_DATE, PREFIX_END_DATE);","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"peterXGD"},"content":"            String name \u003d argMultimap.getValue(PREFIX_EVENT_TAG).get();","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"peterXGD"},"content":"            LocalDateTime sd \u003d ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_START_DATE).get());","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"peterXGD"},"content":"            LocalDateTime ed \u003d ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_END_DATE).get());","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"peterXGD"},"content":"            String description \u003d argMultimap.getValue(PREFIX_DESCRIPTION).get();","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"peterXGD"},"content":"            EventTag eventTag \u003d new EventTag(name, description, sd, ed);","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"peterXGD"},"content":"            cmd \u003d new CtagCommand(null, eventTag);","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"peterXGD"},"content":"        return cmd;","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"peterXGD"},"content":"     * Check if all prefixes have input, returns true if so","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"peterXGD"},"content":"     * and returns a CtagCommand object for execution.","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"peterXGD"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"peterXGD"},"content":"    public boolean containsAllPrefix(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"peterXGD"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"jonpwk"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"peterXGD":43,"jonpwk":30}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"cleowenxuan"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"cleowenxuan"},"content":"            Object parsedObject \u003d ParserUtil.parseNameIndex(args);","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"cleowenxuan"},"content":"            if (parsedObject instanceof Index) {","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"cleowenxuan"},"content":"                Index index \u003d (Index) parsedObject;","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"cleowenxuan"},"content":"                String dummyName \u003d \" \";","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"cleowenxuan"},"content":"                return new DeleteCommand(index, dummyName);","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"cleowenxuan"},"content":"            } else if (parsedObject instanceof Name) {","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"cleowenxuan"},"content":"                Name name \u003d (Name) parsedObject;","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"cleowenxuan"},"content":"                String nameString \u003d name.toString();","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"cleowenxuan"},"content":"                return new DeleteCommand(null, nameString);","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"cleowenxuan"},"content":"            } else {","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"cleowenxuan"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"cleowenxuan"},"content":"            }","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"cleowenxuan":13,"-":26}},{"path":"src/main/java/seedu/address/logic/parser/DeventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"import seedu.address.logic.commands.DeventCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"/**","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":" * Parser for the devent command.","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":" */","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":"public class DeventCommandParser {","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":"     * Parses the given {@code String} of arguments in the context of the DeventCommand","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"peterXGD"},"content":"     * and returns a DeventCommand object for execution.","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"peterXGD"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"peterXGD"},"content":"    public DeventCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"peterXGD"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"peterXGD"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"peterXGD"},"content":"            throw new ParseException(","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"peterXGD"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeventCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-04-05"},{"lineNumber":22,"author":{"gitId":"peterXGD"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\" \");","lastModifiedDate":"2024-04-05"},{"lineNumber":23,"author":{"gitId":"peterXGD"},"content":"        if (nameKeywords.length !\u003d 1) {","lastModifiedDate":"2024-04-05"},{"lineNumber":24,"author":{"gitId":"peterXGD"},"content":"            throw new ParseException(","lastModifiedDate":"2024-04-05"},{"lineNumber":25,"author":{"gitId":"peterXGD"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeventCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-05"},{"lineNumber":26,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-04-05"},{"lineNumber":27,"author":{"gitId":"peterXGD"},"content":"        String tagName \u003d nameKeywords[0];","lastModifiedDate":"2024-04-05"},{"lineNumber":28,"author":{"gitId":"peterXGD"},"content":"        return new DeventCommand(tagName);","lastModifiedDate":"2024-04-05"},{"lineNumber":29,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":30,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-04-05"}],"authorContributionMap":{"peterXGD":30}},{"path":"src/main/java/seedu/address/logic/parser/DtagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonpwk"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"jonpwk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"jonpwk"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"jonpwk"},"content":"import seedu.address.logic.commands.DtagCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"jonpwk"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"jonpwk"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"jonpwk"},"content":" * Parses input arguments and creates a new DtagCommand object","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"jonpwk"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"jonpwk"},"content":"public class DtagCommandParser implements Parser\u003cDtagCommand\u003e {","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"jonpwk"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"jonpwk"},"content":"     * Parses the given {@code String} of arguments in the context of the DtagCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"jonpwk"},"content":"     * and returns a DtagCommand object for execution.","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"jonpwk"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"jonpwk"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"jonpwk"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"jonpwk"},"content":"    public DtagCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"jonpwk"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"jonpwk"},"content":"        String tagName \u003d args.trim();","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"jonpwk"},"content":"        if (tagName.isEmpty()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"jonpwk"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"jonpwk"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DtagCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"jonpwk"},"content":"        return new DtagCommand(tagName);","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"jonpwk"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"jonpwk":29}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"cleowenxuan"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"cleowenxuan"},"content":"        Index index \u003d null;","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"cleowenxuan"},"content":"        Name name \u003d null;","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"cleowenxuan"},"content":"        String dummyName \u003d \" \";","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"cleowenxuan"},"content":"            Object parsedObject \u003d ParserUtil.parseNameIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"cleowenxuan"},"content":"            if (parsedObject instanceof Index) {","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"cleowenxuan"},"content":"                index \u003d (Index) parsedObject;","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"cleowenxuan"},"content":"            } else if (parsedObject instanceof Name) {","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"cleowenxuan"},"content":"                name \u003d (Name) parsedObject;","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"cleowenxuan"},"content":"            } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"cleowenxuan"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"cleowenxuan"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"cleowenxuan"},"content":"        if (index !\u003d null) {","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"cleowenxuan"},"content":"            return new EditCommand(index, dummyName, editPersonDescriptor);","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"cleowenxuan"},"content":"        } else if (name !\u003d null) {","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"cleowenxuan"},"content":"            return new EditCommand(null, name.toString(), editPersonDescriptor);","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"cleowenxuan"},"content":"        } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"cleowenxuan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"cleowenxuan"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"cleowenxuan":19,"-":81}},{"path":"src/main/java/seedu/address/logic/parser/ImportCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owenong1"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"owenong1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"owenong1"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"owenong1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FILE;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"owenong1"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"owenong1"},"content":"import seedu.address.logic.commands.ImportCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"owenong1"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"owenong1"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"owenong1"},"content":" * Parses input arguments and creates a new ImportCommand object","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"owenong1"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"owenong1"},"content":"public class ImportCommandParser implements Parser\u003cImportCommand\u003e {","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"owenong1"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"owenong1"},"content":"     * Parses the given {@code String} of arguments in the context of the ImportCommand","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"owenong1"},"content":"     * and returns an ImportCommand object for execution.","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"owenong1"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"owenong1"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"owenong1"},"content":"    public ImportCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"owenong1"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"owenong1"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"owenong1"},"content":"                PREFIX_FILE);","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"owenong1"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_FILE)","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"owenong1"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"owenong1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ImportCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"owenong1"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"owenong1"},"content":"        String path \u003d argMultimap.getValue(PREFIX_FILE).orElse(\"\");","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"owenong1"},"content":"        return new ImportCommand(path);","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"owenong1"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"owenong1"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"owenong1"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"owenong1"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"owenong1"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"owenong1"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"owenong1"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"owenong1":43}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"cleowenxuan"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":"import seedu.address.logic.commands.CtagCommand;","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"cleowenxuan"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"cleowenxuan"},"content":"    public static final String MESSAGE_INVALID_NAME \u003d \"Name is not a valid name in the contacts.\";","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"cleowenxuan"},"content":"    public static final String MESSAGE_INVALID_INDEX_OR_NAME \u003d \"Index or Name is invalid.\";","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"peterXGD"},"content":"    public static final String MESSAGE_INVALID_TIME_FORMAT \u003d \"Format of time is must be of YYYY-MM-DD HH:mm:ss\";","lastModifiedDate":"2024-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"cleowenxuan"},"content":"     * Parses a {@code String} into an {@code Index} or {@code Name} object based on its content.","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"cleowenxuan"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"cleowenxuan"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"cleowenxuan"},"content":"     * @param input The string to parse, which can be either an index or a name.","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"cleowenxuan"},"content":"     * @return Either an {@code Index} or a {@code Name} object based on the input.","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"cleowenxuan"},"content":"     * @throws ParseException if the input is neither a valid index nor a valid name.","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"cleowenxuan"},"content":"    public static Object parseNameIndex(String input) throws ParseException {","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"cleowenxuan"},"content":"        String trimmedInput \u003d input.trim();","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"cleowenxuan"},"content":"        if (trimmedInput.equals(\"0\")) {","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"cleowenxuan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"cleowenxuan"},"content":"        } else if (StringUtil.isNonZeroUnsignedInteger(trimmedInput)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"cleowenxuan"},"content":"            return Index.fromOneBased(Integer.parseInt(trimmedInput));","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"cleowenxuan"},"content":"        } else if (Name.isValidName(trimmedInput)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"cleowenxuan"},"content":"            return new Name(trimmedInput);","lastModifiedDate":"2024-03-15"},{"lineNumber":78,"author":{"gitId":"cleowenxuan"},"content":"        } else {","lastModifiedDate":"2024-03-15"},{"lineNumber":79,"author":{"gitId":"cleowenxuan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"cleowenxuan"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":81,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":82,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":129,"author":{"gitId":"cleowenxuan"},"content":"     * Parses a {@code String tag} into a {@code EventTag}.","lastModifiedDate":"2024-04-04"},{"lineNumber":130,"author":{"gitId":"cleowenxuan"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-04-04"},{"lineNumber":131,"author":{"gitId":"cleowenxuan"},"content":"     *","lastModifiedDate":"2024-04-04"},{"lineNumber":132,"author":{"gitId":"cleowenxuan"},"content":"     * @param tag The string representing the event tag.","lastModifiedDate":"2024-04-04"},{"lineNumber":133,"author":{"gitId":"cleowenxuan"},"content":"     * @return The parsed EventTag object.","lastModifiedDate":"2024-04-04"},{"lineNumber":134,"author":{"gitId":"cleowenxuan"},"content":"     * @throws ParseException If the tag string is invalid.","lastModifiedDate":"2024-04-04"},{"lineNumber":135,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":136,"author":{"gitId":"cleowenxuan"},"content":"    public static Tag parseEventTag(String tag) throws ParseException {","lastModifiedDate":"2024-04-04"},{"lineNumber":137,"author":{"gitId":"cleowenxuan"},"content":"        requireNonNull(tag);","lastModifiedDate":"2024-04-04"},{"lineNumber":138,"author":{"gitId":"cleowenxuan"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2024-04-04"},{"lineNumber":139,"author":{"gitId":"cleowenxuan"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":140,"author":{"gitId":"cleowenxuan"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-04"},{"lineNumber":141,"author":{"gitId":"cleowenxuan"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":142,"author":{"gitId":"cleowenxuan"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2024-04-04"},{"lineNumber":143,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":144,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":171,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":172,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":173,"author":{"gitId":"peterXGD"},"content":"     * Parses a {@code String date} into a {@code LocalDateTime}.","lastModifiedDate":"2024-03-29"},{"lineNumber":174,"author":{"gitId":"peterXGD"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-29"},{"lineNumber":175,"author":{"gitId":"peterXGD"},"content":"     * The String formatted should be of the pattern \"yyyy-MM-dd HH:mm:ss\" by default.","lastModifiedDate":"2024-03-29"},{"lineNumber":176,"author":{"gitId":"peterXGD"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":177,"author":{"gitId":"peterXGD"},"content":"     * @throws DateTimeParseException if the given {@code tag} is invalid.","lastModifiedDate":"2024-03-29"},{"lineNumber":178,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":179,"author":{"gitId":"peterXGD"},"content":"    public static LocalDateTime parseDateTime(String dateTime) throws ParseException {","lastModifiedDate":"2024-04-04"},{"lineNumber":180,"author":{"gitId":"peterXGD"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2024-03-29"},{"lineNumber":181,"author":{"gitId":"peterXGD"},"content":"        String trimmedTime \u003d dateTime.trim();","lastModifiedDate":"2024-03-29"},{"lineNumber":182,"author":{"gitId":"peterXGD"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\");","lastModifiedDate":"2024-03-29"},{"lineNumber":183,"author":{"gitId":"peterXGD"},"content":"        try {","lastModifiedDate":"2024-04-04"},{"lineNumber":184,"author":{"gitId":"peterXGD"},"content":"            LocalDateTime time \u003d LocalDateTime.parse(trimmedTime, formatter);","lastModifiedDate":"2024-03-29"},{"lineNumber":185,"author":{"gitId":"peterXGD"},"content":"            return time;","lastModifiedDate":"2024-03-29"},{"lineNumber":186,"author":{"gitId":"peterXGD"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-04-04"},{"lineNumber":187,"author":{"gitId":"peterXGD"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CtagCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-04"},{"lineNumber":188,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":189,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"cleowenxuan":42,"peterXGD":24,"-":124}},{"path":"src/main/java/seedu/address/logic/parser/SearchCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"import seedu.address.logic.commands.SearchTagCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":" * Parser for the search command.","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":"public class SearchCommandParser implements Parser\u003cSearchTagCommand\u003e {","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"peterXGD"},"content":"     * Parses the given {@code String} of arguments in the context of the SearchCommand","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":"     * and returns a SearchCommand object for execution.","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"peterXGD"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"peterXGD"},"content":"    public SearchTagCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"peterXGD"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"peterXGD"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"peterXGD"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"peterXGD"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SearchTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"peterXGD"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\" \");","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"peterXGD"},"content":"        if (nameKeywords.length !\u003d 1) {","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"peterXGD"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"peterXGD"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SearchTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"peienlim"},"content":"        Tag tag \u003d ParserUtil.parseTag(nameKeywords[0]);","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"peienlim"},"content":"        return new SearchTagCommand(tag);","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"peterXGD":30,"peienlim":2}},{"path":"src/main/java/seedu/address/logic/parser/SwitchCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cleowenxuan"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"cleowenxuan"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"cleowenxuan"},"content":"import seedu.address.logic.commands.SearchTagCommand;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"cleowenxuan"},"content":"import seedu.address.logic.commands.SwitchCommand;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"cleowenxuan"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"cleowenxuan"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"cleowenxuan"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"cleowenxuan"},"content":" * Parser for the switch command.","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"cleowenxuan"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"cleowenxuan"},"content":"public class SwitchCommandParser implements Parser\u003cSwitchCommand\u003e {","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"cleowenxuan"},"content":"     * Parses the given {@code String} of arguments in the context of the SwitchCommand","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"cleowenxuan"},"content":"     * and returns a SwitchCommand object for execution.","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"cleowenxuan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"cleowenxuan"},"content":"    public SwitchCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"cleowenxuan"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"cleowenxuan"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"cleowenxuan"},"content":"            throw new ParseException(","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"cleowenxuan"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SearchTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"cleowenxuan"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"cleowenxuan"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\" \");","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"cleowenxuan"},"content":"        if (nameKeywords.length !\u003d 1) {","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"cleowenxuan"},"content":"            throw new ParseException(","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"cleowenxuan"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SearchTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"cleowenxuan"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"cleowenxuan"},"content":"        return new SwitchCommand(new Tag(nameKeywords[0]));","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"cleowenxuan"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"cleowenxuan":33}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"peienlim"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"cleowenxuan"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"peienlim"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"peienlim"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"peienlim"},"content":"import javafx.collections.ObservableSet;","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"peienlim"},"content":"import seedu.address.model.tag.EventTag;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"peienlim"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"peienlim"},"content":"import seedu.address.model.tag.UniqueTagList;","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"peienlim"},"content":"    public static final EventTag DEFAULT_EVENT_TAG \u003d new EventTag(\"All\", \"All contacts in EventBook\",","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"peienlim"},"content":"            LocalDateTime.parse(\"2024-04-05T14:00:00\"), LocalDateTime.parse(\"2024-04-05T14:00:00\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":30,"author":{"gitId":"peienlim"},"content":"    private final UniqueTagList\u003cTag\u003e tagList;","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"peienlim"},"content":"    private final UniqueTagList\u003cEventTag\u003e eventTagList;","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":42,"author":{"gitId":"peienlim"},"content":"        tagList \u003d new UniqueTagList\u003cTag\u003e();","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"peienlim"},"content":"        eventTagList \u003d new UniqueTagList\u003cEventTag\u003e();","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"peienlim"},"content":"    public void setTagList(Set\u003cTag\u003e tagList) {","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"peienlim"},"content":"        this.tagList.setTags(tagList);","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":70,"author":{"gitId":"peienlim"},"content":"    public void setEventTagList(Set\u003cEventTag\u003e eventTagList) {","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"peienlim"},"content":"        this.eventTagList.setTags(eventTagList);","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":81,"author":{"gitId":"peienlim"},"content":"        setTagList(newData.getTagList());","lastModifiedDate":"2024-03-13"},{"lineNumber":82,"author":{"gitId":"peienlim"},"content":"        setEventTagList(newData.getEventTagList());","lastModifiedDate":"2024-04-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"peienlim"},"content":"    //// person-level and tag-level operations","lastModifiedDate":"2024-03-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":96,"author":{"gitId":"peienlim"},"content":"     * Returns true if a tag {@code tag} exists in the address book.","lastModifiedDate":"2024-03-13"},{"lineNumber":97,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":98,"author":{"gitId":"peienlim"},"content":"    public boolean hasTag(Tag tag) {","lastModifiedDate":"2024-03-13"},{"lineNumber":99,"author":{"gitId":"peienlim"},"content":"        requireNonNull(tag);","lastModifiedDate":"2024-03-13"},{"lineNumber":100,"author":{"gitId":"peienlim"},"content":"        return tagList.contains(tag);","lastModifiedDate":"2024-03-13"},{"lineNumber":101,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":102,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"jonpwk"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"jonpwk"},"content":"     * Assigns the given tags {@code tags} to {@code targetPerson}.","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"jonpwk"},"content":"     * {@code tags} must exist in the address book.","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"jonpwk"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"jonpwk"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"cleowenxuan"},"content":"    public void assign(Person targetPerson, Set\u003cTag\u003e tags, Set\u003cTag\u003e eventTags) {","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"jonpwk"},"content":"        targetPerson.addTags(tags);","lastModifiedDate":"2024-04-02"},{"lineNumber":110,"author":{"gitId":"cleowenxuan"},"content":"        Set\u003cEventTag\u003e eventsToAdd \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-04"},{"lineNumber":111,"author":{"gitId":"cleowenxuan"},"content":"        for (Tag t : eventTags) {","lastModifiedDate":"2024-04-04"},{"lineNumber":112,"author":{"gitId":"cleowenxuan"},"content":"            EventTag eventTag \u003d getEventTag(t.tagName);","lastModifiedDate":"2024-04-04"},{"lineNumber":113,"author":{"gitId":"cleowenxuan"},"content":"            eventsToAdd.add(eventTag);","lastModifiedDate":"2024-04-04"},{"lineNumber":114,"author":{"gitId":"cleowenxuan"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":115,"author":{"gitId":"cleowenxuan"},"content":"        targetPerson.addEventTags(eventsToAdd);","lastModifiedDate":"2024-04-04"},{"lineNumber":116,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":118,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":119,"author":{"gitId":"peienlim"},"content":"     * Returns true if an event tag {@code tag} exists in the address book.","lastModifiedDate":"2024-03-31"},{"lineNumber":120,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":121,"author":{"gitId":"peienlim"},"content":"    public boolean hasEventTag(EventTag eventTag) {","lastModifiedDate":"2024-04-01"},{"lineNumber":122,"author":{"gitId":"peienlim"},"content":"        requireNonNull(eventTag);","lastModifiedDate":"2024-03-31"},{"lineNumber":123,"author":{"gitId":"peienlim"},"content":"        return eventTagList.contains(eventTag);","lastModifiedDate":"2024-03-31"},{"lineNumber":124,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":125,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":126,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":127,"author":{"gitId":"peienlim"},"content":"     * Returns true if an event tag with name {@code eventTagName} exists in the address book.","lastModifiedDate":"2024-03-31"},{"lineNumber":128,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":129,"author":{"gitId":"peienlim"},"content":"    public boolean hasEventTag(String eventTagName) {","lastModifiedDate":"2024-03-31"},{"lineNumber":130,"author":{"gitId":"peienlim"},"content":"        requireNonNull(eventTagName);","lastModifiedDate":"2024-03-31"},{"lineNumber":131,"author":{"gitId":"peienlim"},"content":"        return eventTagList.contains(eventTagName);","lastModifiedDate":"2024-03-31"},{"lineNumber":132,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":133,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":140,"author":{"gitId":"jonpwk"},"content":"        for (Tag tag:p.getTags()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"jonpwk"},"content":"            if (!hasTag(tag)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":142,"author":{"gitId":"jonpwk"},"content":"                addTag(tag);","lastModifiedDate":"2024-04-02"},{"lineNumber":143,"author":{"gitId":"jonpwk"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":144,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":145,"author":{"gitId":"jonpwk"},"content":"        for (EventTag eventTag:p.getEventTags()) {","lastModifiedDate":"2024-04-04"},{"lineNumber":146,"author":{"gitId":"jonpwk"},"content":"            if (!hasEventTag(eventTag)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":147,"author":{"gitId":"jonpwk"},"content":"                addEventTag(eventTag);","lastModifiedDate":"2024-04-04"},{"lineNumber":148,"author":{"gitId":"jonpwk"},"content":"            }","lastModifiedDate":"2024-04-04"},{"lineNumber":149,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":153,"author":{"gitId":"peienlim"},"content":"     * Adds a tag to the address book.","lastModifiedDate":"2024-03-13"},{"lineNumber":154,"author":{"gitId":"peienlim"},"content":"     * The tag must not already exist in the address book.","lastModifiedDate":"2024-03-13"},{"lineNumber":155,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":156,"author":{"gitId":"peienlim"},"content":"    public void addTag(Tag t) {","lastModifiedDate":"2024-03-13"},{"lineNumber":157,"author":{"gitId":"peienlim"},"content":"        tagList.add(t);","lastModifiedDate":"2024-03-13"},{"lineNumber":158,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":159,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":160,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":161,"author":{"gitId":"peienlim"},"content":"     * Adds an event tag to the address book.","lastModifiedDate":"2024-03-31"},{"lineNumber":162,"author":{"gitId":"peienlim"},"content":"     * The event tag must not already exist in the address book.","lastModifiedDate":"2024-03-31"},{"lineNumber":163,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":164,"author":{"gitId":"peienlim"},"content":"    public void addEventTag(EventTag t) {","lastModifiedDate":"2024-04-01"},{"lineNumber":165,"author":{"gitId":"peienlim"},"content":"        eventTagList.add(t);","lastModifiedDate":"2024-03-31"},{"lineNumber":166,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":167,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":168,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":169,"author":{"gitId":"peterXGD"},"content":"     * Gets an event tag to the address book.","lastModifiedDate":"2024-04-05"},{"lineNumber":170,"author":{"gitId":"peienlim"},"content":"     * The event tag must not already exist in the address book.","lastModifiedDate":"2024-04-02"},{"lineNumber":171,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":172,"author":{"gitId":"peienlim"},"content":"    public EventTag getEventTag(String t) {","lastModifiedDate":"2024-04-02"},{"lineNumber":173,"author":{"gitId":"peienlim"},"content":"        return eventTagList.getEventTag(t);","lastModifiedDate":"2024-04-02"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":187,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":188,"author":{"gitId":"peienlim"},"content":"     * Replaces the given tag {@code target} in the list with {@code editedTag}.","lastModifiedDate":"2024-03-13"},{"lineNumber":189,"author":{"gitId":"peienlim"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2024-03-13"},{"lineNumber":190,"author":{"gitId":"peienlim"},"content":"     * The {@code editedTag} must not be the same as another tag in the address book.","lastModifiedDate":"2024-03-13"},{"lineNumber":191,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":192,"author":{"gitId":"peienlim"},"content":"    public void setTags(Tag target, Tag editedTag) {","lastModifiedDate":"2024-03-13"},{"lineNumber":193,"author":{"gitId":"peienlim"},"content":"        requireNonNull(editedTag);","lastModifiedDate":"2024-03-13"},{"lineNumber":194,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":195,"author":{"gitId":"peienlim"},"content":"        tagList.replace(target, editedTag);","lastModifiedDate":"2024-03-13"},{"lineNumber":196,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":197,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":198,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":199,"author":{"gitId":"peienlim"},"content":"     * Replaces the given event tag {@code target} in the list with {@code editedTag}.","lastModifiedDate":"2024-03-31"},{"lineNumber":200,"author":{"gitId":"peienlim"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2024-03-31"},{"lineNumber":201,"author":{"gitId":"peienlim"},"content":"     * The {@code editedTag} must not be the same as another event tag in the address book.","lastModifiedDate":"2024-03-31"},{"lineNumber":202,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":203,"author":{"gitId":"peienlim"},"content":"    public void setEventTags(EventTag target, EventTag editedTag) {","lastModifiedDate":"2024-04-01"},{"lineNumber":204,"author":{"gitId":"peienlim"},"content":"        requireNonNull(editedTag);","lastModifiedDate":"2024-03-31"},{"lineNumber":205,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":206,"author":{"gitId":"peienlim"},"content":"        eventTagList.replace(target, editedTag);","lastModifiedDate":"2024-03-31"},{"lineNumber":207,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":208,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":218,"author":{"gitId":"peienlim"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2024-03-13"},{"lineNumber":219,"author":{"gitId":"peienlim"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2024-03-13"},{"lineNumber":220,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":221,"author":{"gitId":"peienlim"},"content":"    public void removeTag(Tag key) {","lastModifiedDate":"2024-03-13"},{"lineNumber":222,"author":{"gitId":"jonpwk"},"content":"        for (Person p:persons) {","lastModifiedDate":"2024-04-01"},{"lineNumber":223,"author":{"gitId":"jonpwk"},"content":"            p.removeTag(key);","lastModifiedDate":"2024-04-01"},{"lineNumber":224,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":225,"author":{"gitId":"jonpwk"},"content":"        tagList.remove(key);","lastModifiedDate":"2024-03-19"},{"lineNumber":226,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":227,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":228,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-04-05"},{"lineNumber":229,"author":{"gitId":"peterXGD"},"content":"     * Removes {@code key} event tag from this {@code AddressBook}.","lastModifiedDate":"2024-04-05"},{"lineNumber":230,"author":{"gitId":"peterXGD"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2024-04-05"},{"lineNumber":231,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-04-05"},{"lineNumber":232,"author":{"gitId":"peienlim"},"content":"    public void removeEventTag(EventTag key) {","lastModifiedDate":"2024-04-01"},{"lineNumber":233,"author":{"gitId":"peterXGD"},"content":"        for (Person p:persons) {","lastModifiedDate":"2024-04-05"},{"lineNumber":234,"author":{"gitId":"peterXGD"},"content":"            p.removeEventTag(key);","lastModifiedDate":"2024-04-05"},{"lineNumber":235,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":236,"author":{"gitId":"peienlim"},"content":"        eventTagList.remove(key);","lastModifiedDate":"2024-03-31"},{"lineNumber":237,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":238,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":245,"author":{"gitId":"peienlim"},"content":"                .add(\"tags\", tagList)","lastModifiedDate":"2024-03-13"},{"lineNumber":246,"author":{"gitId":"peienlim"},"content":"                .add(\"event tags\", eventTagList)","lastModifiedDate":"2024-03-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":255,"author":{"gitId":"peienlim"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":256,"author":{"gitId":"peienlim"},"content":"    public ObservableSet\u003cTag\u003e getTagList() {","lastModifiedDate":"2024-03-13"},{"lineNumber":257,"author":{"gitId":"peienlim"},"content":"        return tagList.asUnmodifiableObservableSet();","lastModifiedDate":"2024-03-13"},{"lineNumber":258,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":259,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":260,"author":{"gitId":"peienlim"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":261,"author":{"gitId":"peienlim"},"content":"    public ObservableSet\u003cEventTag\u003e getEventTagList() {","lastModifiedDate":"2024-04-01"},{"lineNumber":262,"author":{"gitId":"peienlim"},"content":"        return eventTagList.asUnmodifiableObservableSet();","lastModifiedDate":"2024-03-31"},{"lineNumber":263,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":264,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":268,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":273,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":277,"author":{"gitId":"peienlim"},"content":"        return persons.equals(otherAddressBook.persons)","lastModifiedDate":"2024-03-13"},{"lineNumber":278,"author":{"gitId":"peienlim"},"content":"                \u0026\u0026 tagList.equals(otherAddressBook.tagList)","lastModifiedDate":"2024-03-31"},{"lineNumber":279,"author":{"gitId":"peienlim"},"content":"                \u0026\u0026 eventTagList.equals(otherAddressBook.eventTagList);","lastModifiedDate":"2024-03-31"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":284,"author":{"gitId":"peienlim"},"content":"        return Objects.hash(persons, tagList, eventTagList);","lastModifiedDate":"2024-03-31"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cleowenxuan":8,"peterXGD":7,"jonpwk":22,"peienlim":120,"-":129}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"jonpwk"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"peienlim"},"content":"import javafx.collections.ObservableSet;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"peienlim"},"content":"import seedu.address.model.tag.EventTag;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"jonpwk"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"peienlim"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"peienlim"},"content":"     * Returns the AddressBook","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"jonpwk"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"jonpwk"},"content":"     * Returns true if a tag with the same identity as {@code tag} exists in the address book.","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"jonpwk"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"jonpwk"},"content":"    boolean hasTag(Tag tag);","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"jonpwk"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"jonpwk"},"content":"     * Assigns the given tags {@code tags} to {@code targetPerson}.","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"jonpwk"},"content":"     * {@code tags} must exist in the address book.","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"jonpwk"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"jonpwk"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"cleowenxuan"},"content":"    void assign(Person targetPerson, Set\u003cTag\u003e tags, Set\u003cTag\u003e eventTags);","lastModifiedDate":"2024-04-04"},{"lineNumber":98,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"jonpwk"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"jonpwk"},"content":"     * Deletes the given tag.","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"jonpwk"},"content":"     * The tag must exist in the address book.","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"jonpwk"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"jonpwk"},"content":"    void deleteTag(Tag tag);","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"jonpwk"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"jonpwk"},"content":"     * Adds the given tag.","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"jonpwk"},"content":"     * {@code tag} must not already exist in the address book.","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"jonpwk"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"jonpwk"},"content":"    void addTag(Tag tag);","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"peienlim"},"content":"    boolean hasEventTag(EventTag tag);","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"peienlim"},"content":"    boolean hasEventTag(String tagName);","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"peienlim"},"content":"    void deleteEventTag(EventTag tag);","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"peienlim"},"content":"    void addEventTag(EventTag tag);","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"peienlim"},"content":"    EventTag getEventTag(String tag);","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"peienlim"},"content":"     * Returns an unmodifiable view of the filtered person list","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":127,"author":{"gitId":"peterXGD"},"content":"    void updateTagPersonList(Tag t);","lastModifiedDate":"2024-03-20"},{"lineNumber":128,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"peienlim"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":136,"author":{"gitId":"peienlim"},"content":"    ObservableSet\u003cEventTag\u003e getEventTagList();","lastModifiedDate":"2024-04-01"},{"lineNumber":137,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"peienlim"},"content":"    void updateEventTagPersonList(EventTag t);","lastModifiedDate":"2024-04-03"},{"lineNumber":139,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":140,"author":{"gitId":"peienlim"},"content":"    void setCurrentEventTag(EventTag tagName);","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":142,"author":{"gitId":"peienlim"},"content":"    void clearCurrentEventTag();","lastModifiedDate":"2024-04-03"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"cleowenxuan":1,"peterXGD":3,"jonpwk":26,"peienlim":29,"-":84}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"jonpwk"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"peienlim"},"content":"import javafx.collections.ObservableSet;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"peienlim"},"content":"import seedu.address.model.tag.EventTag;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"jonpwk"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"peienlim"},"content":"    private EventTag currentEventTag;","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"peienlim"},"content":"        currentEventTag \u003d null;","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"jonpwk"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"jonpwk"},"content":"    public boolean hasTag(Tag tag) {","lastModifiedDate":"2024-03-19"},{"lineNumber":122,"author":{"gitId":"jonpwk"},"content":"        requireNonNull(tag);","lastModifiedDate":"2024-03-19"},{"lineNumber":123,"author":{"gitId":"jonpwk"},"content":"        return addressBook.hasTag(tag);","lastModifiedDate":"2024-03-19"},{"lineNumber":124,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":125,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"jonpwk"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":127,"author":{"gitId":"cleowenxuan"},"content":"    public void assign(Person targetPerson, Set\u003cTag\u003e tags, Set\u003cTag\u003e eventTags) {","lastModifiedDate":"2024-04-04"},{"lineNumber":128,"author":{"gitId":"cleowenxuan"},"content":"        requireAllNonNull(targetPerson, tags, eventTags);","lastModifiedDate":"2024-04-04"},{"lineNumber":129,"author":{"gitId":"cleowenxuan"},"content":"        addressBook.assign(targetPerson, tags, eventTags);","lastModifiedDate":"2024-04-04"},{"lineNumber":130,"author":{"gitId":"jonpwk"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-02"},{"lineNumber":131,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":132,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":133,"author":{"gitId":"jonpwk"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":134,"author":{"gitId":"jonpwk"},"content":"    public void deleteTag(Tag tag) {","lastModifiedDate":"2024-03-19"},{"lineNumber":135,"author":{"gitId":"jonpwk"},"content":"        addressBook.removeTag(tag);","lastModifiedDate":"2024-03-19"},{"lineNumber":136,"author":{"gitId":"jonpwk"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":138,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":139,"author":{"gitId":"jonpwk"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":140,"author":{"gitId":"jonpwk"},"content":"    public void addTag(Tag tag) {","lastModifiedDate":"2024-03-19"},{"lineNumber":141,"author":{"gitId":"jonpwk"},"content":"        addressBook.addTag(tag);","lastModifiedDate":"2024-03-19"},{"lineNumber":142,"author":{"gitId":"jonpwk"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-19"},{"lineNumber":143,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":144,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":145,"author":{"gitId":"peienlim"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":146,"author":{"gitId":"peienlim"},"content":"    public boolean hasEventTag(EventTag tag) {","lastModifiedDate":"2024-04-02"},{"lineNumber":147,"author":{"gitId":"peienlim"},"content":"        requireNonNull(tag);","lastModifiedDate":"2024-04-02"},{"lineNumber":148,"author":{"gitId":"peienlim"},"content":"        return addressBook.hasEventTag(tag);","lastModifiedDate":"2024-04-02"},{"lineNumber":149,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":150,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":151,"author":{"gitId":"peienlim"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":152,"author":{"gitId":"peienlim"},"content":"    public boolean hasEventTag(String tagName) {","lastModifiedDate":"2024-04-02"},{"lineNumber":153,"author":{"gitId":"peienlim"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2024-04-02"},{"lineNumber":154,"author":{"gitId":"peienlim"},"content":"        return addressBook.hasEventTag(tagName);","lastModifiedDate":"2024-04-02"},{"lineNumber":155,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":156,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":157,"author":{"gitId":"peienlim"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":158,"author":{"gitId":"peienlim"},"content":"    public void deleteEventTag(EventTag tag) {","lastModifiedDate":"2024-04-02"},{"lineNumber":159,"author":{"gitId":"peienlim"},"content":"        addressBook.removeEventTag(tag);","lastModifiedDate":"2024-04-02"},{"lineNumber":160,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":161,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":162,"author":{"gitId":"peienlim"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":163,"author":{"gitId":"peienlim"},"content":"    public void addEventTag(EventTag tag) {","lastModifiedDate":"2024-04-02"},{"lineNumber":164,"author":{"gitId":"peterXGD"},"content":"        addressBook.addEventTag(tag);","lastModifiedDate":"2024-04-05"},{"lineNumber":165,"author":{"gitId":"peienlim"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-02"},{"lineNumber":166,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":167,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":168,"author":{"gitId":"peienlim"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":169,"author":{"gitId":"peienlim"},"content":"    public EventTag getEventTag(String tag) {","lastModifiedDate":"2024-04-02"},{"lineNumber":170,"author":{"gitId":"peienlim"},"content":"        return addressBook.getEventTag(tag);","lastModifiedDate":"2024-04-02"},{"lineNumber":171,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":172,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":190,"author":{"gitId":"peterXGD"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":191,"author":{"gitId":"peterXGD"},"content":"    public void updateTagPersonList(Tag t) {","lastModifiedDate":"2024-03-20"},{"lineNumber":192,"author":{"gitId":"peterXGD"},"content":"        requireNonNull(t);","lastModifiedDate":"2024-03-20"},{"lineNumber":193,"author":{"gitId":"peienlim"},"content":"        if (currentEventTag !\u003d null) {","lastModifiedDate":"2024-04-02"},{"lineNumber":194,"author":{"gitId":"peienlim"},"content":"            Predicate\u003cPerson\u003e eventTagPredicate \u003d person -\u003e person.containsEventTag(currentEventTag);","lastModifiedDate":"2024-04-03"},{"lineNumber":195,"author":{"gitId":"peienlim"},"content":"            Predicate\u003cPerson\u003e normalTagPredicate \u003d person -\u003e person.containsTag(t);","lastModifiedDate":"2024-04-02"},{"lineNumber":196,"author":{"gitId":"peienlim"},"content":"            filteredPersons.setPredicate(eventTagPredicate.and(normalTagPredicate));","lastModifiedDate":"2024-04-02"},{"lineNumber":197,"author":{"gitId":"peienlim"},"content":"        } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":198,"author":{"gitId":"peterXGD"},"content":"            filteredPersons.setPredicate(person -\u003e person.containsTag(t));","lastModifiedDate":"2024-03-20"},{"lineNumber":199,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":200,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":201,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":202,"author":{"gitId":"peienlim"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":203,"author":{"gitId":"peienlim"},"content":"    public void updateEventTagPersonList(EventTag t) {","lastModifiedDate":"2024-04-03"},{"lineNumber":204,"author":{"gitId":"peienlim"},"content":"        requireNonNull(t);","lastModifiedDate":"2024-04-03"},{"lineNumber":205,"author":{"gitId":"peienlim"},"content":"        setCurrentEventTag(t);","lastModifiedDate":"2024-04-03"},{"lineNumber":206,"author":{"gitId":"peienlim"},"content":"        filteredPersons.setPredicate(person -\u003e person.containsEventTag(currentEventTag));","lastModifiedDate":"2024-04-03"},{"lineNumber":207,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":208,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":209,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":210,"author":{"gitId":"peienlim"},"content":"     * Sets the current event tag to filter by.","lastModifiedDate":"2024-04-02"},{"lineNumber":211,"author":{"gitId":"peienlim"},"content":"     * @param eventTag The event tag to filter by.","lastModifiedDate":"2024-04-02"},{"lineNumber":212,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":213,"author":{"gitId":"peienlim"},"content":"    public void setCurrentEventTag(EventTag eventTag) {","lastModifiedDate":"2024-04-02"},{"lineNumber":214,"author":{"gitId":"peienlim"},"content":"        this.currentEventTag \u003d eventTag;","lastModifiedDate":"2024-04-02"},{"lineNumber":215,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":216,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":217,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":218,"author":{"gitId":"peienlim"},"content":"     * Clears the current event tag.","lastModifiedDate":"2024-04-02"},{"lineNumber":219,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":220,"author":{"gitId":"peienlim"},"content":"    public void clearCurrentEventTag() {","lastModifiedDate":"2024-04-02"},{"lineNumber":221,"author":{"gitId":"peienlim"},"content":"        this.currentEventTag \u003d null;","lastModifiedDate":"2024-04-02"},{"lineNumber":222,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":223,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":241,"author":{"gitId":"peienlim"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Event List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-04-01"},{"lineNumber":242,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":243,"author":{"gitId":"peienlim"},"content":"     * Returns an unmodifiable view of the list of {@code EventTag} backed by the internal list of","lastModifiedDate":"2024-04-01"},{"lineNumber":244,"author":{"gitId":"peienlim"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2024-04-01"},{"lineNumber":245,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":246,"author":{"gitId":"peienlim"},"content":"    public ObservableSet\u003cEventTag\u003e getEventTagList() {","lastModifiedDate":"2024-04-01"},{"lineNumber":247,"author":{"gitId":"peienlim"},"content":"        return addressBook.getEventTagList();","lastModifiedDate":"2024-04-01"},{"lineNumber":248,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":249,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cleowenxuan":3,"peterXGD":6,"jonpwk":24,"peienlim":69,"-":148}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"peienlim"},"content":"import javafx.collections.ObservableSet;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"peienlim"},"content":"import seedu.address.model.tag.EventTag;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"peienlim"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"peienlim"},"content":"    ObservableSet\u003cTag\u003e getTagList();","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"peienlim"},"content":"    ObservableSet\u003cEventTag\u003e getEventTagList();","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"peienlim":6,"-":17}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"peienlim"},"content":"import seedu.address.model.tag.EventTag;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"jonpwk"},"content":" * Guarantees: details are present and not null, field values are validated.","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"peienlim"},"content":"    private final Set\u003cEventTag\u003e eventTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"peienlim"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, Set\u003cEventTag\u003e eventTags) {","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":40,"author":{"gitId":"peienlim"},"content":"        this.eventTags.addAll(eventTags);","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"peienlim"},"content":"     * Returns an immutable event tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"peienlim"},"content":"     * if modification is attempted.","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"peienlim"},"content":"    public Set\u003cEventTag\u003e getEventTags() {","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"peienlim"},"content":"        return Collections.unmodifiableSet(eventTags);","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"peterXGD"},"content":"     * Returns true if a person contains a tag, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"peterXGD"},"content":"     * if modification is attempted.","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"peterXGD"},"content":"    public boolean containsTag(Tag tag) {","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"peterXGD"},"content":"        for (Tag t : tags) {","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"peterXGD"},"content":"            if (t.isSameTag(tag)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"peterXGD"},"content":"                return true;","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"peterXGD"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"peterXGD"},"content":"        return false;","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"peienlim"},"content":"     * Returns true if a person contains a tag, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"peienlim"},"content":"     * if modification is attempted.","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"peienlim"},"content":"    public boolean containsEventTag(EventTag tag) {","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"peienlim"},"content":"        for (EventTag t : eventTags) {","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"peienlim"},"content":"            if (t.isSameTag(tag)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"peienlim"},"content":"                return true;","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"peienlim"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"peienlim"},"content":"        return false;","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"jonpwk"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":102,"author":{"gitId":"jonpwk"},"content":"     * Removes a tag from the Person if it exists in the tags for this Person.","lastModifiedDate":"2024-04-01"},{"lineNumber":103,"author":{"gitId":"jonpwk"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":104,"author":{"gitId":"jonpwk"},"content":"    public void removeTag(Tag key) {","lastModifiedDate":"2024-04-01"},{"lineNumber":105,"author":{"gitId":"jonpwk"},"content":"        if (this.containsTag(key)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":106,"author":{"gitId":"jonpwk"},"content":"            tags.remove(key);","lastModifiedDate":"2024-04-01"},{"lineNumber":107,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":108,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":109,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":110,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":111,"author":{"gitId":"cleowenxuan"},"content":"     * Adds an event tag to the Person.","lastModifiedDate":"2024-04-04"},{"lineNumber":112,"author":{"gitId":"cleowenxuan"},"content":"     *","lastModifiedDate":"2024-04-04"},{"lineNumber":113,"author":{"gitId":"cleowenxuan"},"content":"     * @param eventTags The event tags to be added.","lastModifiedDate":"2024-04-04"},{"lineNumber":114,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":115,"author":{"gitId":"cleowenxuan"},"content":"    public void addEventTags(Set\u003cEventTag\u003e eventTags) {","lastModifiedDate":"2024-04-04"},{"lineNumber":116,"author":{"gitId":"cleowenxuan"},"content":"        this.eventTags.addAll(eventTags);","lastModifiedDate":"2024-04-04"},{"lineNumber":117,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":118,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":119,"author":{"gitId":"jonpwk"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"jonpwk"},"content":"     * Adds a tag to the Person.","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"jonpwk"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"jonpwk"},"content":"    public void addTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"jonpwk"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"jonpwk"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"jonpwk"},"content":"     * Removes a tag from the Person if it exists in the tags for this Person.","lastModifiedDate":"2024-04-03"},{"lineNumber":128,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":129,"author":{"gitId":"peienlim"},"content":"    public void removeEventTag(EventTag key) {","lastModifiedDate":"2024-04-02"},{"lineNumber":130,"author":{"gitId":"peienlim"},"content":"        if (this.containsEventTag(key)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"peienlim"},"content":"            eventTags.remove(key);","lastModifiedDate":"2024-04-02"},{"lineNumber":132,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":133,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":134,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":168,"author":{"gitId":"peienlim"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags)","lastModifiedDate":"2024-04-02"},{"lineNumber":169,"author":{"gitId":"peienlim"},"content":"                \u0026\u0026 eventTags.equals(otherPerson.eventTags);","lastModifiedDate":"2024-04-02"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":186,"author":{"gitId":"peienlim"},"content":"                .add(\"eventTags\", eventTags)","lastModifiedDate":"2024-04-02"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cleowenxuan":9,"peterXGD":13,"jonpwk":19,"peienlim":35,"-":114}},{"path":"src/main/java/seedu/address/model/tag/EventTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":" * Represents an EventTag in the address book.","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"peterXGD"},"content":"public class EventTag extends Tag {","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"peterXGD"},"content":"    public final String description;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"peterXGD"},"content":"    public final LocalDateTime startDate;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"peterXGD"},"content":"    public final LocalDateTime endDate;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"peterXGD"},"content":"     * Constructs a {@code EventTag}.","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"peterXGD"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"peterXGD"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"peterXGD"},"content":"     * @param description A Description for the event.","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"peterXGD"},"content":"    public EventTag(String tagName, String description, LocalDateTime startDate, LocalDateTime endDate) {","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"peterXGD"},"content":"        super(tagName);","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"peterXGD"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"peterXGD"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"peterXGD"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"peterXGD"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"peterXGD"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"owenong1"},"content":"    public String getCodeFormat() {","lastModifiedDate":"2024-04-05"},{"lineNumber":35,"author":{"gitId":"owenong1"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\");","lastModifiedDate":"2024-04-05"},{"lineNumber":36,"author":{"gitId":"owenong1"},"content":"        return \"t/E-\" + tagName + \" dc/\" + description + \" sd/\" + startDate.format(formatter)","lastModifiedDate":"2024-04-05"},{"lineNumber":37,"author":{"gitId":"owenong1"},"content":"                + \" ed/\" + endDate.format(formatter);","lastModifiedDate":"2024-04-05"},{"lineNumber":38,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":39,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":40,"author":{"gitId":"peterXGD"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"peterXGD"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"peterXGD"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"peterXGD"},"content":"            return true;","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"peterXGD"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"peterXGD"},"content":"        if (!(other instanceof EventTag)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"peterXGD"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"peterXGD"},"content":"        EventTag otherTag \u003d (EventTag) other;","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"peterXGD"},"content":"        boolean nameEqual \u003d tagName.equals(otherTag.tagName) \u0026\u0026 description.equals(otherTag.description);","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"peterXGD"},"content":"        boolean timeEqual \u003d startDate.isEqual(((EventTag) other).startDate)","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"peterXGD"},"content":"                \u0026\u0026 endDate.equals(((EventTag) other).endDate);","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"peterXGD"},"content":"        return nameEqual \u0026\u0026 timeEqual;","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"peterXGD"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"peterXGD"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"peterXGD"},"content":"    public String toString() {","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"peterXGD"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\");","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"peterXGD"},"content":"        String startTime \u003d startDate.format(formatter);","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"peterXGD"},"content":"        String endTime \u003d endDate.format(formatter);","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"peterXGD"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027 + \" from \" + startTime + \" to \" + endTime + \".\\n\" + description;","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"peterXGD":62,"owenong1":6}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"jonpwk"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric and not contain spaces\";","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"peienlim"},"content":"     * Returns true if both tags have the same name.","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"peienlim"},"content":"    public boolean isSameTag(Tag otherTag) {","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"peienlim"},"content":"        if (otherTag \u003d\u003d this) {","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"peienlim"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"peienlim"},"content":"        return otherTag !\u003d null","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"peienlim"},"content":"                \u0026\u0026 otherTag.tagName.equals(tagName);","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"jonpwk"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"jonpwk"},"content":"     * Returns true if this tag has the given name.","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"jonpwk"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"jonpwk"},"content":"    public boolean hasName(String tagName) {","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"jonpwk"},"content":"        return this.tagName.equals(tagName);","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jonpwk":7,"peienlim":12,"-":61}},{"path":"src/main/java/seedu/address/model/tag/UniqueTagList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peienlim"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"peienlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"peienlim"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"peienlim"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"peienlim"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"peienlim"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"peienlim"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"peienlim"},"content":"import javafx.collections.ObservableSet;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"peienlim"},"content":"import seedu.address.model.tag.exceptions.DuplicateTagException;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"peienlim"},"content":"import seedu.address.model.tag.exceptions.TagNotFoundException;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"peienlim"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"peienlim"},"content":" * Represents a list of unique tags.","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"peienlim"},"content":" * A UniqueTagList ensures that no duplicate tags are stored.","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"peienlim"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"peienlim"},"content":"public class UniqueTagList\u003cT extends Tag\u003e implements Iterable\u003cT\u003e {","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"peienlim"},"content":"    private final ObservableSet\u003cT\u003e internalSet \u003d FXCollections.observableSet();","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"peienlim"},"content":"     * Constructs an empty UniqueTagList.","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"peienlim"},"content":"    public UniqueTagList() {}","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"peienlim"},"content":"     * Constructs a UniqueTagList with the given tags.","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"peienlim"},"content":"     * @param tags A list of tags.","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"peienlim"},"content":"    public UniqueTagList(Set\u003cT\u003e tags) {","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"peienlim"},"content":"        internalSet.addAll(tags);","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"jonpwk"},"content":"     * Returns true if the list contains an equivalent tag as the given argument of type Tag.","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"peienlim"},"content":"    public boolean contains(T toCheck) {","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"peienlim"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"jonpwk"},"content":"        return internalSet.stream().anyMatch(tag -\u003e tag.equals(toCheck));","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"jonpwk"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"jonpwk"},"content":"     * Returns true if the list contains an equivalent tag as the given argument of type String.","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"jonpwk"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"jonpwk"},"content":"    public boolean contains(String toCheck) {","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"jonpwk"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"jonpwk"},"content":"        return internalSet.stream().anyMatch(tag -\u003e tag.tagName.equals(toCheck));","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"peienlim"},"content":"     * Adds a tag to the list.","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"peienlim"},"content":"     * The tag must not already exist in the list.","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"peienlim"},"content":"    public void add(T toAdd) {","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"peienlim"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"peienlim"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"peienlim"},"content":"            throw new DuplicateTagException();","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"peienlim"},"content":"        internalSet.add(toAdd);","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"peienlim"},"content":"     * Replaces the specified tag in the list with the new tag.","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"peienlim"},"content":"     * @param oldTag The tag to be replaced.","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"peienlim"},"content":"     * @param newTag The new tag to replace the old tag.","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"peienlim"},"content":"    public void replace(T oldTag, T newTag) {","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"peienlim"},"content":"        requireAllNonNull(oldTag, newTag);","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"peienlim"},"content":"        if (!internalSet.contains(oldTag)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"peienlim"},"content":"            throw new TagNotFoundException();","lastModifiedDate":"2024-04-11"},{"lineNumber":74,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"peienlim"},"content":"        if (!oldTag.isSameTag(newTag) \u0026\u0026 contains(newTag)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"peienlim"},"content":"            throw new DuplicateTagException();","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"peienlim"},"content":"        internalSet.remove(oldTag);","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"peienlim"},"content":"        internalSet.add(newTag);","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"peienlim"},"content":"     * Removes the equivalent tag from the list.","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"jonpwk"},"content":"     * The argument of type Tag must exist in the list.","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"peienlim"},"content":"    public void remove(T toRemove) {","lastModifiedDate":"2024-04-01"},{"lineNumber":89,"author":{"gitId":"peienlim"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"peienlim"},"content":"        if (!internalSet.remove(toRemove)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"peienlim"},"content":"            throw new TagNotFoundException();","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"jonpwk"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"jonpwk"},"content":"     * Removes the equivalent tag from the list.","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"jonpwk"},"content":"     * The argument of type String must exist in the list.","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"jonpwk"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"jonpwk"},"content":"    public void remove(String toRemove) {","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"jonpwk"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"jonpwk"},"content":"        if (!internalSet.removeIf(tag -\u003e tag.tagName.equals(toRemove))) {","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"jonpwk"},"content":"            throw new TagNotFoundException();","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":106,"author":{"gitId":"peienlim"},"content":"     * Replaces all tags in this list with the tags from the replacement list.","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"peienlim"},"content":"     * @param replacement The replacement UniqueTagList.","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":109,"author":{"gitId":"peienlim"},"content":"    public void setTags(UniqueTagList\u003cT\u003e replacement) {","lastModifiedDate":"2024-04-01"},{"lineNumber":110,"author":{"gitId":"peienlim"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2024-03-12"},{"lineNumber":111,"author":{"gitId":"peienlim"},"content":"        internalSet.clear();","lastModifiedDate":"2024-03-12"},{"lineNumber":112,"author":{"gitId":"peienlim"},"content":"        internalSet.addAll(replacement.internalSet);","lastModifiedDate":"2024-03-12"},{"lineNumber":113,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":114,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":115,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":116,"author":{"gitId":"peienlim"},"content":"     * Replaces the tags in the list with the given set of tags.","lastModifiedDate":"2024-03-12"},{"lineNumber":117,"author":{"gitId":"peienlim"},"content":"     * @param tags The set of tags to replace the current tags.","lastModifiedDate":"2024-03-12"},{"lineNumber":118,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":119,"author":{"gitId":"peienlim"},"content":"    public void setTags(Set\u003cT\u003e tags) {","lastModifiedDate":"2024-04-01"},{"lineNumber":120,"author":{"gitId":"peienlim"},"content":"        requireAllNonNull(tags);","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"peienlim"},"content":"        internalSet.clear();","lastModifiedDate":"2024-03-12"},{"lineNumber":122,"author":{"gitId":"peienlim"},"content":"        internalSet.addAll(tags);","lastModifiedDate":"2024-03-12"},{"lineNumber":123,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":124,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":125,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"peienlim"},"content":"     * Returns the event tag with the specified event tag name, if it exists in the list.","lastModifiedDate":"2024-04-02"},{"lineNumber":127,"author":{"gitId":"peienlim"},"content":"     * Returns null if no such event tag is found.","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"peienlim"},"content":"     * @param eventTagName The name of the event tag to retrieve.","lastModifiedDate":"2024-04-02"},{"lineNumber":129,"author":{"gitId":"peienlim"},"content":"     * @return The event tag with the specified event tag name, or null if not found.","lastModifiedDate":"2024-04-02"},{"lineNumber":130,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":131,"author":{"gitId":"peienlim"},"content":"    public EventTag getEventTag(String eventTagName) {","lastModifiedDate":"2024-04-02"},{"lineNumber":132,"author":{"gitId":"peienlim"},"content":"        requireNonNull(eventTagName);","lastModifiedDate":"2024-04-02"},{"lineNumber":133,"author":{"gitId":"peienlim"},"content":"        for (T tag : internalSet) {","lastModifiedDate":"2024-04-02"},{"lineNumber":134,"author":{"gitId":"peienlim"},"content":"            if (tag instanceof EventTag \u0026\u0026 tag.tagName.equals(eventTagName)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":135,"author":{"gitId":"peienlim"},"content":"                return (EventTag) tag;","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"peienlim"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"peienlim"},"content":"        return null;","lastModifiedDate":"2024-04-02"},{"lineNumber":139,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":140,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-04-05"},{"lineNumber":142,"author":{"gitId":"peterXGD"},"content":"     * Removes all the event tags given a specified event tag name, if it exists in the list.","lastModifiedDate":"2024-04-05"},{"lineNumber":143,"author":{"gitId":"peterXGD"},"content":"     * Returns null if no such event tag is found.","lastModifiedDate":"2024-04-05"},{"lineNumber":144,"author":{"gitId":"peterXGD"},"content":"     * @param eventTagName The name of the event tag to retrieve.","lastModifiedDate":"2024-04-05"},{"lineNumber":145,"author":{"gitId":"peterXGD"},"content":"     * @return The event tag with the specified event tag name, or null if not found.","lastModifiedDate":"2024-04-05"},{"lineNumber":146,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-04-05"},{"lineNumber":147,"author":{"gitId":"peterXGD"},"content":"    public EventTag removeEvent(String eventTagName) {","lastModifiedDate":"2024-04-05"},{"lineNumber":148,"author":{"gitId":"peterXGD"},"content":"        requireNonNull(eventTagName);","lastModifiedDate":"2024-04-05"},{"lineNumber":149,"author":{"gitId":"peterXGD"},"content":"        for (T tag : internalSet) {","lastModifiedDate":"2024-04-05"},{"lineNumber":150,"author":{"gitId":"peterXGD"},"content":"            if (tag instanceof EventTag \u0026\u0026 tag.tagName.equals(eventTagName)) {","lastModifiedDate":"2024-04-05"},{"lineNumber":151,"author":{"gitId":"peienlim"},"content":"                internalSet.removeIf(t -\u003e t.equals(tag));","lastModifiedDate":"2024-04-11"},{"lineNumber":152,"author":{"gitId":"peterXGD"},"content":"                return (EventTag) tag;","lastModifiedDate":"2024-04-05"},{"lineNumber":153,"author":{"gitId":"peterXGD"},"content":"            }","lastModifiedDate":"2024-04-05"},{"lineNumber":154,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-04-05"},{"lineNumber":155,"author":{"gitId":"peterXGD"},"content":"        return null;","lastModifiedDate":"2024-04-05"},{"lineNumber":156,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":157,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":158,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":159,"author":{"gitId":"peienlim"},"content":"     * Returns the backing set as an unmodifiable {@code ObservableSet}.","lastModifiedDate":"2024-03-12"},{"lineNumber":160,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":161,"author":{"gitId":"peienlim"},"content":"    public ObservableSet\u003cT\u003e asUnmodifiableObservableSet() {","lastModifiedDate":"2024-04-01"},{"lineNumber":162,"author":{"gitId":"peienlim"},"content":"        return FXCollections.unmodifiableObservableSet(internalSet);","lastModifiedDate":"2024-03-12"},{"lineNumber":163,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":164,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":165,"author":{"gitId":"peienlim"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":166,"author":{"gitId":"peienlim"},"content":"    public Iterator\u003cT\u003e iterator() {","lastModifiedDate":"2024-04-01"},{"lineNumber":167,"author":{"gitId":"peienlim"},"content":"        return internalSet.iterator();","lastModifiedDate":"2024-03-12"},{"lineNumber":168,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":169,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":170,"author":{"gitId":"peienlim"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":171,"author":{"gitId":"peienlim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-12"},{"lineNumber":172,"author":{"gitId":"peienlim"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-12"},{"lineNumber":173,"author":{"gitId":"peienlim"},"content":"            return true;","lastModifiedDate":"2024-03-12"},{"lineNumber":174,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":175,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":176,"author":{"gitId":"peienlim"},"content":"        // handle nulls","lastModifiedDate":"2024-03-12"},{"lineNumber":177,"author":{"gitId":"peienlim"},"content":"        if (!(other instanceof UniqueTagList\u003c?\u003e)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":178,"author":{"gitId":"peienlim"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":179,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":180,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":181,"author":{"gitId":"peienlim"},"content":"        UniqueTagList\u003c?\u003e otherUniqueTagSet \u003d (UniqueTagList\u003c?\u003e) other;","lastModifiedDate":"2024-04-01"},{"lineNumber":182,"author":{"gitId":"peienlim"},"content":"        return internalSet.equals(otherUniqueTagSet.internalSet);","lastModifiedDate":"2024-03-12"},{"lineNumber":183,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":184,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":185,"author":{"gitId":"peienlim"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":186,"author":{"gitId":"peienlim"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":187,"author":{"gitId":"peienlim"},"content":"        return internalSet.toString();","lastModifiedDate":"2024-03-17"},{"lineNumber":188,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":189,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":190,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":191,"author":{"gitId":"peienlim"},"content":"     * Returns true if {@code tags} contains only unique tags.","lastModifiedDate":"2024-03-17"},{"lineNumber":192,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":193,"author":{"gitId":"peienlim"},"content":"    private boolean tagsAreUnique(Set\u003cT\u003e tags) {","lastModifiedDate":"2024-04-01"},{"lineNumber":194,"author":{"gitId":"peienlim"},"content":"        Set\u003cT\u003e uniqueTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-01"},{"lineNumber":195,"author":{"gitId":"peienlim"},"content":"        for (T tag : tags) {","lastModifiedDate":"2024-04-01"},{"lineNumber":196,"author":{"gitId":"peienlim"},"content":"            if (!uniqueTags.add(tag)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":197,"author":{"gitId":"peienlim"},"content":"                return false; // Duplicate tag found","lastModifiedDate":"2024-03-17"},{"lineNumber":198,"author":{"gitId":"peienlim"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":199,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":200,"author":{"gitId":"peienlim"},"content":"        return true; // No duplicate tags found","lastModifiedDate":"2024-03-17"},{"lineNumber":201,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":202,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":203,"author":{"gitId":"peienlim"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"peterXGD":16,"jonpwk":21,"peienlim":166}},{"path":"src/main/java/seedu/address/model/tag/exceptions/DuplicateTagException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peienlim"},"content":"package seedu.address.model.tag.exceptions;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"peienlim"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"peienlim"},"content":" * Signals that the operation will result in duplicate Tags (Tags are considered duplicates if they have the same","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"peienlim"},"content":" * name).","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"peienlim"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"peienlim"},"content":"public class DuplicateTagException extends RuntimeException {","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"peienlim"},"content":"    public DuplicateTagException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"peienlim"},"content":"        super(\"Operation would result in duplicate tags\");","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"peienlim"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"peienlim":12}},{"path":"src/main/java/seedu/address/model/tag/exceptions/TagNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peienlim"},"content":"package seedu.address.model.tag.exceptions;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"peienlim"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"peienlim"},"content":" * Signals that the operation is unable to find the specified tag.","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"peienlim"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"peienlim"},"content":"public class TagNotFoundException extends RuntimeException {}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"peienlim":6}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"peienlim"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"peienlim"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"peienlim"},"content":"import seedu.address.model.tag.EventTag;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"peienlim"},"content":"                getTagSet(\"friends\"),","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"peienlim"},"content":"                getEventTagSet(\"marketing|marketing dpt|2024-04-01T09:00:00|2024-04-01T09:00:00\")),","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"peienlim"},"content":"                getTagSet(\"colleagues\", \"friends\"),","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"peienlim"},"content":"                getEventTagSet(\"marketing|marketing dpt|2024-04-01T09:00:00|2024-04-01T09:00:00\")),","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":35,"author":{"gitId":"peienlim"},"content":"                getTagSet(\"neighbours\"),","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"peienlim"},"content":"                getEventTagSet(\"logistics|logistics dpt|2024-04-01T09:00:00|2024-04-01T09:00:00\")),","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"peienlim"},"content":"                getTagSet(\"family\"),","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"peienlim"},"content":"                getEventTagSet(\"logistics|logistics dpt|2024-04-01T09:00:00|2024-04-01T09:00:00\")),","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"peienlim"},"content":"                getTagSet(\"classmates\"),","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"peienlim"},"content":"                getEventTagSet(\"logistics|logistics dpt|2024-04-01T09:00:00|2024-04-01T09:00:00\")),","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"peienlim"},"content":"                getTagSet(\"colleagues\"),","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"peienlim"},"content":"                getEventTagSet(\"VPD|vice project director|2024-04-01T09:00:00|2024-04-01T09:00:00\"))","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":69,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"peienlim"},"content":"     * Returns a set of event tags containing the list of strings given.","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"peienlim"},"content":"    public static Set\u003cEventTag\u003e getEventTagSet(String... strings) {","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"peienlim"},"content":"        Set\u003cEventTag\u003e eventTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"peienlim"},"content":"        for (String s : strings) {","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"peienlim"},"content":"            // parse string to extract tag name, description, start date, and end date","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"peienlim"},"content":"            // eg. \"tagName|description|startDate|endDate\"","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"peienlim"},"content":"            String[] parts \u003d s.split(\"\\\\|\");","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"peienlim"},"content":"            String tagName \u003d parts[0];","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"peienlim"},"content":"            String description \u003d parts[1];","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"peienlim"},"content":"            LocalDateTime startDate \u003d LocalDateTime.parse(parts[2]);","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"peienlim"},"content":"            LocalDateTime endDate \u003d LocalDateTime.parse(parts[3]);","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"peienlim"},"content":"            eventTags.add(new EventTag(tagName, description, startDate, endDate));","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"peienlim"},"content":"        return eventTags;","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"peienlim":34,"-":54}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedEventTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peienlim"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"peienlim"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"peienlim"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"peienlim"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"peienlim"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"peienlim"},"content":"import seedu.address.model.tag.EventTag;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"peienlim"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"peienlim"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"peienlim"},"content":" * Jackson-friendly version of {@link EventTag}.","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"peienlim"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"peienlim"},"content":"class JsonAdaptedEventTag {","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"peienlim"},"content":"    private final String tagName;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"peienlim"},"content":"    private final String description;","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"peienlim"},"content":"    private final LocalDateTime startDate;","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"peienlim"},"content":"    private final LocalDateTime endDate;","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"peienlim"},"content":"     * Constructs a {@code JsonAdaptedEventTag} with the given details.","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"peienlim"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"peienlim"},"content":"    public JsonAdaptedEventTag(@JsonProperty(\"tagName\") String tagName,","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"peienlim"},"content":"                               @JsonProperty(\"description\") String description,","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"peienlim"},"content":"                               @JsonProperty(\"startDate\") LocalDateTime startDate,","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"peienlim"},"content":"                               @JsonProperty(\"endDate\") LocalDateTime endDate) {","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"peienlim"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"peienlim"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"peienlim"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"peienlim"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"peienlim"},"content":"     * Converts a given {@code EventTag} into this class for Jackson use.","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"peienlim"},"content":"    public JsonAdaptedEventTag(EventTag source) {","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"peienlim"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"peienlim"},"content":"        description \u003d source.description;","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"peienlim"},"content":"        startDate \u003d source.startDate;","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"peienlim"},"content":"        endDate \u003d source.endDate;","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"peienlim"},"content":"    @JsonProperty(\"tagName\")","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"peienlim"},"content":"    public String getTagName() {","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"peienlim"},"content":"        return tagName;","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"peienlim"},"content":"    public String getDescription() {","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"peienlim"},"content":"        return description;","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"peienlim"},"content":"    public LocalDateTime getStartDate() {","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"peienlim"},"content":"        return startDate;","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"peienlim"},"content":"    public LocalDateTime getEndDate() {","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"peienlim"},"content":"        return endDate;","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"peienlim"},"content":"     * Converts this Jackson-friendly adapted event tag object into the model\u0027s {@code EventTag} object.","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"peienlim"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"peienlim"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"peienlim"},"content":"    public EventTag toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"peienlim"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"peienlim"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"peienlim"},"content":"        return new EventTag(tagName, description, startDate, endDate);","lastModifiedDate":"2024-04-01"},{"lineNumber":75,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"peienlim"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"peienlim":76}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"peienlim"},"content":"import seedu.address.model.tag.EventTag;","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":33,"author":{"gitId":"peienlim"},"content":"    private final List\u003cJsonAdaptedEventTag\u003e eventTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"peienlim"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"peienlim"},"content":"            @JsonProperty(\"eventTags\") List\u003cJsonAdaptedEventTag\u003e eventTags) {","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"peienlim"},"content":"        if (eventTags !\u003d null) {","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"peienlim"},"content":"            this.eventTags.addAll(eventTags);","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"peienlim"},"content":"        eventTags.addAll(source.getEventTags().stream()","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"peienlim"},"content":"                .map(JsonAdaptedEventTag::new)","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"peienlim"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"peienlim"},"content":"        final List\u003cEventTag\u003e personEventTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"peienlim"},"content":"        for (JsonAdaptedEventTag eventTag : eventTags) {","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"peienlim"},"content":"            personEventTags.add(eventTag.toModelType());","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"peienlim"},"content":"        final Set\u003cEventTag\u003e modelEventTags \u003d new HashSet\u003c\u003e(personEventTags);","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"peienlim"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags, modelEventTags);","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"peienlim":17,"-":107}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"peienlim"},"content":"import seedu.address.model.tag.EventTag;","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"peienlim"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"peienlim"},"content":"    public static final String MESSAGE_DUPLICATE_TAG \u003d \"Tags list contains duplicate tag(s).\";","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"peienlim"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT_TAG \u003d \"Events tag list contains duplicate event tag(s).\";","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"peienlim"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"peienlim"},"content":"    private final List\u003cJsonAdaptedEventTag\u003e eventTagList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"peienlim"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"peienlim"},"content":"                                       @JsonProperty(\"tagList\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"peienlim"},"content":"                                       @JsonProperty(\"eventTagList\") List\u003cJsonAdaptedEventTag\u003e eventTags) {","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"peienlim"},"content":"        this.tagList.addAll(tags);","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"peienlim"},"content":"        this.eventTagList.addAll(eventTags);","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"peienlim"},"content":"        tagList.addAll(source.getTagList().stream().map(JsonAdaptedTag::new).collect(Collectors.toList()));","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"peienlim"},"content":"        eventTagList.addAll(source.getEventTagList().stream()","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"peienlim"},"content":"                .map(JsonAdaptedEventTag::new)","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"peienlim"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"peienlim"},"content":"        for (JsonAdaptedTag jsonAdaptedTag : tagList) {","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"peienlim"},"content":"            Tag tag \u003d jsonAdaptedTag.toModelType();","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"peienlim"},"content":"            if (addressBook.hasTag(tag)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"peienlim"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TAG);","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"peienlim"},"content":"            }","lastModifiedDate":"2024-03-13"},{"lineNumber":70,"author":{"gitId":"peienlim"},"content":"            addressBook.addTag(tag);","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"peienlim"},"content":"        for (JsonAdaptedEventTag jsonAdaptedEventTag : eventTagList) {","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"peienlim"},"content":"            EventTag eventTag \u003d jsonAdaptedEventTag.toModelType();","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"peienlim"},"content":"            if (addressBook.hasEventTag(eventTag)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"peienlim"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_EVENT_TAG);","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"peienlim"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"peienlim"},"content":"            addressBook.addEventTag(eventTag);","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-04-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"peienlim":30,"-":59}},{"path":"src/main/java/seedu/address/ui/EventCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peienlim"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"peienlim"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"peienlim"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"peienlim"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"peienlim"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"peienlim"},"content":"import seedu.address.model.tag.EventTag;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"peienlim"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"peienlim"},"content":" * An UI component that displays information of a {@code EventTag}.","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"peienlim"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"peienlim"},"content":"public class EventCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"peienlim"},"content":"    private static final String FXML \u003d \"EventCard.fxml\";","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"peienlim"},"content":"    public final EventTag eventTag;","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"peienlim"},"content":"    @FXML","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"peienlim"},"content":"    private HBox cardPane;","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"peienlim"},"content":"    @FXML","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"peienlim"},"content":"    private Label eventName;","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"peienlim"},"content":"     * Creates a {@code EventCard} with the given {@code EventTag} to display.","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"peienlim"},"content":"    public EventCard(EventTag eventTag) {","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"peienlim"},"content":"        super(FXML);","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"peienlim"},"content":"        this.eventTag \u003d eventTag;","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"peienlim"},"content":"        eventName.setText(eventTag.tagName);","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"peienlim"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"peienlim":31}},{"path":"src/main/java/seedu/address/ui/EventListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peienlim"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"peienlim"},"content":"import static seedu.address.model.AddressBook.DEFAULT_EVENT_TAG;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"peienlim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"peienlim"},"content":"import java.util.List;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"peienlim"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"peienlim"},"content":"import javafx.collections.ObservableSet;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"peienlim"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"peienlim"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"peienlim"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"peienlim"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"peienlim"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"peienlim"},"content":"import seedu.address.model.tag.EventTag;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"peienlim"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"peienlim"},"content":" * Panel containing the list of events.","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"peienlim"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"peienlim"},"content":"public class EventListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"peienlim"},"content":"    private static final String FXML \u003d \"EventListPanel.fxml\";","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"peienlim"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(EventListPanel.class);","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"peienlim"},"content":"    @FXML","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"peienlim"},"content":"    private ListView\u003cEventTag\u003e eventListView;","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"peienlim"},"content":"     * Creates a {@code EventListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"peienlim"},"content":"    public EventListPanel(ObservableSet\u003cEventTag\u003e eventSet) {","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"peienlim"},"content":"        super(FXML);","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"peienlim"},"content":"        eventListView.setCellFactory(listView -\u003e new EventListViewCell());","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"peienlim"},"content":"        addDefaultEventCard();","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"peienlim"},"content":"        addExistingTagEventCard(eventSet);","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"peienlim"},"content":"        eventListView.getSelectionModel().select(DEFAULT_EVENT_TAG);","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"peienlim"},"content":"    private void addDefaultEventCard() {","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"peienlim"},"content":"        eventListView.getItems().add(DEFAULT_EVENT_TAG);","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"peienlim"},"content":"    private void addExistingTagEventCard(ObservableSet\u003cEventTag\u003e eventSet) {","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"peienlim"},"content":"        List\u003cEventTag\u003e eventList \u003d new ArrayList\u003c\u003e(eventSet);","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"peienlim"},"content":"        eventListView.getItems().addAll(eventList);","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //@@author {peienlim}-reused","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //Reused from https://github.com/AY2324S1-CS2103T-F08-3/tp","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    //(src/main/java/seedu/address/ui/AnimalListPanel.java) Lines 45 to 51 with minor modifications","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void selectEvent(EventTag eventTag) {","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        eventListView.getSelectionModel().select(eventTag);","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void clearEventSelection() {","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        eventListView.getSelectionModel().select(DEFAULT_EVENT_TAG);","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"peienlim"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Event} using a {@code EventCard}.","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"peienlim"},"content":"    class EventListViewCell extends ListCell\u003cEventTag\u003e {","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"peienlim"},"content":"        @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"peienlim"},"content":"        protected void updateItem(EventTag eventTag, boolean empty) {","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"peienlim"},"content":"            super.updateItem(eventTag, empty);","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"peienlim"},"content":"            if (empty || eventTag \u003d\u003d null) {","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"peienlim"},"content":"                setGraphic(null);","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"peienlim"},"content":"                setText(null);","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"peienlim"},"content":"            } else {","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"peienlim"},"content":"                EventCard eventCard \u003d new EventCard(eventTag);","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"peienlim"},"content":"                setGraphic(eventCard.getRoot());","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"peienlim"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"peienlim"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"peienlim":68,"-":11}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"cleowenxuan"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s2-cs2103t-t11-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2024-04-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"cleowenxuan":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"peienlim"},"content":"import static seedu.address.model.AddressBook.DEFAULT_EVENT_TAG;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"peienlim"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"peienlim"},"content":"import seedu.address.model.tag.EventTag;","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"peienlim"},"content":"    private EventListPanel eventListPanel;","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"peienlim"},"content":"    @FXML","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"peienlim"},"content":"    private StackPane eventListPanelPlaceholder;","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"peienlim"},"content":"        eventListPanel \u003d new EventListPanel(logic.getEventTagList());","lastModifiedDate":"2024-04-01"},{"lineNumber":125,"author":{"gitId":"peienlim"},"content":"        eventListPanelPlaceholder.getChildren().add(eventListPanel.getRoot());","lastModifiedDate":"2024-03-31"},{"lineNumber":126,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            //@@author {peienlim}-reused","lastModifiedDate":"2024-04-03"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            //Reused from https://github.com/AY2324S1-CS2103T-F08-3/tp","lastModifiedDate":"2024-04-03"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            //(src/main/java/seedu/address/ui/MainWindow.java) Lines 196 to 202 with minor modifications","lastModifiedDate":"2024-04-03"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            Optional\u003cEventTag\u003e eventTag \u003d commandResult.getEventTag();","lastModifiedDate":"2024-04-03"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            if (eventTag.isPresent()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                if (eventTag.get().equals(DEFAULT_EVENT_TAG)) { // list command, change back to all contacts tab","lastModifiedDate":"2024-04-03"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                    eventListPanel.clearEventSelection();","lastModifiedDate":"2024-04-03"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2024-04-03"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                eventListPanel.selectEvent(eventTag.get());","lastModifiedDate":"2024-04-03"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            //@@author {peienlim}","lastModifiedDate":"2024-04-03"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            eventListPanel \u003d new EventListPanel(logic.getEventTagList());","lastModifiedDate":"2024-04-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            eventListPanelPlaceholder.getChildren().add(eventListPanel.getRoot());","lastModifiedDate":"2024-04-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2024-04-10"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2024-04-10"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"peienlim":11,"-":216}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"peienlim"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"peienlim"},"content":"    private FlowPane eventTags;","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":60,"author":{"gitId":"peienlim"},"content":"        person.getEventTags().stream()","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"peienlim"},"content":"                .sorted(Comparator.comparing(eventTag -\u003e eventTag.tagName))","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"peienlim"},"content":"                .forEach(eventTag -\u003e eventTags.getChildren().add(new Label(eventTag.tagName)));","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"peienlim":5,"-":59}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"peienlim"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2024-04-03"},{"lineNumber":344,"author":{"gitId":"peienlim"},"content":"    -fx-padding: 2 0 2 0;","lastModifiedDate":"2024-04-03"},{"lineNumber":345,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":356,"author":{"gitId":"peienlim"},"content":"#eventTags {","lastModifiedDate":"2024-04-03"},{"lineNumber":357,"author":{"gitId":"peienlim"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2024-04-03"},{"lineNumber":358,"author":{"gitId":"peienlim"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2024-04-03"},{"lineNumber":359,"author":{"gitId":"peienlim"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2024-04-03"},{"lineNumber":360,"author":{"gitId":"peienlim"},"content":"    -fx-padding: 2 0 2 0;","lastModifiedDate":"2024-04-03"},{"lineNumber":361,"author":{"gitId":"peienlim"},"content":"}","lastModifiedDate":"2024-04-03"},{"lineNumber":362,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":363,"author":{"gitId":"peienlim"},"content":"#eventTags .label {","lastModifiedDate":"2024-04-03"},{"lineNumber":364,"author":{"gitId":"peienlim"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-04-03"},{"lineNumber":365,"author":{"gitId":"peienlim"},"content":"    -fx-background-color: #8e7ebd;","lastModifiedDate":"2024-04-03"},{"lineNumber":366,"author":{"gitId":"peienlim"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2024-04-03"},{"lineNumber":367,"author":{"gitId":"peienlim"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2024-04-03"},{"lineNumber":368,"author":{"gitId":"peienlim"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2024-04-03"},{"lineNumber":369,"author":{"gitId":"peienlim"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2024-04-03"},{"lineNumber":370,"author":{"gitId":"peienlim"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"peienlim":18,"-":352}},{"path":"src/main/resources/view/EventCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peienlim"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"peienlim"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"peienlim"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"peienlim"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"peienlim"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"peienlim"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"50\" prefHeight\u003d\"50\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"peienlim"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"peienlim"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"peienlim"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"peienlim"},"content":"        \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"peienlim"},"content":"            \u003cLabel fx:id\u003d\"eventName\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"peienlim"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"peienlim"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"peienlim"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"peienlim":17}},{"path":"src/main/resources/view/EventListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peienlim"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"peienlim"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"peienlim"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"peienlim"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"peienlim"},"content":"    \u003cListView fx:id\u003d\"eventListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"peienlim"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"peienlim":9}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"peienlim"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"         title\u003d\"Address App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"peienlim"},"content":"        \u003cHBox\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"peienlim"},"content":"          \u003cVBox fx:id\u003d\"eventList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"150\" prefWidth\u003d\"150\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"peienlim"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"peienlim"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"peienlim"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"peienlim"},"content":"            \u003cStackPane fx:id\u003d\"eventListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"peienlim"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"peienlim"},"content":"          \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":63,"author":{"gitId":"peienlim"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"peienlim":11,"-":58}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"peienlim"},"content":"      \u003cFlowPane fx:id\u003d\"eventTags\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"peienlim":1,"-":36}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"jonpwk"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"peienlim"},"content":"import javafx.collections.ObservableSet;","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"peienlim"},"content":"import seedu.address.model.tag.EventTag;","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"jonpwk"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"jonpwk"},"content":"        @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":156,"author":{"gitId":"jonpwk"},"content":"        public boolean hasTag(Tag tag) {","lastModifiedDate":"2024-03-19"},{"lineNumber":157,"author":{"gitId":"jonpwk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":158,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":159,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":160,"author":{"gitId":"jonpwk"},"content":"        @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":161,"author":{"gitId":"cleowenxuan"},"content":"        public void assign(Person targetPerson, Set\u003cTag\u003e tags, Set\u003cTag\u003e eventTags) {","lastModifiedDate":"2024-04-04"},{"lineNumber":162,"author":{"gitId":"jonpwk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":163,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":164,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":165,"author":{"gitId":"jonpwk"},"content":"        @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":166,"author":{"gitId":"jonpwk"},"content":"        public void deleteTag(Tag tag) {","lastModifiedDate":"2024-03-19"},{"lineNumber":167,"author":{"gitId":"jonpwk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":168,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":169,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":170,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":171,"author":{"gitId":"jonpwk"},"content":"        @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":172,"author":{"gitId":"jonpwk"},"content":"        public void addTag(Tag tag) {","lastModifiedDate":"2024-03-19"},{"lineNumber":173,"author":{"gitId":"jonpwk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":174,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":175,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":176,"author":{"gitId":"peienlim"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":177,"author":{"gitId":"peienlim"},"content":"        public boolean hasEventTag(EventTag tag) {","lastModifiedDate":"2024-04-02"},{"lineNumber":178,"author":{"gitId":"peienlim"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":179,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":180,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":181,"author":{"gitId":"peienlim"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":182,"author":{"gitId":"peienlim"},"content":"        public boolean hasEventTag(String tagName) {","lastModifiedDate":"2024-04-02"},{"lineNumber":183,"author":{"gitId":"peienlim"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":184,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":185,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":186,"author":{"gitId":"peienlim"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":187,"author":{"gitId":"peienlim"},"content":"        public void deleteEventTag(EventTag tag) {","lastModifiedDate":"2024-04-02"},{"lineNumber":188,"author":{"gitId":"peienlim"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":189,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":190,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":191,"author":{"gitId":"peienlim"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":192,"author":{"gitId":"peienlim"},"content":"        public void addEventTag(EventTag tag) {","lastModifiedDate":"2024-04-02"},{"lineNumber":193,"author":{"gitId":"peienlim"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":194,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":195,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":196,"author":{"gitId":"peienlim"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":197,"author":{"gitId":"peienlim"},"content":"        public EventTag getEventTag(String tag) {","lastModifiedDate":"2024-04-02"},{"lineNumber":198,"author":{"gitId":"peienlim"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":199,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":200,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":211,"author":{"gitId":"peienlim"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":212,"author":{"gitId":"peienlim"},"content":"        public ObservableSet\u003cEventTag\u003e getEventTagList() {","lastModifiedDate":"2024-04-02"},{"lineNumber":213,"author":{"gitId":"peienlim"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":214,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":215,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":216,"author":{"gitId":"peienlim"},"content":"        @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":217,"author":{"gitId":"peienlim"},"content":"        public void updateEventTagPersonList(EventTag t) {","lastModifiedDate":"2024-04-03"},{"lineNumber":218,"author":{"gitId":"peienlim"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-03"},{"lineNumber":219,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":220,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":221,"author":{"gitId":"peienlim"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":222,"author":{"gitId":"peienlim"},"content":"        public void setCurrentEventTag(EventTag tagName) {","lastModifiedDate":"2024-04-02"},{"lineNumber":223,"author":{"gitId":"peienlim"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":224,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":225,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":226,"author":{"gitId":"peienlim"},"content":"        @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":227,"author":{"gitId":"peienlim"},"content":"        public void clearCurrentEventTag() {","lastModifiedDate":"2024-04-03"},{"lineNumber":228,"author":{"gitId":"peienlim"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-03"},{"lineNumber":229,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":230,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":231,"author":{"gitId":"peterXGD"},"content":"        @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":232,"author":{"gitId":"peterXGD"},"content":"        public void updateTagPersonList(Tag t) {","lastModifiedDate":"2024-03-20"},{"lineNumber":233,"author":{"gitId":"peterXGD"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":234,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":263,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"cleowenxuan":1,"peterXGD":5,"jonpwk":22,"peienlim":47,"-":204}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"cleowenxuan"},"content":"import static seedu.address.testutil.TypicalNames.NAME_ALICE;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"cleowenxuan"},"content":"    public static final String DUMMY_NAME \u003d \" \";","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"cleowenxuan"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON, DUMMY_NAME);","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"cleowenxuan"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex, DUMMY_NAME);","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"cleowenxuan"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON, DUMMY_NAME);","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"cleowenxuan"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex, DUMMY_NAME);","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"cleowenxuan"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON, DUMMY_NAME);","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"cleowenxuan"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON, DUMMY_NAME);","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"cleowenxuan"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON, DUMMY_NAME);","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"cleowenxuan"},"content":"        String targetName \u003d NAME_ALICE.toString();","lastModifiedDate":"2024-03-15"},{"lineNumber":110,"author":{"gitId":"cleowenxuan"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex, targetName);","lastModifiedDate":"2024-03-15"},{"lineNumber":111,"author":{"gitId":"cleowenxuan"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex","lastModifiedDate":"2024-03-15"},{"lineNumber":112,"author":{"gitId":"cleowenxuan"},"content":"                + \", targetName\u003d\" + targetName + \"}\";","lastModifiedDate":"2024-03-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"cleowenxuan":13,"-":111}},{"path":"src/test/java/seedu/address/logic/commands/DtagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jonpwk"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"jonpwk"},"content":"public class DtagCommandTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"jonpwk"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"jonpwk":4}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"cleowenxuan"},"content":"import static seedu.address.testutil.TypicalNames.NAME_ALICE;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"cleowenxuan"},"content":"    public static final String DUMMY_NAME \u003d \" \";","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"cleowenxuan"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DUMMY_NAME, descriptor);","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"cleowenxuan"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, DUMMY_NAME, descriptor);","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"cleowenxuan"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DUMMY_NAME, new EditPersonDescriptor());","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"cleowenxuan"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DUMMY_NAME,","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"cleowenxuan"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, DUMMY_NAME, descriptor);","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"cleowenxuan"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DUMMY_NAME,","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"cleowenxuan"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, DUMMY_NAME, descriptor);","lastModifiedDate":"2024-04-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"cleowenxuan"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, DUMMY_NAME,","lastModifiedDate":"2024-04-02"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"cleowenxuan"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DUMMY_NAME, DESC_AMY);","lastModifiedDate":"2024-04-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"cleowenxuan"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, DUMMY_NAME, copyDescriptor);","lastModifiedDate":"2024-04-02"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"cleowenxuan"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DUMMY_NAME, DESC_AMY)));","lastModifiedDate":"2024-04-02"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"cleowenxuan"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DUMMY_NAME, DESC_BOB)));","lastModifiedDate":"2024-04-02"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":178,"author":{"gitId":"cleowenxuan"},"content":"        String name \u003d NAME_ALICE.toString();","lastModifiedDate":"2024-04-02"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":180,"author":{"gitId":"cleowenxuan"},"content":"        EditCommand editCommand \u003d new EditCommand(index, name, editPersonDescriptor);","lastModifiedDate":"2024-04-02"},{"lineNumber":181,"author":{"gitId":"cleowenxuan"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", name\u003d\"","lastModifiedDate":"2024-04-02"},{"lineNumber":182,"author":{"gitId":"cleowenxuan"},"content":"                + name + \", editPersonDescriptor\u003d\" + editPersonDescriptor + \"}\";","lastModifiedDate":"2024-04-02"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"cleowenxuan":18,"-":167}},{"path":"src/test/java/seedu/address/logic/commands/ExportCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"owenong1"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"owenong1"},"content":"public class ExportCommandTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"owenong1"},"content":"    //todo","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"owenong1"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"owenong1":5}},{"path":"src/test/java/seedu/address/logic/commands/ImportCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"owenong1"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"owenong1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"owenong1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"owenong1"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"owenong1"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"owenong1"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"owenong1"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ImportCommand.","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"owenong1"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"owenong1"},"content":"public class ImportCommandTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"owenong1"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"owenong1"},"content":"    public void execute_invalidFilePath_failure() {","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"owenong1"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"owenong1"},"content":"        assertCommandFailure(new ImportCommand(\"xxx\"), model, ImportCommand.MESSAGE_FILE_NOT_FOUND);","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"owenong1"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"owenong1"},"content":"    public void execute_invalidFileValues_failure() {","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"owenong1"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"owenong1"},"content":"        assertCommandFailure(new ImportCommand(\"./src/test/data/ImportTest/invalidValueTest.csv\"),","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"owenong1"},"content":"                model, ImportCommand.MESSAGE_VALUES_FORMAT_ERROR);","lastModifiedDate":"2024-04-10"},{"lineNumber":28,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"owenong1"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"owenong1"},"content":"    public void execute_invalidFieldValues_failure() {","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"owenong1"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"owenong1"},"content":"        assertCommandFailure(new ImportCommand(\"./src/test/data/ImportTest/invalidFieldsTest.csv\"),","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"owenong1"},"content":"                model, ImportCommand.MESSAGE_FIELDS_FORMAT_ERROR);","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"owenong1"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"owenong1":38}},{"path":"src/test/java/seedu/address/logic/commands/SearchTagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"peterXGD"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"peterXGD"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"peterXGD"},"content":"public class SearchTagCommandTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"peterXGD"},"content":"    private Model model;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"peterXGD"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"peterXGD"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"peterXGD"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"peterXGD"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"peterXGD"},"content":"    public void execute_friendTagSearch_showSuccess() throws CommandException {","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"cleowenxuan"},"content":"        SearchTagCommand sc \u003d new SearchTagCommand(new Tag(\"friends\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"peterXGD"},"content":"        CommandResult result \u003d sc.execute(model);","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"peterXGD"},"content":"        assertEquals(SearchTagCommand.MESSAGE_SUCCESS, result.getFeedbackToUser());","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"peterXGD"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"peterXGD"},"content":"    public void execute_unknownTagSearch_throws() {","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"cleowenxuan"},"content":"        SearchTagCommand sc \u003d new SearchTagCommand(new Tag(\"Uzuzuzuz\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"peterXGD"},"content":"        assertThrows(CommandException.class, () -\u003e sc.execute(model));","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"cleowenxuan":2,"peterXGD":34}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"cleowenxuan"},"content":"        String dummyName \u003d \" \";","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"cleowenxuan"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON, dummyName), command);","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"cleowenxuan"},"content":"        String dummyName \u003d \" \";","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"cleowenxuan"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, dummyName, descriptor), command);","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"cleowenxuan":4,"-":99}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"cleowenxuan"},"content":"        String dummyName \u003d \" \";","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"cleowenxuan"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON, dummyName));","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"cleowenxuan"},"content":"        assertParseFailure(parser, \" \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"cleowenxuan":3,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/DtagCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jonpwk"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"jonpwk"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"jonpwk"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"jonpwk"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"jonpwk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"jonpwk"},"content":"import seedu.address.logic.commands.DtagCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"jonpwk"},"content":"public class DtagCommandParserTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"jonpwk"},"content":"    private DtagCommandParser parser \u003d new DtagCommandParser();","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"jonpwk"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"jonpwk"},"content":"    public void parse_validArgs_returnsDtagCommand() {","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"jonpwk"},"content":"        assertParseSuccess(parser, \"friends\", new DtagCommand(\"friends\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"jonpwk"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"jonpwk"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"jonpwk"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DtagCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"jonpwk"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"jonpwk":27}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"cleowenxuan"},"content":"    private static final String DUMMY_NAME \u003d \" \";","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"cleowenxuan"},"content":"        // no field specified","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"cleowenxuan"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"cleowenxuan"},"content":"        assertParseFailure(parser, \"-5\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"cleowenxuan"},"content":"        assertParseFailure(parser, \"0\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":79,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"cleowenxuan"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"cleowenxuan"},"content":"        assertParseFailure(parser, \"tom i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"cleowenxuan"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, DUMMY_NAME, descriptor);","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"cleowenxuan"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, DUMMY_NAME, descriptor);","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"cleowenxuan"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, DUMMY_NAME, descriptor);","lastModifiedDate":"2024-04-02"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"cleowenxuan"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, DUMMY_NAME, descriptor);","lastModifiedDate":"2024-04-02"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"cleowenxuan"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, DUMMY_NAME, descriptor);","lastModifiedDate":"2024-04-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"cleowenxuan"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, DUMMY_NAME, descriptor);","lastModifiedDate":"2024-04-02"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"cleowenxuan"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, DUMMY_NAME, descriptor);","lastModifiedDate":"2024-04-02"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"cleowenxuan"},"content":"        // multiple valid fields repeated","lastModifiedDate":"2024-04-02"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-07-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"cleowenxuan"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, DUMMY_NAME, descriptor);","lastModifiedDate":"2024-04-02"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"cleowenxuan":18,"-":190}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":197,"author":{"gitId":"peterXGD"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":198,"author":{"gitId":"peterXGD"},"content":"    public void parseDateTime_stringWithInvalidTime_throwsException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":199,"author":{"gitId":"peterXGD"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDateTime(\"2020-2-3 15:03:03\"));","lastModifiedDate":"2024-04-05"},{"lineNumber":200,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"peterXGD":5,"-":196}},{"path":"src/test/java/seedu/address/logic/parser/SearchTagCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":"import seedu.address.logic.commands.SearchTagCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":"public class SearchTagCommandParserTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"peterXGD"},"content":"    private SearchCommandParser parser \u003d new SearchCommandParser();","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"peterXGD"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"peterXGD"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"peterXGD"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SearchTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"peterXGD"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"peterXGD"},"content":"    public void parse_moreThanOneArg_throwsParseException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"peterXGD"},"content":"        assertParseFailure(parser, \"2222  3333   \",","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"peterXGD"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SearchTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"peterXGD"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"peterXGD"},"content":"    public void parse_validArgs_returnsSearchCommand() {","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"peterXGD"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"peterXGD"},"content":"        SearchTagCommand expectedFindCommand \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"cleowenxuan"},"content":"                new SearchTagCommand(new Tag(\"friends\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"peterXGD"},"content":"        assertParseSuccess(parser, \"friends\", expectedFindCommand);","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"cleowenxuan":1,"peterXGD":33}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"peienlim"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"peienlim"},"content":"import static seedu.address.testutil.TypicalTags.FRIEND;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"peienlim"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"peienlim"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"peienlim"},"content":"import javafx.collections.ObservableSet;","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":28,"author":{"gitId":"peienlim"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"peienlim"},"content":"import seedu.address.model.tag.EventTag;","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"peienlim"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"peienlim"},"content":"import seedu.address.model.tag.exceptions.DuplicateTagException;","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"peienlim"},"content":"import seedu.address.model.tag.exceptions.TagNotFoundException;","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"peienlim"},"content":"        assertEquals(Collections.emptySet(), addressBook.getTagList());","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"peienlim"},"content":"        List\u003cTag\u003e newTags \u003d List.of();","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"peienlim"},"content":"        List\u003cEventTag\u003e newEventTags \u003d List.of();","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"peienlim"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons, newTags, newEventTags);","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"peienlim"},"content":"    public void hasTag_nullTag_throwsNullPointerException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"jonpwk"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasTag((Tag) null));","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"peienlim"},"content":"    public void hasTag_tagNotInAddressBook_returnsFalse() {","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"peienlim"},"content":"        assertFalse(addressBook.hasTag(FRIEND));","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"peienlim"},"content":"    public void hasTag_tagInAddressBook_returnsTrue() {","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"peienlim"},"content":"        addressBook.addTag(FRIEND);","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"peienlim"},"content":"        assertTrue(addressBook.hasTag(FRIEND));","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"peienlim"},"content":"    public void hasTag_tagWithSameNameInAddressBook_returnsTrue() {","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"peienlim"},"content":"        addressBook.addTag(FRIEND);","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"peienlim"},"content":"        Tag editedFriend \u003d new Tag(\"friends\");","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"peienlim"},"content":"        assertTrue(addressBook.hasTag(editedFriend));","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":118,"author":{"gitId":"peienlim"},"content":"    public void addDuplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"peienlim"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2024-03-17"},{"lineNumber":120,"author":{"gitId":"peienlim"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.addPerson(ALICE));","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":123,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"peienlim"},"content":"    public void addDuplicateTag_throwsDuplicateTagException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":125,"author":{"gitId":"peienlim"},"content":"        addressBook.addTag(FRIEND);","lastModifiedDate":"2024-03-17"},{"lineNumber":126,"author":{"gitId":"peienlim"},"content":"        assertThrows(DuplicateTagException.class, () -\u003e addressBook.addTag(FRIEND));","lastModifiedDate":"2024-03-17"},{"lineNumber":127,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":128,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":129,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":130,"author":{"gitId":"peienlim"},"content":"    public void setPerson_withDifferentIdentityFields_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"peienlim"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2024-03-17"},{"lineNumber":132,"author":{"gitId":"peienlim"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-17"},{"lineNumber":133,"author":{"gitId":"peienlim"},"content":"                .build();","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"peienlim"},"content":"        assertDoesNotThrow(() -\u003e addressBook.setPerson(ALICE, editedAlice));","lastModifiedDate":"2024-03-17"},{"lineNumber":135,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":136,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":137,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":138,"author":{"gitId":"peienlim"},"content":"    public void setTags_withUniqueTags_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":139,"author":{"gitId":"peienlim"},"content":"        Set\u003cTag\u003e uniqueTags \u003d new HashSet\u003c\u003e(Arrays.asList(FRIEND, new Tag(\"colleague\")));","lastModifiedDate":"2024-03-17"},{"lineNumber":140,"author":{"gitId":"peienlim"},"content":"        assertDoesNotThrow(() -\u003e addressBook.setTagList(uniqueTags));","lastModifiedDate":"2024-03-17"},{"lineNumber":141,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":142,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":143,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":144,"author":{"gitId":"peienlim"},"content":"    public void removePerson_notExistingPerson_throwsPersonNotFoundException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":145,"author":{"gitId":"peienlim"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e addressBook.removePerson(ALICE));","lastModifiedDate":"2024-03-17"},{"lineNumber":146,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":147,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":148,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":149,"author":{"gitId":"peienlim"},"content":"    public void removeTag_notExistingTag_throwsTagNotFoundException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":150,"author":{"gitId":"peienlim"},"content":"        assertThrows(TagNotFoundException.class, () -\u003e addressBook.removeTag(FRIEND));","lastModifiedDate":"2024-03-17"},{"lineNumber":151,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":152,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":153,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":154,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":155,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":156,"author":{"gitId":"peienlim"},"content":"    public void removePerson_existingPerson_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":157,"author":{"gitId":"peienlim"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2024-03-17"},{"lineNumber":158,"author":{"gitId":"peienlim"},"content":"        assertDoesNotThrow(() -\u003e addressBook.removePerson(ALICE));","lastModifiedDate":"2024-03-17"},{"lineNumber":159,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":160,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":161,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":162,"author":{"gitId":"peienlim"},"content":"    public void removeTag_existingTag_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":163,"author":{"gitId":"peienlim"},"content":"        addressBook.addTag(FRIEND);","lastModifiedDate":"2024-03-17"},{"lineNumber":164,"author":{"gitId":"peienlim"},"content":"        assertDoesNotThrow(() -\u003e addressBook.removeTag(FRIEND));","lastModifiedDate":"2024-03-17"},{"lineNumber":165,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":166,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":167,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":170,"author":{"gitId":"peienlim"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList()","lastModifiedDate":"2024-03-17"},{"lineNumber":171,"author":{"gitId":"jonpwk"},"content":"                + \", tags\u003d\" + addressBook.getTagList() + \", event tags\u003d\" + addressBook.getEventTagList() + \"}\";","lastModifiedDate":"2024-04-02"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":175,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":176,"author":{"gitId":"peienlim"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":177,"author":{"gitId":"peienlim"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2024-03-17"},{"lineNumber":178,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":179,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":180,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":181,"author":{"gitId":"peienlim"},"content":"    public void getTagList_modifySet_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":182,"author":{"gitId":"peienlim"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getTagList().remove(FRIEND));","lastModifiedDate":"2024-03-17"},{"lineNumber":183,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":184,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":190,"author":{"gitId":"peienlim"},"content":"        private final ObservableSet\u003cTag\u003e tags \u003d FXCollections.observableSet();","lastModifiedDate":"2024-03-17"},{"lineNumber":191,"author":{"gitId":"peienlim"},"content":"        private final ObservableSet\u003cEventTag\u003e eventTags \u003d FXCollections.observableSet();","lastModifiedDate":"2024-04-01"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":193,"author":{"gitId":"peienlim"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons, Collection\u003cTag\u003e tags, Collection\u003cEventTag\u003e eventTags) {","lastModifiedDate":"2024-03-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":195,"author":{"gitId":"peienlim"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2024-03-17"},{"lineNumber":196,"author":{"gitId":"peienlim"},"content":"            this.eventTags.addAll(eventTags);","lastModifiedDate":"2024-03-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":203,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":204,"author":{"gitId":"peienlim"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":205,"author":{"gitId":"peienlim"},"content":"        public ObservableSet\u003cTag\u003e getTagList() {","lastModifiedDate":"2024-03-17"},{"lineNumber":206,"author":{"gitId":"peienlim"},"content":"            return tags;","lastModifiedDate":"2024-03-17"},{"lineNumber":207,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":208,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":209,"author":{"gitId":"peienlim"},"content":"        @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":210,"author":{"gitId":"peienlim"},"content":"        public ObservableSet\u003cEventTag\u003e getEventTagList() {","lastModifiedDate":"2024-04-01"},{"lineNumber":211,"author":{"gitId":"peienlim"},"content":"            return eventTags;","lastModifiedDate":"2024-03-31"},{"lineNumber":212,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"jonpwk":5,"peienlim":106,"-":104}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"peienlim"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress() + \", tags\u003d\" + ALICE.getTags()","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"peienlim"},"content":"                + \", eventTags\u003d\" + ALICE.getEventTags() + \"}\";","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"peienlim":2,"-":98}},{"path":"src/test/java/seedu/address/model/tag/EventTagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"peienlim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-11"},{"lineNumber":4,"author":{"gitId":"peienlim"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-04-11"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":"public class EventTagTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"peterXGD"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"peterXGD"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EventTag(null, \"test\",","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"peterXGD"},"content":"                LocalDateTime.now(), LocalDateTime.now()));","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"peterXGD"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"peterXGD"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"peterXGD"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"peterXGD"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new EventTag(invalidTagName, \"test\",","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"peterXGD"},"content":"                LocalDateTime.now(), LocalDateTime.now()));","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-04-11"},{"lineNumber":26,"author":{"gitId":"peienlim"},"content":"    public void getCodeFormat_validInput_returnsFormattedString() {","lastModifiedDate":"2024-04-11"},{"lineNumber":27,"author":{"gitId":"peienlim"},"content":"        LocalDateTime startDate \u003d LocalDateTime.of(2022, 3, 15, 10, 0);","lastModifiedDate":"2024-04-11"},{"lineNumber":28,"author":{"gitId":"peienlim"},"content":"        LocalDateTime endDate \u003d LocalDateTime.of(2022, 3, 15, 12, 0);","lastModifiedDate":"2024-04-11"},{"lineNumber":29,"author":{"gitId":"peienlim"},"content":"        EventTag eventTag \u003d new EventTag(\"Meeting\", \"Discuss project\", startDate, endDate);","lastModifiedDate":"2024-04-11"},{"lineNumber":30,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":31,"author":{"gitId":"peienlim"},"content":"        String expectedCodeFormat \u003d \"t/E-Meeting dc/Discuss project sd/2022-03-15 10:00:00 ed/2022-03-15 12:00:00\";","lastModifiedDate":"2024-04-11"},{"lineNumber":32,"author":{"gitId":"peienlim"},"content":"        assertEquals(expectedCodeFormat, eventTag.getCodeFormat());","lastModifiedDate":"2024-04-11"},{"lineNumber":33,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":34,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":35,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-04-11"},{"lineNumber":36,"author":{"gitId":"peienlim"},"content":"    public void equals_equalObjects_returnsTrue() {","lastModifiedDate":"2024-04-11"},{"lineNumber":37,"author":{"gitId":"peienlim"},"content":"        LocalDateTime startDate1 \u003d LocalDateTime.of(2022, 3, 15, 10, 0);","lastModifiedDate":"2024-04-11"},{"lineNumber":38,"author":{"gitId":"peienlim"},"content":"        LocalDateTime endDate1 \u003d LocalDateTime.of(2022, 3, 15, 12, 0);","lastModifiedDate":"2024-04-11"},{"lineNumber":39,"author":{"gitId":"peienlim"},"content":"        EventTag eventTag1 \u003d new EventTag(\"Meeting\", \"Discuss project\", startDate1, endDate1);","lastModifiedDate":"2024-04-11"},{"lineNumber":40,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":41,"author":{"gitId":"peienlim"},"content":"        LocalDateTime startDate2 \u003d LocalDateTime.of(2022, 3, 15, 10, 0);","lastModifiedDate":"2024-04-11"},{"lineNumber":42,"author":{"gitId":"peienlim"},"content":"        LocalDateTime endDate2 \u003d LocalDateTime.of(2022, 3, 15, 12, 0);","lastModifiedDate":"2024-04-11"},{"lineNumber":43,"author":{"gitId":"peienlim"},"content":"        EventTag eventTag2 \u003d new EventTag(\"Meeting\", \"Discuss project\", startDate2, endDate2);","lastModifiedDate":"2024-04-11"},{"lineNumber":44,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":45,"author":{"gitId":"peienlim"},"content":"        assertEquals(eventTag1, eventTag2);","lastModifiedDate":"2024-04-11"},{"lineNumber":46,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":47,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":48,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-04-11"},{"lineNumber":49,"author":{"gitId":"peienlim"},"content":"    public void equals_notEqualObjects_returnsFalse() {","lastModifiedDate":"2024-04-11"},{"lineNumber":50,"author":{"gitId":"peienlim"},"content":"        LocalDateTime startDate1 \u003d LocalDateTime.of(2022, 3, 15, 10, 0);","lastModifiedDate":"2024-04-11"},{"lineNumber":51,"author":{"gitId":"peienlim"},"content":"        LocalDateTime endDate1 \u003d LocalDateTime.of(2022, 3, 15, 12, 0);","lastModifiedDate":"2024-04-11"},{"lineNumber":52,"author":{"gitId":"peienlim"},"content":"        EventTag eventTag1 \u003d new EventTag(\"Meeting\", \"Discuss project\", startDate1, endDate1);","lastModifiedDate":"2024-04-11"},{"lineNumber":53,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":54,"author":{"gitId":"peienlim"},"content":"        LocalDateTime startDate2 \u003d LocalDateTime.of(2022, 3, 15, 11, 0);","lastModifiedDate":"2024-04-11"},{"lineNumber":55,"author":{"gitId":"peienlim"},"content":"        LocalDateTime endDate2 \u003d LocalDateTime.of(2022, 3, 15, 13, 0);","lastModifiedDate":"2024-04-11"},{"lineNumber":56,"author":{"gitId":"peienlim"},"content":"        EventTag eventTag2 \u003d new EventTag(\"Meeting\", \"Discuss project\", startDate2, endDate2);","lastModifiedDate":"2024-04-11"},{"lineNumber":57,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":58,"author":{"gitId":"peienlim"},"content":"        assertNotEquals(eventTag1, eventTag2);","lastModifiedDate":"2024-04-11"},{"lineNumber":59,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":60,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":61,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-04-11"},{"lineNumber":62,"author":{"gitId":"peienlim"},"content":"    public void toString_validInput_returnsFormattedString() {","lastModifiedDate":"2024-04-11"},{"lineNumber":63,"author":{"gitId":"peienlim"},"content":"        LocalDateTime startDate \u003d LocalDateTime.of(2022, 3, 15, 10, 0);","lastModifiedDate":"2024-04-11"},{"lineNumber":64,"author":{"gitId":"peienlim"},"content":"        LocalDateTime endDate \u003d LocalDateTime.of(2022, 3, 15, 12, 0);","lastModifiedDate":"2024-04-11"},{"lineNumber":65,"author":{"gitId":"peienlim"},"content":"        EventTag eventTag \u003d new EventTag(\"Meeting\", \"Discuss project\", startDate, endDate);","lastModifiedDate":"2024-04-11"},{"lineNumber":66,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":67,"author":{"gitId":"peienlim"},"content":"        String expectedToString \u003d \"[Meeting] from 2022-03-15 10:00:00 to 2022-03-15 12:00:00.\\nDiscuss project\";","lastModifiedDate":"2024-04-11"},{"lineNumber":68,"author":{"gitId":"peienlim"},"content":"        assertEquals(expectedToString, eventTag.toString());","lastModifiedDate":"2024-04-11"},{"lineNumber":69,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":70,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":71,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"peterXGD":23,"peienlim":48}},{"path":"src/test/java/seedu/address/model/tag/UniqueTagListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peienlim"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"peienlim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-11"},{"lineNumber":4,"author":{"gitId":"peienlim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-11"},{"lineNumber":5,"author":{"gitId":"peienlim"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-04-11"},{"lineNumber":6,"author":{"gitId":"peienlim"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2024-04-11"},{"lineNumber":7,"author":{"gitId":"peienlim"},"content":"import static org.junit.jupiter.api.Assertions.assertSame;","lastModifiedDate":"2024-04-11"},{"lineNumber":8,"author":{"gitId":"peienlim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-11"},{"lineNumber":9,"author":{"gitId":"peienlim"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"peienlim"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-04-11"},{"lineNumber":12,"author":{"gitId":"peienlim"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"peienlim"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"peienlim"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"peienlim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"peienlim"},"content":"import seedu.address.model.tag.exceptions.DuplicateTagException;","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"peienlim"},"content":"import seedu.address.model.tag.exceptions.TagNotFoundException;","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"peienlim"},"content":"public class UniqueTagListTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"peienlim"},"content":"    private final UniqueTagList\u003cTag\u003e uniqueTagList \u003d new UniqueTagList\u003c\u003e();","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"peienlim"},"content":"    public void contains_nullTag_throwsNullPointerException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"jonpwk"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTagList.contains((Tag) null));","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"jonpwk"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"jonpwk"},"content":"    public void contains_nullTagString_throwsNullPointerException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"jonpwk"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTagList.contains((String) null));","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"peienlim"},"content":"    public void contains_tagNotInList_returnsFalse() {","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"peienlim"},"content":"        assertFalse(uniqueTagList.contains(new Tag(\"friends\")));","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"jonpwk"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"jonpwk"},"content":"    public void contains_tagNotInListString_returnsFalse() {","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"jonpwk"},"content":"        assertFalse(uniqueTagList.contains(\"friends\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"peienlim"},"content":"    public void contains_tagInList_returnsTrue() {","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"peienlim"},"content":"        uniqueTagList.add(new Tag(\"friends\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"peienlim"},"content":"        assertTrue(uniqueTagList.contains(new Tag(\"friends\")));","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"jonpwk"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"jonpwk"},"content":"    public void contains_tagInListString_returnsTrue() {","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"jonpwk"},"content":"        uniqueTagList.add(new Tag(\"friends\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"jonpwk"},"content":"        assertTrue(uniqueTagList.contains(\"friends\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"peienlim"},"content":"    public void contains_tagWithSameNameInList_returnsTrue() {","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"peienlim"},"content":"        uniqueTagList.add(new Tag(\"friends\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"peienlim"},"content":"        assertTrue(uniqueTagList.contains(new Tag(\"friends\")));","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"peienlim"},"content":"    public void add_nullTag_throwsNullPointerException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"peienlim"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTagList.add(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"peienlim"},"content":"    public void add_duplicateTag_throwsDuplicateTagException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"peienlim"},"content":"        uniqueTagList.add(new Tag(\"friends\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"peienlim"},"content":"        assertThrows(DuplicateTagException.class, () -\u003e uniqueTagList.add(new Tag(\"friends\")));","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-04-11"},{"lineNumber":75,"author":{"gitId":"peienlim"},"content":"    public void replace_validTags_replacesTag() {","lastModifiedDate":"2024-04-11"},{"lineNumber":76,"author":{"gitId":"peienlim"},"content":"        Tag oldTag \u003d new Tag(\"old\");","lastModifiedDate":"2024-04-11"},{"lineNumber":77,"author":{"gitId":"peienlim"},"content":"        Tag newTag \u003d new Tag(\"new\");","lastModifiedDate":"2024-04-11"},{"lineNumber":78,"author":{"gitId":"peienlim"},"content":"        uniqueTagList.add(oldTag);","lastModifiedDate":"2024-04-11"},{"lineNumber":79,"author":{"gitId":"peienlim"},"content":"        uniqueTagList.replace(oldTag, newTag);","lastModifiedDate":"2024-04-11"},{"lineNumber":80,"author":{"gitId":"peienlim"},"content":"        assertTrue(uniqueTagList.contains(newTag) \u0026\u0026 !uniqueTagList.contains(oldTag));","lastModifiedDate":"2024-04-11"},{"lineNumber":81,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":82,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":83,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-04-11"},{"lineNumber":84,"author":{"gitId":"peienlim"},"content":"    public void replace_nonExistingOldTag_throwsTagNotFoundException() {","lastModifiedDate":"2024-04-11"},{"lineNumber":85,"author":{"gitId":"peienlim"},"content":"        assertThrows(TagNotFoundException.class, () -\u003e uniqueTagList.replace(new Tag(\"old\"), new Tag(\"new\")));","lastModifiedDate":"2024-04-11"},{"lineNumber":86,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":87,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":88,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-04-11"},{"lineNumber":89,"author":{"gitId":"peienlim"},"content":"    public void replace_existingNewTag_throwsDuplicateTagException() {","lastModifiedDate":"2024-04-11"},{"lineNumber":90,"author":{"gitId":"peienlim"},"content":"        uniqueTagList.add(new Tag(\"old\"));","lastModifiedDate":"2024-04-11"},{"lineNumber":91,"author":{"gitId":"peienlim"},"content":"        uniqueTagList.add(new Tag(\"new\"));","lastModifiedDate":"2024-04-11"},{"lineNumber":92,"author":{"gitId":"peienlim"},"content":"        assertThrows(DuplicateTagException.class, () -\u003e uniqueTagList.replace(new Tag(\"old\"), new Tag(\"new\")));","lastModifiedDate":"2024-04-11"},{"lineNumber":93,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":94,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":95,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"peienlim"},"content":"    public void remove_nullTag_throwsNullPointerException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"jonpwk"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTagList.remove((Tag) null));","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"jonpwk"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"jonpwk"},"content":"    public void remove_nullTagString_throwsNullPointerException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"jonpwk"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTagList.remove((String) null));","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"peienlim"},"content":"    public void remove_tagDoesNotExist_throwsTagNotFoundException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"peienlim"},"content":"        assertThrows(TagNotFoundException.class, () -\u003e uniqueTagList.remove(new Tag(\"friends\")));","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"jonpwk"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"jonpwk"},"content":"    public void remove_tagDoesNotExistString_throwsTagNotFoundException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"jonpwk"},"content":"        assertThrows(TagNotFoundException.class, () -\u003e uniqueTagList.remove(\"friends\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"peienlim"},"content":"    public void remove_existingTag_removesTag() {","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"peienlim"},"content":"        uniqueTagList.add(new Tag(\"friends\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"peienlim"},"content":"        uniqueTagList.remove(new Tag(\"friends\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"peienlim"},"content":"        UniqueTagList\u003cTag\u003e expectedUniqueTagList \u003d new UniqueTagList\u003c\u003e();","lastModifiedDate":"2024-04-01"},{"lineNumber":120,"author":{"gitId":"peienlim"},"content":"        assertEquals(expectedUniqueTagList, uniqueTagList);","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"jonpwk"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":124,"author":{"gitId":"jonpwk"},"content":"    public void remove_existingTagString_removesTag() {","lastModifiedDate":"2024-03-19"},{"lineNumber":125,"author":{"gitId":"jonpwk"},"content":"        uniqueTagList.add(new Tag(\"friends\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":126,"author":{"gitId":"jonpwk"},"content":"        uniqueTagList.remove(\"friends\");","lastModifiedDate":"2024-03-19"},{"lineNumber":127,"author":{"gitId":"peienlim"},"content":"        UniqueTagList\u003cTag\u003e expectedUniqueTagList \u003d new UniqueTagList\u003c\u003e();","lastModifiedDate":"2024-04-01"},{"lineNumber":128,"author":{"gitId":"jonpwk"},"content":"        assertEquals(expectedUniqueTagList, uniqueTagList);","lastModifiedDate":"2024-03-19"},{"lineNumber":129,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":130,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"peienlim"},"content":"    public void setTags_nullUniqueTagList_throwsNullPointerException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":132,"author":{"gitId":"peienlim"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTagList.setTags((UniqueTagList\u003cTag\u003e) null));","lastModifiedDate":"2024-04-01"},{"lineNumber":133,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":135,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":136,"author":{"gitId":"peienlim"},"content":"    public void setTags_uniqueTagList_replacesOwnListWithProvidedUniqueTagList() {","lastModifiedDate":"2024-03-17"},{"lineNumber":137,"author":{"gitId":"peienlim"},"content":"        uniqueTagList.add(new Tag(\"friends\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":138,"author":{"gitId":"peienlim"},"content":"        UniqueTagList\u003cTag\u003e expectedUniqueTagList \u003d new UniqueTagList\u003c\u003e();","lastModifiedDate":"2024-04-01"},{"lineNumber":139,"author":{"gitId":"peienlim"},"content":"        expectedUniqueTagList.add(new Tag(\"colleagues\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":140,"author":{"gitId":"peienlim"},"content":"        uniqueTagList.setTags(expectedUniqueTagList);","lastModifiedDate":"2024-03-17"},{"lineNumber":141,"author":{"gitId":"peienlim"},"content":"        assertEquals(expectedUniqueTagList, uniqueTagList);","lastModifiedDate":"2024-03-17"},{"lineNumber":142,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":143,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":144,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":145,"author":{"gitId":"peienlim"},"content":"    public void setTags_nullSet_throwsNullPointerException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":146,"author":{"gitId":"peienlim"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTagList.setTags((Set\u003cTag\u003e) null));","lastModifiedDate":"2024-03-17"},{"lineNumber":147,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":148,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":149,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":150,"author":{"gitId":"peienlim"},"content":"    public void setTags_set_replacesOwnListWithProvidedSet() {","lastModifiedDate":"2024-03-17"},{"lineNumber":151,"author":{"gitId":"peienlim"},"content":"        uniqueTagList.add(new Tag(\"friends\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":152,"author":{"gitId":"peienlim"},"content":"        Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e(Arrays.asList(new Tag(\"colleagues\"), new Tag(\"family\")));","lastModifiedDate":"2024-03-17"},{"lineNumber":153,"author":{"gitId":"peienlim"},"content":"        uniqueTagList.setTags(tagSet);","lastModifiedDate":"2024-03-17"},{"lineNumber":154,"author":{"gitId":"peienlim"},"content":"        UniqueTagList\u003cTag\u003e expectedUniqueTagList \u003d new UniqueTagList\u003c\u003e();","lastModifiedDate":"2024-04-01"},{"lineNumber":155,"author":{"gitId":"peienlim"},"content":"        expectedUniqueTagList.add(new Tag(\"colleagues\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":156,"author":{"gitId":"peienlim"},"content":"        expectedUniqueTagList.add(new Tag(\"family\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":157,"author":{"gitId":"peienlim"},"content":"        assertEquals(expectedUniqueTagList, uniqueTagList);","lastModifiedDate":"2024-03-17"},{"lineNumber":158,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":159,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":160,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-04-11"},{"lineNumber":161,"author":{"gitId":"peienlim"},"content":"    public void getEventTag_existingEventTag_returnsEventTag() {","lastModifiedDate":"2024-04-11"},{"lineNumber":162,"author":{"gitId":"peienlim"},"content":"        EventTag eventTag \u003d new EventTag(\"event\", \"get event tag test\",","lastModifiedDate":"2024-04-11"},{"lineNumber":163,"author":{"gitId":"peienlim"},"content":"                LocalDateTime.now(), LocalDateTime.now());","lastModifiedDate":"2024-04-11"},{"lineNumber":164,"author":{"gitId":"peienlim"},"content":"        uniqueTagList.add(eventTag);","lastModifiedDate":"2024-04-11"},{"lineNumber":165,"author":{"gitId":"peienlim"},"content":"        assertSame(eventTag, uniqueTagList.getEventTag(\"event\"));","lastModifiedDate":"2024-04-11"},{"lineNumber":166,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":167,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":168,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-04-11"},{"lineNumber":169,"author":{"gitId":"peienlim"},"content":"    public void getEventTag_nonExistingEventTag_returnsNull() {","lastModifiedDate":"2024-04-11"},{"lineNumber":170,"author":{"gitId":"peienlim"},"content":"        assertNull(uniqueTagList.getEventTag(\"nonExistingEvent\"));","lastModifiedDate":"2024-04-11"},{"lineNumber":171,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":172,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":173,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-04-11"},{"lineNumber":174,"author":{"gitId":"peienlim"},"content":"    public void removeEvent_existingEventTag_removesEventTag() {","lastModifiedDate":"2024-04-11"},{"lineNumber":175,"author":{"gitId":"peienlim"},"content":"        EventTag eventTag \u003d new EventTag(\"event\", \"get event tag test\",","lastModifiedDate":"2024-04-11"},{"lineNumber":176,"author":{"gitId":"peienlim"},"content":"                LocalDateTime.now(), LocalDateTime.now());","lastModifiedDate":"2024-04-11"},{"lineNumber":177,"author":{"gitId":"peienlim"},"content":"        uniqueTagList.add(eventTag);","lastModifiedDate":"2024-04-11"},{"lineNumber":178,"author":{"gitId":"peienlim"},"content":"        assertNotNull(uniqueTagList.removeEvent(\"event\"));","lastModifiedDate":"2024-04-11"},{"lineNumber":179,"author":{"gitId":"peienlim"},"content":"        assertFalse(uniqueTagList.contains(eventTag));","lastModifiedDate":"2024-04-11"},{"lineNumber":180,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":181,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":182,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-04-11"},{"lineNumber":183,"author":{"gitId":"peienlim"},"content":"    public void removeEvent_nonExistingEventTag_returnsNull() {","lastModifiedDate":"2024-04-11"},{"lineNumber":184,"author":{"gitId":"peienlim"},"content":"        assertNull(uniqueTagList.removeEvent(\"nonExistingEvent\"));","lastModifiedDate":"2024-04-11"},{"lineNumber":185,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":186,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":187,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":188,"author":{"gitId":"peienlim"},"content":"    public void asUnmodifiableObservableSet_modifySet_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":189,"author":{"gitId":"peienlim"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2024-03-17"},{"lineNumber":190,"author":{"gitId":"peienlim"},"content":"                -\u003e uniqueTagList.asUnmodifiableObservableSet().remove(new Tag(\"friends\")));","lastModifiedDate":"2024-03-17"},{"lineNumber":191,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":192,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":193,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":194,"author":{"gitId":"peienlim"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-17"},{"lineNumber":195,"author":{"gitId":"peienlim"},"content":"        assertEquals(uniqueTagList.asUnmodifiableObservableSet().toString(), uniqueTagList.toString());","lastModifiedDate":"2024-03-17"},{"lineNumber":196,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":197,"author":{"gitId":"peienlim"},"content":"}","lastModifiedDate":"2024-03-17"},{"lineNumber":198,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"jonpwk":34,"peienlim":164}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"peienlim"},"content":"    private static final List\u003cJsonAdaptedEventTag\u003e VALID_EVENT_TAGS \u003d BENSON.getEventTags().stream()","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"peienlim"},"content":"            .map(JsonAdaptedEventTag::new)","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"peienlim"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"peienlim"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"peienlim"},"content":"                        VALID_EVENT_TAGS);","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"peienlim"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"peienlim"},"content":"                VALID_EVENT_TAGS);","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"peienlim"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"peienlim"},"content":"                        VALID_EVENT_TAGS);","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"peienlim"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"peienlim"},"content":"                VALID_EVENT_TAGS);","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"peienlim"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"peienlim"},"content":"                        VALID_EVENT_TAGS);","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"peienlim"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"peienlim"},"content":"                VALID_EVENT_TAGS);","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"peienlim"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"peienlim"},"content":"                        VALID_EVENT_TAGS);","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"peienlim"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS,","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"peienlim"},"content":"                VALID_EVENT_TAGS);","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"peienlim"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags,","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"peienlim"},"content":"                        VALID_EVENT_TAGS);","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"peienlim":21,"-":101}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"peienlim"},"content":"    private static final Path DUPLICATE_TAG_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateTagAddressBook.json\");","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"peienlim"},"content":"    public void toModelType_typicalPersonsAndTagsFile_success() throws Exception {","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"peienlim"},"content":"    public void toModelType_duplicateTags_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"peienlim"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_TAG_FILE,","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"peienlim"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"peienlim"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_TAG,","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"peienlim"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"peienlim":10,"-":46}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"peienlim"},"content":"import seedu.address.model.tag.EventTag;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"peienlim"},"content":"    private Set\u003cEventTag\u003e eventTags;","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"peienlim"},"content":"        eventTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"peienlim"},"content":"        eventTags \u003d new HashSet\u003c\u003e(personToCopy.getEventTags());","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"peienlim"},"content":"     * Parses the {@code eventTags} into a {@code Set\u003cEventTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"peienlim"},"content":"    public PersonBuilder withEventTags(String... eventTags) {","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"peienlim"},"content":"        this.eventTags \u003d SampleDataUtil.getEventTagSet(eventTags);","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"peienlim"},"content":"        return this;","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":105,"author":{"gitId":"peienlim"},"content":"        return new Person(name, phone, email, address, tags, eventTags);","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"peienlim":13,"-":95}},{"path":"src/test/java/seedu/address/testutil/TypicalEventTags.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jonpwk"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"jonpwk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"jonpwk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"jonpwk"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"jonpwk"},"content":"import java.util.List;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"jonpwk"},"content":"import seedu.address.model.tag.EventTag;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"jonpwk"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"jonpwk"},"content":" * A utility class containing a list of {@code Tag} objects to be used in tests.","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"jonpwk"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"jonpwk"},"content":"public class TypicalEventTags {","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"jonpwk"},"content":"    public static final EventTag MEETING \u003d new EventTag(\"meeting\",","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"jonpwk"},"content":"            \"Team meeting\",","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"jonpwk"},"content":"            LocalDateTime.parse(\"2024-04-01T09:00:00\"),","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"jonpwk"},"content":"            LocalDateTime.parse(\"2024-04-01T10:00:00\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"jonpwk"},"content":"    public static final EventTag PRESENTATION \u003d new EventTag(\"presentation\",","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"jonpwk"},"content":"            \"Project presentation\",","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"jonpwk"},"content":"            LocalDateTime.parse(\"2024-04-05T14:00:00\"),","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"jonpwk"},"content":"            LocalDateTime.parse(\"2024-04-05T16:00:00\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"jonpwk"},"content":"    public static final EventTag BIRTHDAY \u003d new EventTag(\"birthday\",","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"jonpwk"},"content":"            \"Birthday party\",","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"jonpwk"},"content":"            LocalDateTime.parse(\"2024-04-10T18:00:00\"),","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"jonpwk"},"content":"            LocalDateTime.parse(\"2024-04-10T22:00:00\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"jonpwk"},"content":"    private TypicalEventTags() {}","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"jonpwk"},"content":"    public static List\u003cEventTag\u003e getTypicalEventTags() {","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"jonpwk"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(MEETING, PRESENTATION, BIRTHDAY));","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"jonpwk"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"jonpwk":32}},{"path":"src/test/java/seedu/address/testutil/TypicalNames.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cleowenxuan"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"cleowenxuan"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"cleowenxuan"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"cleowenxuan"},"content":" * A utility class containing a list of {@code Name} objects to be used in tests.","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"cleowenxuan"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"cleowenxuan"},"content":"public class TypicalNames {","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"cleowenxuan"},"content":"    // Example names","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"cleowenxuan"},"content":"    public static final Name NAME_ALICE \u003d new Name(\"Alice\");","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"cleowenxuan"},"content":"    public static final Name NAME_BOB \u003d new Name(\"Bob\");","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"cleowenxuan"},"content":"    public static final Name NAME_CAROL \u003d new Name(\"Carol\");","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"cleowenxuan"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"cleowenxuan":13}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"jonpwk"},"content":"import static seedu.address.testutil.TypicalEventTags.getTypicalEventTags;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"peienlim"},"content":"import static seedu.address.testutil.TypicalTags.getTypicalTags;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"jonpwk"},"content":"import seedu.address.model.tag.EventTag;","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"peienlim"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":71,"author":{"gitId":"jonpwk"},"content":"        for (Tag tag : getTypicalTags()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"jonpwk"},"content":"            ab.addTag(tag);","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":77,"author":{"gitId":"jonpwk"},"content":"        for (EventTag eventTag : getTypicalEventTags()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"jonpwk"},"content":"            ab.addEventTag(eventTag);","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"jonpwk":7,"peienlim":3,"-":76}},{"path":"src/test/java/seedu/address/testutil/TypicalTags.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peienlim"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"peienlim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"peienlim"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"peienlim"},"content":"import java.util.List;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"peienlim"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"peienlim"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"peienlim"},"content":" * A utility class containing a list of {@code Tag} objects to be used in tests.","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"peienlim"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"peienlim"},"content":"public class TypicalTags {","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"peienlim"},"content":"    public static final Tag FRIEND \u003d new Tag(\"friends\");","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"peienlim"},"content":"    public static final Tag OWES_MONEY \u003d new Tag(\"owesMoney\");","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"peienlim"},"content":"    public static final Tag COLLEAGUE \u003d new Tag(\"colleagues\");","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"peienlim"},"content":"    private TypicalTags() {}","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"peienlim"},"content":"    public static List\u003cTag\u003e getTypicalTags() {","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"peienlim"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(FRIEND, OWES_MONEY, COLLEAGUE));","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"peienlim"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"peienlim":23}}]
