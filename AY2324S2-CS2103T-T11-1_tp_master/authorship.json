[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ReflectiveObsidian"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103T-T11-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-T11-1/tp/actions) [![codecov](https://codecov.io/gh/AY2324S2-CS2103T-T11-1/tp/graph/badge.svg?token\u003dadCrBd42f9)](https://codecov.io/gh/AY2324S2-CS2103T-T11-1/tp)","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"**Journal for Enthusiasts in Noting Genealogical Associations**","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"ReflectiveObsidian"},"content":"### Introduction","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"JENGA helps Genealogists keep track of details of relatives, and easy storage and retrieval of the relationship between relatives. It does not cover discovery of new information, other than highlighting links/anomalies between existing information.","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ReflectiveObsidian"},"content":"### Documentation","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"ReflectiveObsidian"},"content":"- [User Guide](https://github.com/AY2324S2-CS2103T-T11-1/tp/blob/master/docs/UserGuide.md)","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"ReflectiveObsidian"},"content":"- [Developer Guide](https://github.com/AY2324S2-CS2103T-T11-1/tp/blob/master/docs/DeveloperGuide.md)","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"ReflectiveObsidian"},"content":"---","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"ReflectiveObsidian"},"content":"**Acknowledgements**","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"ReflectiveObsidian"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"ReflectiveObsidian"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"ReflectiveObsidian":13,"Bandov":2,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"DingBao-sys"},"content":"\u003ch1 align\u003dcenter\u003e\u003ci\u003eABOUT US\u003c/i\u003e\u003c/h1\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"DingBao-sys"},"content":"---","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"DingBao-sys"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore] (http://www.comp.nus.edu.sg). ","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"DingBao-sys"},"content":"You can reach us at the email \u003ccode\u003eseer[at]comp.nus.edu.sg\u003c/code\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"DingBao-sys"},"content":"\u003c/p\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"DingBao-sys"},"content":"\u003ch2 align\u003dcenter\u003e\u003ci\u003eProject team\u003c/I\u003e\u003c/h2\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"DingBao-sys"},"content":"|                                                                      Name                                                                       |   Role    | Responsibility                    |","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"DingBao-sys"},"content":"|:-----------------------------------------------------------------------------------------------------------------------------------------------:|:---------:|:----------------------------------|","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"ReflectiveObsidian"},"content":"| \u003ch2\u003eREFLECTIVE OBSIDIAN\u003c/h2\u003e\u003c/br\u003e\u003cimg src\u003d\"images/reflectiveobsidian.png\" width\u003d\"200px\"\u003e\u003c/br\u003e[[github](https://github.com/ReflectiveObsidian)] | Developer | \u003cul\u003e\u003cli\u003eData\u003c/li\u003e\u003cli\u003eLogic\u003c/li\u003e   |","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"DingBao-sys"},"content":"|                    \u003ch2\u003eBandov\u003c/h2\u003e\u003c/br\u003e\u003cimg src\u003d\"images/bandov.png\" width\u003d\"200px\"\u003e\u003c/br\u003e[[github](https://github.com/Bandov)]                    | Developer | \u003cul\u003e\u003cli\u003eUI\u003c/li\u003e\u003cli\u003eModel\u003c/li\u003e     |","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"DingBao-sys"},"content":"|                  \u003ch2\u003eTsenrae\u003c/h2\u003e\u003c/br\u003e\u003cimg src\u003d\"images/tsenrae.png\" width\u003d\"200px\"\u003e\u003c/br\u003e[[github](https://github.com/Tsenrae)]                   | Developer | \u003cul\u003e\u003cli\u003eData\u003c/li\u003e\u003cli\u003eStorage\u003c/li\u003e |","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"DingBao-sys"},"content":"|            \u003ch2\u003eDingBao-sys\u003c/h2\u003e\u003c/br\u003e\u003cimg src\u003d\"images/dingbao-sys.png\" width\u003d\"200px\"\u003e\u003c/br\u003e[[github](https://github.com/DingBao-sys)]             | Developer | \u003cul\u003e\u003cli\u003eUI\u003c/li\u003e\u003cli\u003eModel\u003c/li\u003e     |","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"DingBao-sys"},"content":"|         \u003ch2\u003eEmberlynn-Loo\u003c/h2\u003e\u003c/br\u003e\u003cimg src\u003d\"images/emberlynn-loo.png\" width\u003d\"200px\"\u003e\u003c/br\u003e[[github](https://github.com/Emberlynn-Loo)]          | Developer | \u003cul\u003e\u003cli\u003eData\u003c/li\u003e\u003cli\u003eModel\u003c/li\u003e   |","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"DingBao-sys":12,"ReflectiveObsidian":1,"-":6}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-02-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Logic.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Model.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":252,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":253,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":254,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":255,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"Bandov"},"content":"* Has many family members to keep track off","lastModifiedDate":"2024-02-29"},{"lineNumber":266,"author":{"gitId":"Bandov"},"content":"* Wants to keep various information about these different family members","lastModifiedDate":"2024-02-29"},{"lineNumber":267,"author":{"gitId":"Bandov"},"content":"* Wants to visualize connections between family members","lastModifiedDate":"2024-02-29"},{"lineNumber":268,"author":{"gitId":"Bandov"},"content":"* Often only has provisional or partial information about their family members","lastModifiedDate":"2024-02-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"Bandov"},"content":"**Value proposition**: JENGA puts connections between people at the forefront.","lastModifiedDate":"2024-02-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"| Priority | As a …​ | I want to …​                    | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"Bandov"},"content":"|----------|--------| ----------------------------- | ---------------------------------------------------------------------- |","lastModifiedDate":"2024-02-29"},{"lineNumber":279,"author":{"gitId":"Bandov"},"content":"| `* * *`  | user   | Create a new person with a Unique User ID        | Ensure every person in my address book is distinct                 |","lastModifiedDate":"2024-02-29"},{"lineNumber":280,"author":{"gitId":"Bandov"},"content":"| `* * *`  | user   | Add custom attributes to each person              |Store personal information relevant to each individual                                                                        |","lastModifiedDate":"2024-02-29"},{"lineNumber":281,"author":{"gitId":"Bandov"},"content":"| `* * *`  | user   | Establish and record relationships between people               | Visualize connections between people                                   |","lastModifiedDate":"2024-02-29"},{"lineNumber":282,"author":{"gitId":"Bandov"},"content":"| `* * *`  | user   | Find the relationship path between people        | Understand how everyone is connected |","lastModifiedDate":"2024-02-29"},{"lineNumber":283,"author":{"gitId":"Bandov"},"content":"| `* *`    | user   | Have clear success or failure messages after actions | Ensure that the intended action has taken place                |","lastModifiedDate":"2024-02-29"},{"lineNumber":284,"author":{"gitId":"Bandov"},"content":"| `* *`    | user   | Sort and search a person by their attributes       | Find specific individuals more easily                                                |","lastModifiedDate":"2024-02-29"},{"lineNumber":285,"author":{"gitId":"Bandov"},"content":"| `* * *`  | user   | Have my data automatically saved once i exit the app and loaded once i start the app        | Seamless experience across different sessions |","lastModifiedDate":"2024-02-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"Emberlynn-Loo"},"content":"**Use case: Add a new person**","lastModifiedDate":"2024-03-03"},{"lineNumber":294,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":295,"author":{"gitId":"Emberlynn-Loo"},"content":"**MSS**","lastModifiedDate":"2024-03-03"},{"lineNumber":296,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":297,"author":{"gitId":"Emberlynn-Loo"},"content":"1.  User requests to add a new person to JENGA.","lastModifiedDate":"2024-03-03"},{"lineNumber":298,"author":{"gitId":"Emberlynn-Loo"},"content":"2.  JENGA prompts user for details of new person.","lastModifiedDate":"2024-03-03"},{"lineNumber":299,"author":{"gitId":"Emberlynn-Loo"},"content":"3.  User enters the necessary information.","lastModifiedDate":"2024-03-03"},{"lineNumber":300,"author":{"gitId":"Emberlynn-Loo"},"content":"4.  JENGA adds person with the provided details.","lastModifiedDate":"2024-03-03"},{"lineNumber":301,"author":{"gitId":"Emberlynn-Loo"},"content":"5.  JENGA displays new person added and confirmation message.","lastModifiedDate":"2024-03-03"},{"lineNumber":302,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":303,"author":{"gitId":"Emberlynn-Loo"},"content":"    Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":304,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":305,"author":{"gitId":"Emberlynn-Loo"},"content":"**Extensions**","lastModifiedDate":"2024-03-03"},{"lineNumber":306,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":307,"author":{"gitId":"Emberlynn-Loo"},"content":"* 3a. User enters incomplete or invalid information.","lastModifiedDate":"2024-03-03"},{"lineNumber":308,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":309,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a1. JENGA shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":310,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":311,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a2. JENGA prompts User to enter the correct and complete information.","lastModifiedDate":"2024-03-03"},{"lineNumber":312,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":313,"author":{"gitId":"Emberlynn-Loo"},"content":"      Steps 3a1-3a2 are repeated until the data entered are correct.","lastModifiedDate":"2024-03-03"},{"lineNumber":314,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":315,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2024-03-03"},{"lineNumber":316,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":317,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"Emberlynn-Loo"},"content":"1.  User requests to list persons.","lastModifiedDate":"2024-03-03"},{"lineNumber":322,"author":{"gitId":"Emberlynn-Loo"},"content":"2.  JENGA displays a list of persons.","lastModifiedDate":"2024-03-03"},{"lineNumber":323,"author":{"gitId":"Emberlynn-Loo"},"content":"3.  User selects a specific person in the list to delete by providing the person’s UUID.","lastModifiedDate":"2024-03-03"},{"lineNumber":324,"author":{"gitId":"Emberlynn-Loo"},"content":"4.  JENGA deletes the person.","lastModifiedDate":"2024-03-03"},{"lineNumber":325,"author":{"gitId":"Emberlynn-Loo"},"content":"5.  JENGA displays confirmation message.","lastModifiedDate":"2024-03-03"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 2a1. JENGA informs the user the list is empty.","lastModifiedDate":"2024-03-03"},{"lineNumber":334,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":335,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":336,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":337,"author":{"gitId":"Emberlynn-Loo"},"content":"* 3a. Given UUID is invalid or does not exist.","lastModifiedDate":"2024-03-03"},{"lineNumber":338,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":339,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a1. JENGA shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":340,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":341,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case resumes at step 4.","lastModifiedDate":"2024-03-03"},{"lineNumber":342,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":343,"author":{"gitId":"Emberlynn-Loo"},"content":"**Use case: Add an attribute to a person**","lastModifiedDate":"2024-03-03"},{"lineNumber":344,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":345,"author":{"gitId":"Emberlynn-Loo"},"content":"**MSS**","lastModifiedDate":"2024-03-03"},{"lineNumber":346,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":347,"author":{"gitId":"Emberlynn-Loo"},"content":"1.  User requests to add an attribute to a person.","lastModifiedDate":"2024-03-03"},{"lineNumber":348,"author":{"gitId":"Emberlynn-Loo"},"content":"2.  JENGA prompts user to enter the person’s UUID and attribute details.","lastModifiedDate":"2024-03-03"},{"lineNumber":349,"author":{"gitId":"Emberlynn-Loo"},"content":"3.  User enters UUID and attribute information.","lastModifiedDate":"2024-03-03"},{"lineNumber":350,"author":{"gitId":"Emberlynn-Loo"},"content":"4.  JENGA adds attribute details to specific person’s profile.","lastModifiedDate":"2024-03-03"},{"lineNumber":351,"author":{"gitId":"Emberlynn-Loo"},"content":"5.  JENGA displays attribute in person’s profile and confirmation message.","lastModifiedDate":"2024-03-03"},{"lineNumber":352,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":353,"author":{"gitId":"Emberlynn-Loo"},"content":"    Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":354,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":355,"author":{"gitId":"Emberlynn-Loo"},"content":"**Extensions**","lastModifiedDate":"2024-03-03"},{"lineNumber":356,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":357,"author":{"gitId":"Emberlynn-Loo"},"content":"* 3a. Attribute details are invalid.","lastModifiedDate":"2024-03-03"},{"lineNumber":358,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":359,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a1. JENGA shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":360,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":361,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a2. JENGA prompts User to enter the correct and complete information.","lastModifiedDate":"2024-03-03"},{"lineNumber":362,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":363,"author":{"gitId":"Emberlynn-Loo"},"content":"      Steps 3a1-3a2 are repeated until the data entered are correct.","lastModifiedDate":"2024-03-03"},{"lineNumber":364,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":365,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2024-03-03"},{"lineNumber":366,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":367,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":368,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":369,"author":{"gitId":"Emberlynn-Loo"},"content":"* 3b. Given UUID is invalid or does not exist.","lastModifiedDate":"2024-03-03"},{"lineNumber":370,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":371,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a1. JENGA shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":372,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":373,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a2. JENGA prompts User to enter the correct and complete information.","lastModifiedDate":"2024-03-03"},{"lineNumber":374,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":375,"author":{"gitId":"Emberlynn-Loo"},"content":"      Steps 3a1-3a2 are repeated until the data entered are correct.","lastModifiedDate":"2024-03-03"},{"lineNumber":376,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":377,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2024-03-03"},{"lineNumber":378,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":379,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":380,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":381,"author":{"gitId":"Emberlynn-Loo"},"content":"**Use case: Edit to add an attribute to a person**","lastModifiedDate":"2024-03-03"},{"lineNumber":382,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":383,"author":{"gitId":"Emberlynn-Loo"},"content":"**MSS**","lastModifiedDate":"2024-03-03"},{"lineNumber":384,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":385,"author":{"gitId":"Emberlynn-Loo"},"content":"1.  User requests to edit to add an attribute to a person.","lastModifiedDate":"2024-03-03"},{"lineNumber":386,"author":{"gitId":"Emberlynn-Loo"},"content":"2.  JENGA prompts user to enter the person’s UUID and attribute details to add.","lastModifiedDate":"2024-03-03"},{"lineNumber":387,"author":{"gitId":"Emberlynn-Loo"},"content":"3.  User enters UUID and attribute information.","lastModifiedDate":"2024-03-03"},{"lineNumber":388,"author":{"gitId":"Emberlynn-Loo"},"content":"4.  JENGA adds attribute details to specific person’s profile.","lastModifiedDate":"2024-03-03"},{"lineNumber":389,"author":{"gitId":"Emberlynn-Loo"},"content":"5.  JENGA displays attribute in person’s profile and confirmation message.","lastModifiedDate":"2024-03-03"},{"lineNumber":390,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":391,"author":{"gitId":"Emberlynn-Loo"},"content":"    Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":392,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":393,"author":{"gitId":"Emberlynn-Loo"},"content":"**Extensions**","lastModifiedDate":"2024-03-03"},{"lineNumber":394,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":395,"author":{"gitId":"Emberlynn-Loo"},"content":"* 3a. Attribute details are invalid.","lastModifiedDate":"2024-03-03"},{"lineNumber":396,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":397,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a1. JENGA shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":399,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a2. JENGA prompts User to enter the correct and complete information.","lastModifiedDate":"2024-03-03"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":401,"author":{"gitId":"Emberlynn-Loo"},"content":"      Steps 3a1-3a2 are repeated until the data entered are correct.","lastModifiedDate":"2024-03-03"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":403,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2024-03-03"},{"lineNumber":404,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":405,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":406,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":407,"author":{"gitId":"Emberlynn-Loo"},"content":"* 3b. Given UUID is invalid or does not exist.","lastModifiedDate":"2024-03-03"},{"lineNumber":408,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":409,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a1. JENGA shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":410,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":411,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a2. JENGA prompts User to enter the correct and complete information.","lastModifiedDate":"2024-03-03"},{"lineNumber":412,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":413,"author":{"gitId":"Emberlynn-Loo"},"content":"      Steps 3a1-3a2 are repeated until the data entered are correct.","lastModifiedDate":"2024-03-03"},{"lineNumber":414,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":415,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2024-03-03"},{"lineNumber":416,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":417,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":418,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":419,"author":{"gitId":"Emberlynn-Loo"},"content":"**Use case: Edit to delete an attribute to a person**","lastModifiedDate":"2024-03-03"},{"lineNumber":420,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":421,"author":{"gitId":"Emberlynn-Loo"},"content":"**MSS**","lastModifiedDate":"2024-03-03"},{"lineNumber":422,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":423,"author":{"gitId":"Emberlynn-Loo"},"content":"1.  User requests to edit to delete an attribute to a person.","lastModifiedDate":"2024-03-03"},{"lineNumber":424,"author":{"gitId":"Emberlynn-Loo"},"content":"2.  JENGA prompts user to enter the person’s UUID and attribute to delete.","lastModifiedDate":"2024-03-03"},{"lineNumber":425,"author":{"gitId":"Emberlynn-Loo"},"content":"3.  User enters UUID and attribute information.","lastModifiedDate":"2024-03-03"},{"lineNumber":426,"author":{"gitId":"Emberlynn-Loo"},"content":"4.  JENGA deletes attribute in specific person’s profile.","lastModifiedDate":"2024-03-03"},{"lineNumber":427,"author":{"gitId":"Emberlynn-Loo"},"content":"5.  JENGA displays confirmation message.","lastModifiedDate":"2024-03-03"},{"lineNumber":428,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":429,"author":{"gitId":"Emberlynn-Loo"},"content":"    Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":430,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":431,"author":{"gitId":"Emberlynn-Loo"},"content":"**Extensions**","lastModifiedDate":"2024-03-03"},{"lineNumber":432,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":433,"author":{"gitId":"Emberlynn-Loo"},"content":"* 3a. Attribute details are invalid.","lastModifiedDate":"2024-03-03"},{"lineNumber":434,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":435,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a1. JENGA shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":436,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":437,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a2. JENGA prompts User to enter the correct and complete information.","lastModifiedDate":"2024-03-03"},{"lineNumber":438,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":439,"author":{"gitId":"Emberlynn-Loo"},"content":"      Steps 3a1-3a2 are repeated until the data entered are correct.","lastModifiedDate":"2024-03-03"},{"lineNumber":440,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":441,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2024-03-03"},{"lineNumber":442,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":443,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":444,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":445,"author":{"gitId":"Emberlynn-Loo"},"content":"* 3b. Given UUID is invalid or does not exist.","lastModifiedDate":"2024-03-03"},{"lineNumber":446,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":447,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a1. JENGA shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":448,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":449,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a2. JENGA prompts User to enter the correct and complete information.","lastModifiedDate":"2024-03-03"},{"lineNumber":450,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":451,"author":{"gitId":"Emberlynn-Loo"},"content":"      Steps 3a1-3a2 are repeated until the data entered are correct.","lastModifiedDate":"2024-03-03"},{"lineNumber":452,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":453,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2024-03-03"},{"lineNumber":454,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":455,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":456,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":457,"author":{"gitId":"Emberlynn-Loo"},"content":"**Use case: Delete a person**","lastModifiedDate":"2024-03-03"},{"lineNumber":458,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":459,"author":{"gitId":"Emberlynn-Loo"},"content":"**MSS**","lastModifiedDate":"2024-03-03"},{"lineNumber":460,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":461,"author":{"gitId":"Emberlynn-Loo"},"content":"1.  User requests to delete a person.","lastModifiedDate":"2024-03-03"},{"lineNumber":462,"author":{"gitId":"Emberlynn-Loo"},"content":"2.  JENGA prompts user for details of person.","lastModifiedDate":"2024-03-03"},{"lineNumber":463,"author":{"gitId":"Emberlynn-Loo"},"content":"3.  User enters person’s UUID.","lastModifiedDate":"2024-03-03"},{"lineNumber":464,"author":{"gitId":"Emberlynn-Loo"},"content":"4.  JENGA deletes person.","lastModifiedDate":"2024-03-03"},{"lineNumber":465,"author":{"gitId":"Emberlynn-Loo"},"content":"5.  JENGA displays confirmation message.","lastModifiedDate":"2024-03-03"},{"lineNumber":466,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":467,"author":{"gitId":"Emberlynn-Loo"},"content":"    Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":468,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":469,"author":{"gitId":"Emberlynn-Loo"},"content":"**Extensions**","lastModifiedDate":"2024-03-03"},{"lineNumber":470,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":471,"author":{"gitId":"Emberlynn-Loo"},"content":"* 3a. Given UUID is invalid or does not exist.","lastModifiedDate":"2024-03-03"},{"lineNumber":472,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":473,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a1. JENGA shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":474,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":475,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a2. JENGA prompts User to enter the correct and complete information.","lastModifiedDate":"2024-03-03"},{"lineNumber":476,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":477,"author":{"gitId":"Emberlynn-Loo"},"content":"      Steps 3a1-3a2 are repeated until the data entered are correct.","lastModifiedDate":"2024-03-03"},{"lineNumber":478,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":479,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2024-03-03"},{"lineNumber":480,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":481,"author":{"gitId":"Emberlynn-Loo"},"content":"**Use case: Find persons by attribute**","lastModifiedDate":"2024-03-03"},{"lineNumber":482,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":483,"author":{"gitId":"Emberlynn-Loo"},"content":"**MSS**","lastModifiedDate":"2024-03-03"},{"lineNumber":484,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":485,"author":{"gitId":"Emberlynn-Loo"},"content":"1.  User requests to find persons by attribute.","lastModifiedDate":"2024-03-03"},{"lineNumber":486,"author":{"gitId":"Emberlynn-Loo"},"content":"2.  JENGA prompts user for attribute and attribute value(s).","lastModifiedDate":"2024-03-03"},{"lineNumber":487,"author":{"gitId":"Emberlynn-Loo"},"content":"3.  User enters attribute name and attribute value(s).","lastModifiedDate":"2024-03-03"},{"lineNumber":488,"author":{"gitId":"Emberlynn-Loo"},"content":"4.  JENGA displays list of persons with each of the specified attributes.","lastModifiedDate":"2024-03-03"},{"lineNumber":489,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":490,"author":{"gitId":"Emberlynn-Loo"},"content":"    Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":491,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":492,"author":{"gitId":"Emberlynn-Loo"},"content":"**Extensions**","lastModifiedDate":"2024-03-03"},{"lineNumber":493,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":494,"author":{"gitId":"Emberlynn-Loo"},"content":"* 3a. Attribute details are invalid or does not exist.","lastModifiedDate":"2024-03-03"},{"lineNumber":495,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":496,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a1. JENGA shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":497,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":498,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a2. JENGA prompts User to enter the correct and complete information.","lastModifiedDate":"2024-03-03"},{"lineNumber":499,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":500,"author":{"gitId":"Emberlynn-Loo"},"content":"      Steps 3a1-3a2 are repeated until the data entered are correct.","lastModifiedDate":"2024-03-03"},{"lineNumber":501,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":502,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2024-03-03"},{"lineNumber":503,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":504,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":505,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":506,"author":{"gitId":"Emberlynn-Loo"},"content":"* 4a. The list is empty.","lastModifiedDate":"2024-03-03"},{"lineNumber":507,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":508,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 4a1. JENGA informs the user the list is empty.","lastModifiedDate":"2024-03-03"},{"lineNumber":509,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":510,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":511,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":512,"author":{"gitId":"Emberlynn-Loo"},"content":"**Use case: Find persons by relationship to User**","lastModifiedDate":"2024-03-03"},{"lineNumber":513,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":514,"author":{"gitId":"Emberlynn-Loo"},"content":"**MSS**","lastModifiedDate":"2024-03-03"},{"lineNumber":515,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":516,"author":{"gitId":"Emberlynn-Loo"},"content":"1.  User requests to find persons by relationship.","lastModifiedDate":"2024-03-03"},{"lineNumber":517,"author":{"gitId":"Emberlynn-Loo"},"content":"2.  JENGA prompts user for relationship to User.","lastModifiedDate":"2024-03-03"},{"lineNumber":518,"author":{"gitId":"Emberlynn-Loo"},"content":"3.  User enters relationship type.","lastModifiedDate":"2024-03-03"},{"lineNumber":519,"author":{"gitId":"Emberlynn-Loo"},"content":"4.  JENGA displays list of persons with specified relationship to User.","lastModifiedDate":"2024-03-03"},{"lineNumber":520,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":521,"author":{"gitId":"Emberlynn-Loo"},"content":"    Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":522,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":523,"author":{"gitId":"Emberlynn-Loo"},"content":"**Extensions**","lastModifiedDate":"2024-03-03"},{"lineNumber":524,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":525,"author":{"gitId":"Emberlynn-Loo"},"content":"* 3a. Relationship is invalid or does not exist.","lastModifiedDate":"2024-03-03"},{"lineNumber":526,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":527,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a1. JENGA shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":528,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":529,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a2. JENGA prompts User to enter the correct and complete information.","lastModifiedDate":"2024-03-03"},{"lineNumber":530,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":531,"author":{"gitId":"Emberlynn-Loo"},"content":"      Steps 3a1-3a2 are repeated until the data entered are correct.","lastModifiedDate":"2024-03-03"},{"lineNumber":532,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":533,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2024-03-03"},{"lineNumber":534,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":535,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":536,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":537,"author":{"gitId":"Emberlynn-Loo"},"content":"**Use case: Add a relationship between two persons**","lastModifiedDate":"2024-03-03"},{"lineNumber":538,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":539,"author":{"gitId":"Emberlynn-Loo"},"content":"**MSS**","lastModifiedDate":"2024-03-03"},{"lineNumber":540,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":541,"author":{"gitId":"Emberlynn-Loo"},"content":"1.  User requests to add a relationship between two persons.","lastModifiedDate":"2024-03-03"},{"lineNumber":542,"author":{"gitId":"Emberlynn-Loo"},"content":"2.  JENGA prompts user for UUIDs of both persons and relationship type.","lastModifiedDate":"2024-03-03"},{"lineNumber":543,"author":{"gitId":"Emberlynn-Loo"},"content":"3.  User enters both persons UUID and relationship type.","lastModifiedDate":"2024-03-03"},{"lineNumber":544,"author":{"gitId":"Emberlynn-Loo"},"content":"4.  JENGA creates a relationship with the provided details.","lastModifiedDate":"2024-03-03"},{"lineNumber":545,"author":{"gitId":"Emberlynn-Loo"},"content":"5.  JENGA displays new relationship added under both persons’ profiles and confirmation message.","lastModifiedDate":"2024-03-03"},{"lineNumber":546,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":547,"author":{"gitId":"Emberlynn-Loo"},"content":"    Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":548,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":549,"author":{"gitId":"Emberlynn-Loo"},"content":"**Extensions**","lastModifiedDate":"2024-03-03"},{"lineNumber":550,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":551,"author":{"gitId":"Emberlynn-Loo"},"content":"* 3a. Relationship type is invalid.","lastModifiedDate":"2024-03-03"},{"lineNumber":552,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":553,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a1. JENGA shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":554,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":555,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a2. JENGA prompts User to enter the correct and complete information.","lastModifiedDate":"2024-03-03"},{"lineNumber":556,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":557,"author":{"gitId":"Emberlynn-Loo"},"content":"      Steps 3a1-3a2 are repeated until the data entered are correct.","lastModifiedDate":"2024-03-03"},{"lineNumber":558,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":559,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2024-03-03"},{"lineNumber":560,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":561,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":562,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":563,"author":{"gitId":"Emberlynn-Loo"},"content":"* 3b. Given UUIDs are invalid or does not exist.","lastModifiedDate":"2024-03-03"},{"lineNumber":564,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":565,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a1. JENGA shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":566,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":567,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a2. JENGA prompts User to enter the correct and complete information.","lastModifiedDate":"2024-03-03"},{"lineNumber":568,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":569,"author":{"gitId":"Emberlynn-Loo"},"content":"      Steps 3a1-3a2 are repeated until the data entered are correct.","lastModifiedDate":"2024-03-03"},{"lineNumber":570,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":571,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2024-03-03"},{"lineNumber":572,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":573,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":574,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":575,"author":{"gitId":"Emberlynn-Loo"},"content":"**Use case: Edit a relationship between two persons**","lastModifiedDate":"2024-03-03"},{"lineNumber":576,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":577,"author":{"gitId":"Emberlynn-Loo"},"content":"**MSS**","lastModifiedDate":"2024-03-03"},{"lineNumber":578,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":579,"author":{"gitId":"Emberlynn-Loo"},"content":"1.  User requests to edit a specific relationship between two persons.","lastModifiedDate":"2024-03-03"},{"lineNumber":580,"author":{"gitId":"Emberlynn-Loo"},"content":"2.  JENGA prompts user for UUIDs of both persons and previous and new relationship type.","lastModifiedDate":"2024-03-03"},{"lineNumber":581,"author":{"gitId":"Emberlynn-Loo"},"content":"3.  User enters both persons UUID and previous and new relationship type.","lastModifiedDate":"2024-03-03"},{"lineNumber":582,"author":{"gitId":"Emberlynn-Loo"},"content":"4.  JENGA edits the specified relationship with the provided details.","lastModifiedDate":"2024-03-03"},{"lineNumber":583,"author":{"gitId":"Emberlynn-Loo"},"content":"5.  JENGA displays edited relationship under both persons’ profiles and confirmation message.","lastModifiedDate":"2024-03-03"},{"lineNumber":584,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":585,"author":{"gitId":"Emberlynn-Loo"},"content":"    Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":586,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":587,"author":{"gitId":"Emberlynn-Loo"},"content":"**Extensions**","lastModifiedDate":"2024-03-03"},{"lineNumber":588,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":589,"author":{"gitId":"Emberlynn-Loo"},"content":"* 3a. Relationship types are invalid.","lastModifiedDate":"2024-03-03"},{"lineNumber":590,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":591,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a1. JENGA shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":592,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":593,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a2. JENGA prompts User to enter the correct and complete information.","lastModifiedDate":"2024-03-03"},{"lineNumber":594,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":595,"author":{"gitId":"Emberlynn-Loo"},"content":"      Steps 3a1-3a2 are repeated until the data entered are correct.","lastModifiedDate":"2024-03-03"},{"lineNumber":596,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":597,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2024-03-03"},{"lineNumber":598,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":599,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":600,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":601,"author":{"gitId":"Emberlynn-Loo"},"content":"* 3b. Given UUIDs are invalid or does not exist.","lastModifiedDate":"2024-03-03"},{"lineNumber":602,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":603,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a1. JENGA shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":604,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":605,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a2. JENGA prompts User to enter the correct and complete information.","lastModifiedDate":"2024-03-03"},{"lineNumber":606,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":607,"author":{"gitId":"Emberlynn-Loo"},"content":"      Steps 3a1-3a2 are repeated until the data entered are correct.","lastModifiedDate":"2024-03-03"},{"lineNumber":608,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":609,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2024-03-03"},{"lineNumber":610,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":611,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"Emberlynn-Loo"},"content":"**Use case: Delete a relationship between two persons**","lastModifiedDate":"2024-03-03"},{"lineNumber":614,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"Emberlynn-Loo"},"content":"**MSS**","lastModifiedDate":"2024-03-03"},{"lineNumber":616,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":617,"author":{"gitId":"Emberlynn-Loo"},"content":"1.  User requests to delete a specific relationship between two persons.","lastModifiedDate":"2024-03-03"},{"lineNumber":618,"author":{"gitId":"Emberlynn-Loo"},"content":"2.  JENGA prompts user for UUIDs of both persons and relationship type.","lastModifiedDate":"2024-03-03"},{"lineNumber":619,"author":{"gitId":"Emberlynn-Loo"},"content":"3.  User enters both persons UUID and specified relationship type.","lastModifiedDate":"2024-03-03"},{"lineNumber":620,"author":{"gitId":"Emberlynn-Loo"},"content":"4.  JENGA deletes specified relationship.","lastModifiedDate":"2024-03-03"},{"lineNumber":621,"author":{"gitId":"Emberlynn-Loo"},"content":"5.  JENGA displays confirmation message.","lastModifiedDate":"2024-03-03"},{"lineNumber":622,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":623,"author":{"gitId":"Emberlynn-Loo"},"content":"    Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":624,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":625,"author":{"gitId":"Emberlynn-Loo"},"content":"**Extensions**","lastModifiedDate":"2024-03-03"},{"lineNumber":626,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":627,"author":{"gitId":"Emberlynn-Loo"},"content":"* 3a. Relationship type is invalid.","lastModifiedDate":"2024-03-03"},{"lineNumber":628,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":629,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a1. JENGA shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":630,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":631,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a2. JENGA prompts User to enter the correct and complete information.","lastModifiedDate":"2024-03-03"},{"lineNumber":632,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":633,"author":{"gitId":"Emberlynn-Loo"},"content":"      Steps 3a1-3a2 are repeated until the data entered are correct.","lastModifiedDate":"2024-03-03"},{"lineNumber":634,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":635,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2024-03-03"},{"lineNumber":636,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":637,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":638,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"Emberlynn-Loo"},"content":"* 3b. Given UUIDs are invalid or does not exist.","lastModifiedDate":"2024-03-03"},{"lineNumber":640,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":641,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a1. JENGA shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":642,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":643,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a2. JENGA prompts User to enter the correct and complete information.","lastModifiedDate":"2024-03-03"},{"lineNumber":644,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":645,"author":{"gitId":"Emberlynn-Loo"},"content":"      Steps 3a1-3a2 are repeated until the data entered are correct.","lastModifiedDate":"2024-03-03"},{"lineNumber":646,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":647,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2024-03-03"},{"lineNumber":648,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":649,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":650,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":651,"author":{"gitId":"Emberlynn-Loo"},"content":"**Use case: Exit JENGA**","lastModifiedDate":"2024-03-03"},{"lineNumber":652,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":653,"author":{"gitId":"Emberlynn-Loo"},"content":"**MSS**","lastModifiedDate":"2024-03-03"},{"lineNumber":654,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":655,"author":{"gitId":"Emberlynn-Loo"},"content":"1.  User requests to exit JENGA.","lastModifiedDate":"2024-03-03"},{"lineNumber":656,"author":{"gitId":"Emberlynn-Loo"},"content":"2.  JENGA displays goodbye message.","lastModifiedDate":"2024-03-03"},{"lineNumber":657,"author":{"gitId":"Emberlynn-Loo"},"content":"3.  JENGA saves current data.","lastModifiedDate":"2024-03-03"},{"lineNumber":658,"author":{"gitId":"Emberlynn-Loo"},"content":"4.  JENGA closes the application window.","lastModifiedDate":"2024-03-03"},{"lineNumber":659,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":660,"author":{"gitId":"Emberlynn-Loo"},"content":"    Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":661,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":662,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":664,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"Tsenrae"},"content":"2.  Should be able to hold up to 1000 persons and relationships without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2024-03-03"},{"lineNumber":668,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"Tsenrae"},"content":"4.  User actions should prompt responses within 5 seconds, maintaining acceptable performance standards.","lastModifiedDate":"2024-03-03"},{"lineNumber":670,"author":{"gitId":"Tsenrae"},"content":"5.  The user interface must be intuitive for users of varying technical proficiency levels, enhancing usability.","lastModifiedDate":"2024-03-03"},{"lineNumber":671,"author":{"gitId":"Tsenrae"},"content":"6.  The codebase should be well-documented and maintainable to facilitate future updates and enhancements.","lastModifiedDate":"2024-03-03"},{"lineNumber":672,"author":{"gitId":"Tsenrae"},"content":"7.  Comprehensive documentation should be provided for developers, administrators, and end-users, supporting ease of use.","lastModifiedDate":"2024-03-03"},{"lineNumber":673,"author":{"gitId":"Tsenrae"},"content":"8.  The system should be able to handle data corruption or loss gracefully, minimizing the impact on users.","lastModifiedDate":"2024-03-03"},{"lineNumber":674,"author":{"gitId":"Tsenrae"},"content":"9.  The system architecture should support future extensions or customizations, allowing for easy addition of new features.","lastModifiedDate":"2024-03-03"},{"lineNumber":675,"author":{"gitId":"Tsenrae"},"content":"10. Interoperability with other systems should be supported through standard protocols and formats, promoting seamless integration.","lastModifiedDate":"2024-03-03"},{"lineNumber":676,"author":{"gitId":"Tsenrae"},"content":"11. The system should be designed with testability in mind, allowing for comprehensive testing of all components, features, and scenarios.","lastModifiedDate":"2024-03-03"},{"lineNumber":677,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":678,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":679,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":680,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09"},{"lineNumber":681,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":682,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":683,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":684,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":685,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":686,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":687,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":688,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":689,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":690,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":691,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":692,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":693,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":694,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":695,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":696,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":697,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":698,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":699,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":700,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":701,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":702,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":703,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":704,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":705,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":706,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":707,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":708,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":709,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":710,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":711,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":712,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":713,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":714,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":715,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":716,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":717,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":718,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":719,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":720,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":721,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":722,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":723,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":724,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":725,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":726,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":727,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":728,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":729,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":730,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":731,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":732,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":733,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":734,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Bandov":13,"-":362,"Emberlynn-Loo":350,"Tsenrae":9}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"ReflectiveObsidian"},"content":"    content: \"JENGA\";","lastModifiedDate":"2024-02-28"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"ReflectiveObsidian":1,"-":294}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"ReflectiveObsidian"},"content":"title: JENGA (Journal for Enthusiasts in Noting Genealogical Associations)","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"ReflectiveObsidian"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103T-T11-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-T11-1/tp/actions) [![codecov](https://codecov.io/gh/AY2324S2-CS2103T-T11-1/tp/graph/badge.svg?token\u003dadCrBd42f9)](https://codecov.io/gh/AY2324S2-CS2103T-T11-1/tp)","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"ReflectiveObsidian"},"content":"**JENGA helps Genealogists keep track of details of relatives**, ","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"ReflectiveObsidian"},"content":"and easy storage and retrieval of the relationship between relatives. ","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"ReflectiveObsidian"},"content":"It does not cover discovery of new information, ","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"ReflectiveObsidian"},"content":"other than highlighting links/anomalies between existing information.","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"ReflectiveObsidian"},"content":"While it has a GUI, ","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"ReflectiveObsidian"},"content":"most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* If you are interested in using AddressBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* If you are interested about developing AddressBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"ReflectiveObsidian"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ReflectiveObsidian":10,"-":14}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"    public static final String MESSAGE_INVALID_PERSON_UUID \u003d \"The UUID provided is invalid.\";","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Bandov":1,"-":51}},{"path":"src/main/java/seedu/address/logic/attribute/EditPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bandov"},"content":"package seedu.address.logic.attribute;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"import seedu.address.model.person.attribute.Attribute;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":" * This class is responsible for executing commands to edit attributes of Person objects.","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":" * It supports adding new attributes to a person and deleting existing attributes.","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"public class EditPersonCommand {","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"    private final Map\u003cString, Person\u003e personMap; // Assume this is populated elsewhere","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"     * Constructs an EditPersonCommand with a reference to the existing map of persons.","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"     * @param personMap A map linking person UUID strings to Person objects.","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"    public EditPersonCommand(Map\u003cString, Person\u003e personMap) {","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"        this.personMap \u003d personMap;","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"     * Parses and executes the given command string to modify person attributes.","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"     * Supports adding or deleting attributes based on the command.","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"     * @param command The command string to parse.","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"     * @throws IllegalArgumentException If the command format is invalid or unsupported.","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"    public void parseCommand(String command) {","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"        String[] parts \u003d command.split(\"\\\\s+\");","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"            throw new IllegalArgumentException(\"Invalid command format.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"        if (\"/add\".equals(parts[1])) {","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"Bandov"},"content":"            handleAddAttribute(parts);","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"Bandov"},"content":"        } else if (\"/delete\".equals(parts[1])) {","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"Bandov"},"content":"            handleDeleteAttribute(parts);","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"Bandov"},"content":"        } else {","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"Bandov"},"content":"            throw new IllegalArgumentException(\"Unsupported operation: \" + parts[1]);","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"Bandov"},"content":"     * Handles the addition of a new attribute to a person.","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"Bandov"},"content":"     * @param parts The components of the command, including the operation, UUID, attribute name, and attribute value.","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"Bandov"},"content":"     * @throws IllegalArgumentException If the command is incomplete or if the specified person cannot be found.","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"Bandov"},"content":"    private void handleAddAttribute(String[] parts) {","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"Bandov"},"content":"        if (parts.length \u003c 6) {","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"Bandov"},"content":"            throw new IllegalArgumentException(\"Incomplete add command.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"Bandov"},"content":"        // Extract information","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"Bandov"},"content":"        String uuid \u003d matchUuid(parts[3]);","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"Bandov"},"content":"        String attributeName \u003d parts[4];","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"Bandov"},"content":"        String attributeValue \u003d parts[5];","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"Bandov"},"content":"        // Find person and update attribute","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"Bandov"},"content":"        Person person \u003d personMap.get(uuid);","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"Bandov"},"content":"        if (person \u003d\u003d null) {","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"Bandov"},"content":"            throw new IllegalArgumentException(\"Person not found.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"Bandov"},"content":"        Attribute attribute \u003d Attribute.fromString(attributeName, attributeValue);","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"Bandov"},"content":"        person.updateAttribute(attribute);","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"Bandov"},"content":"     * Handles the deletion of an existing attribute from a person.","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"Bandov"},"content":"     * @param parts The components of the command, including the operation, UUID, and attribute name.","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"Bandov"},"content":"     * @throws IllegalArgumentException If the command is incomplete or if the specified person cannot be found.","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"Bandov"},"content":"    private void handleDeleteAttribute(String[] parts) {","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"Bandov"},"content":"        if (parts.length \u003c 5) {","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"Bandov"},"content":"            throw new IllegalArgumentException(\"Incomplete delete command.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"Bandov"},"content":"        String uuid \u003d matchUuid(parts[3]);","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"Bandov"},"content":"        String attributeName \u003d parts[4];","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"Bandov"},"content":"        // Find person and delete attribute","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"Bandov"},"content":"        Person person \u003d personMap.get(uuid);","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"Bandov"},"content":"        if (person \u003d\u003d null) {","lastModifiedDate":"2024-03-14"},{"lineNumber":91,"author":{"gitId":"Bandov"},"content":"            throw new IllegalArgumentException(\"Person not found.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":93,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":94,"author":{"gitId":"Bandov"},"content":"        person.deleteAttribute(attributeName);","lastModifiedDate":"2024-03-14"},{"lineNumber":95,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":96,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":97,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":98,"author":{"gitId":"Bandov"},"content":"     * Matches a partial UUID with the full UUIDs in the person map.","lastModifiedDate":"2024-03-14"},{"lineNumber":99,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":100,"author":{"gitId":"Bandov"},"content":"     * @param partialUuid The partial UUID to match.","lastModifiedDate":"2024-03-14"},{"lineNumber":101,"author":{"gitId":"Bandov"},"content":"     * @return The full UUID matching the partial UUID.","lastModifiedDate":"2024-03-14"},{"lineNumber":102,"author":{"gitId":"Bandov"},"content":"     * @throws IllegalArgumentException If no matching UUID is found.","lastModifiedDate":"2024-03-14"},{"lineNumber":103,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":104,"author":{"gitId":"Bandov"},"content":"    private String matchUuid(String partialUuid) {","lastModifiedDate":"2024-03-14"},{"lineNumber":105,"author":{"gitId":"Bandov"},"content":"        for (String uuid : personMap.keySet()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":106,"author":{"gitId":"Bandov"},"content":"            if (uuid.endsWith(partialUuid)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":107,"author":{"gitId":"Bandov"},"content":"                return uuid;","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"Bandov"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":110,"author":{"gitId":"Bandov"},"content":"        throw new IllegalArgumentException(\"No matching UUID found.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":111,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":112,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":113,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-03-14"},{"lineNumber":114,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":115,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":116,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Bandov":116}},{"path":"src/main/java/seedu/address/logic/attribute/EditPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bandov"},"content":"package seedu.address.logic.attribute;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":" * This class is responsible for parsing user input strings into commands for editing Person objects.","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":" * It leverages the EditPersonCommand class to perform the actual command execution, serving as a","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":" * bridge between raw user input and the structured commands needed to modify Person instances.","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"public class EditPersonCommandParser {","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"    private final Map\u003cString, Person\u003e personMap;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"     * Constructs an EditPersonCommandParser with a reference to the existing map of persons.","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"     * This map links UUID strings to Person objects and is used to look up persons during command execution.","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"     * @param personMap A map linking person UUID strings to Person objects, not null.","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"    public EditPersonCommandParser(Map\u003cString, Person\u003e personMap) {","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"        this.personMap \u003d personMap;","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"     * Parses the given user input string into an executable EditPersonCommand. The parsing process","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"     * interprets the command type (/add or /delete), validates the format of the input, and prepares","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"     * an EditPersonCommand object for execution.","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"     * The expected format of the user input is:","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"     * - For adding an attribute: \"/add /uuid [UUID] [AttributeName] [AttributeValue]\"","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"     * - For deleting an attribute: \"/delete /uuid [UUID] [AttributeName]\"","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"     * This method validates the input against these formats and constructs an appropriate command.","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"Bandov"},"content":"     * @param userInput The user input string representing a command to edit a Person\u0027s attributes.","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"Bandov"},"content":"     * @return An instance of EditPersonCommand prepared for execution based on the provided user input.","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"Bandov"},"content":"     * @throws IllegalArgumentException If the user input does not conform to the expected format or","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"Bandov"},"content":"     *                                  if the operation specified is unsupported.","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"Bandov"},"content":"    public EditPersonCommand parse(String userInput) throws IllegalArgumentException {","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"Bandov"},"content":"        EditPersonCommand command \u003d new EditPersonCommand(personMap);","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"Bandov"},"content":"        command.parseCommand(userInput);","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"Bandov"},"content":"        return command;","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Bandov":49}},{"path":"src/main/java/seedu/address/logic/relationship/AddRelationshipCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tsenrae"},"content":"package seedu.address.logic.relationship;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"Tsenrae"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"Tsenrae"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"Tsenrae"},"content":"import seedu.address.model.person.relationship.BioParentsRelationship;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"Tsenrae"},"content":"import seedu.address.model.person.relationship.FriendsRelationship;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"Tsenrae"},"content":"import seedu.address.model.person.relationship.RelationshipManager;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"Tsenrae"},"content":"import seedu.address.model.person.relationship.SpousesRelationship;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"Tsenrae"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"Tsenrae"},"content":" * This class is responsible for parsing and executing commands to add relationships between persons.","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"Tsenrae"},"content":" * It supports adding relationships with and without roles.","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"Tsenrae"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"Tsenrae"},"content":"public class AddRelationshipCommand {","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"Tsenrae"},"content":"    private final Map\u003cString, Person\u003e personMap;","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"Tsenrae"},"content":"    private final RelationshipManager relationshipManager;","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"Tsenrae"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"Tsenrae"},"content":"     * Creates a new AddRelationshipCommand with the given person map.","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"Tsenrae"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"Tsenrae"},"content":"     * @param personMap A map linking UUID strings to Person objects.","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"Tsenrae"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"Tsenrae"},"content":"    public AddRelationshipCommand(Map\u003cString, Person\u003e personMap) {","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"Tsenrae"},"content":"        this.personMap \u003d personMap;","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"Tsenrae"},"content":"        this.relationshipManager \u003d new RelationshipManager();","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"Tsenrae"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"Tsenrae"},"content":"     * Parses and executes the given command to add a relationship between persons.","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"Tsenrae"},"content":"     * Supports adding relationships with and without roles based on the command format.","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"Tsenrae"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"Tsenrae"},"content":"     * @param command The command to parse and execute.","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"Tsenrae"},"content":"     * @throws IllegalArgumentException If the command is invalid.","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"Tsenrae"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"Tsenrae"},"content":"    public void parseCommand(String command) {","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"Tsenrae"},"content":"        String[] commandParts \u003d command.split(\"\\\\s+\");","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"Tsenrae"},"content":"        if (commandParts.length \u003c 4) {","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"Tsenrae"},"content":"            throw new IllegalArgumentException(\"Invalid command format\");","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"Tsenrae"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"Tsenrae"},"content":"        if (commandParts[2].contains(\",\")) {","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"Tsenrae"},"content":"            handleAddRolelessRelationship(commandParts);","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"Tsenrae"},"content":"        } else {","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"Tsenrae"},"content":"            handleAddRoleBasedRelationship(commandParts);","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"Tsenrae"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"Tsenrae"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"Tsenrae"},"content":"     * Handles adding a relationship with roles based on the given command parts.","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"Tsenrae"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"Tsenrae"},"content":"     * @param commandParts The parts of the command to parse and execute","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"Tsenrae"},"content":"     * @throws IllegalArgumentException If the person cannot be found or the relationship type is invalid.","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"Tsenrae"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"Tsenrae"},"content":"    private void handleAddRoleBasedRelationship(String[] commandParts) {","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"Tsenrae"},"content":"        if (commandParts.length \u003c 6) {","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"Tsenrae"},"content":"            throw new IllegalArgumentException(\"Invalid command format\");","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"Tsenrae"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"Tsenrae"},"content":"        String relationType \u003d commandParts[1].substring(1);","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"Tsenrae"},"content":"        String uuid1 \u003d matchUuid(commandParts[3]);","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"Tsenrae"},"content":"        String uuid2 \u003d matchUuid(commandParts[5]);","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"Tsenrae"},"content":"        Person person1 \u003d personMap.get(uuid1);","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"Tsenrae"},"content":"        Person person2 \u003d personMap.get(uuid2);","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"Tsenrae"},"content":"        if (person1 \u003d\u003d null || person2 \u003d\u003d null) {","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"Tsenrae"},"content":"            throw new IllegalArgumentException(\"Person not found\");","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"Tsenrae"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"Tsenrae"},"content":"        // create and add relationship","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"Tsenrae"},"content":"        switch (relationType) {","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"Tsenrae"},"content":"        case \"bioparent\":","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"Tsenrae"},"content":"            relationshipManager.addRelationship(relationType,","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"Tsenrae"},"content":"                    new BioParentsRelationship(person1.getUuid(), person2.getUuid()));","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"Tsenrae"},"content":"            break;","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"Tsenrae"},"content":"        default:","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"Tsenrae"},"content":"            throw new IllegalArgumentException(\"Invalid relationship type\");","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"Tsenrae"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":78,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":79,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":80,"author":{"gitId":"Tsenrae"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":81,"author":{"gitId":"Tsenrae"},"content":"     * Handles adding a relationship without roles based on the given command parts.","lastModifiedDate":"2024-03-15"},{"lineNumber":82,"author":{"gitId":"Tsenrae"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":83,"author":{"gitId":"Tsenrae"},"content":"     * @param commandParts The parts of the command to parse and execute","lastModifiedDate":"2024-03-15"},{"lineNumber":84,"author":{"gitId":"Tsenrae"},"content":"     * @throws IllegalArgumentException If the person cannot be found or the relationship type is invalid.","lastModifiedDate":"2024-03-15"},{"lineNumber":85,"author":{"gitId":"Tsenrae"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":86,"author":{"gitId":"Tsenrae"},"content":"    private void handleAddRolelessRelationship(String[] commandParts) {","lastModifiedDate":"2024-03-15"},{"lineNumber":87,"author":{"gitId":"Tsenrae"},"content":"        String relationType \u003d commandParts[1].substring(1);","lastModifiedDate":"2024-03-15"},{"lineNumber":88,"author":{"gitId":"Tsenrae"},"content":"        String[] personUuids \u003d (commandParts[2] + commandParts[3]).split(\",\");","lastModifiedDate":"2024-03-15"},{"lineNumber":89,"author":{"gitId":"Tsenrae"},"content":"        if (personUuids.length !\u003d 2) {","lastModifiedDate":"2024-03-15"},{"lineNumber":90,"author":{"gitId":"Tsenrae"},"content":"            throw new IllegalArgumentException(\"Invalid command format\");","lastModifiedDate":"2024-03-15"},{"lineNumber":91,"author":{"gitId":"Tsenrae"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":92,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":93,"author":{"gitId":"Tsenrae"},"content":"        String uuid1 \u003d matchUuid(personUuids[0]);","lastModifiedDate":"2024-03-15"},{"lineNumber":94,"author":{"gitId":"Tsenrae"},"content":"        String uuid2 \u003d matchUuid(personUuids[1]);","lastModifiedDate":"2024-03-15"},{"lineNumber":95,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":96,"author":{"gitId":"Tsenrae"},"content":"        Person person1 \u003d personMap.get(uuid1);","lastModifiedDate":"2024-03-15"},{"lineNumber":97,"author":{"gitId":"Tsenrae"},"content":"        Person person2 \u003d personMap.get(uuid2);","lastModifiedDate":"2024-03-15"},{"lineNumber":98,"author":{"gitId":"Tsenrae"},"content":"        if (person1 \u003d\u003d null || person2 \u003d\u003d null) {","lastModifiedDate":"2024-03-15"},{"lineNumber":99,"author":{"gitId":"Tsenrae"},"content":"            throw new IllegalArgumentException(\"Person not found\");","lastModifiedDate":"2024-03-15"},{"lineNumber":100,"author":{"gitId":"Tsenrae"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":101,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":102,"author":{"gitId":"Tsenrae"},"content":"        // create and add relationship","lastModifiedDate":"2024-03-15"},{"lineNumber":103,"author":{"gitId":"Tsenrae"},"content":"        switch (relationType) {","lastModifiedDate":"2024-03-15"},{"lineNumber":104,"author":{"gitId":"Tsenrae"},"content":"        case \"friends\":","lastModifiedDate":"2024-03-15"},{"lineNumber":105,"author":{"gitId":"Tsenrae"},"content":"            relationshipManager.addRelationship(relationType,","lastModifiedDate":"2024-03-15"},{"lineNumber":106,"author":{"gitId":"Tsenrae"},"content":"                    new FriendsRelationship(person1.getUuid(), person2.getUuid()));","lastModifiedDate":"2024-03-15"},{"lineNumber":107,"author":{"gitId":"Tsenrae"},"content":"            break;","lastModifiedDate":"2024-03-15"},{"lineNumber":108,"author":{"gitId":"Tsenrae"},"content":"        case \"spouses\":","lastModifiedDate":"2024-03-15"},{"lineNumber":109,"author":{"gitId":"Tsenrae"},"content":"            relationshipManager.addRelationship(relationType,","lastModifiedDate":"2024-03-15"},{"lineNumber":110,"author":{"gitId":"Tsenrae"},"content":"                    new SpousesRelationship(person1.getUuid(), person2.getUuid()));","lastModifiedDate":"2024-03-15"},{"lineNumber":111,"author":{"gitId":"Tsenrae"},"content":"            break;","lastModifiedDate":"2024-03-15"},{"lineNumber":112,"author":{"gitId":"Tsenrae"},"content":"        default:","lastModifiedDate":"2024-03-15"},{"lineNumber":113,"author":{"gitId":"Tsenrae"},"content":"            throw new IllegalArgumentException(\"Invalid relationship type\");","lastModifiedDate":"2024-03-15"},{"lineNumber":114,"author":{"gitId":"Tsenrae"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":115,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":116,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":117,"author":{"gitId":"Tsenrae"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":118,"author":{"gitId":"Tsenrae"},"content":"     * Matches a partial UUID with the full UUIDs in the person map.","lastModifiedDate":"2024-03-15"},{"lineNumber":119,"author":{"gitId":"Tsenrae"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":120,"author":{"gitId":"Tsenrae"},"content":"     * @param partialUuid The partial UUID to match.","lastModifiedDate":"2024-03-15"},{"lineNumber":121,"author":{"gitId":"Tsenrae"},"content":"     * @return The full UUID matching the partial UUID.","lastModifiedDate":"2024-03-15"},{"lineNumber":122,"author":{"gitId":"Tsenrae"},"content":"     * @throws IllegalArgumentException If no matching UUID is found.","lastModifiedDate":"2024-03-15"},{"lineNumber":123,"author":{"gitId":"Tsenrae"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":124,"author":{"gitId":"Tsenrae"},"content":"    private String matchUuid(String partialUuid) {","lastModifiedDate":"2024-03-15"},{"lineNumber":125,"author":{"gitId":"Tsenrae"},"content":"        for (String uuid : personMap.keySet()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":126,"author":{"gitId":"Tsenrae"},"content":"            if (uuid.endsWith(partialUuid)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":127,"author":{"gitId":"Tsenrae"},"content":"                return uuid;","lastModifiedDate":"2024-03-15"},{"lineNumber":128,"author":{"gitId":"Tsenrae"},"content":"            }","lastModifiedDate":"2024-03-15"},{"lineNumber":129,"author":{"gitId":"Tsenrae"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":130,"author":{"gitId":"Tsenrae"},"content":"        throw new IllegalArgumentException(\"No matching UUID found.\");","lastModifiedDate":"2024-03-15"},{"lineNumber":131,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":132,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":133,"author":{"gitId":"Tsenrae"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"Tsenrae":133}},{"path":"src/main/java/seedu/address/logic/relationship/AddRelationshipCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tsenrae"},"content":"package seedu.address.logic.relationship;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"Tsenrae"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"Tsenrae"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"Tsenrae"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"Tsenrae"},"content":" * Parses input arguments and creates a new AddRelationshipCommand object","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"Tsenrae"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"Tsenrae"},"content":"public class AddRelationshipCommandParser {","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"Tsenrae"},"content":"    private final Map\u003cString, Person\u003e personMap;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"Tsenrae"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"Tsenrae"},"content":"     * Creates a new AddRelationshipCommandParser with the given person map.","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"Tsenrae"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"Tsenrae"},"content":"     * @param personMap A map linking UUID strings to Person objects.","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"Tsenrae"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"Tsenrae"},"content":"    public AddRelationshipCommandParser(Map\u003cString, Person\u003e personMap) {","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"Tsenrae"},"content":"        this.personMap \u003d personMap;","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"Tsenrae"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"Tsenrae"},"content":"     * Parses the given {@code String} of arguments in the context of the AddRelationshipCommand","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"Tsenrae"},"content":"     * and returns an AddRelationshipCommand object for execution.","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"Tsenrae"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"Tsenrae"},"content":"     * The expected format of the user input is:","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"Tsenrae"},"content":"     * - For adding relationships with roles: \"addrelation /[relationType] /[role1] [UUID1] /[role2] [UUID2]\"","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"Tsenrae"},"content":"     * - For adding relationships without roles: \"addrelation /[relationType] [UUID1],[UUID2]\"","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"Tsenrae"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"Tsenrae"},"content":"     * @param userInput The user input to parse.","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"Tsenrae"},"content":"     * @return The AddRelationshipCommand object for execution.","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"Tsenrae"},"content":"     * @throws IllegalArgumentException If the user input does not conform the expected format.","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"Tsenrae"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"Tsenrae"},"content":"    public AddRelationshipCommand parse(String userInput) throws IllegalArgumentException {","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"Tsenrae"},"content":"        AddRelationshipCommand command \u003d new AddRelationshipCommand(personMap);","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"Tsenrae"},"content":"        command.parseCommand(userInput);","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"Tsenrae"},"content":"        return command;","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"Tsenrae"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"Tsenrae":41}},{"path":"src/main/java/seedu/address/logic/relationship/DeleteRelationshipCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emberlynn-Loo"},"content":"package seedu.address.logic.relationship;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"Emberlynn-Loo"},"content":"import java.util.List;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"Emberlynn-Loo"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"Emberlynn-Loo"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.model.person.relationship.Relationship;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.model.person.relationship.RelationshipManager;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"Emberlynn-Loo"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"Emberlynn-Loo"},"content":" * Represents a command to delete a relationship between two persons.","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"Emberlynn-Loo"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"Emberlynn-Loo"},"content":"public class DeleteRelationshipCommand {","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"Emberlynn-Loo"},"content":"    private final Map\u003cString, Person\u003e personMap;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"Emberlynn-Loo"},"content":"    private final RelationshipManager relationshipManager;","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"Emberlynn-Loo"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"Emberlynn-Loo"},"content":"     * Creates a new DeleteRelationshipCommand with the given person map and relationship manager.","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"Emberlynn-Loo"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"Emberlynn-Loo"},"content":"     * @param personMap           A map linking UUID strings to Person objects.","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"Emberlynn-Loo"},"content":"     * @param relationshipManager The RelationshipManager instance managing the relationships.","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"Emberlynn-Loo"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"Emberlynn-Loo"},"content":"    public DeleteRelationshipCommand(Map\u003cString, Person\u003e personMap, RelationshipManager relationshipManager) {","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"Emberlynn-Loo"},"content":"        this.personMap \u003d personMap;","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"Emberlynn-Loo"},"content":"        this.relationshipManager \u003d relationshipManager;","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"Emberlynn-Loo"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"Emberlynn-Loo"},"content":"     * Parses and executes the given delete relationship command.","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"Emberlynn-Loo"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"Emberlynn-Loo"},"content":"     * @param command The delete relationship command to parse and execute.","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"Emberlynn-Loo"},"content":"     * @throws IllegalArgumentException If the command is invalid.","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"Emberlynn-Loo"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void parseCommand(String command) {","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"Emberlynn-Loo"},"content":"        String[] commandParts \u003d command.split(\"\\\\s+|,\");","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"Emberlynn-Loo"},"content":"        if (commandParts.length !\u003d 4) {","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"Emberlynn-Loo"},"content":"            throw new IllegalArgumentException(\"Invalid command format\");","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"Emberlynn-Loo"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"Emberlynn-Loo"},"content":"        String relationType \u003d commandParts[1].substring(1);","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"Emberlynn-Loo"},"content":"        String uuid1 \u003d matchUuid(commandParts[2]);","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"Emberlynn-Loo"},"content":"        String uuid2 \u003d matchUuid(commandParts[3]);","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"Emberlynn-Loo"},"content":"        List\u003cRelationship\u003e relationships \u003d relationshipManager.getRelationships(relationType);","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Check if the relationship exists and remove it","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"Emberlynn-Loo"},"content":"        boolean relationshipFound \u003d false;","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"Emberlynn-Loo"},"content":"        for (Relationship relationship : relationships) {","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"Emberlynn-Loo"},"content":"            UUID person1Uuid \u003d relationship.getPerson1();","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"Emberlynn-Loo"},"content":"            UUID person2Uuid \u003d relationship.getPerson2();","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"Emberlynn-Loo"},"content":"            if ((person1Uuid.equals(UUID.fromString(uuid1)) \u0026\u0026 person2Uuid.equals(UUID.fromString(uuid2)))","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"Emberlynn-Loo"},"content":"                || (person1Uuid.equals(UUID.fromString(uuid2)) \u0026\u0026 person2Uuid.equals(UUID.fromString(uuid1)))) {","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"Emberlynn-Loo"},"content":"                relationshipManager.deleteRelationship(relationType, relationship);","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"Emberlynn-Loo"},"content":"                return; // Exit early if relationship is found and deleted","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"Emberlynn-Loo"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"Emberlynn-Loo"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"Emberlynn-Loo"},"content":"        if (!relationshipFound) {","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"Emberlynn-Loo"},"content":"            throw new IllegalArgumentException(\"No relationship found.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"Emberlynn-Loo"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"Emberlynn-Loo"},"content":"    private String matchUuid(String partialUuid) {","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"Emberlynn-Loo"},"content":"        for (String uuid : personMap.keySet()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"Emberlynn-Loo"},"content":"            if (uuid.endsWith(partialUuid)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"Emberlynn-Loo"},"content":"                return uuid;","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"Emberlynn-Loo"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"Emberlynn-Loo"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"Emberlynn-Loo"},"content":"        throw new IllegalArgumentException(\"No matching UUID found.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"Emberlynn-Loo"},"content":"}","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"Emberlynn-Loo":75}},{"path":"src/main/java/seedu/address/logic/relationship/DeleteRelationshipCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emberlynn-Loo"},"content":"package seedu.address.logic.relationship;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"Emberlynn-Loo"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.model.person.relationship.RelationshipManager;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"Emberlynn-Loo"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"Emberlynn-Loo"},"content":" * Parses user input into a DeleteRelationshipCommand.","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"Emberlynn-Loo"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"Emberlynn-Loo"},"content":"public class DeleteRelationshipCommandParser {","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"Emberlynn-Loo"},"content":"    private final Map\u003cString, Person\u003e personMap;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"Emberlynn-Loo"},"content":"    private final RelationshipManager relationshipManager;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"Emberlynn-Loo"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"Emberlynn-Loo"},"content":"     * Creates a new DeleteRelationshipCommandParser with the given person map and relationship manager.","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"Emberlynn-Loo"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"Emberlynn-Loo"},"content":"     * @param personMap           A map linking UUID strings to Person objects.","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"Emberlynn-Loo"},"content":"     * @param relationshipManager The RelationshipManager instance managing the relationships.","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"Emberlynn-Loo"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"Emberlynn-Loo"},"content":"    public DeleteRelationshipCommandParser(Map\u003cString, Person\u003e personMap, RelationshipManager relationshipManager) {","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"Emberlynn-Loo"},"content":"        this.personMap \u003d personMap;","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"Emberlynn-Loo"},"content":"        this.relationshipManager \u003d relationshipManager;","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"Emberlynn-Loo"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"Emberlynn-Loo"},"content":"     * Parses the given user input and returns a DeleteRelationshipCommand.","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"Emberlynn-Loo"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"Emberlynn-Loo"},"content":"     * @param userInput The user input to parse.","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"Emberlynn-Loo"},"content":"     * @return The DeleteRelationshipCommand corresponding to the user input.","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"Emberlynn-Loo"},"content":"     * @throws IllegalArgumentException If the user input is invalid.","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"Emberlynn-Loo"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"Emberlynn-Loo"},"content":"    public DeleteRelationshipCommand parse(String userInput) throws IllegalArgumentException {","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"Emberlynn-Loo"},"content":"        DeleteRelationshipCommand command \u003d new DeleteRelationshipCommand(personMap, relationshipManager);","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"Emberlynn-Loo"},"content":"        command.parseCommand(userInput);","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"Emberlynn-Loo"},"content":"        return command;","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"Emberlynn-Loo"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"Emberlynn-Loo":38}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Bandov":1,"-":87}},{"path":"src/main/java/seedu/address/model/person/EditPersonDescriptor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bandov"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"import seedu.address.model.person.attribute.Attribute;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":" * Represents a descriptor for editing a person\u0027s attributes in the address book.","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":" * This descriptor allows for the modification of attributes of a person.","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":" * Each attribute is identified by a string name and is associated with a specific {@link Attribute} instance.","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":" * Attributes that can be edited include, but are not limited to, name, phone, email, and address.","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"public class EditPersonDescriptor {","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"    // Assuming each attribute in your model extends some Attribute class or interface","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"    private Map\u003cString, Attribute\u003e attributes;","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"    public EditPersonDescriptor() {","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"        this.attributes \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"    // Set a specific attribute by name","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"    public void setAttribute(String attributeName, Attribute attributeValue) {","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"        attributes.put(attributeName, attributeValue);","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"    // Retrieve a specific attribute by name, if it exists","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"    public Optional\u003cAttribute\u003e getAttribute(String attributeName) {","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"        return Optional.ofNullable(attributes.get(attributeName));","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"    // Retrieve all attributes","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"    public Map\u003cString, Attribute\u003e getAttributes() {","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"        return attributes;","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"Bandov":39}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"ReflectiveObsidian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":7,"author":{"gitId":"ReflectiveObsidian"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"ReflectiveObsidian"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"ReflectiveObsidian"},"content":"import java.util.List;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"ReflectiveObsidian"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"ReflectiveObsidian"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"import seedu.address.model.person.attribute.Attribute;","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"ReflectiveObsidian"},"content":"import seedu.address.model.person.attribute.NameAttribute;","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"ReflectiveObsidian"},"content":"import seedu.address.model.person.attribute.StringAttribute;","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"ReflectiveObsidian"},"content":"    private final UUID uuid;","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":30,"author":{"gitId":"ReflectiveObsidian"},"content":"    private final HashMap\u003cString, Attribute\u003e attributes \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"ReflectiveObsidian"},"content":"     * THIS CONSTRUCTOR WILL BE DEPRECATED.","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"ReflectiveObsidian"},"content":"     * Constructs a person with a random UUID.","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"ReflectiveObsidian"},"content":"        this.uuid \u003d UUID.randomUUID();","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"ReflectiveObsidian"},"content":"        this.attributes.put(\"Name\", new NameAttribute(\"Name\", name.toString()));","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"ReflectiveObsidian"},"content":"        this.attributes.put(\"Phone\", new NameAttribute(\"Phone\", phone.toString()));","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"ReflectiveObsidian"},"content":"        this.attributes.put(\"Email\", new StringAttribute(\"Email\", email.toString()));","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"ReflectiveObsidian"},"content":"        this.attributes.put(\"Address\", new StringAttribute(\"Address\", address.toString()));","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"ReflectiveObsidian"},"content":"        this.tags.addAll(tags); // Earmarked for deprecation - to be superseded by relations","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"ReflectiveObsidian"},"content":"     * Constructs a person with a random UUID and a list of attributes.","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"ReflectiveObsidian"},"content":"     * There are no compulsory fields, attribute list can be null.","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"ReflectiveObsidian"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"ReflectiveObsidian"},"content":"     * @params attributes A list of attributes to be added to the person.","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"ReflectiveObsidian"},"content":"     *      If the list is null, the person will have no attributes.","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"ReflectiveObsidian"},"content":"     *      If there are multiple attributes of the same type, the last one will be used.","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"ReflectiveObsidian"},"content":"     * @return A person with the given attributes.","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"ReflectiveObsidian"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"ReflectiveObsidian"},"content":"    public Person(Attribute[] attributes) {","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"ReflectiveObsidian"},"content":"        this.uuid \u003d UUID.randomUUID();","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"ReflectiveObsidian"},"content":"        for (Attribute attribute : attributes) {","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"ReflectiveObsidian"},"content":"            this.attributes.put(attribute.getName(), attribute);","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"ReflectiveObsidian"},"content":"    public Name getName() { //Earmarked for deprecation - superseded by getAttribute - name should be optional","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"ReflectiveObsidian"},"content":"        if (!attributes.containsKey(\"Name\")) {","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"ReflectiveObsidian"},"content":"            return new Name(\"\u003cno name\u003e\");","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"ReflectiveObsidian"},"content":"        return new Name(attributes.get(\"Name\").getValueAsString());","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"ReflectiveObsidian"},"content":"    public Phone getPhone() { //Earmarked for deprecation - superseded by getAttribute - phone should be optional","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"ReflectiveObsidian"},"content":"        if (!attributes.containsKey(\"Phone\")) {","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"ReflectiveObsidian"},"content":"            return new Phone(\"\u003cno phone\u003e\");","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"ReflectiveObsidian"},"content":"        return new Phone(attributes.get(\"Phone\").getValueAsString());","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"ReflectiveObsidian"},"content":"    public Email getEmail() { //Earmarked for deprecation - superseded by getAttribute - email should be optional","lastModifiedDate":"2024-03-13"},{"lineNumber":79,"author":{"gitId":"ReflectiveObsidian"},"content":"        if (!attributes.containsKey(\"Email\")) {","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"ReflectiveObsidian"},"content":"            return new Email(\"\u003cno email\u003e\");","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"ReflectiveObsidian"},"content":"        return new Email(attributes.get(\"Email\").getValueAsString());","lastModifiedDate":"2024-03-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"ReflectiveObsidian"},"content":"    public Address getAddress() { //Earmarked for deprecation - superseded by getAttribute - address should be optional","lastModifiedDate":"2024-03-13"},{"lineNumber":86,"author":{"gitId":"ReflectiveObsidian"},"content":"        if (!attributes.containsKey(\"Address\")) {","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"ReflectiveObsidian"},"content":"            return new Address(\"\u003cno address\u003e\");","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"ReflectiveObsidian"},"content":"        return new Address(attributes.get(\"Address\").getValueAsString());","lastModifiedDate":"2024-03-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":96,"author":{"gitId":"ReflectiveObsidian"},"content":"    public Set\u003cTag\u003e getTags() { //Earmarked for deprecation - to be superseded by relations","lastModifiedDate":"2024-03-13"},{"lineNumber":97,"author":{"gitId":"ReflectiveObsidian"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":98,"author":{"gitId":"ReflectiveObsidian"},"content":"            return Collections.unmodifiableSet(new HashSet\u003c\u003e());","lastModifiedDate":"2024-03-14"},{"lineNumber":99,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"ReflectiveObsidian"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":103,"author":{"gitId":"ReflectiveObsidian"},"content":"     * Returns the uuid of the person.","lastModifiedDate":"2024-03-11"},{"lineNumber":104,"author":{"gitId":"ReflectiveObsidian"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"ReflectiveObsidian"},"content":"     * @return The uuid of the person.","lastModifiedDate":"2024-03-11"},{"lineNumber":106,"author":{"gitId":"ReflectiveObsidian"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":107,"author":{"gitId":"ReflectiveObsidian"},"content":"    public UUID getUuid() {","lastModifiedDate":"2024-03-11"},{"lineNumber":108,"author":{"gitId":"ReflectiveObsidian"},"content":"        return uuid;","lastModifiedDate":"2024-03-11"},{"lineNumber":109,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":110,"author":{"gitId":"ReflectiveObsidian"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":111,"author":{"gitId":"ReflectiveObsidian"},"content":"     * Returns the uuid of the person as a string.","lastModifiedDate":"2024-03-11"},{"lineNumber":112,"author":{"gitId":"ReflectiveObsidian"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":113,"author":{"gitId":"ReflectiveObsidian"},"content":"     * @return The uuid of the person as a string.","lastModifiedDate":"2024-03-11"},{"lineNumber":114,"author":{"gitId":"ReflectiveObsidian"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":115,"author":{"gitId":"ReflectiveObsidian"},"content":"    public String getUuidString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":116,"author":{"gitId":"ReflectiveObsidian"},"content":"        return uuid.toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":117,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":118,"author":{"gitId":"ReflectiveObsidian"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":119,"author":{"gitId":"ReflectiveObsidian"},"content":"     * Returns whether the person has an attribute with the given type.","lastModifiedDate":"2024-03-13"},{"lineNumber":120,"author":{"gitId":"ReflectiveObsidian"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":121,"author":{"gitId":"ReflectiveObsidian"},"content":"     * @param attributeName The type of the attribute to check for.","lastModifiedDate":"2024-03-13"},{"lineNumber":122,"author":{"gitId":"ReflectiveObsidian"},"content":"     * @return True if the person has an attribute with the given type.","lastModifiedDate":"2024-03-13"},{"lineNumber":123,"author":{"gitId":"ReflectiveObsidian"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":124,"author":{"gitId":"ReflectiveObsidian"},"content":"    public boolean hasAttribute(String attributeName) {","lastModifiedDate":"2024-03-13"},{"lineNumber":125,"author":{"gitId":"ReflectiveObsidian"},"content":"        return attributes.containsKey(attributeName);","lastModifiedDate":"2024-03-13"},{"lineNumber":126,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":127,"author":{"gitId":"ReflectiveObsidian"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":128,"author":{"gitId":"ReflectiveObsidian"},"content":"     * Returns an attribute of the person.","lastModifiedDate":"2024-03-13"},{"lineNumber":129,"author":{"gitId":"ReflectiveObsidian"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":130,"author":{"gitId":"ReflectiveObsidian"},"content":"     * @param attributeName The type of the attribute to get.","lastModifiedDate":"2024-03-13"},{"lineNumber":131,"author":{"gitId":"ReflectiveObsidian"},"content":"     * @return The attribute with the given type.","lastModifiedDate":"2024-03-13"},{"lineNumber":132,"author":{"gitId":"ReflectiveObsidian"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":133,"author":{"gitId":"ReflectiveObsidian"},"content":"    public Attribute getAttribute(String attributeName) {","lastModifiedDate":"2024-03-13"},{"lineNumber":134,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertValidAttributeName(attributeName);","lastModifiedDate":"2024-03-13"},{"lineNumber":135,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertAttributeExistsInPerson(attributeName, attributes);","lastModifiedDate":"2024-03-14"},{"lineNumber":136,"author":{"gitId":"ReflectiveObsidian"},"content":"        return attributes.get(attributeName);","lastModifiedDate":"2024-03-13"},{"lineNumber":137,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":138,"author":{"gitId":"ReflectiveObsidian"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":139,"author":{"gitId":"ReflectiveObsidian"},"content":"     * Edits/adds an attribute of/to the person.","lastModifiedDate":"2024-03-13"},{"lineNumber":140,"author":{"gitId":"ReflectiveObsidian"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":141,"author":{"gitId":"ReflectiveObsidian"},"content":"     * @param attribute The attribute to edit or add.","lastModifiedDate":"2024-03-13"},{"lineNumber":142,"author":{"gitId":"ReflectiveObsidian"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":143,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void updateAttribute(Attribute attribute) {","lastModifiedDate":"2024-03-13"},{"lineNumber":144,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertValidAttribute(attribute);","lastModifiedDate":"2024-03-13"},{"lineNumber":145,"author":{"gitId":"ReflectiveObsidian"},"content":"        attributes.put(attribute.getName(), attribute);","lastModifiedDate":"2024-03-13"},{"lineNumber":146,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":147,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":148,"author":{"gitId":"ReflectiveObsidian"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":149,"author":{"gitId":"ReflectiveObsidian"},"content":"     * Deletes an attribute from the person.","lastModifiedDate":"2024-03-13"},{"lineNumber":150,"author":{"gitId":"ReflectiveObsidian"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":151,"author":{"gitId":"ReflectiveObsidian"},"content":"     * @param attributeType The type of the attribute to delete.","lastModifiedDate":"2024-03-13"},{"lineNumber":152,"author":{"gitId":"ReflectiveObsidian"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":153,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void deleteAttribute(String attributeType) {","lastModifiedDate":"2024-03-13"},{"lineNumber":154,"author":{"gitId":"ReflectiveObsidian"},"content":"        if (!attributes.containsKey(attributeType)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":155,"author":{"gitId":"ReflectiveObsidian"},"content":"            throw new IllegalArgumentException(\"Attribute with name \" + attributeType + \" does not exist\");","lastModifiedDate":"2024-03-13"},{"lineNumber":156,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":157,"author":{"gitId":"ReflectiveObsidian"},"content":"        attributes.remove(attributeType);","lastModifiedDate":"2024-03-13"},{"lineNumber":158,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":159,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":160,"author":{"gitId":"ReflectiveObsidian"},"content":"    private static void assertValidAttribute(Attribute attribute) {","lastModifiedDate":"2024-03-13"},{"lineNumber":161,"author":{"gitId":"ReflectiveObsidian"},"content":"        if (attribute \u003d\u003d null) {","lastModifiedDate":"2024-03-13"},{"lineNumber":162,"author":{"gitId":"ReflectiveObsidian"},"content":"            throw new IllegalArgumentException(\"Attribute cannot be null.\");","lastModifiedDate":"2024-03-13"},{"lineNumber":163,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":164,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertValidAttributeName(attribute.getName());","lastModifiedDate":"2024-03-13"},{"lineNumber":165,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":166,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":167,"author":{"gitId":"ReflectiveObsidian"},"content":"    private static void assertValidAttributeName(String attributeType) {","lastModifiedDate":"2024-03-13"},{"lineNumber":168,"author":{"gitId":"ReflectiveObsidian"},"content":"        if (attributeType \u003d\u003d \"\") {","lastModifiedDate":"2024-03-13"},{"lineNumber":169,"author":{"gitId":"ReflectiveObsidian"},"content":"            throw new IllegalArgumentException(\"Attribute name cannot be empty.\");","lastModifiedDate":"2024-03-13"},{"lineNumber":170,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":171,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":173,"author":{"gitId":"ReflectiveObsidian"},"content":"    private static void assertAttributeExistsInPerson(String attributeType, Map\u003cString, Attribute\u003e attributes) {","lastModifiedDate":"2024-03-14"},{"lineNumber":174,"author":{"gitId":"ReflectiveObsidian"},"content":"        if (!attributes.containsKey(attributeType)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":175,"author":{"gitId":"ReflectiveObsidian"},"content":"            throw new IllegalArgumentException(\"Attribute with name \" + attributeType + \" does not exist\");","lastModifiedDate":"2024-03-14"},{"lineNumber":176,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":177,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":189,"author":{"gitId":"ReflectiveObsidian"},"content":"                \u0026\u0026 otherPerson","lastModifiedDate":"2024-03-13"},{"lineNumber":190,"author":{"gitId":"ReflectiveObsidian"},"content":"                .attributes.get(\"Name\").getValueAsString().equals(","lastModifiedDate":"2024-03-13"},{"lineNumber":191,"author":{"gitId":"ReflectiveObsidian"},"content":"                        attributes.get(\"Name\").getValueAsString());","lastModifiedDate":"2024-03-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":209,"author":{"gitId":"ReflectiveObsidian"},"content":"        // compare all attributes","lastModifiedDate":"2024-03-13"},{"lineNumber":210,"author":{"gitId":"ReflectiveObsidian"},"content":"        for (Map.Entry\u003cString, Attribute\u003e entry : attributes.entrySet()) {","lastModifiedDate":"2024-03-13"},{"lineNumber":211,"author":{"gitId":"ReflectiveObsidian"},"content":"            if (!otherPerson.hasAttribute(entry.getKey())) {","lastModifiedDate":"2024-03-13"},{"lineNumber":212,"author":{"gitId":"ReflectiveObsidian"},"content":"                return false;","lastModifiedDate":"2024-03-13"},{"lineNumber":213,"author":{"gitId":"ReflectiveObsidian"},"content":"            }","lastModifiedDate":"2024-03-13"},{"lineNumber":214,"author":{"gitId":"ReflectiveObsidian"},"content":"            if (!entry.getValue().getValueAsString().equals(","lastModifiedDate":"2024-03-13"},{"lineNumber":215,"author":{"gitId":"ReflectiveObsidian"},"content":"                    otherPerson.getAttribute(entry.getKey()).getValueAsString())) {","lastModifiedDate":"2024-03-13"},{"lineNumber":216,"author":{"gitId":"ReflectiveObsidian"},"content":"                return false;","lastModifiedDate":"2024-03-13"},{"lineNumber":217,"author":{"gitId":"ReflectiveObsidian"},"content":"            }","lastModifiedDate":"2024-03-13"},{"lineNumber":218,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":219,"author":{"gitId":"ReflectiveObsidian"},"content":"        if (!tags.equals(otherPerson.tags)) { // Earmarked for deprecation - to be superseded by relations","lastModifiedDate":"2024-03-13"},{"lineNumber":220,"author":{"gitId":"ReflectiveObsidian"},"content":"            return false;","lastModifiedDate":"2024-03-13"},{"lineNumber":221,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":222,"author":{"gitId":"ReflectiveObsidian"},"content":"        return true;","lastModifiedDate":"2024-03-13"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":224,"author":{"gitId":"ReflectiveObsidian"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":225,"author":{"gitId":"ReflectiveObsidian"},"content":"     * Returns true if the UUID of the person is the same as the UUID of the other object.","lastModifiedDate":"2024-03-11"},{"lineNumber":226,"author":{"gitId":"ReflectiveObsidian"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":227,"author":{"gitId":"ReflectiveObsidian"},"content":"     * @param other The object to compare with.","lastModifiedDate":"2024-03-11"},{"lineNumber":228,"author":{"gitId":"ReflectiveObsidian"},"content":"     * @return True if the UUID of the person is the same as the UUID of the other object.","lastModifiedDate":"2024-03-11"},{"lineNumber":229,"author":{"gitId":"ReflectiveObsidian"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":230,"author":{"gitId":"ReflectiveObsidian"},"content":"    public boolean equalsUuid(Object other) {","lastModifiedDate":"2024-03-11"},{"lineNumber":231,"author":{"gitId":"ReflectiveObsidian"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":232,"author":{"gitId":"ReflectiveObsidian"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":233,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":234,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":235,"author":{"gitId":"ReflectiveObsidian"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-11"},{"lineNumber":236,"author":{"gitId":"ReflectiveObsidian"},"content":"            return true;","lastModifiedDate":"2024-03-11"},{"lineNumber":237,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2024-03-11"},{"lineNumber":240,"author":{"gitId":"ReflectiveObsidian"},"content":"        return uuid.equals(otherPerson.uuid);","lastModifiedDate":"2024-03-11"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":246,"author":{"gitId":"ReflectiveObsidian"},"content":"        return Objects.hash(","lastModifiedDate":"2024-03-13"},{"lineNumber":247,"author":{"gitId":"ReflectiveObsidian"},"content":"                attributes,","lastModifiedDate":"2024-03-13"},{"lineNumber":248,"author":{"gitId":"ReflectiveObsidian"},"content":"                uuid);","lastModifiedDate":"2024-03-13"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":254,"author":{"gitId":"ReflectiveObsidian"},"content":"                .add(\"uuid\", uuid)","lastModifiedDate":"2024-03-11"},{"lineNumber":255,"author":{"gitId":"ReflectiveObsidian"},"content":"                .add(\"name\", getName().toString())","lastModifiedDate":"2024-03-14"},{"lineNumber":256,"author":{"gitId":"ReflectiveObsidian"},"content":"                .add(\"phone\", getPhone().toString())","lastModifiedDate":"2024-03-14"},{"lineNumber":257,"author":{"gitId":"ReflectiveObsidian"},"content":"                .add(\"email\", getEmail().toString())","lastModifiedDate":"2024-03-14"},{"lineNumber":258,"author":{"gitId":"ReflectiveObsidian"},"content":"                .add(\"address\", getAddress().toString())","lastModifiedDate":"2024-03-14"},{"lineNumber":259,"author":{"gitId":"ReflectiveObsidian"},"content":"                .add(\"tags\", getTags()) // Earmarked for deprecation - to be superseded by relations","lastModifiedDate":"2024-03-14"},{"lineNumber":260,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":262,"author":{"gitId":"ReflectiveObsidian"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":263,"author":{"gitId":"ReflectiveObsidian"},"content":"     * Returns a string representation of all the attributes of the person.","lastModifiedDate":"2024-03-14"},{"lineNumber":264,"author":{"gitId":"ReflectiveObsidian"},"content":"     * The attributes are sorted by length of the string representation.","lastModifiedDate":"2024-03-14"},{"lineNumber":265,"author":{"gitId":"ReflectiveObsidian"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":266,"author":{"gitId":"ReflectiveObsidian"},"content":"     * @return A string representation of all the attributes of the person.","lastModifiedDate":"2024-03-14"},{"lineNumber":267,"author":{"gitId":"ReflectiveObsidian"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":268,"author":{"gitId":"ReflectiveObsidian"},"content":"    public String allAttributesAsString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":269,"author":{"gitId":"ReflectiveObsidian"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-03-14"},{"lineNumber":270,"author":{"gitId":"ReflectiveObsidian"},"content":"        if (attributes.isEmpty()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":271,"author":{"gitId":"ReflectiveObsidian"},"content":"            return \"No details available\";","lastModifiedDate":"2024-03-14"},{"lineNumber":272,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":273,"author":{"gitId":"ReflectiveObsidian"},"content":"        // Solution below generated by Github Copilot","lastModifiedDate":"2024-03-14"},{"lineNumber":274,"author":{"gitId":"ReflectiveObsidian"},"content":"        List\u003cMap.Entry\u003cString, Attribute\u003e\u003e sortedAttributes \u003d new ArrayList\u003c\u003e(attributes.entrySet());","lastModifiedDate":"2024-03-14"},{"lineNumber":275,"author":{"gitId":"ReflectiveObsidian"},"content":"        sortedAttributes.sort(","lastModifiedDate":"2024-03-14"},{"lineNumber":276,"author":{"gitId":"ReflectiveObsidian"},"content":"                Comparator.comparingInt(","lastModifiedDate":"2024-03-14"},{"lineNumber":277,"author":{"gitId":"ReflectiveObsidian"},"content":"                        entry -\u003e (entry.getKey() + \": \" + entry.getValue().getValueAsString()).length()));","lastModifiedDate":"2024-03-14"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":279,"author":{"gitId":"ReflectiveObsidian"},"content":"        for (Map.Entry\u003cString, Attribute\u003e entry : sortedAttributes) {","lastModifiedDate":"2024-03-14"},{"lineNumber":280,"author":{"gitId":"ReflectiveObsidian"},"content":"            sb.append(entry.getKey()).append(\": \").append(entry.getValue().getValueAsString()).append(\"\\n\");","lastModifiedDate":"2024-03-14"},{"lineNumber":281,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":282,"author":{"gitId":"ReflectiveObsidian"},"content":"        return sb.toString().trim();","lastModifiedDate":"2024-03-14"},{"lineNumber":283,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":285,"author":{"gitId":"Bandov"},"content":"    public void setAttribute(String attributeName, Attribute attributeValue) {","lastModifiedDate":"2024-03-13"},{"lineNumber":286,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ReflectiveObsidian":193,"Bandov":4,"-":90}},{"path":"src/main/java/seedu/address/model/person/attribute/Attribute.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ReflectiveObsidian"},"content":"package seedu.address.model.person.attribute;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":" * Represents an abstract base for various types of attributes that can be associated with a person.","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":" * This class provides the foundation for storing and processing different types of attributes,","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":" * such as names, dates, or numerical values, by defining a common interface that all attribute types must implement.","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":" * The class includes a static factory method for creating appropriate attribute","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":" * instances based on the provided value\u0027s format.","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"public abstract class Attribute {","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"    protected String name;","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"     * Constructs an {@code Attribute} with the specified name.","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"     * @param name The name of the attribute.","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"    public Attribute(String name) {","lastModifiedDate":"2024-02-27"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-02-27"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"     * Returns the value of the attribute as a {@code String}.","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"     * This method must be implemented by all concrete subclasses of {@code Attribute}","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"     * to provide a standardized way of retrieving the attribute\u0027s value.","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"     * @return The attribute\u0027s value as a {@code String}.","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"    public abstract String getValueAsString();","lastModifiedDate":"2024-02-27"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"    public String getName() {","lastModifiedDate":"2024-02-27"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"        return name;","lastModifiedDate":"2024-02-27"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"Bandov"},"content":"     * Creates and returns an {@code Attribute} instance based on the provided name and value.","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"Bandov"},"content":"     * The method attempts to interpret the value as an integer, a date in ISO_LOCAL_DATE format,","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"Bandov"},"content":"     * or falls back to treating it as a string.","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"Bandov"},"content":"     * Accordingly, it returns an instance of {@code IntegerAttribute},","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"Bandov"},"content":"     * {@code DateAttribute}, or {@code StringAttribute}.","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"Bandov"},"content":"     * @param name  The name of the attribute.","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"Bandov"},"content":"     * @param value The value of the attribute as a {@code String}.","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"Bandov"},"content":"     * @return An {@code Attribute} instance appropriate to the value\u0027s format.","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"Bandov"},"content":"     * @throws NumberFormatException If the value cannot be parsed as an integer but is expected to be one.","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"Bandov"},"content":"     * @throws DateTimeParseException If the value cannot be parsed as a date but is expected to be one.","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"Bandov"},"content":"    public static Attribute fromString(String name, String value) {","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"Bandov"},"content":"        // Try to parse as an integer","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"Bandov"},"content":"        try {","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"Bandov"},"content":"            int intValue \u003d Integer.parseInt(value);","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"Bandov"},"content":"            return new IntegerAttribute(name, intValue);","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"Bandov"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"Bandov"},"content":"            // Not an Integer, try next","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"Bandov"},"content":"        // Try to parse as a date","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"Bandov"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ISO_LOCAL_DATE;","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"Bandov"},"content":"        try {","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"Bandov"},"content":"            LocalDate dateValue \u003d LocalDate.parse(value, dateFormatter);","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"Bandov"},"content":"            return new DateAttribute(name, dateValue);","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"Bandov"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"Bandov"},"content":"            // Not a Date, treat as String","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":70,"author":{"gitId":"Bandov"},"content":"        // Default to treating as a String","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"Bandov"},"content":"        return new StringAttribute(name, value);","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-02-27"}],"authorContributionMap":{"ReflectiveObsidian":1,"Bandov":72}},{"path":"src/main/java/seedu/address/model/person/attribute/BirthdayAttribute.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ReflectiveObsidian"},"content":"package seedu.address.model.person.attribute;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"ReflectiveObsidian"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"ReflectiveObsidian"},"content":" * Date attribute with LocalDate value","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"ReflectiveObsidian"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"ReflectiveObsidian"},"content":"public class BirthdayAttribute extends DateAttribute {","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"ReflectiveObsidian"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"ReflectiveObsidian"},"content":"     * Constructs a BirthdayAttribute.","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"ReflectiveObsidian"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"ReflectiveObsidian"},"content":"     * @param name Name of the attribute.","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"ReflectiveObsidian"},"content":"     * @param date A LocalDate.","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"ReflectiveObsidian"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"    public BirthdayAttribute(String name, LocalDate date) {","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"        super(name, date);","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"        // Validate that the provided date is before today","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"        if (!date.isBefore(LocalDate.now())) {","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"            throw new IllegalArgumentException(\"Birthday must be before today.\");","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"ReflectiveObsidian":11,"Bandov":11}},{"path":"src/main/java/seedu/address/model/person/attribute/DateAttribute.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ReflectiveObsidian"},"content":"package seedu.address.model.person.attribute;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":" * Represents an attribute that holds a date value in a person\u0027s record.","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":" * This class extends {@link Attribute} to include functionality specific to date management.","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"public class DateAttribute extends Attribute {","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"    private LocalDate value;","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"ReflectiveObsidian"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"ReflectiveObsidian"},"content":"     * Constructs a DateAttribute.","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"ReflectiveObsidian"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"ReflectiveObsidian"},"content":"     * @param name Name of the attribute.","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"ReflectiveObsidian"},"content":"     * @param value A LocalDate.","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"    public DateAttribute(String name, LocalDate value) {","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"        super(name);","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"        this.value \u003d value;","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"    public LocalDate getValue() {","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"        return value;","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"    @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"    public String getValueAsString() {","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"        return value.toString();","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"    // Function for searching records by a specific date","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"    public boolean isOnDate(LocalDate date) {","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"        return value.isEqual(date);","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"ReflectiveObsidian":6,"Bandov":31}},{"path":"src/main/java/seedu/address/model/person/attribute/IntegerAttribute.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ReflectiveObsidian"},"content":"package seedu.address.model.person.attribute;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":" * Integer attribute with integer value","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"public class IntegerAttribute extends Attribute {","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"    private int value;","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"     * Constructor for IntegerAttribute","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"     * @param name name of the attribute","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"     * @param value value of the attribute","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"    public IntegerAttribute(String name, int value) {","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"        super(name);","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"        this.value \u003d value;","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"    public int getValue() {","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"        return value;","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"    @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"    public String getValueAsString() {","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"        return Integer.toString(value);","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"    // Function for sorting by integer value","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"    public int compare(IntegerAttribute other) {","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"        return Integer.compare(value, other.value);","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"ReflectiveObsidian":1,"Bandov":32}},{"path":"src/main/java/seedu/address/model/person/attribute/NameAttribute.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ReflectiveObsidian"},"content":"package seedu.address.model.person.attribute;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":" * Name attribute with string value","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"public class NameAttribute extends StringAttribute {","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"    public NameAttribute(String name, String value) {","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"        super(name, value);","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"ReflectiveObsidian":1,"Bandov":9}},{"path":"src/main/java/seedu/address/model/person/attribute/PhoneNumberAttribute.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ReflectiveObsidian"},"content":"package seedu.address.model.person.attribute;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":" * Phone number attribute with integer value","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"public class PhoneNumberAttribute extends IntegerAttribute {","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"    public PhoneNumberAttribute(String name, int value) {","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"        super(name, value);","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"ReflectiveObsidian":1,"Bandov":11}},{"path":"src/main/java/seedu/address/model/person/attribute/SexAttribute.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ReflectiveObsidian"},"content":"package seedu.address.model.person.attribute;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"ReflectiveObsidian"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"ReflectiveObsidian"},"content":" * Gender attribute with enum value","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"ReflectiveObsidian"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"ReflectiveObsidian"},"content":"public class SexAttribute extends Attribute {","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"    private Gender gender;","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"ReflectiveObsidian"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"ReflectiveObsidian"},"content":"     * Gender enum","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"ReflectiveObsidian"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"    public enum Gender {","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"        MALE, FEMALE","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"ReflectiveObsidian"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"ReflectiveObsidian"},"content":"     * Constructor for SexAttribute","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"ReflectiveObsidian"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"ReflectiveObsidian"},"content":"     * @param name Name of the attribute","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"ReflectiveObsidian"},"content":"     * @param gender Sex of the person","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"ReflectiveObsidian"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"    public SexAttribute(String name, Gender gender) {","lastModifiedDate":"2024-03-10"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"        super(name);","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"    @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"    public String getValueAsString() {","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"        return gender.toString();","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"    public Gender getGender() {","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"        return gender;","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"    public void setGender(Gender gender) {","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"ReflectiveObsidian":14,"Bandov":24}},{"path":"src/main/java/seedu/address/model/person/attribute/StringAttribute.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ReflectiveObsidian"},"content":"package seedu.address.model.person.attribute;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":" * Represents a String-based attribute for a person in the address book.","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":" * A subclass of {@code Attribute}, it encapsulates a {@code String} value,","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":" * providing a means to store and retrieve string-based information about a person.","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"public class StringAttribute extends Attribute {","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"    private String value;","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"     * Constructs a new StringAttribute instance with a specified name and value.","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"     * @param name The name of the attribute, which serves as an identifier.","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"     * @param value The value of the attribute, representing the data stored within.","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"    public StringAttribute(String name, String value) {","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"        super(name);","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"        this.value \u003d value;","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"    public String getValue() {","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"        return value;","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"    @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"    public String getValueAsString() {","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"        return value;","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"    // Function for partial string matching","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"    public boolean matches(String searchString) {","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"        return value.contains(searchString);","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"ReflectiveObsidian":1,"Bandov":34}},{"path":"src/main/java/seedu/address/model/person/relationship/BioParentsRelationship.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emberlynn-Loo"},"content":"package seedu.address.model.person.relationship;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Emberlynn-Loo"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"Emberlynn-Loo"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Emberlynn-Loo"},"content":" * Represents a parent-child relationship between two persons.","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"Emberlynn-Loo"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Emberlynn-Loo"},"content":"public class BioParentsRelationship extends RoleBasedRelationship {","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"Emberlynn-Loo"},"content":"    private static final String ROLE_PARENT \u003d \"parent\";","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"Emberlynn-Loo"},"content":"    private static final String ROLE_CHILD \u003d \"child\";","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"Emberlynn-Loo"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"Emberlynn-Loo"},"content":"     * Creates a new BioParentsRelationship between two persons.","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"Emberlynn-Loo"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"Emberlynn-Loo"},"content":"    public BioParentsRelationship(UUID parentUuid, UUID childUuid) {","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"Emberlynn-Loo"},"content":"        super(parentUuid, childUuid);","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"Emberlynn-Loo"},"content":"        addRole(parentUuid, ROLE_PARENT);","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"Emberlynn-Loo"},"content":"        addRole(childUuid, ROLE_CHILD);","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"Emberlynn-Loo"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Emberlynn-Loo":20}},{"path":"src/main/java/seedu/address/model/person/relationship/FriendsRelationship.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emberlynn-Loo"},"content":"package seedu.address.model.person.relationship;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Emberlynn-Loo"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"Emberlynn-Loo"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Emberlynn-Loo"},"content":" * Represents a friends relationship between two persons.","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"Emberlynn-Loo"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Emberlynn-Loo"},"content":"public class FriendsRelationship extends RolelessRelationship {","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"Emberlynn-Loo"},"content":"    public FriendsRelationship(UUID person1, UUID person2) {","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"Emberlynn-Loo"},"content":"        super(person1, person2);","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"Emberlynn-Loo"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Emberlynn-Loo":12}},{"path":"src/main/java/seedu/address/model/person/relationship/Relationship.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emberlynn-Loo"},"content":"package seedu.address.model.person.relationship;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Emberlynn-Loo"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"Tsenrae"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"Tsenrae"},"content":" * Represents a relationship between two people.","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"Tsenrae"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"Tsenrae"},"content":"public abstract class Relationship {","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"Emberlynn-Loo"},"content":"    protected UUID person1;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"Emberlynn-Loo"},"content":"    protected UUID person2;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"Tsenrae"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"Tsenrae"},"content":"     * Creates a new Relationship object with the given UUIDs.","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"Tsenrae"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"Tsenrae"},"content":"     * @param person1 The UUID of the first person in the relationship.","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"Tsenrae"},"content":"     * @param person2 The UUID of the second person in the relationship.","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"Tsenrae"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"Emberlynn-Loo"},"content":"    public Relationship(UUID person1, UUID person2) {","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"Emberlynn-Loo"},"content":"        this.person1 \u003d person1;","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"Emberlynn-Loo"},"content":"        this.person2 \u003d person2;","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"Emberlynn-Loo"},"content":"    // Getters for person UUIDs","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"Emberlynn-Loo"},"content":"    public UUID getPerson1() {","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"Emberlynn-Loo"},"content":"        return person1;","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"Emberlynn-Loo"},"content":"    public UUID getPerson2() {","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"Emberlynn-Loo"},"content":"        return person2;","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"Emberlynn-Loo"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Emberlynn-Loo":21,"Tsenrae":10}},{"path":"src/main/java/seedu/address/model/person/relationship/RelationshipManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emberlynn-Loo"},"content":"package seedu.address.model.person.relationship;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Emberlynn-Loo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"Emberlynn-Loo"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"Emberlynn-Loo"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Emberlynn-Loo"},"content":"import java.util.List;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"Emberlynn-Loo"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"Emberlynn-Loo"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"Emberlynn-Loo"},"content":" * Manages all the relationships of a person","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"Emberlynn-Loo"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"Emberlynn-Loo"},"content":"public class RelationshipManager {","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"Emberlynn-Loo"},"content":"    private Map\u003cString, List\u003cRelationship\u003e\u003e relationships; //overall hashmap where string is the relationship type","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"Emberlynn-Loo"},"content":"    public RelationshipManager() {","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"Emberlynn-Loo"},"content":"        relationships \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void addRelationship(String relationshipType, Relationship relationship) {","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"Emberlynn-Loo"},"content":"        relationships.computeIfAbsent(relationshipType, k -\u003e new ArrayList\u003c\u003e()).add(relationship);","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void deleteRelationship(String relationshipType, Relationship relationship) {","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"Emberlynn-Loo"},"content":"        relationships.get(relationshipType).remove(relationship);","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"Emberlynn-Loo"},"content":"    // Get relationships by type","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"Emberlynn-Loo"},"content":"    public List\u003cRelationship\u003e getRelationships(String relationshipType) {","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"Emberlynn-Loo"},"content":"        return relationships.getOrDefault(relationshipType, Collections.emptyList());","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"Emberlynn-Loo"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Emberlynn-Loo":31}},{"path":"src/main/java/seedu/address/model/person/relationship/RoleBasedRelationship.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emberlynn-Loo"},"content":"package seedu.address.model.person.relationship;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Emberlynn-Loo"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"Emberlynn-Loo"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"Emberlynn-Loo"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"Emberlynn-Loo"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Emberlynn-Loo"},"content":" * Represents a relationship between two persons with roles.","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"Emberlynn-Loo"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"Emberlynn-Loo"},"content":"public class RoleBasedRelationship extends Relationship {","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"Emberlynn-Loo"},"content":"    private static final int MAX_ROLES \u003d 2;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"Emberlynn-Loo"},"content":"    private Map\u003cUUID, String\u003e roles; // Map of person UUID to their role in the relationship","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"Emberlynn-Loo"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"Emberlynn-Loo"},"content":"     * Creates a new RoleBasedRelationship with the given UUIDs of the two persons.","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"Emberlynn-Loo"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"Emberlynn-Loo"},"content":"     * @param person1 The UUID of the first person in the relationship.","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"Emberlynn-Loo"},"content":"     * @param person2 The UUID of the second person in the relationship.","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"Emberlynn-Loo"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"Emberlynn-Loo"},"content":"    public RoleBasedRelationship(UUID person1, UUID person2) {","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"Emberlynn-Loo"},"content":"        super(person1, person2);","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"Emberlynn-Loo"},"content":"        roles \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"Emberlynn-Loo"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"Emberlynn-Loo"},"content":"     * Adds a role for the specified person in the relationship.","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"Emberlynn-Loo"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"Emberlynn-Loo"},"content":"     * @param personUuid The UUID of the person for whom the role is being added.","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"Emberlynn-Loo"},"content":"     * @param role       The role to be added for the person.","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"Emberlynn-Loo"},"content":"     * @throws IllegalStateException If attempting to add more than two roles to the relationship.","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"Emberlynn-Loo"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void addRole(UUID personUuid, String role) {","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"Emberlynn-Loo"},"content":"        if (roles.size() \u003c MAX_ROLES) {","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"Emberlynn-Loo"},"content":"            roles.put(personUuid, role);","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"Emberlynn-Loo"},"content":"        } else {","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"Emberlynn-Loo"},"content":"            throw new IllegalStateException(\"Cannot add more than two roles to a relationship.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"Emberlynn-Loo"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"Emberlynn-Loo"},"content":"    // Get role of a person","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"Emberlynn-Loo"},"content":"    public String getRole(UUID personUuid) {","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"Emberlynn-Loo"},"content":"        String role \u003d roles.get(personUuid);","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"Emberlynn-Loo"},"content":"        if (role \u003d\u003d null) {","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"Emberlynn-Loo"},"content":"            throw new IllegalArgumentException(\"UUID not found in the roles map.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"Emberlynn-Loo"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"Emberlynn-Loo"},"content":"        return role;","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"Emberlynn-Loo"},"content":"}","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Emberlynn-Loo":49}},{"path":"src/main/java/seedu/address/model/person/relationship/RolelessRelationship.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emberlynn-Loo"},"content":"package seedu.address.model.person.relationship;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Emberlynn-Loo"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"Emberlynn-Loo"},"content":"class RolelessRelationship extends Relationship {","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Emberlynn-Loo"},"content":"    public RolelessRelationship(UUID person1, UUID person2) {","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"Emberlynn-Loo"},"content":"        super(person1, person2);","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"Emberlynn-Loo"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Emberlynn-Loo":9}},{"path":"src/main/java/seedu/address/model/person/relationship/SpousesRelationship.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emberlynn-Loo"},"content":"package seedu.address.model.person.relationship;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Emberlynn-Loo"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"Emberlynn-Loo"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Emberlynn-Loo"},"content":" * Represents a friends relationship between two persons.","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"Emberlynn-Loo"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Tsenrae"},"content":"public class SpousesRelationship extends RolelessRelationship {","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"Emberlynn-Loo"},"content":"    public SpousesRelationship(UUID person1, UUID person2) {","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"Emberlynn-Loo"},"content":"        super(person1, person2);","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"Emberlynn-Loo"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Emberlynn-Loo":11,"Tsenrae":1}},{"path":"src/test/java/seedu/address/logic/attribute/EditPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bandov"},"content":"package seedu.address.logic.attribute;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"import seedu.address.model.person.attribute.Attribute;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"import seedu.address.model.person.attribute.NameAttribute;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"class EditPersonCommandParserTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"    private Map\u003cString, Person\u003e personMap;","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"    private EditPersonCommandParser parser;","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"    void setUp() {","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"        personMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"        // Assume NameAttribute is a subclass of Attribute suitable for testing","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"        Attribute name \u003d new NameAttribute(\"Name\", \"John Doe\");","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"        Attribute[] attributes \u003d new Attribute[]{name};","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"        // Adding a dummy person for testing","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"        Person person \u003d new Person(attributes);","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"        String uuid \u003d person.getUuidString();","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"        personMap.put(uuid, person);","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"        parser \u003d new EditPersonCommandParser(personMap);","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"    void parse_addCommand_success() {","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"Bandov"},"content":"        String uuid \u003d personMap.keySet().iterator().next();","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"Bandov"},"content":"        String command \u003d \"cmd /add /uuid \" + uuid + \" attributeName attributeValue\";","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"Bandov"},"content":"        assertDoesNotThrow(() -\u003e parser.parse(command));","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"Bandov"},"content":"    void parse_deleteCommand_success() {","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"Bandov"},"content":"        String uuid \u003d personMap.keySet().iterator().next();","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"Bandov"},"content":"        String attributeName \u003d \"Name\"; // Assuming the person already has this attribute","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"Bandov"},"content":"        String command \u003d String.format(\"cmd /delete /uuid %s %s\", uuid, attributeName);","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"Bandov"},"content":"        assertDoesNotThrow(() -\u003e parser.parse(command));","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"Bandov"},"content":"        // Further validation can include checking if the attribute was actually deleted","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"Bandov"},"content":"    void parse_invalidCommand_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"Bandov"},"content":"        String invalidCommand \u003d \"invalid /add\"; // Incorrect format","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"Bandov"},"content":"        Exception exception \u003d assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"Bandov"},"content":"            parser.parse(invalidCommand);","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"Bandov"},"content":"        });","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"Bandov"},"content":"        assertTrue(exception.getMessage().contains(\"Invalid command format\"),","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"Bandov"},"content":"                \"Expected invalid command format message\");","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Bandov":67}},{"path":"src/test/java/seedu/address/logic/attribute/EditPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bandov"},"content":"package seedu.address.logic.attribute;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"import seedu.address.model.person.attribute.Attribute;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"import seedu.address.model.person.attribute.NameAttribute;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"import seedu.address.model.person.attribute.StringAttribute;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"class EditPersonCommandTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"    private Map\u003cString, Person\u003e personMap;","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"    private EditPersonCommand editPersonCommand;","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"    void setUp() {","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"        personMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"        // Create attributes for a person","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"        Attribute name \u003d new NameAttribute(\"Name\", \"John Doe\");","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"        Attribute phone \u003d new StringAttribute(\"Phone\", \"123456789\");","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"        Attribute email \u003d new StringAttribute(\"Email\", \"johndoe@example.com\");","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"        Attribute address \u003d new StringAttribute(\"Address\", \"123 Main St\");","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"        // Add attributes to an array","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"        Attribute[] attributes \u003d new Attribute[]{name, phone, email, address};","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"        // Instantiate a Person with the specified attributes","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"        Person person \u003d new Person(attributes);","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"Bandov"},"content":"        // Use the UUID from the person object as it\u0027s generated in the constructor","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"Bandov"},"content":"        String uuidString \u003d person.getUuidString();","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"Bandov"},"content":"        // Add the person to the map","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"Bandov"},"content":"        personMap.put(uuidString, person);","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"Bandov"},"content":"        // Instantiate the EditPersonCommand with the person map","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"Bandov"},"content":"        editPersonCommand \u003d new EditPersonCommand(personMap);","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"Bandov"},"content":"    void testAddAttribute() {","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"Bandov"},"content":"        String uuid \u003d personMap.keySet().iterator().next();","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"Bandov"},"content":"        String command \u003d \"cmd /add /uuid \" + uuid + \" attributeName attributeValue\";","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"Bandov"},"content":"        editPersonCommand.parseCommand(command);","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"Bandov"},"content":"        Person person \u003d personMap.get(uuid);","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"Bandov"},"content":"        assertTrue(person.hasAttribute(\"attributeName\"), \"Person should have the added attribute.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"Bandov"},"content":"        Attribute attribute \u003d person.getAttribute(\"attributeName\");","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"attributeValue\", attribute.getValueAsString(), \"Attribute value should match the one provided.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"Bandov"},"content":"    void testDeleteAttribute() {","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"Bandov"},"content":"        // Assuming person already has an attribute named \"attributeName\"","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"Bandov"},"content":"        String uuid \u003d personMap.keySet().iterator().next();","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"Bandov"},"content":"        Person person \u003d personMap.get(uuid);","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"Bandov"},"content":"        person.updateAttribute(new StringAttribute(\"attributeName\", \"attributeValue\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"Bandov"},"content":"        String command \u003d \"cmd /delete /uuid \" + uuid + \" attributeName\";","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"Bandov"},"content":"        editPersonCommand.parseCommand(command);","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"Bandov"},"content":"        assertFalse(person.hasAttribute(\"attributeName\"), \"Person should not have the deleted attribute.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"Bandov"},"content":"    void testInvalidCommandFormat() {","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"Bandov"},"content":"        String command \u003d \"cmd /add\";","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"Bandov"},"content":"        Exception exception \u003d assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"Bandov"},"content":"            editPersonCommand.parseCommand(command);","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"Bandov"},"content":"        });","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"Bandov"},"content":"        String expectedMessage \u003d \"Invalid command format.\";","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"Bandov"},"content":"        String actualMessage \u003d exception.getMessage();","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"Bandov"},"content":"        assertTrue(actualMessage.contains(expectedMessage));","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":91,"author":{"gitId":"Bandov"},"content":"    void testUnsupportedOperation() {","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"Bandov"},"content":"        String uuid \u003d personMap.keySet().iterator().next();","lastModifiedDate":"2024-03-14"},{"lineNumber":93,"author":{"gitId":"Bandov"},"content":"        String command \u003d \"cmd /unsupported \" + uuid + \" attributeName attributeValue\";","lastModifiedDate":"2024-03-14"},{"lineNumber":94,"author":{"gitId":"Bandov"},"content":"        Exception exception \u003d assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2024-03-14"},{"lineNumber":95,"author":{"gitId":"Bandov"},"content":"            editPersonCommand.parseCommand(command);","lastModifiedDate":"2024-03-14"},{"lineNumber":96,"author":{"gitId":"Bandov"},"content":"        });","lastModifiedDate":"2024-03-14"},{"lineNumber":97,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":98,"author":{"gitId":"Bandov"},"content":"        String expectedMessage \u003d \"Unsupported operation\";","lastModifiedDate":"2024-03-14"},{"lineNumber":99,"author":{"gitId":"Bandov"},"content":"        String actualMessage \u003d exception.getMessage();","lastModifiedDate":"2024-03-14"},{"lineNumber":100,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":101,"author":{"gitId":"Bandov"},"content":"        assertTrue(actualMessage.contains(expectedMessage));","lastModifiedDate":"2024-03-14"},{"lineNumber":102,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":103,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":104,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Bandov":104}},{"path":"src/test/java/seedu/address/logic/relationship/AddRelationshipCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tsenrae"},"content":"package seedu.address.logic.relationship;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"Tsenrae"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"Tsenrae"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"Tsenrae"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"Tsenrae"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"Tsenrae"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"Tsenrae"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"Tsenrae"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"Tsenrae"},"content":"import seedu.address.model.person.attribute.Attribute;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"Tsenrae"},"content":"import seedu.address.model.person.attribute.NameAttribute;","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"Tsenrae"},"content":"class AddRelationshipCommandParserTest {","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"Tsenrae"},"content":"    private Map\u003cString, Person\u003e personMap;","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"Tsenrae"},"content":"    private AddRelationshipCommandParser parser;","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"Tsenrae"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"Tsenrae"},"content":"    void setUp() {","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"Tsenrae"},"content":"        personMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"Tsenrae"},"content":"        // Assume NameAttribute is a subclass of Attribute suitable for testing","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"Tsenrae"},"content":"        Attribute name1 \u003d new NameAttribute(\"Name\", \"John Doe\");","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"Tsenrae"},"content":"        Attribute name2 \u003d new NameAttribute(\"Name\", \"Jane Doe\");","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"Tsenrae"},"content":"        Attribute[] attributes1 \u003d new Attribute[]{name1};","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"Tsenrae"},"content":"        Attribute[] attributes2 \u003d new Attribute[]{name2};","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"Tsenrae"},"content":"        // Adding dummy people for testing","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"Tsenrae"},"content":"        Person person1 \u003d new Person(attributes1);","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"Tsenrae"},"content":"        Person person2 \u003d new Person(attributes2);","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"Tsenrae"},"content":"        String uuid1 \u003d person1.getUuidString();","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"Tsenrae"},"content":"        String uuid2 \u003d person2.getUuidString();","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"Tsenrae"},"content":"        personMap.put(uuid1, person1);","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"Tsenrae"},"content":"        personMap.put(uuid2, person2);","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"Tsenrae"},"content":"        parser \u003d new AddRelationshipCommandParser(personMap);","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"Tsenrae"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"Tsenrae"},"content":"    void parse_validInputWithRoles_success() {","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"Tsenrae"},"content":"        String uuid1 \u003d personMap.keySet().iterator().next();","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"Tsenrae"},"content":"        String uuid2 \u003d personMap.keySet().iterator().next();","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"Tsenrae"},"content":"        assertDoesNotThrow(() -\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"Tsenrae"},"content":"                parser.parse(\"addrelation /bioparent /child \" + uuid1 + \" /parent \" + uuid2));","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"Tsenrae"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"Tsenrae"},"content":"    void parse_validInputWithoutRoles_success() {","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"Tsenrae"},"content":"        String uuid1 \u003d personMap.keySet().iterator().next();","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"Tsenrae"},"content":"        String uuid2 \u003d personMap.keySet().iterator().next();","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"Tsenrae"},"content":"        assertDoesNotThrow(() -\u003e parser.parse(\"addrelation /friends \" + uuid1 + \", \" + uuid2));","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"Tsenrae"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"Tsenrae"},"content":"    void parse_invalidInputMissingParts_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"Tsenrae"},"content":"        String uuid1 \u003d personMap.keySet().iterator().next();","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"Tsenrae"},"content":"        String uuid2 \u003d personMap.keySet().iterator().next();","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"Tsenrae"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"Tsenrae"},"content":"                parser.parse(\"addrelation /bioparent /child\" + uuid1));","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"Tsenrae"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"Tsenrae"},"content":"    void parse_invalidInputIncorrectRelationshipType_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"Tsenrae"},"content":"        String uuid1 \u003d personMap.keySet().iterator().next();","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"Tsenrae"},"content":"        String uuid2 \u003d personMap.keySet().iterator().next();","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"Tsenrae"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"Tsenrae"},"content":"                parser.parse(\"addrelation /invalid \" + uuid1 + \", \" + uuid2));","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"Tsenrae"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"Tsenrae"},"content":"    void parse_invalidInputIncorrectUuids_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"Tsenrae"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"Tsenrae"},"content":"                parser.parse(\"addrelation /bioparent /child invalid /parent invalid\"));","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"Tsenrae"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"Tsenrae":77}},{"path":"src/test/java/seedu/address/logic/relationship/AddRelationshipCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tsenrae"},"content":"package seedu.address.logic.relationship;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"Tsenrae"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"Tsenrae"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"Tsenrae"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"Tsenrae"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"Tsenrae"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"Tsenrae"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"Tsenrae"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"Tsenrae"},"content":"import seedu.address.model.person.attribute.Attribute;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"Tsenrae"},"content":"import seedu.address.model.person.attribute.NameAttribute;","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"Tsenrae"},"content":"class AddRelationshipCommandTest {","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"Tsenrae"},"content":"    private Map\u003cString, Person\u003e personMap;","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"Tsenrae"},"content":"    private AddRelationshipCommand command;","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"Tsenrae"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"Tsenrae"},"content":"    void setUp() {","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"Tsenrae"},"content":"        personMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"Tsenrae"},"content":"        // Assume NameAttribute is a subclass of Attribute suitable for testing","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"Tsenrae"},"content":"        Attribute name1 \u003d new NameAttribute(\"Name\", \"John Doe\");","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"Tsenrae"},"content":"        Attribute name2 \u003d new NameAttribute(\"Name\", \"Jane Doe\");","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"Tsenrae"},"content":"        Attribute[] attributes1 \u003d new Attribute[]{name1};","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"Tsenrae"},"content":"        Attribute[] attributes2 \u003d new Attribute[]{name2};","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"Tsenrae"},"content":"        // Adding dummy people for testing","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"Tsenrae"},"content":"        Person person1 \u003d new Person(attributes1);","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"Tsenrae"},"content":"        Person person2 \u003d new Person(attributes2);","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"Tsenrae"},"content":"        String uuid1 \u003d person1.getUuidString();","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"Tsenrae"},"content":"        String uuid2 \u003d person2.getUuidString();","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"Tsenrae"},"content":"        personMap.put(uuid1, person1);","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"Tsenrae"},"content":"        personMap.put(uuid2, person2);","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"Tsenrae"},"content":"        command \u003d new AddRelationshipCommand(personMap);","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"Tsenrae"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"Tsenrae"},"content":"    void execute_validInputWithRoles_success() {","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"Tsenrae"},"content":"        String uuid1 \u003d personMap.keySet().iterator().next();","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"Tsenrae"},"content":"        String uuid2 \u003d personMap.keySet().iterator().next();","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"Tsenrae"},"content":"        assertDoesNotThrow(() -\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"Tsenrae"},"content":"                command.parseCommand(\"addrelation /bioparent /parent \" + uuid1 + \" /child \" + uuid2));","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"Tsenrae"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"Tsenrae"},"content":"    void execute_validInputWithoutRoles_success() {","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"Tsenrae"},"content":"        String uuid1 \u003d personMap.keySet().iterator().next();","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"Tsenrae"},"content":"        String uuid2 \u003d personMap.keySet().iterator().next();","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"Tsenrae"},"content":"        assertDoesNotThrow(() -\u003e command.parseCommand(\"addrelation /friends \" + uuid1 + \", \" + uuid2));","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"Tsenrae"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"Tsenrae"},"content":"    void execute_invalidInputMissingParts_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"Tsenrae"},"content":"        String uuid1 \u003d personMap.keySet().iterator().next();","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"Tsenrae"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"Tsenrae"},"content":"                command.parseCommand(\"addrelation /bioparent /parent\" + uuid1 + \", \"));","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"Tsenrae"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"Tsenrae"},"content":"    void execute_invalidInputIncorrectRelationshipType_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"Tsenrae"},"content":"        String uuid1 \u003d personMap.keySet().iterator().next();","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"Tsenrae"},"content":"        String uuid2 \u003d personMap.keySet().iterator().next();","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"Tsenrae"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"Tsenrae"},"content":"                command.parseCommand(\"addrelation /invalid /parent\" + uuid1 + \" /child \" + uuid2));","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"Tsenrae"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"Tsenrae"},"content":"    void execute_roleBasedRelationshipPersonNotFound_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"Tsenrae"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"Tsenrae"},"content":"                command.parseCommand(\"addrelation /bioparent /parent 1234 /child 5678\"));","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"Tsenrae"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"Tsenrae"},"content":"    void execute_rolelessRelationshipPersonNotFound_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"Tsenrae"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"Tsenrae"},"content":"                command.parseCommand(\"addrelation /friends 1234, 5678\"));","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":82,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":83,"author":{"gitId":"Tsenrae"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":84,"author":{"gitId":"Tsenrae"},"content":"    void execute_invalidInputIncorrectUuids_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-15"},{"lineNumber":85,"author":{"gitId":"Tsenrae"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":86,"author":{"gitId":"Tsenrae"},"content":"                command.parseCommand(\"addrelation /bioparent /parent invalid /child invalid\"));","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"Tsenrae"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"Tsenrae"},"content":"    void execute_invalidRelationType_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"Tsenrae"},"content":"        String uuid1 \u003d personMap.keySet().iterator().next();","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"Tsenrae"},"content":"        String uuid2 \u003d personMap.keySet().iterator().next();","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"Tsenrae"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"Tsenrae"},"content":"                command.parseCommand(\"addrelation /invalid /parent \" + uuid1 + \" /child \" + uuid2));","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"Tsenrae"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":98,"author":{"gitId":"Tsenrae"},"content":"    void execute_invalidUuidCommandFormat_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"Tsenrae"},"content":"        String uuid1 \u003d personMap.keySet().iterator().next();","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"Tsenrae"},"content":"        String uuid2 \u003d personMap.keySet().iterator().next();","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"Tsenrae"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":102,"author":{"gitId":"Tsenrae"},"content":"                command.parseCommand(\"addrelation /friends \" + uuid1 + \" \" + uuid2));","lastModifiedDate":"2024-03-16"},{"lineNumber":103,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":104,"author":{"gitId":"Tsenrae"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"Tsenrae":104}},{"path":"src/test/java/seedu/address/logic/relationship/DeleteRelationshipCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emberlynn-Loo"},"content":"package seedu.address.logic.relationship;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"Emberlynn-Loo"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"Emberlynn-Loo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"Emberlynn-Loo"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"Emberlynn-Loo"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"Emberlynn-Loo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"Emberlynn-Loo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.model.person.attribute.Attribute;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.model.person.attribute.NameAttribute;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.model.person.relationship.BioParentsRelationship;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.model.person.relationship.RelationshipManager;","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"Emberlynn-Loo"},"content":"class DeleteRelationshipCommandParserTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"Emberlynn-Loo"},"content":"    private Map\u003cString, Person\u003e personMap;","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"Emberlynn-Loo"},"content":"    private RelationshipManager relationshipManager;","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"Emberlynn-Loo"},"content":"    private DeleteRelationshipCommandParser parser;","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"Emberlynn-Loo"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"Emberlynn-Loo"},"content":"    void setUp() {","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"Emberlynn-Loo"},"content":"        personMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"Emberlynn-Loo"},"content":"        relationshipManager \u003d new RelationshipManager();","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"Emberlynn-Loo"},"content":"        parser \u003d new DeleteRelationshipCommandParser(personMap, relationshipManager);","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"Emberlynn-Loo"},"content":"    void parse_validInput_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Add some dummy persons and relationships to test parsing","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute name1 \u003d new NameAttribute(\"Name\", \"John Doe\");","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute name2 \u003d new NameAttribute(\"Name\", \"Jane Doe\");","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute[] attributes1 \u003d new Attribute[]{name1};","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute[] attributes2 \u003d new Attribute[]{name2};","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Adding dummy people for testing","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"Emberlynn-Loo"},"content":"        Person person1 \u003d new Person(attributes1);","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"Emberlynn-Loo"},"content":"        Person person2 \u003d new Person(attributes2);","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"Emberlynn-Loo"},"content":"        personMap.put(person1.getUuidString(), person1);","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"Emberlynn-Loo"},"content":"        personMap.put(person2.getUuidString(), person2);","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"Emberlynn-Loo"},"content":"        relationshipManager.addRelationship(\"TestRelationship\",","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"Emberlynn-Loo"},"content":"                new BioParentsRelationship(person1.getUuid(), person2.getUuid()));","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Parse a valid delete relationship command","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertDoesNotThrow(() -\u003e parser.parse(\"deleterelation /TestRelationship \"","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"Emberlynn-Loo"},"content":"                + person1.getUuidString() + \",\" + person2.getUuidString()));","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"Emberlynn-Loo"},"content":"    void parse_invalidMissingParts_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e parser.parse(\"deleterelation /TestRelationship 1234\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"Emberlynn-Loo"},"content":"    void parse_invalidIncorrectUuids_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"Emberlynn-Loo"},"content":"                parser.parse(\"deleterelation /TestRelationship invalid,invalid\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"Emberlynn-Loo"},"content":"    void parse_invalidRelationshipType_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e parser.parse(\"deleterelation /InvalidType 1234,5678\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"Emberlynn-Loo"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"Emberlynn-Loo":67}},{"path":"src/test/java/seedu/address/logic/relationship/DeleteRelationshipCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emberlynn-Loo"},"content":"package seedu.address.logic.relationship;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"Emberlynn-Loo"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"Emberlynn-Loo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"Emberlynn-Loo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"Emberlynn-Loo"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"Emberlynn-Loo"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"Emberlynn-Loo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"Emberlynn-Loo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.model.person.attribute.Attribute;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.model.person.attribute.NameAttribute;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.model.person.relationship.Relationship;","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.model.person.relationship.RelationshipManager;","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.model.person.relationship.RoleBasedRelationship;","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"Emberlynn-Loo"},"content":"class DeleteRelationshipCommandTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"Emberlynn-Loo"},"content":"    private Map\u003cString, Person\u003e personMap;","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"Emberlynn-Loo"},"content":"    private RelationshipManager relationshipManager;","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"Emberlynn-Loo"},"content":"    private DeleteRelationshipCommand command;","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"Emberlynn-Loo"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"Emberlynn-Loo"},"content":"    void setUp() {","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"Emberlynn-Loo"},"content":"        personMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"Emberlynn-Loo"},"content":"        relationshipManager \u003d new RelationshipManager();","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Assume NameAttribute is a subclass of Attribute suitable for testing","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute name1 \u003d new NameAttribute(\"Name\", \"John Doe\");","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute name2 \u003d new NameAttribute(\"Name\", \"Jane Doe\");","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute[] attributes1 \u003d new Attribute[]{name1};","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute[] attributes2 \u003d new Attribute[]{name2};","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Adding dummy people for testing","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"Emberlynn-Loo"},"content":"        Person person1 \u003d new Person(attributes1);","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"Emberlynn-Loo"},"content":"        Person person2 \u003d new Person(attributes2);","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"Emberlynn-Loo"},"content":"        String uuid1 \u003d person1.getUuidString();","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"Emberlynn-Loo"},"content":"        String uuid2 \u003d person2.getUuidString();","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"Emberlynn-Loo"},"content":"        personMap.put(uuid1, person1);","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"Emberlynn-Loo"},"content":"        personMap.put(uuid2, person2);","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"Emberlynn-Loo"},"content":"        command \u003d new DeleteRelationshipCommand(personMap, relationshipManager);","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"Emberlynn-Loo"},"content":"    void parseCommand_validInput_relationshipRemoved() {","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Create a relationship between two persons","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute name1 \u003d new NameAttribute(\"Name\", \"John Doe\");","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute name2 \u003d new NameAttribute(\"Name\", \"Jane Doe\");","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute[] attributes1 \u003d new Attribute[]{name1};","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute[] attributes2 \u003d new Attribute[]{name2};","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Adding dummy people for testing","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"Emberlynn-Loo"},"content":"        Person person1 \u003d new Person(attributes1);","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"Emberlynn-Loo"},"content":"        Person person2 \u003d new Person(attributes2);","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"Emberlynn-Loo"},"content":"        String uuid1 \u003d person1.getUuidString();","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"Emberlynn-Loo"},"content":"        String uuid2 \u003d person2.getUuidString();","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"Emberlynn-Loo"},"content":"        personMap.put(uuid1, person1);","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"Emberlynn-Loo"},"content":"        personMap.put(uuid2, person2);","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"Emberlynn-Loo"},"content":"        Relationship relationship \u003d new RoleBasedRelationship(person1.getUuid(), person2.getUuid());","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Add the relationship to the RelationshipManager","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"Emberlynn-Loo"},"content":"        relationshipManager.addRelationship(\"TestRelationship\", relationship);","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Parse the command to delete the relationship","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertDoesNotThrow(() -\u003e command.parseCommand(\"deleterelation /TestRelationship \"","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"Emberlynn-Loo"},"content":"                + person1.getUuid() + \",\" + person2.getUuid()));","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Check if the relationship is removed","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertTrue(relationshipManager.getRelationships(\"TestRelationship\").isEmpty());","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"Emberlynn-Loo"},"content":"    void parseCommand_invalidInput_relationshipRemoved() {","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"Emberlynn-Loo"},"content":"        String uuid1 \u003d personMap.keySet().iterator().next();","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"Emberlynn-Loo"},"content":"        String uuid2 \u003d personMap.keySet().iterator().next();","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"Emberlynn-Loo"},"content":"                command.parseCommand(\"deleterelation /friends \" + uuid1 + \" \" + uuid2));","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"Emberlynn-Loo"},"content":"    void parseCommand_invalidRelationshipType_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"Emberlynn-Loo"},"content":"                command.parseCommand(\"deleterelation /InvalidType 1234,5678\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"Emberlynn-Loo"},"content":"    void parseCommand_invalidMissingParts_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"Emberlynn-Loo"},"content":"                command.parseCommand(\"deleterelation /TestRelationship 1234\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"Emberlynn-Loo"},"content":"    void parseCommand_invalidIncorrectUuids_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"Emberlynn-Loo"},"content":"                command.parseCommand(\"deleterelation /TestRelationship invalid,invalid\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"Emberlynn-Loo"},"content":"    void parseCommand_validRelationshipCheck_relationshipRemoved() {","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Create a relationship between two persons","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute name1 \u003d new NameAttribute(\"Name\", \"John Doe\");","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute name2 \u003d new NameAttribute(\"Name\", \"Jane Doe\");","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute[] attributes1 \u003d new Attribute[]{name1};","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute[] attributes2 \u003d new Attribute[]{name2};","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Adding dummy people for testing","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"Emberlynn-Loo"},"content":"        Person person1 \u003d new Person(attributes1);","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"Emberlynn-Loo"},"content":"        Person person2 \u003d new Person(attributes2);","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"Emberlynn-Loo"},"content":"        String uuid1 \u003d person1.getUuidString();","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"Emberlynn-Loo"},"content":"        String uuid2 \u003d person2.getUuidString();","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"Emberlynn-Loo"},"content":"        personMap.put(uuid1, person1);","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"Emberlynn-Loo"},"content":"        personMap.put(uuid2, person2);","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"Emberlynn-Loo"},"content":"        Relationship relationship \u003d new RoleBasedRelationship(person1.getUuid(), person2.getUuid());","lastModifiedDate":"2024-03-17"},{"lineNumber":120,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Add the relationship to the RelationshipManager","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"Emberlynn-Loo"},"content":"        relationshipManager.addRelationship(\"TestRelationship\", relationship);","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Parse the command to delete the relationship","lastModifiedDate":"2024-03-17"},{"lineNumber":125,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertDoesNotThrow(() -\u003e command.parseCommand(\"deleterelation /TestRelationship \"","lastModifiedDate":"2024-03-17"},{"lineNumber":126,"author":{"gitId":"Emberlynn-Loo"},"content":"                + person1.getUuid() + \",\" + person2.getUuid()));","lastModifiedDate":"2024-03-17"},{"lineNumber":127,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":128,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Check if the relationship is removed","lastModifiedDate":"2024-03-17"},{"lineNumber":129,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertTrue(relationshipManager.getRelationships(\"TestRelationship\").isEmpty());","lastModifiedDate":"2024-03-17"},{"lineNumber":130,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":132,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":133,"author":{"gitId":"Emberlynn-Loo"},"content":"    void parseCommand_invalidNoMatchingRelationship_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Create a relationship between two persons","lastModifiedDate":"2024-03-17"},{"lineNumber":135,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute name1 \u003d new NameAttribute(\"Name\", \"John Doe\");","lastModifiedDate":"2024-03-17"},{"lineNumber":136,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute name2 \u003d new NameAttribute(\"Name\", \"Jane Doe\");","lastModifiedDate":"2024-03-17"},{"lineNumber":137,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute[] attributes1 \u003d new Attribute[]{name1};","lastModifiedDate":"2024-03-17"},{"lineNumber":138,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute[] attributes2 \u003d new Attribute[]{name2};","lastModifiedDate":"2024-03-17"},{"lineNumber":139,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":140,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Adding dummy people for testing","lastModifiedDate":"2024-03-17"},{"lineNumber":141,"author":{"gitId":"Emberlynn-Loo"},"content":"        Person person1 \u003d new Person(attributes1);","lastModifiedDate":"2024-03-17"},{"lineNumber":142,"author":{"gitId":"Emberlynn-Loo"},"content":"        Person person2 \u003d new Person(attributes2);","lastModifiedDate":"2024-03-17"},{"lineNumber":143,"author":{"gitId":"Emberlynn-Loo"},"content":"        String uuid1 \u003d person1.getUuidString();","lastModifiedDate":"2024-03-17"},{"lineNumber":144,"author":{"gitId":"Emberlynn-Loo"},"content":"        String uuid2 \u003d person2.getUuidString();","lastModifiedDate":"2024-03-17"},{"lineNumber":145,"author":{"gitId":"Emberlynn-Loo"},"content":"        personMap.put(uuid1, person1);","lastModifiedDate":"2024-03-17"},{"lineNumber":146,"author":{"gitId":"Emberlynn-Loo"},"content":"        personMap.put(uuid2, person2);","lastModifiedDate":"2024-03-17"},{"lineNumber":147,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":148,"author":{"gitId":"Emberlynn-Loo"},"content":"        Relationship relationship \u003d new RoleBasedRelationship(person1.getUuid(), person2.getUuid());","lastModifiedDate":"2024-03-17"},{"lineNumber":149,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":150,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Add the relationship to the RelationshipManager","lastModifiedDate":"2024-03-17"},{"lineNumber":151,"author":{"gitId":"Emberlynn-Loo"},"content":"        relationshipManager.addRelationship(\"TestRelationship\", relationship);","lastModifiedDate":"2024-03-17"},{"lineNumber":152,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":153,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Try to delete a relationship that doesn\u0027t exist","lastModifiedDate":"2024-03-17"},{"lineNumber":154,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e command.parseCommand(\"deleterelation /TestRelationship \"","lastModifiedDate":"2024-03-17"},{"lineNumber":155,"author":{"gitId":"Emberlynn-Loo"},"content":"                + \"invalid,invalid\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":156,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":157,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":158,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":159,"author":{"gitId":"Emberlynn-Loo"},"content":"    void parseCommand_relationshipNotFound_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":160,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Create a relationship between two persons","lastModifiedDate":"2024-03-17"},{"lineNumber":161,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute name1 \u003d new NameAttribute(\"Name\", \"John Doe\");","lastModifiedDate":"2024-03-17"},{"lineNumber":162,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute name2 \u003d new NameAttribute(\"Name\", \"Jane Doe\");","lastModifiedDate":"2024-03-17"},{"lineNumber":163,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute[] attributes1 \u003d new Attribute[]{name1};","lastModifiedDate":"2024-03-17"},{"lineNumber":164,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute[] attributes2 \u003d new Attribute[]{name2};","lastModifiedDate":"2024-03-17"},{"lineNumber":165,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":166,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Adding dummy people for testing","lastModifiedDate":"2024-03-17"},{"lineNumber":167,"author":{"gitId":"Emberlynn-Loo"},"content":"        Person person1 \u003d new Person(attributes1);","lastModifiedDate":"2024-03-17"},{"lineNumber":168,"author":{"gitId":"Emberlynn-Loo"},"content":"        Person person2 \u003d new Person(attributes2);","lastModifiedDate":"2024-03-17"},{"lineNumber":169,"author":{"gitId":"Emberlynn-Loo"},"content":"        String uuid1 \u003d person1.getUuidString();","lastModifiedDate":"2024-03-17"},{"lineNumber":170,"author":{"gitId":"Emberlynn-Loo"},"content":"        String uuid2 \u003d person2.getUuidString();","lastModifiedDate":"2024-03-17"},{"lineNumber":171,"author":{"gitId":"Emberlynn-Loo"},"content":"        personMap.put(uuid1, person1);","lastModifiedDate":"2024-03-17"},{"lineNumber":172,"author":{"gitId":"Emberlynn-Loo"},"content":"        personMap.put(uuid2, person2);","lastModifiedDate":"2024-03-17"},{"lineNumber":173,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":174,"author":{"gitId":"Emberlynn-Loo"},"content":"        // No relationship added to RelationshipManager","lastModifiedDate":"2024-03-17"},{"lineNumber":175,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":176,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Try to delete a relationship that doesn\u0027t exist","lastModifiedDate":"2024-03-17"},{"lineNumber":177,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e command.parseCommand(\"deleterelation /TestRelationship \"","lastModifiedDate":"2024-03-17"},{"lineNumber":178,"author":{"gitId":"Emberlynn-Loo"},"content":"                + person1.getUuid() + \",\" + person2.getUuid()));","lastModifiedDate":"2024-03-17"},{"lineNumber":179,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":180,"author":{"gitId":"Emberlynn-Loo"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"Emberlynn-Loo":180}},{"path":"src/test/java/seedu/address/model/person/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bandov"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"import seedu.address.model.person.attribute.Attribute;","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"import seedu.address.model.person.attribute.DateAttribute;","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"import seedu.address.model.person.attribute.IntegerAttribute;","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"import seedu.address.model.person.attribute.StringAttribute;","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"    public void setAttribute_newAttribute_success() {","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"        String attributeName \u003d \"Name\";","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"        Attribute attributeValue \u003d new StringAttribute(attributeName, \"John Doe\");","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"        descriptor.setAttribute(attributeName, attributeValue);","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"        assertTrue(descriptor.getAttributes().containsKey(attributeName), \"Attribute should be added\");","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"    public void getAttribute_existingAttribute_found() {","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"        String attributeName \u003d \"Birthday\";","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"Bandov"},"content":"        Attribute attributeValue \u003d new DateAttribute(attributeName, LocalDate.of(1990, 1, 1));","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"Bandov"},"content":"        descriptor.setAttribute(attributeName, attributeValue);","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"Bandov"},"content":"        Optional\u003cAttribute\u003e retrievedAttribute \u003d descriptor.getAttribute(attributeName);","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"Bandov"},"content":"        assertTrue(retrievedAttribute.isPresent(), \"Attribute should exist\");","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"Bandov"},"content":"        assertEquals(attributeValue, retrievedAttribute.get(), \"Retrieved attribute should match the set attribute\");","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"Bandov"},"content":"    public void getAttribute_nonExistingAttribute_notFound() {","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"Bandov"},"content":"        String attributeName \u003d \"NonExisting\";","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"Bandov"},"content":"        Optional\u003cAttribute\u003e retrievedAttribute \u003d descriptor.getAttribute(attributeName);","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"Bandov"},"content":"        assertFalse(retrievedAttribute.isPresent(), \"Attribute should not exist\");","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"Bandov"},"content":"    public void getAttributes_emptyDescriptor_emptyMap() {","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"Bandov"},"content":"        assertTrue(descriptor.getAttributes().isEmpty(), \"Attributes map should be empty\");","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"Bandov"},"content":"    public void getAttributes_nonEmptyDescriptor_nonEmptyMap() {","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"Bandov"},"content":"        String attributeName1 \u003d \"Email\";","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"Bandov"},"content":"        Attribute attributeValue1 \u003d new StringAttribute(attributeName1, \"example@example.com\");","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"Bandov"},"content":"        descriptor.setAttribute(attributeName1, attributeValue1);","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"Bandov"},"content":"        String attributeName2 \u003d \"Phone\";","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"Bandov"},"content":"        Attribute attributeValue2 \u003d new IntegerAttribute(\"PhoneNumber\", 12345678);","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"Bandov"},"content":"        descriptor.setAttribute(attributeName2, attributeValue2);","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"Bandov"},"content":"        Map\u003cString, Attribute\u003e attributes \u003d descriptor.getAttributes();","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"Bandov"},"content":"        assertEquals(2, attributes.size(), \"Attributes map should contain two entries\");","lastModifiedDate":"2024-03-13"},{"lineNumber":70,"author":{"gitId":"Bandov"},"content":"        assertTrue(attributes.containsKey(attributeName1) \u0026\u0026 attributes.containsKey(attributeName2),","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"Bandov"},"content":"                \"Attributes map should contain the correct keys\");","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"Bandov":74}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"ReflectiveObsidian"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"ReflectiveObsidian"},"content":"import seedu.address.model.person.attribute.Attribute;","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"ReflectiveObsidian"},"content":"import seedu.address.model.person.attribute.BirthdayAttribute;","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"ReflectiveObsidian"},"content":"import seedu.address.model.person.attribute.NameAttribute;","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"ReflectiveObsidian"},"content":"import seedu.address.model.person.attribute.StringAttribute;","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"ReflectiveObsidian"},"content":"        String expected \u003d Person.class.getCanonicalName()","lastModifiedDate":"2024-03-11"},{"lineNumber":102,"author":{"gitId":"ReflectiveObsidian"},"content":"                + \"{uuid\u003d\" + ALICE.getUuidString()","lastModifiedDate":"2024-03-11"},{"lineNumber":103,"author":{"gitId":"ReflectiveObsidian"},"content":"                + \", name\u003d\" + ALICE.getName()","lastModifiedDate":"2024-03-11"},{"lineNumber":104,"author":{"gitId":"ReflectiveObsidian"},"content":"                + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"ReflectiveObsidian"},"content":"                + \", email\u003d\" + ALICE.getEmail()","lastModifiedDate":"2024-03-11"},{"lineNumber":106,"author":{"gitId":"ReflectiveObsidian"},"content":"                + \", address\u003d\" + ALICE.getAddress()","lastModifiedDate":"2024-03-11"},{"lineNumber":107,"author":{"gitId":"ReflectiveObsidian"},"content":"                + \", tags\u003d\" + ALICE.getTags() + \"}\";","lastModifiedDate":"2024-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":111,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void getName() {","lastModifiedDate":"2024-03-11"},{"lineNumber":112,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertEquals(VALID_NAME_BOB, BOB.getName().toString());","lastModifiedDate":"2024-03-11"},{"lineNumber":113,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":114,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":115,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void getPhone() {","lastModifiedDate":"2024-03-11"},{"lineNumber":116,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertEquals(VALID_PHONE_BOB, BOB.getPhone().toString());","lastModifiedDate":"2024-03-11"},{"lineNumber":117,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":118,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":119,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void getEmail() {","lastModifiedDate":"2024-03-11"},{"lineNumber":120,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertEquals(VALID_EMAIL_BOB, BOB.getEmail().toString());","lastModifiedDate":"2024-03-11"},{"lineNumber":121,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":122,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":123,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void getAddress() {","lastModifiedDate":"2024-03-11"},{"lineNumber":124,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertEquals(VALID_ADDRESS_BOB, BOB.getAddress().toString());","lastModifiedDate":"2024-03-11"},{"lineNumber":125,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":126,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":127,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void getUuidString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":128,"author":{"gitId":"ReflectiveObsidian"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-11"},{"lineNumber":129,"author":{"gitId":"ReflectiveObsidian"},"content":"        String personUuidString \u003d person.getUuidString();","lastModifiedDate":"2024-03-11"},{"lineNumber":130,"author":{"gitId":"ReflectiveObsidian"},"content":"        // Solution below adapted from Github Copilot","lastModifiedDate":"2024-03-11"},{"lineNumber":131,"author":{"gitId":"ReflectiveObsidian"},"content":"        String uuidFormat \u003d \"^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$\";","lastModifiedDate":"2024-03-11"},{"lineNumber":132,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertTrue(personUuidString.matches(uuidFormat));","lastModifiedDate":"2024-03-11"},{"lineNumber":133,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":134,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":135,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void getUuidString_differentUuids() {","lastModifiedDate":"2024-03-12"},{"lineNumber":136,"author":{"gitId":"ReflectiveObsidian"},"content":"        Person person1 \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-11"},{"lineNumber":137,"author":{"gitId":"ReflectiveObsidian"},"content":"        Person person2 \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-11"},{"lineNumber":138,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertFalse(person1.getUuidString().equals(person2.getUuidString()));","lastModifiedDate":"2024-03-11"},{"lineNumber":139,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":140,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":141,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void equalsUuid_samePerson_true() {","lastModifiedDate":"2024-03-12"},{"lineNumber":142,"author":{"gitId":"ReflectiveObsidian"},"content":"        Person person1 \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-11"},{"lineNumber":143,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertTrue(person1.equalsUuid(person1));","lastModifiedDate":"2024-03-11"},{"lineNumber":144,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":145,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":146,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void equalsUuid_differentUuids_false() {","lastModifiedDate":"2024-03-12"},{"lineNumber":147,"author":{"gitId":"ReflectiveObsidian"},"content":"        Person person1 \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-11"},{"lineNumber":148,"author":{"gitId":"ReflectiveObsidian"},"content":"        Person person2 \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-11"},{"lineNumber":149,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertFalse(person1.equalsUuid(person2));","lastModifiedDate":"2024-03-11"},{"lineNumber":150,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":151,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":152,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void equalsUuid_notPerson_false() {","lastModifiedDate":"2024-03-12"},{"lineNumber":153,"author":{"gitId":"ReflectiveObsidian"},"content":"        Person person1 \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-11"},{"lineNumber":154,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertFalse(person1.equalsUuid(\"not a person\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":155,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":156,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":157,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void getUuid() {","lastModifiedDate":"2024-03-11"},{"lineNumber":158,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertTrue(ALICE.getUuid() !\u003d null);","lastModifiedDate":"2024-03-11"},{"lineNumber":159,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":160,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":161,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void hasAttribute_noAttribute_false() {","lastModifiedDate":"2024-03-13"},{"lineNumber":162,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertFalse(ALICE.hasAttribute(\"no attribute\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":163,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":164,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":165,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void hasAttribute_hasAttribute_true() {","lastModifiedDate":"2024-03-13"},{"lineNumber":166,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertTrue(ALICE.hasAttribute(\"Name\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":167,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":168,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":169,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void getAttribute_noAttribute_null() {","lastModifiedDate":"2024-03-13"},{"lineNumber":170,"author":{"gitId":"ReflectiveObsidian"},"content":"        try {","lastModifiedDate":"2024-03-13"},{"lineNumber":171,"author":{"gitId":"ReflectiveObsidian"},"content":"            ALICE.getAttribute(\"no attribute\");","lastModifiedDate":"2024-03-13"},{"lineNumber":172,"author":{"gitId":"ReflectiveObsidian"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-13"},{"lineNumber":173,"author":{"gitId":"ReflectiveObsidian"},"content":"            assertTrue(e instanceof IllegalArgumentException);","lastModifiedDate":"2024-03-13"},{"lineNumber":174,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":175,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":176,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":177,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void getAttribute_hasAttribute() {","lastModifiedDate":"2024-03-13"},{"lineNumber":178,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertTrue(ALICE.getAttribute(\"Name\") !\u003d null);","lastModifiedDate":"2024-03-13"},{"lineNumber":179,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":180,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":181,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void getAttribute_noAttribute() {","lastModifiedDate":"2024-03-13"},{"lineNumber":182,"author":{"gitId":"ReflectiveObsidian"},"content":"        try {","lastModifiedDate":"2024-03-13"},{"lineNumber":183,"author":{"gitId":"ReflectiveObsidian"},"content":"            ALICE.getAttribute(\"no attribute\");","lastModifiedDate":"2024-03-13"},{"lineNumber":184,"author":{"gitId":"ReflectiveObsidian"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-13"},{"lineNumber":185,"author":{"gitId":"ReflectiveObsidian"},"content":"            assertTrue(e instanceof IllegalArgumentException);","lastModifiedDate":"2024-03-13"},{"lineNumber":186,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":187,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":188,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":189,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void getAttribute_hasAttribute_correctAttribute() {","lastModifiedDate":"2024-03-13"},{"lineNumber":190,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertTrue(ALICE.getAttribute(\"Name\").getName().equals(\"Name\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":191,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":192,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test public void getAttribute_invalidName() {","lastModifiedDate":"2024-03-13"},{"lineNumber":193,"author":{"gitId":"ReflectiveObsidian"},"content":"        try {","lastModifiedDate":"2024-03-13"},{"lineNumber":194,"author":{"gitId":"ReflectiveObsidian"},"content":"            ALICE.getAttribute(\"\");","lastModifiedDate":"2024-03-13"},{"lineNumber":195,"author":{"gitId":"ReflectiveObsidian"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-13"},{"lineNumber":196,"author":{"gitId":"ReflectiveObsidian"},"content":"            assertTrue(e instanceof IllegalArgumentException);","lastModifiedDate":"2024-03-13"},{"lineNumber":197,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":198,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":199,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":200,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void updateAttribute_noAttribute() {","lastModifiedDate":"2024-03-13"},{"lineNumber":201,"author":{"gitId":"ReflectiveObsidian"},"content":"        try {","lastModifiedDate":"2024-03-13"},{"lineNumber":202,"author":{"gitId":"ReflectiveObsidian"},"content":"            Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2024-03-13"},{"lineNumber":203,"author":{"gitId":"ReflectiveObsidian"},"content":"            aliceCopy.updateAttribute(new StringAttribute(\"no attribute\", \"new value\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":204,"author":{"gitId":"ReflectiveObsidian"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-13"},{"lineNumber":205,"author":{"gitId":"ReflectiveObsidian"},"content":"            assertTrue(e instanceof IllegalArgumentException);","lastModifiedDate":"2024-03-13"},{"lineNumber":206,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":207,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":208,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":209,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void updateAttribute_hasAttribute() {","lastModifiedDate":"2024-03-13"},{"lineNumber":210,"author":{"gitId":"ReflectiveObsidian"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2024-03-13"},{"lineNumber":211,"author":{"gitId":"ReflectiveObsidian"},"content":"        aliceCopy.updateAttribute(new NameAttribute(\"Name\", \"new value\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":212,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertEquals(\"new value\", aliceCopy.getAttribute(\"Name\").getValueAsString());","lastModifiedDate":"2024-03-13"},{"lineNumber":213,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":214,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":215,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void updateAttribute_invalidName() {","lastModifiedDate":"2024-03-13"},{"lineNumber":216,"author":{"gitId":"ReflectiveObsidian"},"content":"        try {","lastModifiedDate":"2024-03-13"},{"lineNumber":217,"author":{"gitId":"ReflectiveObsidian"},"content":"            Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2024-03-13"},{"lineNumber":218,"author":{"gitId":"ReflectiveObsidian"},"content":"            aliceCopy.updateAttribute(new StringAttribute(\"\", \"new value\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":219,"author":{"gitId":"ReflectiveObsidian"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-13"},{"lineNumber":220,"author":{"gitId":"ReflectiveObsidian"},"content":"            assertTrue(e instanceof IllegalArgumentException);","lastModifiedDate":"2024-03-13"},{"lineNumber":221,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":222,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":223,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":224,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void deleteAttribute_noAttribute() {","lastModifiedDate":"2024-03-13"},{"lineNumber":225,"author":{"gitId":"ReflectiveObsidian"},"content":"        try {","lastModifiedDate":"2024-03-13"},{"lineNumber":226,"author":{"gitId":"ReflectiveObsidian"},"content":"            Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2024-03-13"},{"lineNumber":227,"author":{"gitId":"ReflectiveObsidian"},"content":"            aliceCopy.deleteAttribute(\"no attribute\");","lastModifiedDate":"2024-03-13"},{"lineNumber":228,"author":{"gitId":"ReflectiveObsidian"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-13"},{"lineNumber":229,"author":{"gitId":"ReflectiveObsidian"},"content":"            assertTrue(e instanceof IllegalArgumentException);","lastModifiedDate":"2024-03-13"},{"lineNumber":230,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":231,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":232,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":233,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void deleteAttribute_hasAttribute() {","lastModifiedDate":"2024-03-13"},{"lineNumber":234,"author":{"gitId":"ReflectiveObsidian"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2024-03-13"},{"lineNumber":235,"author":{"gitId":"ReflectiveObsidian"},"content":"        aliceCopy.deleteAttribute(\"Name\");","lastModifiedDate":"2024-03-13"},{"lineNumber":236,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertFalse(aliceCopy.hasAttribute(\"Name\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":237,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":238,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":239,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void person_nameAttribute() {","lastModifiedDate":"2024-03-14"},{"lineNumber":240,"author":{"gitId":"ReflectiveObsidian"},"content":"        NameAttribute name \u003d new NameAttribute(\"Name\", \"Alice Pauline\");","lastModifiedDate":"2024-03-14"},{"lineNumber":241,"author":{"gitId":"ReflectiveObsidian"},"content":"        BirthdayAttribute birthday \u003d new BirthdayAttribute(","lastModifiedDate":"2024-03-14"},{"lineNumber":242,"author":{"gitId":"ReflectiveObsidian"},"content":"                \"Birthday\",","lastModifiedDate":"2024-03-14"},{"lineNumber":243,"author":{"gitId":"ReflectiveObsidian"},"content":"                LocalDate.of(1999, 1, 1));","lastModifiedDate":"2024-03-14"},{"lineNumber":244,"author":{"gitId":"ReflectiveObsidian"},"content":"        Person aliceCopy \u003d new Person(new Attribute[]{name, birthday});","lastModifiedDate":"2024-03-14"},{"lineNumber":245,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":246,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertEquals(\"Alice Pauline\", aliceCopy.getAttribute(\"Name\").getValueAsString());","lastModifiedDate":"2024-03-14"},{"lineNumber":247,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertEquals(","lastModifiedDate":"2024-03-14"},{"lineNumber":248,"author":{"gitId":"ReflectiveObsidian"},"content":"                LocalDate.of(1999, 1, 1).toString(),","lastModifiedDate":"2024-03-14"},{"lineNumber":249,"author":{"gitId":"ReflectiveObsidian"},"content":"                aliceCopy.getAttribute(\"Birthday\").getValueAsString());","lastModifiedDate":"2024-03-14"},{"lineNumber":250,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":251,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":252,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":253,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void allAttributesAsString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":254,"author":{"gitId":"ReflectiveObsidian"},"content":"        NameAttribute name \u003d new NameAttribute(\"Name\", \"Alice Pauline\");","lastModifiedDate":"2024-03-14"},{"lineNumber":255,"author":{"gitId":"ReflectiveObsidian"},"content":"        BirthdayAttribute birthday \u003d new BirthdayAttribute(","lastModifiedDate":"2024-03-14"},{"lineNumber":256,"author":{"gitId":"ReflectiveObsidian"},"content":"                \"Birthday\",","lastModifiedDate":"2024-03-14"},{"lineNumber":257,"author":{"gitId":"ReflectiveObsidian"},"content":"                LocalDate.of(1999, 1, 1));","lastModifiedDate":"2024-03-14"},{"lineNumber":258,"author":{"gitId":"ReflectiveObsidian"},"content":"        Person aliceCopy \u003d new Person(new Attribute[]{name, birthday});","lastModifiedDate":"2024-03-14"},{"lineNumber":259,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertEquals(","lastModifiedDate":"2024-03-14"},{"lineNumber":260,"author":{"gitId":"ReflectiveObsidian"},"content":"                \"Name: Alice Pauline\\nBirthday: 1999-01-01\",","lastModifiedDate":"2024-03-14"},{"lineNumber":261,"author":{"gitId":"ReflectiveObsidian"},"content":"                aliceCopy.allAttributesAsString());","lastModifiedDate":"2024-03-14"},{"lineNumber":262,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"ReflectiveObsidian":166,"-":97}},{"path":"src/test/java/seedu/address/model/person/attribute/AttributeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ReflectiveObsidian"},"content":"package seedu.address.model.person.attribute;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"public class AttributeTest {","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"    private static class ConcreteAttribute extends Attribute {","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"        private String value;","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"        public ConcreteAttribute(String name, String value) {","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"            super(name);","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"            this.value \u003d value;","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"        @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"        public String getValueAsString() {","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"            return value;","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"    private ConcreteAttribute attribute;","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"    public void setUp() {","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"        attribute \u003d new ConcreteAttribute(\"TestName\", \"TestValue\");","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"    public void getName_returnsCorrectName() {","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"TestName\", attribute.getName(), \"The name should match the one set in constructor.\");","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"Bandov"},"content":"    public void getValueAsString_returnsCorrectValue() {","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"TestValue\", attribute.getValueAsString(), \"The value should match the one set in constructor.\");","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"Bandov"},"content":"    public void testFromStringWithInteger() {","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"Bandov"},"content":"        String name \u003d \"testInt\";","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"Bandov"},"content":"        String value \u003d \"123\";","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"Bandov"},"content":"        Attribute result \u003d Attribute.fromString(name, value);","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"Bandov"},"content":"        assertTrue(result instanceof IntegerAttribute, \"The result should be an instance of IntegerAttribute\");","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"Bandov"},"content":"        assertEquals(name, result.getName(), \"Attribute name should match\");","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"Bandov"},"content":"        assertEquals(Integer.parseInt(value), ((IntegerAttribute) result).getValue(), \"Attribute value should match\");","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"Bandov"},"content":"    public void testFromStringWithDate() {","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"Bandov"},"content":"        String name \u003d \"testDate\";","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"Bandov"},"content":"        String value \u003d \"2020-01-01\";","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"Bandov"},"content":"        Attribute result \u003d Attribute.fromString(name, value);","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"Bandov"},"content":"        assertTrue(result instanceof DateAttribute, \"The result should be an instance of DateAttribute\");","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"Bandov"},"content":"        assertEquals(name, result.getName(), \"Attribute name should match\");","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"Bandov"},"content":"        assertEquals(LocalDate.parse(value), ((DateAttribute) result).getValue(), \"Attribute value should match\");","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"Bandov"},"content":"    public void testFromStringWithString() {","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"Bandov"},"content":"        String name \u003d \"testString\";","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"Bandov"},"content":"        String value \u003d \"notAnIntOrDate\";","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"Bandov"},"content":"        Attribute result \u003d Attribute.fromString(name, value);","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"Bandov"},"content":"        assertTrue(result instanceof StringAttribute, \"The result should be an instance of StringAttribute\");","lastModifiedDate":"2024-03-13"},{"lineNumber":70,"author":{"gitId":"Bandov"},"content":"        assertEquals(name, result.getName(), \"Attribute name should match\");","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"Bandov"},"content":"        assertEquals(value, ((StringAttribute) result).getValue(), \"Attribute value should match\");","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"Bandov"},"content":"    public void testFromStringWithInvalidDate() {","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"Bandov"},"content":"        String name \u003d \"testInvalidDate\";","lastModifiedDate":"2024-03-13"},{"lineNumber":77,"author":{"gitId":"Bandov"},"content":"        String value \u003d \"2020-02-30\"; // This is an invalid date","lastModifiedDate":"2024-03-13"},{"lineNumber":78,"author":{"gitId":"Bandov"},"content":"        Attribute result \u003d Attribute.fromString(name, value);","lastModifiedDate":"2024-03-13"},{"lineNumber":79,"author":{"gitId":"Bandov"},"content":"        assertTrue(result instanceof StringAttribute, \"Should fallback to StringAttribute on invalid date\");","lastModifiedDate":"2024-03-13"},{"lineNumber":80,"author":{"gitId":"Bandov"},"content":"        assertEquals(value, ((StringAttribute) result).getValue(), \"Attribute value should match\");","lastModifiedDate":"2024-03-13"},{"lineNumber":81,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":82,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"ReflectiveObsidian":1,"Bandov":81}},{"path":"src/test/java/seedu/address/model/person/attribute/BirthdayAttributeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ReflectiveObsidian"},"content":"package seedu.address.model.person.attribute;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"public class BirthdayAttributeTest {","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"    public void testValidBirthdayBeforeToday() {","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"        // Assuming today is not the test execution day, adjust the date accordingly","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"        LocalDate validBirthday \u003d LocalDate.now().minusYears(20); // 20 years ago","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"        BirthdayAttribute birthdayAttribute \u003d new BirthdayAttribute(\"ValidBirthday\", validBirthday);","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"        assertEquals(validBirthday, birthdayAttribute.getValue(),","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"                \"Birthday should be set correctly for dates before today\");","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"    public void testInvalidBirthdayToday() {","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"        // Test with today\u0027s date","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"            new BirthdayAttribute(\"BirthdayToday\", today);","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"        }, \"Should throw IllegalArgumentException for birthdays set to today\");","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"    public void testInvalidBirthdayInFuture() {","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"        // Test with a future date","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"        LocalDate futureDate \u003d LocalDate.now().plusDays(1); // Tomorrow","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"            new BirthdayAttribute(\"FutureBirthday\", futureDate);","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"        }, \"Should throw IllegalArgumentException for future birthdays\");","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"ReflectiveObsidian":1,"Bandov":37}},{"path":"src/test/java/seedu/address/model/person/attribute/DateAttributeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ReflectiveObsidian"},"content":"package seedu.address.model.person.attribute;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"public class DateAttributeTest {","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"    public void testConstructor() {","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"        LocalDate testDate \u003d LocalDate.of(2020, 1, 1);","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"        DateAttribute dateAttribute \u003d new DateAttribute(\"TestDate\", testDate);","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"TestDate\", dateAttribute.getName(), \"Constructor should correctly set name\");","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"        assertEquals(testDate, dateAttribute.getValue(), \"Constructor should correctly set date value\");","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"    public void testGetValueAsString() {","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"        LocalDate testDate \u003d LocalDate.of(2020, 2, 20);","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"        DateAttribute dateAttribute \u003d new DateAttribute(\"TestDateAsString\", testDate);","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"2020-02-20\", dateAttribute.getValueAsString(),","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"                \"getValueAsString should return correct date string\");","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"    public void testIsOnDate() {","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"        LocalDate testDate \u003d LocalDate.of(2021, 3, 15);","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"        DateAttribute dateAttribute \u003d new DateAttribute(\"TestIsOnDate\", testDate);","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"        // Test with the same date","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"        assertTrue(dateAttribute.isOnDate(LocalDate.of(2021, 3, 15)),","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"                \"isOnDate should return true for the same date\");","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"        // Test with a different date","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"Bandov"},"content":"        assertFalse(dateAttribute.isOnDate(LocalDate.of(2021, 3, 14)),","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"Bandov"},"content":"                \"isOnDate should return false for a different date\");","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"ReflectiveObsidian":1,"Bandov":42}},{"path":"src/test/java/seedu/address/model/person/attribute/IntegerAttributeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ReflectiveObsidian"},"content":"package seedu.address.model.person.attribute;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"public class IntegerAttributeTest {","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"    private IntegerAttribute attributeOne;","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"    private IntegerAttribute attributeTwo;","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"    private IntegerAttribute attributeThree;","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"    public void setUp() {","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"        attributeOne \u003d new IntegerAttribute(\"TestAttributeOne\", 5);","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"        attributeTwo \u003d new IntegerAttribute(\"TestAttributeTwo\", 10);","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"        attributeThree \u003d new IntegerAttribute(\"TestAttributeThree\", 5);","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"    public void testGetValue() {","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"        assertEquals(5, attributeOne.getValue());","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"        assertEquals(10, attributeTwo.getValue());","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"    public void testGetValueAsString() {","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"5\", attributeOne.getValueAsString());","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"10\", attributeTwo.getValueAsString());","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"    public void testCompare() {","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"        assertEquals(0, attributeOne.compare(attributeThree)); // same value","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"        assertTrue(attributeOne.compare(attributeTwo) \u003c 0); // attributeOne \u003c attributeTwo","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"        assertTrue(attributeTwo.compare(attributeOne) \u003e 0); // attributeTwo \u003e attributeOne","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"Bandov"},"content":"    public void testConstructor() {","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"TestAttributeOne\", attributeOne.getName()); //test the getName method","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"Bandov"},"content":"        assertEquals(5, attributeOne.getValue());","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-02-28"},{"lineNumber":47,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"ReflectiveObsidian":1,"Bandov":46}},{"path":"src/test/java/seedu/address/model/person/attribute/NameAttributeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ReflectiveObsidian"},"content":"package seedu.address.model.person.attribute;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"public class NameAttributeTest {","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"    public void testConstructor() {","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"        // Given name and value for the NameAttribute","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"        String attributeName \u003d \"FullName\";","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"        String attributeValue \u003d \"John Doe\";","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"        // When creating a new NameAttribute","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"        NameAttribute nameAttribute \u003d new NameAttribute(attributeName, attributeValue);","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"        // Then the name and value should be correctly set","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"        assertEquals(attributeName, nameAttribute.getName(), \"Attribute name should be correctly set by constructor\");","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"        assertEquals(attributeValue, nameAttribute.getValue(), \"Name value should be correctly set by constructor\");","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"ReflectiveObsidian":1,"Bandov":22}},{"path":"src/test/java/seedu/address/model/person/attribute/PhoneNumberAttributeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ReflectiveObsidian"},"content":"package seedu.address.model.person.attribute;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"public class PhoneNumberAttributeTest {","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"    public void testConstructor() {","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"        // Example phone number","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"        int phoneNumberValue \u003d 123456789;","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"        PhoneNumberAttribute phoneNumberAttribute \u003d new PhoneNumberAttribute(\"TestPhone\", phoneNumberValue);","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"TestPhone\", phoneNumberAttribute.getName(),","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"                \"Name should be correctly set by constructor\");","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"        assertEquals(phoneNumberValue, phoneNumberAttribute.getValue(),","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"                \"Phone number value should be correctly set by constructor\");","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"ReflectiveObsidian":1,"Bandov":20}},{"path":"src/test/java/seedu/address/model/person/attribute/SexAttributeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ReflectiveObsidian"},"content":"package seedu.address.model.person.attribute;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"public class SexAttributeTest {","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"    public void testConstructorAndGetter() {","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"        SexAttribute maleSexAttribute \u003d new SexAttribute(\"Gender\", SexAttribute.Gender.MALE);","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"        assertEquals(SexAttribute.Gender.MALE, maleSexAttribute.getGender(),","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"                \"Constructor should correctly set gender to MALE\");","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"        SexAttribute femaleSexAttribute \u003d new SexAttribute(\"Gender\", SexAttribute.Gender.FEMALE);","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"        assertEquals(SexAttribute.Gender.FEMALE, femaleSexAttribute.getGender(),","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"                \"Constructor should correctly set gender to FEMALE\");","lastModifiedDate":"2024-03-10"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"    public void testGetValueAsString() {","lastModifiedDate":"2024-03-10"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"        SexAttribute sexAttribute \u003d new SexAttribute(\"Gender\", SexAttribute.Gender.MALE);","lastModifiedDate":"2024-03-10"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"MALE\", sexAttribute.getValueAsString(),","lastModifiedDate":"2024-03-10"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"                \"getValueAsString should return \u0027MALE\u0027 for male gender\");","lastModifiedDate":"2024-03-10"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"        sexAttribute.setGender(SexAttribute.Gender.FEMALE);","lastModifiedDate":"2024-03-10"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"FEMALE\", sexAttribute.getValueAsString(),","lastModifiedDate":"2024-03-10"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"                \"getValueAsString should return \u0027FEMALE\u0027 after setting gender to female\");","lastModifiedDate":"2024-03-10"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-10"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"    public void testSetGender() {","lastModifiedDate":"2024-03-10"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"        SexAttribute sexAttribute \u003d new SexAttribute(\"Gender\", SexAttribute.Gender.MALE);","lastModifiedDate":"2024-03-10"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"        sexAttribute.setGender(SexAttribute.Gender.FEMALE);","lastModifiedDate":"2024-03-10"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"        assertEquals(SexAttribute.Gender.FEMALE, sexAttribute.getGender(),","lastModifiedDate":"2024-03-10"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"                \"setGender should correctly change gender to FEMALE\");","lastModifiedDate":"2024-03-10"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-03-10"},{"lineNumber":39,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-10"}],"authorContributionMap":{"ReflectiveObsidian":1,"Bandov":38}},{"path":"src/test/java/seedu/address/model/person/attribute/StringAttributeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ReflectiveObsidian"},"content":"package seedu.address.model.person.attribute;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"public class StringAttributeTest {","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"    private StringAttribute stringAttributeOne;","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"    private StringAttribute stringAttributeTwo;","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"    public void setUp() {","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"        stringAttributeOne \u003d new StringAttribute(\"TestAttributeOne\", \"TestValueOne\");","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"        stringAttributeTwo \u003d new StringAttribute(\"TestAttributeTwo\", \"TestValueTwo\");","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"    public void getValue_returnsCorrectValue() {","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"TestValueOne\", stringAttributeOne.getValue());","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"TestValueTwo\", stringAttributeTwo.getValue());","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"    public void getValueAsString_returnsCorrectValue() {","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"TestValueOne\", stringAttributeOne.getValueAsString());","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"TestValueTwo\", stringAttributeTwo.getValueAsString());","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"    @Test void matches_returnsCorrectValue() {","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"        assertEquals(true, stringAttributeOne.matches(\"Test\"));","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"        assertEquals(false, stringAttributeOne.matches(\"TestValueTwo\"));","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"ReflectiveObsidian":1,"Bandov":33}},{"path":"src/test/java/seedu/address/model/person/relationship/BioParentsRelationshipTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emberlynn-Loo"},"content":"// BioParentsRelationshipTest.java","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Emberlynn-Loo"},"content":"package seedu.address.model.person.relationship;","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"Emberlynn-Loo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Emberlynn-Loo"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Emberlynn-Loo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"Emberlynn-Loo"},"content":"public class BioParentsRelationshipTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void testBioParentsRelationshipCreation() {","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID parentUuid \u003d UUID.randomUUID();","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID childUuid \u003d UUID.randomUUID();","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"Emberlynn-Loo"},"content":"        BioParentsRelationship bioParentsRelationship \u003d new BioParentsRelationship(parentUuid, childUuid);","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertEquals(parentUuid, bioParentsRelationship.getPerson1());","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertEquals(childUuid, bioParentsRelationship.getPerson2());","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertEquals(\"parent\", bioParentsRelationship.getRole(parentUuid));","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertEquals(\"child\", bioParentsRelationship.getRole(childUuid));","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"Emberlynn-Loo"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Emberlynn-Loo":22}},{"path":"src/test/java/seedu/address/model/person/relationship/FriendsRelationshipTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emberlynn-Loo"},"content":"// FriendsRelationshipTest.java","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Emberlynn-Loo"},"content":"package seedu.address.model.person.relationship;","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"Emberlynn-Loo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Emberlynn-Loo"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Emberlynn-Loo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"Emberlynn-Loo"},"content":"public class FriendsRelationshipTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void testFriendsRelationshipCreation() {","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID person1 \u003d UUID.randomUUID();","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID person2 \u003d UUID.randomUUID();","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"Emberlynn-Loo"},"content":"        FriendsRelationship friendsRelationship \u003d new FriendsRelationship(person1, person2);","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertEquals(person1, friendsRelationship.getPerson1());","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertEquals(person2, friendsRelationship.getPerson2());","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"Emberlynn-Loo"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Emberlynn-Loo":20}},{"path":"src/test/java/seedu/address/model/person/relationship/RelationshipManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emberlynn-Loo"},"content":"package seedu.address.model.person.relationship;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Emberlynn-Loo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"Emberlynn-Loo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Emberlynn-Loo"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Emberlynn-Loo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"Emberlynn-Loo"},"content":"public class RelationshipManagerTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void addRelationship_getRelationships_returnsCorrectRelationships() {","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"Emberlynn-Loo"},"content":"        RelationshipManager manager \u003d new RelationshipManager();","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID person1 \u003d UUID.randomUUID();","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID person2 \u003d UUID.randomUUID();","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"Emberlynn-Loo"},"content":"        Relationship relationship \u003d new Relationship(person1, person2) {","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"Emberlynn-Loo"},"content":"        };","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"Emberlynn-Loo"},"content":"        manager.addRelationship(\"friends\", relationship);","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertEquals(1, manager.getRelationships(\"friends\").size());","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertTrue(manager.getRelationships(\"family\").isEmpty());","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"Emberlynn-Loo"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Emberlynn-Loo":23}},{"path":"src/test/java/seedu/address/model/person/relationship/RelationshipTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emberlynn-Loo"},"content":"package seedu.address.model.person.relationship;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Emberlynn-Loo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"Emberlynn-Loo"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"Emberlynn-Loo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Emberlynn-Loo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"Emberlynn-Loo"},"content":"public class RelationshipTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"Emberlynn-Loo"},"content":"    private Relationship relationship;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"Emberlynn-Loo"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID person1 \u003d UUID.randomUUID();","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID person2 \u003d UUID.randomUUID();","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"Emberlynn-Loo"},"content":"        relationship \u003d new Relationship(person1, person2) {","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"Emberlynn-Loo"},"content":"        };","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void getPerson1_returnsCorrectUuid() {","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID person1 \u003d relationship.getPerson1();","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertEquals(person1, relationship.getPerson1());","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void getPerson2_returnsCorrectUuid() {","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID person2 \u003d relationship.getPerson2();","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertEquals(person2, relationship.getPerson2());","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"Emberlynn-Loo"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Emberlynn-Loo":33}},{"path":"src/test/java/seedu/address/model/person/relationship/RoleBasedRelationshipTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emberlynn-Loo"},"content":"package seedu.address.model.person.relationship;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Emberlynn-Loo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"Emberlynn-Loo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Emberlynn-Loo"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Emberlynn-Loo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"Emberlynn-Loo"},"content":"public class RoleBasedRelationshipTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void testRoleBasedRelationshipCreation() {","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID person1 \u003d UUID.randomUUID();","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID person2 \u003d UUID.randomUUID();","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"Emberlynn-Loo"},"content":"        RoleBasedRelationship relationship \u003d new RoleBasedRelationship(person1, person2);","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertEquals(person1, relationship.getPerson1());","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertEquals(person2, relationship.getPerson2());","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void testAddRoleAndGetRole() {","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID person1 \u003d UUID.randomUUID();","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID person2 \u003d UUID.randomUUID();","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"Emberlynn-Loo"},"content":"        RoleBasedRelationship relationship \u003d new RoleBasedRelationship(person1, person2);","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"Emberlynn-Loo"},"content":"        String role1 \u003d \"role1\";","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"Emberlynn-Loo"},"content":"        String role2 \u003d \"role2\";","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"Emberlynn-Loo"},"content":"        relationship.addRole(person1, role1);","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"Emberlynn-Loo"},"content":"        relationship.addRole(person2, role2);","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertEquals(role1, relationship.getRole(person1));","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertEquals(role2, relationship.getRole(person2));","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void testAddExceedingMaxRoles() {","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID person1 \u003d UUID.randomUUID();","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID person2 \u003d UUID.randomUUID();","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"Emberlynn-Loo"},"content":"        RoleBasedRelationship relationship \u003d new RoleBasedRelationship(person1, person2);","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"Emberlynn-Loo"},"content":"        String role1 \u003d \"role1\";","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"Emberlynn-Loo"},"content":"        String role2 \u003d \"role2\";","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"Emberlynn-Loo"},"content":"        String role3 \u003d \"role3\";","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"Emberlynn-Loo"},"content":"        relationship.addRole(person1, role1);","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"Emberlynn-Loo"},"content":"        relationship.addRole(person2, role2);","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertThrows(IllegalStateException.class, () -\u003e relationship.addRole(person2, role3));","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void testGetAllRoles() {","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID person1 \u003d UUID.randomUUID();","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID person2 \u003d UUID.randomUUID();","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"Emberlynn-Loo"},"content":"        RoleBasedRelationship relationship \u003d new RoleBasedRelationship(person1, person2);","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"Emberlynn-Loo"},"content":"        String role1 \u003d \"role1\";","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"Emberlynn-Loo"},"content":"        String role2 \u003d \"role2\";","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"Emberlynn-Loo"},"content":"        relationship.addRole(person1, role1);","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"Emberlynn-Loo"},"content":"        relationship.addRole(person2, role2);","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"Emberlynn-Loo"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Emberlynn-Loo":62}},{"path":"src/test/java/seedu/address/model/person/relationship/RolelessRelationshipTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emberlynn-Loo"},"content":"package seedu.address.model.person.relationship;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Emberlynn-Loo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"Emberlynn-Loo"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"Emberlynn-Loo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"Emberlynn-Loo"},"content":"public class RolelessRelationshipTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void rolelessRelationship_shouldReturnCorrectUuids() {","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID person1 \u003d UUID.randomUUID();","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID person2 \u003d UUID.randomUUID();","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"Emberlynn-Loo"},"content":"        RolelessRelationship relationship \u003d new RolelessRelationship(person1, person2);","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertEquals(person1, relationship.getPerson1());","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertEquals(person2, relationship.getPerson2());","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"Emberlynn-Loo"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Emberlynn-Loo":19}},{"path":"src/test/java/seedu/address/model/person/relationship/SpousesRelationshipTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emberlynn-Loo"},"content":"package seedu.address.model.person.relationship;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Emberlynn-Loo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"Emberlynn-Loo"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"Emberlynn-Loo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"Emberlynn-Loo"},"content":"public class SpousesRelationshipTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void testSpousesRelationshipCreation() {","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID person1 \u003d UUID.randomUUID();","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID person2 \u003d UUID.randomUUID();","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"Emberlynn-Loo"},"content":"        SpousesRelationship spousesRelationship \u003d new SpousesRelationship(person1, person2);","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertEquals(person1, spousesRelationship.getPerson1());","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertEquals(person2, spousesRelationship.getPerson2());","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"Emberlynn-Loo"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Emberlynn-Loo":19}}]
