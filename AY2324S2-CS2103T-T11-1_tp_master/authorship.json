[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ReflectiveObsidian"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103T-T11-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-T11-1/tp/actions) [![codecov](https://codecov.io/gh/AY2324S2-CS2103T-T11-1/tp/graph/badge.svg?token\u003dadCrBd42f9)](https://codecov.io/gh/AY2324S2-CS2103T-T11-1/tp)","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"**Journal for Enthusiasts in Noting Genealogical Associations**","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"ReflectiveObsidian"},"content":"### Introduction","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"JENGA helps Genealogists keep track of details of relatives, and easy storage and retrieval of the relationship between relatives. It does not cover discovery of new information, other than highlighting links/anomalies between existing information.","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ReflectiveObsidian"},"content":"### Documentation","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"ReflectiveObsidian"},"content":"- [User Guide](https://github.com/AY2324S2-CS2103T-T11-1/tp/blob/master/docs/UserGuide.md)","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"ReflectiveObsidian"},"content":"- [Developer Guide](https://github.com/AY2324S2-CS2103T-T11-1/tp/blob/master/docs/DeveloperGuide.md)","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"ReflectiveObsidian"},"content":"---","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"ReflectiveObsidian"},"content":"**Acknowledgements**","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"ReflectiveObsidian"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"ReflectiveObsidian"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"ReflectiveObsidian":13,"Bandov":2,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"DingBao-sys"},"content":"\u003ch1 align\u003dcenter\u003e\u003ci\u003eABOUT US\u003c/i\u003e\u003c/h1\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"DingBao-sys"},"content":"---","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"DingBao-sys"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore] (http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"DingBao-sys"},"content":"You can reach us at the email \u003ccode\u003eseer[at]comp.nus.edu.sg\u003c/code\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"DingBao-sys"},"content":"\u003c/p\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"DingBao-sys"},"content":"\u003ch2 align\u003dcenter\u003e\u003ci\u003eProject team\u003c/I\u003e\u003c/h2\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"DingBao-sys"},"content":"|                                                                      Name                                                                       |   Role    | Responsibility                    |","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"DingBao-sys"},"content":"|:-----------------------------------------------------------------------------------------------------------------------------------------------:|:---------:|:----------------------------------|","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"ReflectiveObsidian"},"content":"| \u003ch2\u003eREFLECTIVE OBSIDIAN\u003c/h2\u003e\u003c/br\u003e\u003cimg src\u003d\"images/reflectiveobsidian.png\" width\u003d\"200px\"\u003e\u003c/br\u003e[[github](https://github.com/ReflectiveObsidian)] | Developer | \u003cul\u003e\u003cli\u003eData\u003c/li\u003e\u003cli\u003eLogic\u003c/li\u003e   |","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"DingBao-sys"},"content":"|                    \u003ch2\u003eBandov\u003c/h2\u003e\u003c/br\u003e\u003cimg src\u003d\"images/bandov.png\" width\u003d\"200px\"\u003e\u003c/br\u003e[[github](https://github.com/Bandov)]                    | Developer | \u003cul\u003e\u003cli\u003eUI\u003c/li\u003e\u003cli\u003eModel\u003c/li\u003e     |","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"DingBao-sys"},"content":"|                  \u003ch2\u003eTsenrae\u003c/h2\u003e\u003c/br\u003e\u003cimg src\u003d\"images/tsenrae.png\" width\u003d\"200px\"\u003e\u003c/br\u003e[[github](https://github.com/Tsenrae)]                   | Developer | \u003cul\u003e\u003cli\u003eData\u003c/li\u003e\u003cli\u003eStorage\u003c/li\u003e |","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"DingBao-sys"},"content":"|            \u003ch2\u003eDingBao-sys\u003c/h2\u003e\u003c/br\u003e\u003cimg src\u003d\"images/dingbao-sys.png\" width\u003d\"200px\"\u003e\u003c/br\u003e[[github](https://github.com/DingBao-sys)]             | Developer | \u003cul\u003e\u003cli\u003eUI\u003c/li\u003e\u003cli\u003eModel\u003c/li\u003e     |","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"DingBao-sys"},"content":"|         \u003ch2\u003eEmberlynn-Loo\u003c/h2\u003e\u003c/br\u003e\u003cimg src\u003d\"images/emberlynn-loo.png\" width\u003d\"200px\"\u003e\u003c/br\u003e[[github](https://github.com/Emberlynn-Loo)]          | Developer | \u003cul\u003e\u003cli\u003eData\u003c/li\u003e\u003cli\u003eModel\u003c/li\u003e   |","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"DingBao-sys":12,"ReflectiveObsidian":1,"-":6}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-02-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Logic.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Model.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":252,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":253,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":254,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":255,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"Bandov"},"content":"* Has many family members to keep track off","lastModifiedDate":"2024-02-29"},{"lineNumber":266,"author":{"gitId":"Bandov"},"content":"* Wants to keep various information about these different family members","lastModifiedDate":"2024-02-29"},{"lineNumber":267,"author":{"gitId":"Bandov"},"content":"* Wants to visualize connections between family members","lastModifiedDate":"2024-02-29"},{"lineNumber":268,"author":{"gitId":"Bandov"},"content":"* Often only has provisional or partial information about their family members","lastModifiedDate":"2024-02-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"Bandov"},"content":"**Value proposition**: JENGA puts connections between people at the forefront.","lastModifiedDate":"2024-02-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"| Priority | As a …​ | I want to …​                    | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"Bandov"},"content":"|----------|--------| ----------------------------- | ---------------------------------------------------------------------- |","lastModifiedDate":"2024-02-29"},{"lineNumber":279,"author":{"gitId":"Bandov"},"content":"| `* * *`  | user   | Create a new person with a Unique User ID        | Ensure every person in my address book is distinct                 |","lastModifiedDate":"2024-02-29"},{"lineNumber":280,"author":{"gitId":"Bandov"},"content":"| `* * *`  | user   | Add custom attributes to each person              |Store personal information relevant to each individual                                                                        |","lastModifiedDate":"2024-02-29"},{"lineNumber":281,"author":{"gitId":"Bandov"},"content":"| `* * *`  | user   | Establish and record relationships between people               | Visualize connections between people                                   |","lastModifiedDate":"2024-02-29"},{"lineNumber":282,"author":{"gitId":"Bandov"},"content":"| `* * *`  | user   | Find the relationship path between people        | Understand how everyone is connected |","lastModifiedDate":"2024-02-29"},{"lineNumber":283,"author":{"gitId":"Bandov"},"content":"| `* *`    | user   | Have clear success or failure messages after actions | Ensure that the intended action has taken place                |","lastModifiedDate":"2024-02-29"},{"lineNumber":284,"author":{"gitId":"Bandov"},"content":"| `* *`    | user   | Sort and search a person by their attributes       | Find specific individuals more easily                                                |","lastModifiedDate":"2024-02-29"},{"lineNumber":285,"author":{"gitId":"Bandov"},"content":"| `* * *`  | user   | Have my data automatically saved once i exit the app and loaded once i start the app        | Seamless experience across different sessions |","lastModifiedDate":"2024-02-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"Emberlynn-Loo"},"content":"**Use case: Add a new person**","lastModifiedDate":"2024-03-03"},{"lineNumber":294,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":295,"author":{"gitId":"Emberlynn-Loo"},"content":"**MSS**","lastModifiedDate":"2024-03-03"},{"lineNumber":296,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":297,"author":{"gitId":"Emberlynn-Loo"},"content":"1.  User requests to add a new person to JENGA.","lastModifiedDate":"2024-03-03"},{"lineNumber":298,"author":{"gitId":"Emberlynn-Loo"},"content":"2.  JENGA prompts user for details of new person.","lastModifiedDate":"2024-03-03"},{"lineNumber":299,"author":{"gitId":"Emberlynn-Loo"},"content":"3.  User enters the necessary information.","lastModifiedDate":"2024-03-03"},{"lineNumber":300,"author":{"gitId":"Emberlynn-Loo"},"content":"4.  JENGA adds person with the provided details.","lastModifiedDate":"2024-03-03"},{"lineNumber":301,"author":{"gitId":"Emberlynn-Loo"},"content":"5.  JENGA displays new person added and confirmation message.","lastModifiedDate":"2024-03-03"},{"lineNumber":302,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":303,"author":{"gitId":"Emberlynn-Loo"},"content":"    Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":304,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":305,"author":{"gitId":"Emberlynn-Loo"},"content":"**Extensions**","lastModifiedDate":"2024-03-03"},{"lineNumber":306,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":307,"author":{"gitId":"Emberlynn-Loo"},"content":"* 3a. User enters incomplete or invalid information.","lastModifiedDate":"2024-03-03"},{"lineNumber":308,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":309,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a1. JENGA shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":310,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":311,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a2. JENGA prompts User to enter the correct and complete information.","lastModifiedDate":"2024-03-03"},{"lineNumber":312,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":313,"author":{"gitId":"Emberlynn-Loo"},"content":"      Steps 3a1-3a2 are repeated until the data entered are correct.","lastModifiedDate":"2024-03-03"},{"lineNumber":314,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":315,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2024-03-03"},{"lineNumber":316,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":317,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"Emberlynn-Loo"},"content":"1.  User requests to list persons.","lastModifiedDate":"2024-03-03"},{"lineNumber":322,"author":{"gitId":"Emberlynn-Loo"},"content":"2.  JENGA displays a list of persons.","lastModifiedDate":"2024-03-03"},{"lineNumber":323,"author":{"gitId":"Emberlynn-Loo"},"content":"3.  User selects a specific person in the list to delete by providing the person’s UUID.","lastModifiedDate":"2024-03-03"},{"lineNumber":324,"author":{"gitId":"Emberlynn-Loo"},"content":"4.  JENGA deletes the person.","lastModifiedDate":"2024-03-03"},{"lineNumber":325,"author":{"gitId":"Emberlynn-Loo"},"content":"5.  JENGA displays confirmation message.","lastModifiedDate":"2024-03-03"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 2a1. JENGA informs the user the list is empty.","lastModifiedDate":"2024-03-03"},{"lineNumber":334,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":335,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":336,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":337,"author":{"gitId":"Emberlynn-Loo"},"content":"* 3a. Given UUID is invalid or does not exist.","lastModifiedDate":"2024-03-03"},{"lineNumber":338,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":339,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a1. JENGA shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":340,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":341,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case resumes at step 4.","lastModifiedDate":"2024-03-03"},{"lineNumber":342,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":343,"author":{"gitId":"Emberlynn-Loo"},"content":"**Use case: Add an attribute to a person**","lastModifiedDate":"2024-03-03"},{"lineNumber":344,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":345,"author":{"gitId":"Emberlynn-Loo"},"content":"**MSS**","lastModifiedDate":"2024-03-03"},{"lineNumber":346,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":347,"author":{"gitId":"Emberlynn-Loo"},"content":"1.  User requests to add an attribute to a person.","lastModifiedDate":"2024-03-03"},{"lineNumber":348,"author":{"gitId":"Emberlynn-Loo"},"content":"2.  JENGA prompts user to enter the person’s UUID and attribute details.","lastModifiedDate":"2024-03-03"},{"lineNumber":349,"author":{"gitId":"Emberlynn-Loo"},"content":"3.  User enters UUID and attribute information.","lastModifiedDate":"2024-03-03"},{"lineNumber":350,"author":{"gitId":"Emberlynn-Loo"},"content":"4.  JENGA adds attribute details to specific person’s profile.","lastModifiedDate":"2024-03-03"},{"lineNumber":351,"author":{"gitId":"Emberlynn-Loo"},"content":"5.  JENGA displays attribute in person’s profile and confirmation message.","lastModifiedDate":"2024-03-03"},{"lineNumber":352,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":353,"author":{"gitId":"Emberlynn-Loo"},"content":"    Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":354,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":355,"author":{"gitId":"Emberlynn-Loo"},"content":"**Extensions**","lastModifiedDate":"2024-03-03"},{"lineNumber":356,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":357,"author":{"gitId":"Emberlynn-Loo"},"content":"* 3a. Attribute details are invalid.","lastModifiedDate":"2024-03-03"},{"lineNumber":358,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":359,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a1. JENGA shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":360,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":361,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a2. JENGA prompts User to enter the correct and complete information.","lastModifiedDate":"2024-03-03"},{"lineNumber":362,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":363,"author":{"gitId":"Emberlynn-Loo"},"content":"      Steps 3a1-3a2 are repeated until the data entered are correct.","lastModifiedDate":"2024-03-03"},{"lineNumber":364,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":365,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2024-03-03"},{"lineNumber":366,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":367,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":368,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":369,"author":{"gitId":"Emberlynn-Loo"},"content":"* 3b. Given UUID is invalid or does not exist.","lastModifiedDate":"2024-03-03"},{"lineNumber":370,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":371,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a1. JENGA shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":372,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":373,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a2. JENGA prompts User to enter the correct and complete information.","lastModifiedDate":"2024-03-03"},{"lineNumber":374,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":375,"author":{"gitId":"Emberlynn-Loo"},"content":"      Steps 3a1-3a2 are repeated until the data entered are correct.","lastModifiedDate":"2024-03-03"},{"lineNumber":376,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":377,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2024-03-03"},{"lineNumber":378,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":379,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":380,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":381,"author":{"gitId":"Emberlynn-Loo"},"content":"**Use case: Edit to add an attribute to a person**","lastModifiedDate":"2024-03-03"},{"lineNumber":382,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":383,"author":{"gitId":"Emberlynn-Loo"},"content":"**MSS**","lastModifiedDate":"2024-03-03"},{"lineNumber":384,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":385,"author":{"gitId":"Emberlynn-Loo"},"content":"1.  User requests to edit to add an attribute to a person.","lastModifiedDate":"2024-03-03"},{"lineNumber":386,"author":{"gitId":"Emberlynn-Loo"},"content":"2.  JENGA prompts user to enter the person’s UUID and attribute details to add.","lastModifiedDate":"2024-03-03"},{"lineNumber":387,"author":{"gitId":"Emberlynn-Loo"},"content":"3.  User enters UUID and attribute information.","lastModifiedDate":"2024-03-03"},{"lineNumber":388,"author":{"gitId":"Emberlynn-Loo"},"content":"4.  JENGA adds attribute details to specific person’s profile.","lastModifiedDate":"2024-03-03"},{"lineNumber":389,"author":{"gitId":"Emberlynn-Loo"},"content":"5.  JENGA displays attribute in person’s profile and confirmation message.","lastModifiedDate":"2024-03-03"},{"lineNumber":390,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":391,"author":{"gitId":"Emberlynn-Loo"},"content":"    Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":392,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":393,"author":{"gitId":"Emberlynn-Loo"},"content":"**Extensions**","lastModifiedDate":"2024-03-03"},{"lineNumber":394,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":395,"author":{"gitId":"Emberlynn-Loo"},"content":"* 3a. Attribute details are invalid.","lastModifiedDate":"2024-03-03"},{"lineNumber":396,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":397,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a1. JENGA shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":399,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a2. JENGA prompts User to enter the correct and complete information.","lastModifiedDate":"2024-03-03"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":401,"author":{"gitId":"Emberlynn-Loo"},"content":"      Steps 3a1-3a2 are repeated until the data entered are correct.","lastModifiedDate":"2024-03-03"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":403,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2024-03-03"},{"lineNumber":404,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":405,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":406,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":407,"author":{"gitId":"Emberlynn-Loo"},"content":"* 3b. Given UUID is invalid or does not exist.","lastModifiedDate":"2024-03-03"},{"lineNumber":408,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":409,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a1. JENGA shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":410,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":411,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a2. JENGA prompts User to enter the correct and complete information.","lastModifiedDate":"2024-03-03"},{"lineNumber":412,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":413,"author":{"gitId":"Emberlynn-Loo"},"content":"      Steps 3a1-3a2 are repeated until the data entered are correct.","lastModifiedDate":"2024-03-03"},{"lineNumber":414,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":415,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2024-03-03"},{"lineNumber":416,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":417,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":418,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":419,"author":{"gitId":"Emberlynn-Loo"},"content":"**Use case: Edit to delete an attribute to a person**","lastModifiedDate":"2024-03-03"},{"lineNumber":420,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":421,"author":{"gitId":"Emberlynn-Loo"},"content":"**MSS**","lastModifiedDate":"2024-03-03"},{"lineNumber":422,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":423,"author":{"gitId":"Emberlynn-Loo"},"content":"1.  User requests to edit to delete an attribute to a person.","lastModifiedDate":"2024-03-03"},{"lineNumber":424,"author":{"gitId":"Emberlynn-Loo"},"content":"2.  JENGA prompts user to enter the person’s UUID and attribute to delete.","lastModifiedDate":"2024-03-03"},{"lineNumber":425,"author":{"gitId":"Emberlynn-Loo"},"content":"3.  User enters UUID and attribute information.","lastModifiedDate":"2024-03-03"},{"lineNumber":426,"author":{"gitId":"Emberlynn-Loo"},"content":"4.  JENGA deletes attribute in specific person’s profile.","lastModifiedDate":"2024-03-03"},{"lineNumber":427,"author":{"gitId":"Emberlynn-Loo"},"content":"5.  JENGA displays confirmation message.","lastModifiedDate":"2024-03-03"},{"lineNumber":428,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":429,"author":{"gitId":"Emberlynn-Loo"},"content":"    Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":430,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":431,"author":{"gitId":"Emberlynn-Loo"},"content":"**Extensions**","lastModifiedDate":"2024-03-03"},{"lineNumber":432,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":433,"author":{"gitId":"Emberlynn-Loo"},"content":"* 3a. Attribute details are invalid.","lastModifiedDate":"2024-03-03"},{"lineNumber":434,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":435,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a1. JENGA shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":436,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":437,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a2. JENGA prompts User to enter the correct and complete information.","lastModifiedDate":"2024-03-03"},{"lineNumber":438,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":439,"author":{"gitId":"Emberlynn-Loo"},"content":"      Steps 3a1-3a2 are repeated until the data entered are correct.","lastModifiedDate":"2024-03-03"},{"lineNumber":440,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":441,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2024-03-03"},{"lineNumber":442,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":443,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":444,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":445,"author":{"gitId":"Emberlynn-Loo"},"content":"* 3b. Given UUID is invalid or does not exist.","lastModifiedDate":"2024-03-03"},{"lineNumber":446,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":447,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a1. JENGA shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":448,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":449,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a2. JENGA prompts User to enter the correct and complete information.","lastModifiedDate":"2024-03-03"},{"lineNumber":450,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":451,"author":{"gitId":"Emberlynn-Loo"},"content":"      Steps 3a1-3a2 are repeated until the data entered are correct.","lastModifiedDate":"2024-03-03"},{"lineNumber":452,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":453,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2024-03-03"},{"lineNumber":454,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":455,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":456,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":457,"author":{"gitId":"Emberlynn-Loo"},"content":"**Use case: Delete a person**","lastModifiedDate":"2024-03-03"},{"lineNumber":458,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":459,"author":{"gitId":"Emberlynn-Loo"},"content":"**MSS**","lastModifiedDate":"2024-03-03"},{"lineNumber":460,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":461,"author":{"gitId":"Emberlynn-Loo"},"content":"1.  User requests to delete a person.","lastModifiedDate":"2024-03-03"},{"lineNumber":462,"author":{"gitId":"Emberlynn-Loo"},"content":"2.  JENGA prompts user for details of person.","lastModifiedDate":"2024-03-03"},{"lineNumber":463,"author":{"gitId":"Emberlynn-Loo"},"content":"3.  User enters person’s UUID.","lastModifiedDate":"2024-03-03"},{"lineNumber":464,"author":{"gitId":"Emberlynn-Loo"},"content":"4.  JENGA deletes person.","lastModifiedDate":"2024-03-03"},{"lineNumber":465,"author":{"gitId":"Emberlynn-Loo"},"content":"5.  JENGA displays confirmation message.","lastModifiedDate":"2024-03-03"},{"lineNumber":466,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":467,"author":{"gitId":"Emberlynn-Loo"},"content":"    Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":468,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":469,"author":{"gitId":"Emberlynn-Loo"},"content":"**Extensions**","lastModifiedDate":"2024-03-03"},{"lineNumber":470,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":471,"author":{"gitId":"Emberlynn-Loo"},"content":"* 3a. Given UUID is invalid or does not exist.","lastModifiedDate":"2024-03-03"},{"lineNumber":472,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":473,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a1. JENGA shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":474,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":475,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a2. JENGA prompts User to enter the correct and complete information.","lastModifiedDate":"2024-03-03"},{"lineNumber":476,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":477,"author":{"gitId":"Emberlynn-Loo"},"content":"      Steps 3a1-3a2 are repeated until the data entered are correct.","lastModifiedDate":"2024-03-03"},{"lineNumber":478,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":479,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2024-03-03"},{"lineNumber":480,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":481,"author":{"gitId":"Emberlynn-Loo"},"content":"**Use case: Find persons by attribute**","lastModifiedDate":"2024-03-03"},{"lineNumber":482,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":483,"author":{"gitId":"Emberlynn-Loo"},"content":"**MSS**","lastModifiedDate":"2024-03-03"},{"lineNumber":484,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":485,"author":{"gitId":"Emberlynn-Loo"},"content":"1.  User requests to find persons by attribute.","lastModifiedDate":"2024-03-03"},{"lineNumber":486,"author":{"gitId":"Emberlynn-Loo"},"content":"2.  JENGA prompts user for attribute and attribute value(s).","lastModifiedDate":"2024-03-03"},{"lineNumber":487,"author":{"gitId":"Emberlynn-Loo"},"content":"3.  User enters attribute name and attribute value(s).","lastModifiedDate":"2024-03-03"},{"lineNumber":488,"author":{"gitId":"Emberlynn-Loo"},"content":"4.  JENGA displays list of persons with each of the specified attributes.","lastModifiedDate":"2024-03-03"},{"lineNumber":489,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":490,"author":{"gitId":"Emberlynn-Loo"},"content":"    Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":491,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":492,"author":{"gitId":"Emberlynn-Loo"},"content":"**Extensions**","lastModifiedDate":"2024-03-03"},{"lineNumber":493,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":494,"author":{"gitId":"Emberlynn-Loo"},"content":"* 3a. Attribute details are invalid or does not exist.","lastModifiedDate":"2024-03-03"},{"lineNumber":495,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":496,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a1. JENGA shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":497,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":498,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a2. JENGA prompts User to enter the correct and complete information.","lastModifiedDate":"2024-03-03"},{"lineNumber":499,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":500,"author":{"gitId":"Emberlynn-Loo"},"content":"      Steps 3a1-3a2 are repeated until the data entered are correct.","lastModifiedDate":"2024-03-03"},{"lineNumber":501,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":502,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2024-03-03"},{"lineNumber":503,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":504,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":505,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":506,"author":{"gitId":"Emberlynn-Loo"},"content":"* 4a. The list is empty.","lastModifiedDate":"2024-03-03"},{"lineNumber":507,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":508,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 4a1. JENGA informs the user the list is empty.","lastModifiedDate":"2024-03-03"},{"lineNumber":509,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":510,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":511,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":512,"author":{"gitId":"Emberlynn-Loo"},"content":"**Use case: Find persons by relationship to User**","lastModifiedDate":"2024-03-03"},{"lineNumber":513,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":514,"author":{"gitId":"Emberlynn-Loo"},"content":"**MSS**","lastModifiedDate":"2024-03-03"},{"lineNumber":515,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":516,"author":{"gitId":"Emberlynn-Loo"},"content":"1.  User requests to find persons by relationship.","lastModifiedDate":"2024-03-03"},{"lineNumber":517,"author":{"gitId":"Emberlynn-Loo"},"content":"2.  JENGA prompts user for relationship to User.","lastModifiedDate":"2024-03-03"},{"lineNumber":518,"author":{"gitId":"Emberlynn-Loo"},"content":"3.  User enters relationship type.","lastModifiedDate":"2024-03-03"},{"lineNumber":519,"author":{"gitId":"Emberlynn-Loo"},"content":"4.  JENGA displays list of persons with specified relationship to User.","lastModifiedDate":"2024-03-03"},{"lineNumber":520,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":521,"author":{"gitId":"Emberlynn-Loo"},"content":"    Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":522,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":523,"author":{"gitId":"Emberlynn-Loo"},"content":"**Extensions**","lastModifiedDate":"2024-03-03"},{"lineNumber":524,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":525,"author":{"gitId":"Emberlynn-Loo"},"content":"* 3a. Relationship is invalid or does not exist.","lastModifiedDate":"2024-03-03"},{"lineNumber":526,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":527,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a1. JENGA shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":528,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":529,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a2. JENGA prompts User to enter the correct and complete information.","lastModifiedDate":"2024-03-03"},{"lineNumber":530,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":531,"author":{"gitId":"Emberlynn-Loo"},"content":"      Steps 3a1-3a2 are repeated until the data entered are correct.","lastModifiedDate":"2024-03-03"},{"lineNumber":532,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":533,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2024-03-03"},{"lineNumber":534,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":535,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":536,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":537,"author":{"gitId":"Emberlynn-Loo"},"content":"**Use case: Add a relationship between two persons**","lastModifiedDate":"2024-03-03"},{"lineNumber":538,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":539,"author":{"gitId":"Emberlynn-Loo"},"content":"**MSS**","lastModifiedDate":"2024-03-03"},{"lineNumber":540,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":541,"author":{"gitId":"Emberlynn-Loo"},"content":"1.  User requests to add a relationship between two persons.","lastModifiedDate":"2024-03-03"},{"lineNumber":542,"author":{"gitId":"Emberlynn-Loo"},"content":"2.  JENGA prompts user for UUIDs of both persons and relationship type.","lastModifiedDate":"2024-03-03"},{"lineNumber":543,"author":{"gitId":"Emberlynn-Loo"},"content":"3.  User enters both persons UUID and relationship type.","lastModifiedDate":"2024-03-03"},{"lineNumber":544,"author":{"gitId":"Emberlynn-Loo"},"content":"4.  JENGA creates a relationship with the provided details.","lastModifiedDate":"2024-03-03"},{"lineNumber":545,"author":{"gitId":"Emberlynn-Loo"},"content":"5.  JENGA displays new relationship added under both persons’ profiles and confirmation message.","lastModifiedDate":"2024-03-03"},{"lineNumber":546,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":547,"author":{"gitId":"Emberlynn-Loo"},"content":"    Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":548,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":549,"author":{"gitId":"Emberlynn-Loo"},"content":"**Extensions**","lastModifiedDate":"2024-03-03"},{"lineNumber":550,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":551,"author":{"gitId":"Emberlynn-Loo"},"content":"* 3a. Relationship type is invalid.","lastModifiedDate":"2024-03-03"},{"lineNumber":552,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":553,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a1. JENGA shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":554,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":555,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a2. JENGA prompts User to enter the correct and complete information.","lastModifiedDate":"2024-03-03"},{"lineNumber":556,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":557,"author":{"gitId":"Emberlynn-Loo"},"content":"      Steps 3a1-3a2 are repeated until the data entered are correct.","lastModifiedDate":"2024-03-03"},{"lineNumber":558,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":559,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2024-03-03"},{"lineNumber":560,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":561,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":562,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":563,"author":{"gitId":"Emberlynn-Loo"},"content":"* 3b. Given UUIDs are invalid or does not exist.","lastModifiedDate":"2024-03-03"},{"lineNumber":564,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":565,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a1. JENGA shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":566,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":567,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a2. JENGA prompts User to enter the correct and complete information.","lastModifiedDate":"2024-03-03"},{"lineNumber":568,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":569,"author":{"gitId":"Emberlynn-Loo"},"content":"      Steps 3a1-3a2 are repeated until the data entered are correct.","lastModifiedDate":"2024-03-03"},{"lineNumber":570,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":571,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2024-03-03"},{"lineNumber":572,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":573,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":574,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":575,"author":{"gitId":"Emberlynn-Loo"},"content":"**Use case: Edit a relationship between two persons**","lastModifiedDate":"2024-03-03"},{"lineNumber":576,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":577,"author":{"gitId":"Emberlynn-Loo"},"content":"**MSS**","lastModifiedDate":"2024-03-03"},{"lineNumber":578,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":579,"author":{"gitId":"Emberlynn-Loo"},"content":"1.  User requests to edit a specific relationship between two persons.","lastModifiedDate":"2024-03-03"},{"lineNumber":580,"author":{"gitId":"Emberlynn-Loo"},"content":"2.  JENGA prompts user for UUIDs of both persons and previous and new relationship type.","lastModifiedDate":"2024-03-03"},{"lineNumber":581,"author":{"gitId":"Emberlynn-Loo"},"content":"3.  User enters both persons UUID and previous and new relationship type.","lastModifiedDate":"2024-03-03"},{"lineNumber":582,"author":{"gitId":"Emberlynn-Loo"},"content":"4.  JENGA edits the specified relationship with the provided details.","lastModifiedDate":"2024-03-03"},{"lineNumber":583,"author":{"gitId":"Emberlynn-Loo"},"content":"5.  JENGA displays edited relationship under both persons’ profiles and confirmation message.","lastModifiedDate":"2024-03-03"},{"lineNumber":584,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":585,"author":{"gitId":"Emberlynn-Loo"},"content":"    Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":586,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":587,"author":{"gitId":"Emberlynn-Loo"},"content":"**Extensions**","lastModifiedDate":"2024-03-03"},{"lineNumber":588,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":589,"author":{"gitId":"Emberlynn-Loo"},"content":"* 3a. Relationship types are invalid.","lastModifiedDate":"2024-03-03"},{"lineNumber":590,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":591,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a1. JENGA shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":592,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":593,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a2. JENGA prompts User to enter the correct and complete information.","lastModifiedDate":"2024-03-03"},{"lineNumber":594,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":595,"author":{"gitId":"Emberlynn-Loo"},"content":"      Steps 3a1-3a2 are repeated until the data entered are correct.","lastModifiedDate":"2024-03-03"},{"lineNumber":596,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":597,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2024-03-03"},{"lineNumber":598,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":599,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":600,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":601,"author":{"gitId":"Emberlynn-Loo"},"content":"* 3b. Given UUIDs are invalid or does not exist.","lastModifiedDate":"2024-03-03"},{"lineNumber":602,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":603,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a1. JENGA shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":604,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":605,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a2. JENGA prompts User to enter the correct and complete information.","lastModifiedDate":"2024-03-03"},{"lineNumber":606,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":607,"author":{"gitId":"Emberlynn-Loo"},"content":"      Steps 3a1-3a2 are repeated until the data entered are correct.","lastModifiedDate":"2024-03-03"},{"lineNumber":608,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":609,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2024-03-03"},{"lineNumber":610,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":611,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"Emberlynn-Loo"},"content":"**Use case: Delete a relationship between two persons**","lastModifiedDate":"2024-03-03"},{"lineNumber":614,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"Emberlynn-Loo"},"content":"**MSS**","lastModifiedDate":"2024-03-03"},{"lineNumber":616,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":617,"author":{"gitId":"Emberlynn-Loo"},"content":"1.  User requests to delete a specific relationship between two persons.","lastModifiedDate":"2024-03-03"},{"lineNumber":618,"author":{"gitId":"Emberlynn-Loo"},"content":"2.  JENGA prompts user for UUIDs of both persons and relationship type.","lastModifiedDate":"2024-03-03"},{"lineNumber":619,"author":{"gitId":"Emberlynn-Loo"},"content":"3.  User enters both persons UUID and specified relationship type.","lastModifiedDate":"2024-03-03"},{"lineNumber":620,"author":{"gitId":"Emberlynn-Loo"},"content":"4.  JENGA deletes specified relationship.","lastModifiedDate":"2024-03-03"},{"lineNumber":621,"author":{"gitId":"Emberlynn-Loo"},"content":"5.  JENGA displays confirmation message.","lastModifiedDate":"2024-03-03"},{"lineNumber":622,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":623,"author":{"gitId":"Emberlynn-Loo"},"content":"    Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":624,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":625,"author":{"gitId":"Emberlynn-Loo"},"content":"**Extensions**","lastModifiedDate":"2024-03-03"},{"lineNumber":626,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":627,"author":{"gitId":"Emberlynn-Loo"},"content":"* 3a. Relationship type is invalid.","lastModifiedDate":"2024-03-03"},{"lineNumber":628,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":629,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a1. JENGA shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":630,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":631,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a2. JENGA prompts User to enter the correct and complete information.","lastModifiedDate":"2024-03-03"},{"lineNumber":632,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":633,"author":{"gitId":"Emberlynn-Loo"},"content":"      Steps 3a1-3a2 are repeated until the data entered are correct.","lastModifiedDate":"2024-03-03"},{"lineNumber":634,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":635,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2024-03-03"},{"lineNumber":636,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":637,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":638,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"Emberlynn-Loo"},"content":"* 3b. Given UUIDs are invalid or does not exist.","lastModifiedDate":"2024-03-03"},{"lineNumber":640,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":641,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a1. JENGA shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":642,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":643,"author":{"gitId":"Emberlynn-Loo"},"content":"    * 3a2. JENGA prompts User to enter the correct and complete information.","lastModifiedDate":"2024-03-03"},{"lineNumber":644,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":645,"author":{"gitId":"Emberlynn-Loo"},"content":"      Steps 3a1-3a2 are repeated until the data entered are correct.","lastModifiedDate":"2024-03-03"},{"lineNumber":646,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":647,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2024-03-03"},{"lineNumber":648,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":649,"author":{"gitId":"Emberlynn-Loo"},"content":"      Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":650,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":651,"author":{"gitId":"Emberlynn-Loo"},"content":"**Use case: Exit JENGA**","lastModifiedDate":"2024-03-03"},{"lineNumber":652,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":653,"author":{"gitId":"Emberlynn-Loo"},"content":"**MSS**","lastModifiedDate":"2024-03-03"},{"lineNumber":654,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":655,"author":{"gitId":"Emberlynn-Loo"},"content":"1.  User requests to exit JENGA.","lastModifiedDate":"2024-03-03"},{"lineNumber":656,"author":{"gitId":"Emberlynn-Loo"},"content":"2.  JENGA displays goodbye message.","lastModifiedDate":"2024-03-03"},{"lineNumber":657,"author":{"gitId":"Emberlynn-Loo"},"content":"3.  JENGA saves current data.","lastModifiedDate":"2024-03-03"},{"lineNumber":658,"author":{"gitId":"Emberlynn-Loo"},"content":"4.  JENGA closes the application window.","lastModifiedDate":"2024-03-03"},{"lineNumber":659,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":660,"author":{"gitId":"Emberlynn-Loo"},"content":"    Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":661,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":662,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":664,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"Tsenrae"},"content":"2.  Should be able to hold up to 1000 persons and relationships without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2024-03-03"},{"lineNumber":668,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"Tsenrae"},"content":"4.  User actions should prompt responses within 5 seconds, maintaining acceptable performance standards.","lastModifiedDate":"2024-03-03"},{"lineNumber":670,"author":{"gitId":"Tsenrae"},"content":"5.  The user interface must be intuitive for users of varying technical proficiency levels, enhancing usability.","lastModifiedDate":"2024-03-03"},{"lineNumber":671,"author":{"gitId":"Tsenrae"},"content":"6.  The codebase should be well-documented and maintainable to facilitate future updates and enhancements.","lastModifiedDate":"2024-03-03"},{"lineNumber":672,"author":{"gitId":"Tsenrae"},"content":"7.  Comprehensive documentation should be provided for developers, administrators, and end-users, supporting ease of use.","lastModifiedDate":"2024-03-03"},{"lineNumber":673,"author":{"gitId":"Tsenrae"},"content":"8.  The system should be able to handle data corruption or loss gracefully, minimizing the impact on users.","lastModifiedDate":"2024-03-03"},{"lineNumber":674,"author":{"gitId":"Tsenrae"},"content":"9.  The system architecture should support future extensions or customizations, allowing for easy addition of new features.","lastModifiedDate":"2024-03-03"},{"lineNumber":675,"author":{"gitId":"Tsenrae"},"content":"10. Interoperability with other systems should be supported through standard protocols and formats, promoting seamless integration.","lastModifiedDate":"2024-03-03"},{"lineNumber":676,"author":{"gitId":"Tsenrae"},"content":"11. The system should be designed with testability in mind, allowing for comprehensive testing of all components, features, and scenarios.","lastModifiedDate":"2024-03-03"},{"lineNumber":677,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":678,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":679,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":680,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09"},{"lineNumber":681,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":682,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":683,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":684,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":685,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":686,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":687,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":688,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":689,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":690,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":691,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":692,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":693,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":694,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":695,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":696,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":697,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":698,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":699,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":700,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":701,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":702,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":703,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":704,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":705,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":706,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":707,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":708,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":709,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":710,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":711,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":712,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":713,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":714,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":715,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":716,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":717,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":718,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":719,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":720,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":721,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":722,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":723,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":724,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":725,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":726,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":727,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":728,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":729,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":730,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":731,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":732,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":733,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":734,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Bandov":13,"-":362,"Emberlynn-Loo":350,"Tsenrae":9}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"ReflectiveObsidian"},"content":"    content: \"JENGA\";","lastModifiedDate":"2024-02-28"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"ReflectiveObsidian":1,"-":294}},{"path":"docs/diagrams/AttributeAdditionSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"Participant \":Attribute\" as attribute ATTRIBUTE_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"user -[USER_COLOR]\u003e ui : \"addAttribute \\uuid 1234 \\\\name value\"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"addAttribute \\uuid 1234 \\\\name value\")","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"logic -[LOGIC_COLOR]\u003e model : findPerson(uuid)","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"model --[MODEL_COLOR]\u003e logic","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"deactivate model","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"logic -[LOGIC_COLOR]\u003e attribute : new Attribute(name, value)","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"activate attribute ATTRIBUTE_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"attribute --[ATTRIBUTE_COLOR]\u003e logic : addAttribute(attribute)","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"deactivate attribute","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"logic -[LOGIC_COLOR]\u003e model : person.addAttribute(attribute)","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"model --[MODEL_COLOR]\u003e logic","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"Bandov"},"content":"deactivate storage STORAGE_COLOR_T1","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Bandov":18,"-":34}},{"path":"docs/diagrams/RelationAddingSequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"DingBao-sys"},"content":"@startuml","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"DingBao-sys"},"content":"!include style.puml","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"DingBao-sys"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"DingBao-sys"},"content":"actor User as user USER_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"DingBao-sys"},"content":"participant \"UI\" as ui UI_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"DingBao-sys"},"content":"participant \"AddRelationshipCommand\" as cmd LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"DingBao-sys"},"content":"participant \"Model\" as model MODEL_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"DingBao-sys"},"content":"participant \"Relationship\" as rel ATTRIBUTE_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"DingBao-sys"},"content":"user -[USER_COLOR]\u003e ui : execute(addRelation)","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"DingBao-sys"},"content":"activate ui UI_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"DingBao-sys"},"content":"ui -[UI_COLOR]\u003e cmd : new(originUuid, targetUuid, descriptor)","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"DingBao-sys"},"content":"activate cmd LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"DingBao-sys"},"content":"cmd -[LOGIC_COLOR]\u003e model : getFullUuid(originUuid)","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"DingBao-sys"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"DingBao-sys"},"content":"model --[MODEL_COLOR]\u003e cmd : fullOriginUuid","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"DingBao-sys"},"content":"deactivate model","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"DingBao-sys"},"content":"cmd -[LOGIC_COLOR]\u003e model : getFullUuid(targetUuid)","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"DingBao-sys"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"DingBao-sys"},"content":"model --[MODEL_COLOR]\u003e cmd : fullTargetUuid","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"DingBao-sys"},"content":"deactivate model","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"DingBao-sys"},"content":"cmd -[LOGIC_COLOR]\u003e rel : new(fullOriginUuid, fullTargetUuid, descriptor)","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"DingBao-sys"},"content":"activate rel ATTRIBUTE_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"DingBao-sys"},"content":"rel --[ATTRIBUTE_COLOR]\u003e cmd : toAdd","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"DingBao-sys"},"content":"deactivate rel","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"DingBao-sys"},"content":"cmd --[LOGIC_COLOR]\u003e ui : new CommandResult(MESSAGE_ADD_RELATIONSHIP_SUCCESS)","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"DingBao-sys"},"content":"deactivate cmd","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"DingBao-sys"},"content":"ui --[UI_COLOR]\u003e user : display success message","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"DingBao-sys"},"content":"deactivate ui","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"DingBao-sys"},"content":"@enduml","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"DingBao-sys":41}},{"path":"docs/diagrams/style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/\u0027","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":" \u0027Commonly used styles and colors across diagrams.","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":" \u0027Refer to https://plantuml-documentation.readthedocs.io/en/latest for a more","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":" \u0027comprehensive list of skinparams.","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":" \u0027/","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u0027T1 through T4 are shades of the original color from lightest to darkest","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"!define UI_COLOR #1D8900","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"!define UI_COLOR_T1 #83E769","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"!define UI_COLOR_T2 #3FC71B","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"!define UI_COLOR_T3 #166800","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"!define UI_COLOR_T4 #0E4100","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T1 #C8C8FA","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T2 #6A6ADC","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"!define MODEL_COLOR #9D0012","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T1 #F97181","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T2 #E41F36","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T3 #7B000E","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T4 #51000A","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR #A38300","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T1 #FFE374","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #EDC520","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T3 #806600","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #544400","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"!define USER_COLOR #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"!define ATTRIBUTE_COLOR #FF0000","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"!define RELATION_COLOR #000000","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"skinparam Package {","lastModifiedDate":"2023-07-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    BackgroundColor #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    BorderThickness 1","lastModifiedDate":"2023-07-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    FontSize 16","lastModifiedDate":"2023-07-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-07-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"skinparam Class {","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    FontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    FontSize 15","lastModifiedDate":"2023-07-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    BorderThickness 1","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    BorderColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    StereotypeFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"skinparam Actor {","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    BorderColor USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    Color USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"skinparam Sequence {","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    MessageAlign center","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    BoxFontSize 15","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    BoxPadding 0","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    BoxFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"skinparam Participant {","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    FontColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    Padding 20","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle bold","lastModifiedDate":"2023-07-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"skinparam MinClassWidth 50","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"skinparam ParticipantPadding 10","lastModifiedDate":"2019-07-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2019-07-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"skinparam packageStyle Rectangle","lastModifiedDate":"2019-07-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"hide footbox","lastModifiedDate":"2019-07-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"hide members","lastModifiedDate":"2019-07-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"hide circle","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Bandov":3,"-":79}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"ReflectiveObsidian"},"content":"title: JENGA (Journal for Enthusiasts in Noting Genealogical Associations)","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"ReflectiveObsidian"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103T-T11-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-T11-1/tp/actions) [![codecov](https://codecov.io/gh/AY2324S2-CS2103T-T11-1/tp/graph/badge.svg?token\u003dadCrBd42f9)](https://codecov.io/gh/AY2324S2-CS2103T-T11-1/tp)","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"ReflectiveObsidian"},"content":"**JENGA helps Genealogists keep track of details of relatives**,","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"ReflectiveObsidian"},"content":"and easy storage and retrieval of the relationship between relatives.","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"ReflectiveObsidian"},"content":"It does not cover discovery of new information,","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"ReflectiveObsidian"},"content":"other than highlighting links/anomalies between existing information.","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"ReflectiveObsidian"},"content":"While it has a GUI,","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"ReflectiveObsidian"},"content":"most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* If you are interested in using AddressBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* If you are interested about developing AddressBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"ReflectiveObsidian"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ReflectiveObsidian":10,"-":14}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"DingBao-sys"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"DingBao-sys"},"content":"     * Returns true if the {@code s} represents an alphanumeric 4 character string, so that it is a valid last 4","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"DingBao-sys"},"content":"     * characters of a UUID","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"DingBao-sys"},"content":"     * @param s 4 character string representing the last 4 digits of a JAVA UUID","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"DingBao-sys"},"content":"     * @return true if it is valid","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"DingBao-sys"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"DingBao-sys"},"content":"    public static boolean isValidLastFourDigitsUuid(String s) {","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"DingBao-sys"},"content":"        String pattern \u003d \"^[a-zA-Z0-9]{4}$\";","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"DingBao-sys"},"content":"        boolean isMatch \u003d s.matches(pattern);","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"DingBao-sys"},"content":"        return isMatch;","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"DingBao-sys":12,"-":68}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"    public static final String MESSAGE_INVALID_PERSON_UUID \u003d \"The UUID provided is invalid.\";","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"ReflectiveObsidian"},"content":"        builder.append(\"Details:\\n\")","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"ReflectiveObsidian"},"content":"                .append(person.allAttributesAsString());","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"ReflectiveObsidian":3,"Bandov":1,"-":42}},{"path":"src/main/java/seedu/address/logic/attributes/AddAttributeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bandov"},"content":"package seedu.address.logic.attributes;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"import seedu.address.model.person.attribute.Attribute;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":" * A command to add a new attribute to a person in the address book, or to update an existing attribute.","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":" * This command can also be used to delete an attribute by providing a null value for the attribute value.","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"public class AddAttributeCommand extends Command {","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"    public static final String COMMAND_WORD \u003d \"addAttribute\";","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"    private final String uuid;","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"    private final String attributeName;","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"    private final String attributeValue;","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"     * Constructs an EditPersonCommand to add or delete an attribute.","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"     * @param uuid           The UUID of the person to edit.","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"     * @param attributeName  The name of the attribute to add/delete.","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"     * @param attributeValue The value of the attribute to add (null if deleting).","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"    public AddAttributeCommand(String uuid, String attributeName, String attributeValue) {","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"        this.uuid \u003d uuid;","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"        this.attributeName \u003d attributeName;","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"        this.attributeValue \u003d attributeValue;","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"     * Executes the command to add or delete an attribute for a person identified by UUID.","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"Bandov"},"content":"     * @param model The model interface containing the address book data and methods needed to perform operations.","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"Bandov"},"content":"     * @return A CommandResult object containing the result message.","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"Bandov"},"content":"     * @throws CommandException if the person with the specified UUID cannot be found.","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"Bandov"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"Bandov"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"Bandov"},"content":"        UUID uuidToUse \u003d model.getFullUuid(uuid);","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"Bandov"},"content":"        Person person \u003d model.getPersonByUuid(uuidToUse);","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"Bandov"},"content":"        if (person \u003d\u003d null) {","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"Bandov"},"content":"            throw new CommandException(\"Person not found.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"Bandov"},"content":"        Attribute attribute \u003d Attribute.fromString(attributeName, attributeValue);","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"Bandov"},"content":"        person.updateAttribute(attribute);","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"Bandov"},"content":"        return new CommandResult(String.format(\"Attribute %s added to person %s.\", attributeName, uuid));","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"Bandov":57}},{"path":"src/main/java/seedu/address/logic/attributes/DeleteAttributeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bandov"},"content":"package seedu.address.logic.attributes;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":" * A command to delete an attribute from a person in the address book.","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":" * This command identifies the person by their UUID and removes the specified attribute.","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"public class DeleteAttributeCommand extends Command {","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"    public static final String COMMAND_WORD \u003d \"deleteAttribute\";","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Attribute deleted from person: %1$s\";","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"    private final String toDelete;","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"    private final String attributeName;","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"     * Constructs a DeleteAttributeCommand to delete an attribute from the specified person.","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"     * @param person        The identifier (UUID) of the person from whom the attribute will be deleted.","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"     * @param attributeName The name of the attribute to be deleted.","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"    public DeleteAttributeCommand(String person, String attributeName) {","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"        this.toDelete \u003d person;","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"        this.attributeName \u003d attributeName;","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"     * Executes the command to delete an attribute from a person identified by UUID.","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"     * Verifies the existence of the person and the attribute before proceeding with deletion.","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"Bandov"},"content":"     * @param model The model interface containing the address book data and methods needed to perform operations.","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"Bandov"},"content":"     * @return A CommandResult object containing the success message.","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"Bandov"},"content":"     * @throws CommandException if the person with the specified UUID cannot be found or  attribute does not exist.","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"Bandov"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"Bandov"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"Bandov"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"Bandov"},"content":"        UUID fullUuid \u003d model.getFullUuid(toDelete);","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"Bandov"},"content":"        Person personToDelete \u003d model.getPersonByUuid(fullUuid);","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"Bandov"},"content":"        if (!model.hasAttribute(personToDelete.getUuidString(), attributeName)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"Bandov"},"content":"            throw new CommandException(\"Attribute not found.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"Bandov"},"content":"        model.deleteAttribute(personToDelete.getUuidString(), attributeName);","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"Bandov"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"Bandov":58}},{"path":"src/main/java/seedu/address/logic/attributes/PersonAttributeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bandov"},"content":"package seedu.address.logic.attributes;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":" * Parses user input into commands for managing person attributes.","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":" * This parser handles the conversion of user input strings into specific Command objects","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":" * that can add or delete attributes associated with persons in the address book.","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"public class PersonAttributeCommandParser {","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"     * Parses the given user input string into an executable command.","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"     * @param userInput The user input string representing a command.","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"     * @return A Command object ready for execution.","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"     * @throws ParseException If the user input does not conform to the expected format.","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"    public Command parse(String userInput) throws ParseException {","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"        String[] parts \u003d userInput.trim().split(\"\\\\s+\", 5);","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"        // Validate the basic command structure","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"            throw new ParseException(\"Invalid command format.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"        String commandType \u003d parts[0];","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"        if (\"addAttribute\".equals(commandType)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"            return parseAddCommand(parts);","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"        } else if (\"deleteAttribute\".equals(commandType)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"            return parseDeleteCommand(parts);","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"        } else {","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"            throw new ParseException(\"Unknown command or operation.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"Bandov"},"content":"    private Command parseAddCommand(String[] parts) throws ParseException {","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"Bandov"},"content":"        if (parts.length \u003c 5) {","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"Bandov"},"content":"            throw new ParseException(\"Incomplete command for adding an attribute.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"Bandov"},"content":"        String uuid \u003d parts[2];","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"Bandov"},"content":"        String attributeName \u003d parts[3].replaceFirst(\"^\\\\\\\\\", \"\");","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"Bandov"},"content":"        String attributeValue \u003d parts[4];","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"Bandov"},"content":"        return new AddAttributeCommand(uuid, attributeName, attributeValue);","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"Bandov"},"content":"    private Command parseDeleteCommand(String[] parts) throws ParseException {","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"Bandov"},"content":"        if (parts.length \u003c 4) {","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"Bandov"},"content":"            throw new ParseException(\"Incomplete command for deleting an attribute.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"Bandov"},"content":"        String uuid \u003d parts[2];","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"Bandov"},"content":"        String attributeName \u003d parts[3].replaceFirst(\"^\\\\\\\\\", \"\");","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"Bandov"},"content":"        // The DeleteAttributeCommand constructor accepts the entire command parts for further processing.","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"Bandov"},"content":"        return new DeleteAttributeCommand(uuid, attributeName);","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"Bandov":60}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"ReflectiveObsidian"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"ReflectiveObsidian"},"content":"import seedu.address.model.person.attribute.Attribute;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"ReflectiveObsidian"},"content":"            + \"Optional Parameters: /YourAttributeName YourAttributeValue\\n\"","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"ReflectiveObsidian"},"content":"            + \"Predefined parameters: \"","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"ReflectiveObsidian"},"content":"            + \"/Name \"","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"ReflectiveObsidian"},"content":"            + \"/Phone \"","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"ReflectiveObsidian"},"content":"            + \"/Sex \"","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"ReflectiveObsidian"},"content":"            + \"/Birthday\\n\"","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"ReflectiveObsidian"},"content":"            + \"/Name John Doe \"","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"ReflectiveObsidian"},"content":"            + \"/Phone 98765432 \"","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"ReflectiveObsidian"},"content":"            + \"/Email johnd@example.com \"","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"ReflectiveObsidian"},"content":"            + \"/Address 311, Clementi Ave 2, #02-25 \";","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"ReflectiveObsidian"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added.\\n%1$s\";","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"ReflectiveObsidian"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"ReflectiveObsidian"},"content":"    private final HashMap\u003cString, String\u003e attributeMap;","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"ReflectiveObsidian"},"content":"     * Creates an AddCommand to add the specified {@code Person} and {@code Attribute}s.","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"ReflectiveObsidian"},"content":"     * The attributesToAdd array can be empty.","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"ReflectiveObsidian"},"content":"    public AddCommand(HashMap\u003cString, String\u003e attributeMap) {","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"ReflectiveObsidian"},"content":"        requireNonNull(attributeMap);","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"ReflectiveObsidian"},"content":"        this.attributeMap \u003d attributeMap;","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"ReflectiveObsidian"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"ReflectiveObsidian"},"content":"     * Executes the command to add a person to the address book.","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"ReflectiveObsidian"},"content":"     * All persons created have a unique uuid, thus user-created duplicate persons are impossible.","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"ReflectiveObsidian"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"ReflectiveObsidian"},"content":"     * @param model The model interface containing the address book data and methods needed to perform operations.","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"ReflectiveObsidian"},"content":"     * @return A CommandResult object containing the result message.","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"ReflectiveObsidian"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"ReflectiveObsidian"},"content":"        Attribute[] attributesToAdd \u003d generateAttributeList();","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"ReflectiveObsidian"},"content":"        Person addedPerson \u003d addPersonToModel(model, attributesToAdd);","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"ReflectiveObsidian"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(addedPerson)));","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"ReflectiveObsidian"},"content":"    private Person addPersonToModel(Model model, Attribute[] attributesToAdd) {","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"ReflectiveObsidian"},"content":"        Person personToAdd \u003d new Person(attributesToAdd);","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"ReflectiveObsidian"},"content":"        model.addPerson(personToAdd);","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"ReflectiveObsidian"},"content":"        return personToAdd;","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"ReflectiveObsidian"},"content":"    private Attribute[] generateAttributeList() {","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"ReflectiveObsidian"},"content":"        Attribute[] attributesToAdd \u003d new Attribute[attributeMap.size()];","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"ReflectiveObsidian"},"content":"        for (int i \u003d 0; i \u003c attributeMap.size(); i++) {","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"ReflectiveObsidian"},"content":"            String attributeName \u003d (String) attributeMap.keySet().toArray()[i];","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"ReflectiveObsidian"},"content":"            String attributeValue \u003d attributeMap.get(attributeName);","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"ReflectiveObsidian"},"content":"            attributesToAdd[i] \u003d Attribute.fromString(attributeName, attributeValue);","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"ReflectiveObsidian"},"content":"        return attributesToAdd;","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":93,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"ReflectiveObsidian"},"content":"        boolean isEquals \u003d attributeMap.equals(otherAddCommand.attributeMap);","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"ReflectiveObsidian"},"content":"        return isEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"ReflectiveObsidian"},"content":"                .add(\"attributeMap\", attributeMap)","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ReflectiveObsidian":49,"-":55}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"ReflectiveObsidian"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     *  Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *  and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"ReflectiveObsidian"},"content":"     *  Command format: add /attibuteName1 attributeValue1 /attributeName2 attributeValue2 ...","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"ReflectiveObsidian"},"content":"     *  Examples:","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"ReflectiveObsidian"},"content":"     *  add","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"ReflectiveObsidian"},"content":"     *  add /Name Alice /Phone 123456 /address 123 ABC Street","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"ReflectiveObsidian"},"content":"        args \u003d args.trim();","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"ReflectiveObsidian"},"content":"        String[] parts \u003d args.split(\"/\", -1);","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"ReflectiveObsidian"},"content":"        parts \u003d removeFirstItemFromStringList(parts);","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"ReflectiveObsidian"},"content":"        requireValidParts(parts);","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"ReflectiveObsidian"},"content":"        HashMap\u003cString, String\u003e attributeMap \u003d getAttributeHashMapFromAttributeStrings(parts);","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"ReflectiveObsidian"},"content":"        return new AddCommand(attributeMap);","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":32,"author":{"gitId":"ReflectiveObsidian"},"content":"    private String[] removeFirstItemFromStringList(String[] parts) {","lastModifiedDate":"2024-03-22"},{"lineNumber":33,"author":{"gitId":"ReflectiveObsidian"},"content":"        // Solution below generated by GitHub Copilot","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"ReflectiveObsidian"},"content":"        String[] newParts;","lastModifiedDate":"2024-03-22"},{"lineNumber":35,"author":{"gitId":"ReflectiveObsidian"},"content":"        newParts \u003d new String[parts.length - 1];","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"ReflectiveObsidian"},"content":"        System.arraycopy(parts, 1, newParts, 0, parts.length - 1);","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"ReflectiveObsidian"},"content":"        return newParts;","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"ReflectiveObsidian"},"content":"    private static HashMap\u003cString, String\u003e getAttributeHashMapFromAttributeStrings(String[] parts) {","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"ReflectiveObsidian"},"content":"        HashMap\u003cString, String\u003e attributeMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"ReflectiveObsidian"},"content":"        for (int i \u003d 0; i \u003c parts.length; i++) {","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"ReflectiveObsidian"},"content":"            String[] attribute \u003d separateAttributeNamesAndValues(parts[i]);","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"ReflectiveObsidian"},"content":"            String attributeName \u003d attribute[0];","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"ReflectiveObsidian"},"content":"            String attributeValue \u003d attribute[1];","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"ReflectiveObsidian"},"content":"            attributeMap.put(attributeName, attributeValue);","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"ReflectiveObsidian"},"content":"        return attributeMap;","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"ReflectiveObsidian"},"content":"    private void requireValidParts(String[] parts) throws ParseException {","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"ReflectiveObsidian"},"content":"        for (int i \u003d 0; i \u003c parts.length; i++) {","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"ReflectiveObsidian"},"content":"            if (separateAttributeNamesAndValues(parts[i]).length !\u003d 2) {","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"ReflectiveObsidian"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"ReflectiveObsidian"},"content":"            }","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"ReflectiveObsidian"},"content":"    private static String[] separateAttributeNamesAndValues(String parts) {","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"ReflectiveObsidian"},"content":"        return parts.trim().split(\" \", 2);","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"ReflectiveObsidian":36,"-":26}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"import seedu.address.logic.attributes.AddAttributeCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"import seedu.address.logic.attributes.DeleteAttributeCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"import seedu.address.logic.attributes.PersonAttributeCommandParser;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"DingBao-sys"},"content":"import seedu.address.logic.relationship.AddRelationshipCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"DingBao-sys"},"content":"import seedu.address.logic.relationship.AddRelationshipCommandParser;","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"DingBao-sys"},"content":"import seedu.address.logic.relationship.DeleteRelationshipCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"DingBao-sys"},"content":"import seedu.address.logic.relationship.DeleteRelationshipCommandParser;","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.logic.relationship.EditRelationshipCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.logic.relationship.EditRelationshipCommandParser;","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"Bandov"},"content":"        Map\u003cString, Person\u003e personMap; // Assume this is populated elsewhere","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":88,"author":{"gitId":"DingBao-sys"},"content":"        case AddRelationshipCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"DingBao-sys"},"content":"            return new AddRelationshipCommandParser().parse(arguments.trim());","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"DingBao-sys"},"content":"        case DeleteRelationshipCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"DingBao-sys"},"content":"            return new DeleteRelationshipCommandParser().parse(arguments.trim());","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"Emberlynn-Loo"},"content":"        case EditRelationshipCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"Emberlynn-Loo"},"content":"            return new EditRelationshipCommandParser().parse(arguments.trim());","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"Bandov"},"content":"        case DeleteAttributeCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"Bandov"},"content":"        case AddAttributeCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"Bandov"},"content":"            return new PersonAttributeCommandParser().parse(userInput);","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"DingBao-sys":9,"Bandov":9,"-":81,"Emberlynn-Loo":5,"Tsenrae":2}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"ReflectiveObsidian"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"/Name \");","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"ReflectiveObsidian"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"/Phone \");","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"ReflectiveObsidian"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"/Email \");","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"ReflectiveObsidian"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"/Address \");","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"ReflectiveObsidian"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"/Tag \");","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"ReflectiveObsidian":5,"-":10}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"DingBao-sys"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":125,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":126,"author":{"gitId":"DingBao-sys"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":127,"author":{"gitId":"DingBao-sys"},"content":"     * Parses a string into a string with 4 characters and whitespaces removed","lastModifiedDate":"2024-03-20"},{"lineNumber":128,"author":{"gitId":"DingBao-sys"},"content":"     * @param uuid last 4 characters of a UUID","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"DingBao-sys"},"content":"     * @return a trimmed String if uuid given as arguments is valid","lastModifiedDate":"2024-03-20"},{"lineNumber":130,"author":{"gitId":"DingBao-sys"},"content":"     * @throws ParseException","lastModifiedDate":"2024-03-20"},{"lineNumber":131,"author":{"gitId":"DingBao-sys"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":132,"author":{"gitId":"DingBao-sys"},"content":"    public static String parseUuid(String uuid) throws ParseException {","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"DingBao-sys"},"content":"        String trimmedUuid \u003d uuid.trim();","lastModifiedDate":"2024-03-21"},{"lineNumber":134,"author":{"gitId":"DingBao-sys"},"content":"        if (!StringUtil.isValidLastFourDigitsUuid(trimmedUuid)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":135,"author":{"gitId":"DingBao-sys"},"content":"            throw new ParseException(Messages.MESSAGE_INVALID_PERSON_UUID);","lastModifiedDate":"2024-03-20"},{"lineNumber":136,"author":{"gitId":"DingBao-sys"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":137,"author":{"gitId":"DingBao-sys"},"content":"        return trimmedUuid;","lastModifiedDate":"2024-03-21"},{"lineNumber":138,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"DingBao-sys":15,"-":124}},{"path":"src/main/java/seedu/address/logic/relationship/AddRelationshipCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tsenrae"},"content":"package seedu.address.logic.relationship;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"DingBao-sys"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"DingBao-sys"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"DingBao-sys"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"DingBao-sys"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"DingBao-sys"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"DingBao-sys"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"DingBao-sys"},"content":"import seedu.address.model.person.relationship.Relationship;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"Tsenrae"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"Tsenrae"},"content":" * This class is responsible for parsing and executing commands to add relationships between persons.","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"Tsenrae"},"content":" * It supports adding relationships with and without roles.","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"Tsenrae"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"DingBao-sys"},"content":"public class AddRelationshipCommand extends Command {","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"DingBao-sys"},"content":"    public static final String COMMAND_WORD \u003d \"addRelation\";","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"DingBao-sys"},"content":"    public static final String MESSAGE_ADD_RELATIONSHIP_SUCCESS \u003d \"Add success\";","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"DingBao-sys"},"content":"    private String originUuid;","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"DingBao-sys"},"content":"    private String targetUuid;","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"DingBao-sys"},"content":"    private String relationshipDescriptor;","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"DingBao-sys"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"DingBao-sys"},"content":"     * Constructor takes in the string arguments needed to be passed into the relationship constructor and performs","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"DingBao-sys"},"content":"     * the addition of the relationship","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"DingBao-sys"},"content":"     * @param originUuid","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"DingBao-sys"},"content":"     * @param targetUuid","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"DingBao-sys"},"content":"     * @param relationshipDescriptor","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"DingBao-sys"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"DingBao-sys"},"content":"    public AddRelationshipCommand(String originUuid, String targetUuid, String relationshipDescriptor) {","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"DingBao-sys"},"content":"        this.originUuid \u003d originUuid;","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"DingBao-sys"},"content":"        this.targetUuid \u003d targetUuid;","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"DingBao-sys"},"content":"        this.relationshipDescriptor \u003d relationshipDescriptor;","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"DingBao-sys"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"DingBao-sys"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"DingBao-sys"},"content":"        UUID fullOriginUuid \u003d model.getFullUuid(originUuid);","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"DingBao-sys"},"content":"        UUID fullTargetUuid \u003d model.getFullUuid(targetUuid);","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"DingBao-sys"},"content":"        if (fullTargetUuid \u003d\u003d null || fullOriginUuid \u003d\u003d null) {","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"DingBao-sys"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_UUID);","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"DingBao-sys"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"DingBao-sys"},"content":"        if (fullOriginUuid \u003d\u003d fullTargetUuid) {","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"DingBao-sys"},"content":"            throw new CommandException(\"Relationships must be between 2 different people\");","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"DingBao-sys"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"Emberlynn-Loo"},"content":"        try {","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"DingBao-sys"},"content":"            Relationship toAdd \u003d new Relationship(fullOriginUuid, fullTargetUuid, relationshipDescriptor);","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"Emberlynn-Loo"},"content":"            if (model.hasRelationshipWithDescriptor(toAdd)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"DingBao-sys"},"content":"                String existing \u003d model.getExistingRelationship(toAdd);","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"DingBao-sys"},"content":"                throw new CommandException(String.format(\"Sorry, %s\", existing));","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"DingBao-sys"},"content":"            }","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"DingBao-sys"},"content":"            model.addRelationship(toAdd);","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"DingBao-sys"},"content":"            return new CommandResult(MESSAGE_ADD_RELATIONSHIP_SUCCESS);","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"Emberlynn-Loo"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"Emberlynn-Loo"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"Emberlynn-Loo"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"DingBao-sys"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"DingBao-sys"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"DingBao-sys"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"DingBao-sys"},"content":"            return true;","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"DingBao-sys"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"DingBao-sys"},"content":"        if (!(o instanceof AddRelationshipCommand)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"DingBao-sys"},"content":"            return false;","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"DingBao-sys"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"DingBao-sys"},"content":"        AddRelationshipCommand other \u003d (AddRelationshipCommand) o;","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"DingBao-sys"},"content":"        return other.originUuid.equals(this.originUuid) \u0026\u0026 other.targetUuid.equals(targetUuid)","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"DingBao-sys"},"content":"                \u0026\u0026 other.relationshipDescriptor.equals(this.relationshipDescriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"Tsenrae"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"DingBao-sys":53,"Tsenrae":10,"Emberlynn-Loo":5}},{"path":"src/main/java/seedu/address/logic/relationship/AddRelationshipCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tsenrae"},"content":"package seedu.address.logic.relationship;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"DingBao-sys"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"DingBao-sys"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"DingBao-sys"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"DingBao-sys"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"DingBao-sys"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"Tsenrae"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"Tsenrae"},"content":" * Parses input arguments and creates a new AddRelationshipCommand object","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"Tsenrae"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"DingBao-sys"},"content":"public class AddRelationshipCommandParser implements Parser\u003cAddRelationshipCommand\u003e {","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"Tsenrae"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"DingBao-sys"},"content":"     * Parses a userInput into the arguments to add a relationship to AB3","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"DingBao-sys"},"content":"     * @param userInput user-input command","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"DingBao-sys"},"content":"     * @return an addRelationshipCommand with the necessary arguments","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"DingBao-sys"},"content":"     * @throws ParseException","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"Tsenrae"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"DingBao-sys"},"content":"    public AddRelationshipCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"DingBao-sys"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"DingBao-sys"},"content":"        String[] parts \u003d userInput.split(\" \", 3);","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"Emberlynn-Loo"},"content":"        if (parts.length !\u003d 3) {","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"Emberlynn-Loo"},"content":"            throw new ParseException(Messages.MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"DingBao-sys"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"DingBao-sys"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"DingBao-sys"},"content":"            String originUuid \u003d ParserUtil.parseUuid(parts[0]);","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"DingBao-sys"},"content":"            String targetUuid \u003d ParserUtil.parseUuid(parts[1]);","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"DingBao-sys"},"content":"            String relationshipDescriptor \u003d parts[2];","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"DingBao-sys"},"content":"            return new AddRelationshipCommand(originUuid, targetUuid, relationshipDescriptor);","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"DingBao-sys"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"DingBao-sys"},"content":"            throw new ParseException(Messages.MESSAGE_INVALID_PERSON_UUID);","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"DingBao-sys"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"Tsenrae"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"DingBao-sys":23,"Tsenrae":11,"Emberlynn-Loo":2}},{"path":"src/main/java/seedu/address/logic/relationship/DeleteRelationshipCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emberlynn-Loo"},"content":"package seedu.address.logic.relationship;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"Emberlynn-Loo"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"DingBao-sys"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"DingBao-sys"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"DingBao-sys"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"DingBao-sys"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"DingBao-sys"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.model.person.relationship.Relationship;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"Emberlynn-Loo"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"Emberlynn-Loo"},"content":" * Represents a command to delete a relationship between two persons.","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"Emberlynn-Loo"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"DingBao-sys"},"content":"public class DeleteRelationshipCommand extends Command {","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"DingBao-sys"},"content":"    public static final String COMMAND_WORD \u003d \"deleteRelation\";","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"DingBao-sys"},"content":"    public static final String MESSAGE_DELETE_RELATIONSHIP_SUCCESS \u003d \"Delete successful\";","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"DingBao-sys"},"content":"    private String originUuid;","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"DingBao-sys"},"content":"    private String targetUuid;","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"DingBao-sys"},"content":"    private String relationshipDescriptor;","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"DingBao-sys"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"DingBao-sys"},"content":"     * Constructor for deleteRelationshipCommand, deletes Relationship sepcified by the 2 Person Uuid given if the","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"DingBao-sys"},"content":"     * relationship exist otherwise tell user relationship do not exist","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"DingBao-sys"},"content":"     * @param originUuid First Person UUID of relationship","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"DingBao-sys"},"content":"     * @param targetUuid Second Person UUID of relationship","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"DingBao-sys"},"content":"     * @param relationshipDescriptor String describing the type of relationship if exisiting","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"DingBao-sys"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"DingBao-sys"},"content":"    public DeleteRelationshipCommand(String originUuid, String targetUuid, String relationshipDescriptor) {","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"DingBao-sys"},"content":"        this.originUuid \u003d originUuid;","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"DingBao-sys"},"content":"        this.targetUuid \u003d targetUuid;","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"DingBao-sys"},"content":"        this.relationshipDescriptor \u003d relationshipDescriptor;","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"DingBao-sys"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"DingBao-sys"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"DingBao-sys"},"content":"        UUID fullOriginUuid \u003d model.getFullUuid(originUuid);","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"DingBao-sys"},"content":"        UUID fullTargetUuid \u003d model.getFullUuid(targetUuid);","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"DingBao-sys"},"content":"        if (fullOriginUuid \u003d\u003d null || fullTargetUuid \u003d\u003d null) {","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"DingBao-sys"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_UUID);","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"DingBao-sys"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"DingBao-sys"},"content":"        if (fullOriginUuid \u003d\u003d fullTargetUuid) {","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"DingBao-sys"},"content":"            throw new CommandException(\"Relationships must be between 2 different people\");","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"DingBao-sys"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"DingBao-sys"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"DingBao-sys"},"content":"            Relationship toDelete \u003d new Relationship(fullOriginUuid, fullTargetUuid, relationshipDescriptor);","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"Emberlynn-Loo"},"content":"            if (!model.hasRelationshipWithDescriptor(toDelete)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"DingBao-sys"},"content":"                throw new CommandException(String.format(\"Sorry %s do not exist\", toDelete));","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"DingBao-sys"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"DingBao-sys"},"content":"            model.deleteRelationship(toDelete);","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"DingBao-sys"},"content":"            return new CommandResult(MESSAGE_DELETE_RELATIONSHIP_SUCCESS);","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"DingBao-sys"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"DingBao-sys"},"content":"            throw new CommandException(String.format(\"Sorry, we do not accept %s as type\", relationshipDescriptor));","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"Emberlynn-Loo"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"Emberlynn-Loo"},"content":"}","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"DingBao-sys":43,"Emberlynn-Loo":15}},{"path":"src/main/java/seedu/address/logic/relationship/DeleteRelationshipCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emberlynn-Loo"},"content":"package seedu.address.logic.relationship;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"DingBao-sys"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"DingBao-sys"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"DingBao-sys"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"DingBao-sys"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"DingBao-sys"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"Emberlynn-Loo"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"Emberlynn-Loo"},"content":" * Parses user input into a DeleteRelationshipCommand.","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"Emberlynn-Loo"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"DingBao-sys"},"content":"public class DeleteRelationshipCommandParser implements Parser\u003cDeleteRelationshipCommand\u003e {","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"Emberlynn-Loo"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"Emberlynn-Loo"},"content":"     * Parses the given user input and returns a DeleteRelationshipCommand.","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"Emberlynn-Loo"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"Emberlynn-Loo"},"content":"     * @param userInput The user input to parse.","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"Emberlynn-Loo"},"content":"     * @return The DeleteRelationshipCommand corresponding to the user input.","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"Emberlynn-Loo"},"content":"     * @throws IllegalArgumentException If the user input is invalid.","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"Emberlynn-Loo"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"DingBao-sys"},"content":"    public DeleteRelationshipCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"DingBao-sys"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"DingBao-sys"},"content":"        String[] parts \u003d userInput.split(\" \", 3);","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"Emberlynn-Loo"},"content":"        if (parts.length !\u003d 3) {","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"Emberlynn-Loo"},"content":"            throw new ParseException(Messages.MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"Emberlynn-Loo"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"DingBao-sys"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"DingBao-sys"},"content":"            String originUuid \u003d ParserUtil.parseUuid(parts[0]);","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"DingBao-sys"},"content":"            String targetUuid \u003d ParserUtil.parseUuid(parts[1]);","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"DingBao-sys"},"content":"            String relationshipDescriptor \u003d parts[2];","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"DingBao-sys"},"content":"            return new DeleteRelationshipCommand(originUuid, targetUuid, relationshipDescriptor);","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"DingBao-sys"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"DingBao-sys"},"content":"            throw new ParseException(Messages.MESSAGE_INVALID_PERSON_UUID);","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"DingBao-sys"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"Emberlynn-Loo"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"DingBao-sys":19,"Emberlynn-Loo":18}},{"path":"src/main/java/seedu/address/logic/relationship/EditRelationshipCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emberlynn-Loo"},"content":"package seedu.address.logic.relationship;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"Emberlynn-Loo"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.model.person.relationship.Relationship;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"Emberlynn-Loo"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"Emberlynn-Loo"},"content":" * This class is responsible for parsing and executing commands to add relationships between persons.","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"Emberlynn-Loo"},"content":" * It supports adding relationships with and without roles.","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"Emberlynn-Loo"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"Emberlynn-Loo"},"content":"public class EditRelationshipCommand extends Command {","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"Emberlynn-Loo"},"content":"    public static final String COMMAND_WORD \u003d \"editRelation\";","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"Emberlynn-Loo"},"content":"    public static final String MESSAGE_EDIT_RELATIONSHIP_SUCCESS \u003d \"Edit successful\";","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"Emberlynn-Loo"},"content":"    private String originUuid;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"Emberlynn-Loo"},"content":"    private String targetUuid;","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"Emberlynn-Loo"},"content":"    private String oldRelationshipDescriptor;","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"Emberlynn-Loo"},"content":"    private String newRelationshipDescriptor;","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"Emberlynn-Loo"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"Emberlynn-Loo"},"content":"     * Constructor takes in the string arguments needed to be passed into the relationship constructor and performs","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"Emberlynn-Loo"},"content":"     * the addition of the relationship","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"Emberlynn-Loo"},"content":"     * @param originUuid","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"Emberlynn-Loo"},"content":"     * @param targetUuid","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"Emberlynn-Loo"},"content":"     * @param oldRelationshipDescriptor","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"Emberlynn-Loo"},"content":"     * @param newRelationshipDescriptor","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"Emberlynn-Loo"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"Emberlynn-Loo"},"content":"    public EditRelationshipCommand(String originUuid, String targetUuid,","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"Emberlynn-Loo"},"content":"                                   String oldRelationshipDescriptor, String newRelationshipDescriptor) {","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"Emberlynn-Loo"},"content":"        this.originUuid \u003d originUuid;","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"Emberlynn-Loo"},"content":"        this.targetUuid \u003d targetUuid;","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"Emberlynn-Loo"},"content":"        this.oldRelationshipDescriptor \u003d oldRelationshipDescriptor;","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"Emberlynn-Loo"},"content":"        this.newRelationshipDescriptor \u003d newRelationshipDescriptor;","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"Emberlynn-Loo"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"Emberlynn-Loo"},"content":"     * Executes the command to edit a relationship between two persons.","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"Emberlynn-Loo"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"Emberlynn-Loo"},"content":"     * @return a CommandResult that contains the success message.","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"Emberlynn-Loo"},"content":"     * @throws CommandException if relationship does not exist or if the new relationship is the same as the old one.","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"Emberlynn-Loo"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"Emberlynn-Loo"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"Emberlynn-Loo"},"content":"        if (originUuid \u003d\u003d null || targetUuid \u003d\u003d null) {","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"Emberlynn-Loo"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_UUID);","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"Emberlynn-Loo"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID fullOriginUuid \u003d model.getFullUuid(originUuid);","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID fullTargetUuid \u003d model.getFullUuid(targetUuid);","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"Emberlynn-Loo"},"content":"        if (fullOriginUuid \u003d\u003d fullTargetUuid) {","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"Emberlynn-Loo"},"content":"            throw new CommandException(\"Relationships must be between 2 different people\");","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"Emberlynn-Loo"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"Emberlynn-Loo"},"content":"        try {","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"Emberlynn-Loo"},"content":"            if (oldRelationshipDescriptor.equals(newRelationshipDescriptor)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"Emberlynn-Loo"},"content":"                throw new CommandException(\"There\u0027s no need to edit the relationship \"","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"Emberlynn-Loo"},"content":"                        + \"if the new relationship is the same as the old one.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"Emberlynn-Loo"},"content":"            }","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"Emberlynn-Loo"},"content":"            Relationship toEditOff \u003d new Relationship(fullOriginUuid, fullTargetUuid, oldRelationshipDescriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"Emberlynn-Loo"},"content":"            Relationship toEditIn \u003d new Relationship(fullOriginUuid, fullTargetUuid, newRelationshipDescriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"Emberlynn-Loo"},"content":"            if (!model.hasRelationshipWithDescriptor(toEditOff)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"Emberlynn-Loo"},"content":"                throw new CommandException(String.format(\"Sorry %s do not exist\", toEditOff));","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"Emberlynn-Loo"},"content":"            }","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"Emberlynn-Loo"},"content":"            if (model.hasRelationshipWithDescriptor(toEditIn)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"Emberlynn-Loo"},"content":"                throw new CommandException(String.format(\"%s already exists\", toEditIn));","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"Emberlynn-Loo"},"content":"            }","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"Emberlynn-Loo"},"content":"            model.deleteRelationship(toEditOff);","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"Emberlynn-Loo"},"content":"            model.addRelationship(toEditIn);","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"Emberlynn-Loo"},"content":"            return new CommandResult(MESSAGE_EDIT_RELATIONSHIP_SUCCESS);","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"Emberlynn-Loo"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"Emberlynn-Loo"},"content":"            throw new CommandException(String.format(e.getMessage()));","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"Emberlynn-Loo"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"Emberlynn-Loo"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"Emberlynn-Loo":75}},{"path":"src/main/java/seedu/address/logic/relationship/EditRelationshipCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emberlynn-Loo"},"content":"package seedu.address.logic.relationship;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"Emberlynn-Loo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"Emberlynn-Loo"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"Emberlynn-Loo"},"content":" * Parses user input into an EditRelationshipCommand.","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"Emberlynn-Loo"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"Emberlynn-Loo"},"content":"public class EditRelationshipCommandParser {","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"Emberlynn-Loo"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"Emberlynn-Loo"},"content":"     * Parses the given user input and returns an EditRelationshipCommand.","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"Emberlynn-Loo"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"Emberlynn-Loo"},"content":"     * @param userInput The user input to parse.","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"Emberlynn-Loo"},"content":"     * @return The EditRelationshipCommand corresponding to the user input.","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"Emberlynn-Loo"},"content":"     * @throws IllegalArgumentException If the user input is invalid.","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"Emberlynn-Loo"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"Emberlynn-Loo"},"content":"    public EditRelationshipCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"Emberlynn-Loo"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"Emberlynn-Loo"},"content":"        String[] parts \u003d userInput.split(\" \", 4);","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"Emberlynn-Loo"},"content":"        if (parts.length !\u003d 4) {","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"Emberlynn-Loo"},"content":"            throw new ParseException(Messages.MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"Emberlynn-Loo"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"Emberlynn-Loo"},"content":"        try {","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"Emberlynn-Loo"},"content":"            String originUuid \u003d ParserUtil.parseUuid(parts[0]);","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"Emberlynn-Loo"},"content":"            String targetUuid \u003d ParserUtil.parseUuid(parts[1]);","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"Emberlynn-Loo"},"content":"            String oldRelationshipDescriptor \u003d parts[2];","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"Emberlynn-Loo"},"content":"            String newRelationshipDescriptor \u003d parts[3];","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"Emberlynn-Loo"},"content":"            return new EditRelationshipCommand(originUuid, targetUuid,","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"Emberlynn-Loo"},"content":"                    oldRelationshipDescriptor, newRelationshipDescriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"Emberlynn-Loo"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"Emberlynn-Loo"},"content":"            throw new ParseException(Messages.MESSAGE_INVALID_PERSON_UUID);","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"Emberlynn-Loo"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"Emberlynn-Loo"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"Emberlynn-Loo":37}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Tsenrae"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"DingBao-sys"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"DingBao-sys"},"content":"import seedu.address.model.person.relationship.Relationship;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"DingBao-sys"},"content":"import seedu.address.model.person.relationship.RelationshipUtil;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":25,"author":{"gitId":"DingBao-sys"},"content":"    private final RelationshipUtil relationships;","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":36,"author":{"gitId":"DingBao-sys"},"content":"        relationships \u003d new RelationshipUtil();","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"DingBao-sys"},"content":"        relationships.getRelationshipsTracker().clear();","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"DingBao-sys"},"content":"        relationships.getRelationshipsTracker().addAll(newData.getRelationshipList());","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"Tsenrae"},"content":"                .add(\"relationships\", relationships)","lastModifiedDate":"2024-03-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":121,"author":{"gitId":"Tsenrae"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":122,"author":{"gitId":"Tsenrae"},"content":"    public ArrayList\u003cRelationship\u003e getRelationshipList() {","lastModifiedDate":"2024-03-21"},{"lineNumber":123,"author":{"gitId":"Tsenrae"},"content":"        return relationships.getRelationshipsTracker();","lastModifiedDate":"2024-03-21"},{"lineNumber":124,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":125,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":126,"author":{"gitId":"DingBao-sys"},"content":"    public void addRelationship(Relationship toAdd) {","lastModifiedDate":"2024-03-19"},{"lineNumber":127,"author":{"gitId":"DingBao-sys"},"content":"        relationships.addRelationship(toAdd);","lastModifiedDate":"2024-03-19"},{"lineNumber":128,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":129,"author":{"gitId":"DingBao-sys"},"content":"    public void deleteRelationship(Relationship toDelete) {","lastModifiedDate":"2024-03-19"},{"lineNumber":130,"author":{"gitId":"DingBao-sys"},"content":"        relationships.deleteRelationship(toDelete);","lastModifiedDate":"2024-03-19"},{"lineNumber":131,"author":{"gitId":"DingBao-sys"},"content":"    };","lastModifiedDate":"2024-03-19"},{"lineNumber":132,"author":{"gitId":"DingBao-sys"},"content":"    public boolean hasRelationship(Relationship toFind) {","lastModifiedDate":"2024-03-19"},{"lineNumber":133,"author":{"gitId":"DingBao-sys"},"content":"        return relationships.hasRelationship(toFind);","lastModifiedDate":"2024-03-19"},{"lineNumber":134,"author":{"gitId":"DingBao-sys"},"content":"    };","lastModifiedDate":"2024-03-19"},{"lineNumber":135,"author":{"gitId":"Emberlynn-Loo"},"content":"    public boolean hasRelationshipWithDescriptor(Relationship toFind) {","lastModifiedDate":"2024-03-21"},{"lineNumber":136,"author":{"gitId":"Emberlynn-Loo"},"content":"        return relationships.hasRelationshipWithDescriptor(toFind);","lastModifiedDate":"2024-03-21"},{"lineNumber":137,"author":{"gitId":"Emberlynn-Loo"},"content":"    };","lastModifiedDate":"2024-03-21"},{"lineNumber":138,"author":{"gitId":"DingBao-sys"},"content":"    public String getExistingRelationship(Relationship toGet) {","lastModifiedDate":"2024-03-19"},{"lineNumber":139,"author":{"gitId":"DingBao-sys"},"content":"        return relationships.getExistingRelationship(toGet);","lastModifiedDate":"2024-03-19"},{"lineNumber":140,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":153,"author":{"gitId":"DingBao-sys"},"content":"        return persons.equals(otherAddressBook.persons)","lastModifiedDate":"2024-03-21"},{"lineNumber":154,"author":{"gitId":"DingBao-sys"},"content":"                \u0026\u0026 relationships.equals(otherAddressBook.relationships);","lastModifiedDate":"2024-03-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":161,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":162,"author":{"gitId":"Bandov"},"content":"    public void deleteAttribute(String uuid, String attributeName) {","lastModifiedDate":"2024-03-20"},{"lineNumber":163,"author":{"gitId":"Bandov"},"content":"        persons.deleteAttribute(uuid, attributeName);","lastModifiedDate":"2024-03-20"},{"lineNumber":164,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":165,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":166,"author":{"gitId":"Bandov"},"content":"    public Person getPersonByUuid(UUID id) {","lastModifiedDate":"2024-03-20"},{"lineNumber":167,"author":{"gitId":"Bandov"},"content":"        requireNonNull(id);","lastModifiedDate":"2024-03-20"},{"lineNumber":168,"author":{"gitId":"Bandov"},"content":"        return persons.getPersonByUuid(id);","lastModifiedDate":"2024-03-20"},{"lineNumber":169,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":170,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":171,"author":{"gitId":"Bandov"},"content":"    public UUID getFullUuid(String digits) {","lastModifiedDate":"2024-03-20"},{"lineNumber":172,"author":{"gitId":"Bandov"},"content":"        requireNonNull(digits);","lastModifiedDate":"2024-03-20"},{"lineNumber":173,"author":{"gitId":"Bandov"},"content":"        return persons.getFullUuid(digits);","lastModifiedDate":"2024-03-20"},{"lineNumber":174,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":175,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":176,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":177,"author":{"gitId":"Bandov"},"content":"     * Checks if the specified person identified by their UUID string has a particular attribute.","lastModifiedDate":"2024-03-20"},{"lineNumber":178,"author":{"gitId":"Bandov"},"content":"     * This method requires both the UUID of the person and the name of the attribute to be non-null.","lastModifiedDate":"2024-03-20"},{"lineNumber":179,"author":{"gitId":"Bandov"},"content":"     * It delegates the actual search to the {@code persons} data structure\u0027s {@code hasAttribute} method.","lastModifiedDate":"2024-03-20"},{"lineNumber":180,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":181,"author":{"gitId":"Bandov"},"content":"     * @param uuidString The UUID of the person as a String. Must not be null.","lastModifiedDate":"2024-03-20"},{"lineNumber":182,"author":{"gitId":"Bandov"},"content":"     * @param attributeName The name of the attribute to check for. Must not be null.","lastModifiedDate":"2024-03-20"},{"lineNumber":183,"author":{"gitId":"Bandov"},"content":"     * @return {@code true} if the person has the specified attribute, {@code false} otherwise.","lastModifiedDate":"2024-03-20"},{"lineNumber":184,"author":{"gitId":"Bandov"},"content":"     * @throws NullPointerException if either {@code uuidString} or {@code attributeName} is null.","lastModifiedDate":"2024-03-20"},{"lineNumber":185,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":186,"author":{"gitId":"Bandov"},"content":"    public boolean hasAttribute(String uuidString, String attributeName) {","lastModifiedDate":"2024-03-20"},{"lineNumber":187,"author":{"gitId":"Bandov"},"content":"        requireNonNull(uuidString);","lastModifiedDate":"2024-03-20"},{"lineNumber":188,"author":{"gitId":"Bandov"},"content":"        requireNonNull(attributeName);","lastModifiedDate":"2024-03-20"},{"lineNumber":189,"author":{"gitId":"Bandov"},"content":"        return persons.hasAttribute(uuidString, attributeName);","lastModifiedDate":"2024-03-20"},{"lineNumber":190,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"DingBao-sys":23,"Bandov":28,"-":129,"Tsenrae":8,"Emberlynn-Loo":3}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"DingBao-sys"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"DingBao-sys"},"content":"import seedu.address.model.person.relationship.Relationship;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"DingBao-sys"},"content":"    boolean hasRelationship(Relationship target);","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"DingBao-sys"},"content":"    void addRelationship(Relationship toAdd);","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"DingBao-sys"},"content":"    void deleteRelationship(Relationship toDelete);","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"DingBao-sys"},"content":"    String getExistingRelationship(Relationship toGet);","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"Emberlynn-Loo"},"content":"    boolean hasRelationshipWithDescriptor(Relationship target);","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"Bandov"},"content":"    void deleteAttribute(String uuid, String attributeName);","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"Bandov"},"content":"    UUID getFullUuid(String digits);","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"Bandov"},"content":"    Person getPersonByUuid(UUID id);","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"Bandov"},"content":"    boolean hasAttribute(String uuidString, String attributeName);","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"DingBao-sys":6,"Bandov":7,"-":87,"Tsenrae":4,"Emberlynn-Loo":2}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"DingBao-sys"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"DingBao-sys"},"content":"import seedu.address.model.person.relationship.Relationship;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"DingBao-sys"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"DingBao-sys"},"content":"    public boolean hasRelationship(Relationship target) {","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"DingBao-sys"},"content":"        return addressBook.hasRelationship(target);","lastModifiedDate":"2024-03-19"},{"lineNumber":119,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"DingBao-sys"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"Emberlynn-Loo"},"content":"    public boolean hasRelationshipWithDescriptor(Relationship target) {","lastModifiedDate":"2024-03-21"},{"lineNumber":122,"author":{"gitId":"Emberlynn-Loo"},"content":"        return addressBook.hasRelationshipWithDescriptor(target);","lastModifiedDate":"2024-03-21"},{"lineNumber":123,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":124,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":125,"author":{"gitId":"DingBao-sys"},"content":"    public void addRelationship(Relationship toAdd) {","lastModifiedDate":"2024-03-19"},{"lineNumber":126,"author":{"gitId":"DingBao-sys"},"content":"        addressBook.addRelationship(toAdd);","lastModifiedDate":"2024-03-19"},{"lineNumber":127,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":128,"author":{"gitId":"DingBao-sys"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":129,"author":{"gitId":"DingBao-sys"},"content":"    public void deleteRelationship(Relationship toDelete) {","lastModifiedDate":"2024-03-19"},{"lineNumber":130,"author":{"gitId":"DingBao-sys"},"content":"        addressBook.deleteRelationship(toDelete);","lastModifiedDate":"2024-03-19"},{"lineNumber":131,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":132,"author":{"gitId":"DingBao-sys"},"content":"    public String getExistingRelationship(Relationship toGet) {","lastModifiedDate":"2024-03-19"},{"lineNumber":133,"author":{"gitId":"DingBao-sys"},"content":"        return addressBook.getExistingRelationship(toGet);","lastModifiedDate":"2024-03-19"},{"lineNumber":134,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":135,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":152,"author":{"gitId":"DingBao-sys"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":153,"author":{"gitId":"DingBao-sys"},"content":"    public UUID getFullUuid(String digits) {","lastModifiedDate":"2024-03-20"},{"lineNumber":154,"author":{"gitId":"DingBao-sys"},"content":"        return addressBook.getFullUuid(digits);","lastModifiedDate":"2024-03-20"},{"lineNumber":155,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":156,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":157,"author":{"gitId":"DingBao-sys"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":158,"author":{"gitId":"DingBao-sys"},"content":"    public Person getPersonByUuid(UUID id) {","lastModifiedDate":"2024-03-20"},{"lineNumber":159,"author":{"gitId":"DingBao-sys"},"content":"        return addressBook.getPersonByUuid(id);","lastModifiedDate":"2024-03-20"},{"lineNumber":160,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"Bandov"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":180,"author":{"gitId":"Bandov"},"content":"    public void deleteAttribute(String uuid, String attributeName) {","lastModifiedDate":"2024-03-20"},{"lineNumber":181,"author":{"gitId":"Bandov"},"content":"        addressBook.deleteAttribute(uuid, attributeName);","lastModifiedDate":"2024-03-20"},{"lineNumber":182,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":183,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":184,"author":{"gitId":"Bandov"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":185,"author":{"gitId":"Bandov"},"content":"    public boolean hasAttribute(String uuidString, String attributeName) {","lastModifiedDate":"2024-03-20"},{"lineNumber":186,"author":{"gitId":"Bandov"},"content":"        return addressBook.hasAttribute(uuidString, attributeName);","lastModifiedDate":"2024-03-20"},{"lineNumber":187,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"DingBao-sys":27,"Bandov":9,"-":148,"Emberlynn-Loo":4}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"Tsenrae"},"content":"import java.util.List;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":7,"author":{"gitId":"Tsenrae"},"content":"import seedu.address.model.person.relationship.Relationship;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"Tsenrae"},"content":"    List\u003cRelationship\u003e getRelationshipList();","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":17,"Tsenrae":4}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"ReflectiveObsidian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":7,"author":{"gitId":"ReflectiveObsidian"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"ReflectiveObsidian"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"ReflectiveObsidian"},"content":"import java.util.List;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"ReflectiveObsidian"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"ReflectiveObsidian"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"import seedu.address.model.person.attribute.Attribute;","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"ReflectiveObsidian"},"content":"import seedu.address.model.person.attribute.NameAttribute;","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"ReflectiveObsidian"},"content":"import seedu.address.model.person.attribute.StringAttribute;","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"ReflectiveObsidian"},"content":"    private final UUID uuid;","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":30,"author":{"gitId":"ReflectiveObsidian"},"content":"    private final HashMap\u003cString, Attribute\u003e attributes \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"ReflectiveObsidian"},"content":"     * THIS CONSTRUCTOR WILL BE DEPRECATED.","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"ReflectiveObsidian"},"content":"     * Constructs a person with a random UUID.","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"ReflectiveObsidian"},"content":"        this.uuid \u003d UUID.randomUUID();","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"ReflectiveObsidian"},"content":"        this.attributes.put(\"Name\", new NameAttribute(\"Name\", name.toString()));","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"Bandov"},"content":"        this.attributes.put(\"Phone\", new StringAttribute(\"Phone\", phone.toString()));","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"ReflectiveObsidian"},"content":"        this.attributes.put(\"Email\", new StringAttribute(\"Email\", email.toString()));","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"ReflectiveObsidian"},"content":"        this.attributes.put(\"Address\", new StringAttribute(\"Address\", address.toString()));","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"ReflectiveObsidian"},"content":"        this.tags.addAll(tags); // Earmarked for deprecation - to be superseded by relations","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"ReflectiveObsidian"},"content":"     * Constructs a person with a random UUID and a list of attributes.","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"ReflectiveObsidian"},"content":"     * There are no compulsory fields, attribute list can be null.","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"ReflectiveObsidian"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"ReflectiveObsidian"},"content":"     * @params attributes A list of attributes to be added to the person.","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"ReflectiveObsidian"},"content":"     *      If the list is null, the person will have no attributes.","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"ReflectiveObsidian"},"content":"     *      If there are multiple attributes of the same type, the last one will be used.","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"ReflectiveObsidian"},"content":"     * @return A person with the given attributes.","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"ReflectiveObsidian"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"ReflectiveObsidian"},"content":"    public Person(Attribute[] attributes) {","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"ReflectiveObsidian"},"content":"        this.uuid \u003d UUID.randomUUID();","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"ReflectiveObsidian"},"content":"        for (Attribute attribute : attributes) {","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"ReflectiveObsidian"},"content":"            this.attributes.put(attribute.getName(), attribute);","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"Tsenrae"},"content":"    // Constructors for loading purposes","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"Tsenrae"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"Tsenrae"},"content":"     * Constructs a person with a given UUID.","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"Tsenrae"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"Tsenrae"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"Tsenrae"},"content":"    public Person(UUID uuid, Name name, Phone phone, Email email, Address address) {","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"Tsenrae"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"Tsenrae"},"content":"        this.uuid \u003d uuid;","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"Tsenrae"},"content":"        this.attributes.put(\"Name\", new NameAttribute(\"Name\", name.toString()));","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"Tsenrae"},"content":"        this.attributes.put(\"Phone\", new NameAttribute(\"Phone\", phone.toString()));","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"Tsenrae"},"content":"        this.attributes.put(\"Email\", new StringAttribute(\"Email\", email.toString()));","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"Tsenrae"},"content":"        this.attributes.put(\"Address\", new StringAttribute(\"Address\", address.toString()));","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"Tsenrae"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"Tsenrae"},"content":"     * Constructs a person with a given UUID and a list of attributes.","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"Tsenrae"},"content":"     * There are no compulsory fields, attribute list can be null.","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"Tsenrae"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"Tsenrae"},"content":"     * @params uuid The UUID of the person.","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"Tsenrae"},"content":"     * @params attributes A list of attributes to be added to the person.","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"Tsenrae"},"content":"     *      If the list is null, the person will have no attributes.","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"Tsenrae"},"content":"     *      If there are multiple attributes of the same type, the last one will be used.","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"Tsenrae"},"content":"     * @return A person with the given attributes.","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"Tsenrae"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"Tsenrae"},"content":"    public Person(UUID uuid, Attribute[] attributes) {","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"Tsenrae"},"content":"        this.uuid \u003d uuid;","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"Tsenrae"},"content":"        for (Attribute attribute : attributes) {","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"Tsenrae"},"content":"            this.attributes.put(attribute.getName(), attribute);","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"Tsenrae"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"ReflectiveObsidian"},"content":"    public Name getName() { //Earmarked for deprecation - superseded by getAttribute - name should be optional","lastModifiedDate":"2024-03-13"},{"lineNumber":96,"author":{"gitId":"ReflectiveObsidian"},"content":"        if (!attributes.containsKey(\"Name\")) {","lastModifiedDate":"2024-03-14"},{"lineNumber":97,"author":{"gitId":"ReflectiveObsidian"},"content":"            return new Name(\"no name\");","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":99,"author":{"gitId":"ReflectiveObsidian"},"content":"        return new Name(attributes.get(\"Name\").getValueAsString());","lastModifiedDate":"2024-03-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"ReflectiveObsidian"},"content":"    public Phone getPhone() { //Earmarked for deprecation - superseded by getAttribute - phone should be optional","lastModifiedDate":"2024-03-13"},{"lineNumber":103,"author":{"gitId":"ReflectiveObsidian"},"content":"        if (!attributes.containsKey(\"Phone\")) {","lastModifiedDate":"2024-03-14"},{"lineNumber":104,"author":{"gitId":"ReflectiveObsidian"},"content":"            return new Phone(\"00000000\");","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":106,"author":{"gitId":"ReflectiveObsidian"},"content":"        return new Phone(attributes.get(\"Phone\").getValueAsString());","lastModifiedDate":"2024-03-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"ReflectiveObsidian"},"content":"    public Email getEmail() { //Earmarked for deprecation - superseded by getAttribute - email should be optional","lastModifiedDate":"2024-03-13"},{"lineNumber":110,"author":{"gitId":"ReflectiveObsidian"},"content":"        if (!attributes.containsKey(\"Email\")) {","lastModifiedDate":"2024-03-14"},{"lineNumber":111,"author":{"gitId":"ReflectiveObsidian"},"content":"            return new Email(\"noemail@noemail.noemail\");","lastModifiedDate":"2024-03-21"},{"lineNumber":112,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":113,"author":{"gitId":"ReflectiveObsidian"},"content":"        return new Email(attributes.get(\"Email\").getValueAsString());","lastModifiedDate":"2024-03-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"ReflectiveObsidian"},"content":"    public Address getAddress() { //Earmarked for deprecation - superseded by getAttribute - address should be optional","lastModifiedDate":"2024-03-13"},{"lineNumber":117,"author":{"gitId":"ReflectiveObsidian"},"content":"        if (!attributes.containsKey(\"Address\")) {","lastModifiedDate":"2024-03-14"},{"lineNumber":118,"author":{"gitId":"ReflectiveObsidian"},"content":"            return new Address(\"no address\");","lastModifiedDate":"2024-03-21"},{"lineNumber":119,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":120,"author":{"gitId":"ReflectiveObsidian"},"content":"        return new Address(attributes.get(\"Address\").getValueAsString());","lastModifiedDate":"2024-03-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":127,"author":{"gitId":"ReflectiveObsidian"},"content":"    public Set\u003cTag\u003e getTags() { //Earmarked for deprecation - to be superseded by relations","lastModifiedDate":"2024-03-13"},{"lineNumber":128,"author":{"gitId":"ReflectiveObsidian"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":129,"author":{"gitId":"ReflectiveObsidian"},"content":"            return Collections.unmodifiableSet(new HashSet\u003c\u003e());","lastModifiedDate":"2024-03-14"},{"lineNumber":130,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"ReflectiveObsidian"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":134,"author":{"gitId":"ReflectiveObsidian"},"content":"     * Returns the uuid of the person.","lastModifiedDate":"2024-03-11"},{"lineNumber":135,"author":{"gitId":"ReflectiveObsidian"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":136,"author":{"gitId":"ReflectiveObsidian"},"content":"     * @return The uuid of the person.","lastModifiedDate":"2024-03-11"},{"lineNumber":137,"author":{"gitId":"ReflectiveObsidian"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":138,"author":{"gitId":"ReflectiveObsidian"},"content":"    public UUID getUuid() {","lastModifiedDate":"2024-03-11"},{"lineNumber":139,"author":{"gitId":"ReflectiveObsidian"},"content":"        return uuid;","lastModifiedDate":"2024-03-11"},{"lineNumber":140,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":141,"author":{"gitId":"ReflectiveObsidian"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":142,"author":{"gitId":"ReflectiveObsidian"},"content":"     * Returns the uuid of the person as a string.","lastModifiedDate":"2024-03-11"},{"lineNumber":143,"author":{"gitId":"ReflectiveObsidian"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":144,"author":{"gitId":"ReflectiveObsidian"},"content":"     * @return The uuid of the person as a string.","lastModifiedDate":"2024-03-11"},{"lineNumber":145,"author":{"gitId":"ReflectiveObsidian"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":146,"author":{"gitId":"ReflectiveObsidian"},"content":"    public String getUuidString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":147,"author":{"gitId":"ReflectiveObsidian"},"content":"        return uuid.toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":148,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":149,"author":{"gitId":"ReflectiveObsidian"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":150,"author":{"gitId":"ReflectiveObsidian"},"content":"     * Returns whether the person has an attribute with the given type.","lastModifiedDate":"2024-03-13"},{"lineNumber":151,"author":{"gitId":"ReflectiveObsidian"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":152,"author":{"gitId":"ReflectiveObsidian"},"content":"     * @param attributeName The type of the attribute to check for.","lastModifiedDate":"2024-03-13"},{"lineNumber":153,"author":{"gitId":"ReflectiveObsidian"},"content":"     * @return True if the person has an attribute with the given type.","lastModifiedDate":"2024-03-13"},{"lineNumber":154,"author":{"gitId":"ReflectiveObsidian"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":155,"author":{"gitId":"ReflectiveObsidian"},"content":"    public boolean hasAttribute(String attributeName) {","lastModifiedDate":"2024-03-13"},{"lineNumber":156,"author":{"gitId":"ReflectiveObsidian"},"content":"        return attributes.containsKey(attributeName);","lastModifiedDate":"2024-03-13"},{"lineNumber":157,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":158,"author":{"gitId":"ReflectiveObsidian"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":159,"author":{"gitId":"ReflectiveObsidian"},"content":"     * Returns an attribute of the person.","lastModifiedDate":"2024-03-13"},{"lineNumber":160,"author":{"gitId":"ReflectiveObsidian"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":161,"author":{"gitId":"ReflectiveObsidian"},"content":"     * @param attributeName The type of the attribute to get.","lastModifiedDate":"2024-03-13"},{"lineNumber":162,"author":{"gitId":"ReflectiveObsidian"},"content":"     * @return The attribute with the given type.","lastModifiedDate":"2024-03-13"},{"lineNumber":163,"author":{"gitId":"ReflectiveObsidian"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":164,"author":{"gitId":"ReflectiveObsidian"},"content":"    public Attribute getAttribute(String attributeName) {","lastModifiedDate":"2024-03-13"},{"lineNumber":165,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertValidAttributeName(attributeName);","lastModifiedDate":"2024-03-13"},{"lineNumber":166,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertAttributeExistsInPerson(attributeName, attributes);","lastModifiedDate":"2024-03-14"},{"lineNumber":167,"author":{"gitId":"ReflectiveObsidian"},"content":"        return attributes.get(attributeName);","lastModifiedDate":"2024-03-13"},{"lineNumber":168,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":169,"author":{"gitId":"ReflectiveObsidian"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":170,"author":{"gitId":"ReflectiveObsidian"},"content":"     * Edits/adds an attribute of/to the person.","lastModifiedDate":"2024-03-13"},{"lineNumber":171,"author":{"gitId":"ReflectiveObsidian"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":172,"author":{"gitId":"ReflectiveObsidian"},"content":"     * @param attribute The attribute to edit or add.","lastModifiedDate":"2024-03-13"},{"lineNumber":173,"author":{"gitId":"ReflectiveObsidian"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":174,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void updateAttribute(Attribute attribute) {","lastModifiedDate":"2024-03-13"},{"lineNumber":175,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertValidAttribute(attribute);","lastModifiedDate":"2024-03-13"},{"lineNumber":176,"author":{"gitId":"ReflectiveObsidian"},"content":"        attributes.put(attribute.getName(), attribute);","lastModifiedDate":"2024-03-13"},{"lineNumber":177,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":178,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":179,"author":{"gitId":"ReflectiveObsidian"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":180,"author":{"gitId":"ReflectiveObsidian"},"content":"     * Deletes an attribute from the person.","lastModifiedDate":"2024-03-13"},{"lineNumber":181,"author":{"gitId":"ReflectiveObsidian"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":182,"author":{"gitId":"ReflectiveObsidian"},"content":"     * @param attributeType The type of the attribute to delete.","lastModifiedDate":"2024-03-13"},{"lineNumber":183,"author":{"gitId":"Bandov"},"content":"     * @return","lastModifiedDate":"2024-03-20"},{"lineNumber":184,"author":{"gitId":"ReflectiveObsidian"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":185,"author":{"gitId":"Bandov"},"content":"    public boolean deleteAttribute(String attributeType) {","lastModifiedDate":"2024-03-20"},{"lineNumber":186,"author":{"gitId":"Bandov"},"content":"        if (attributes.containsKey(attributeType)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":187,"author":{"gitId":"ReflectiveObsidian"},"content":"            attributes.remove(attributeType);","lastModifiedDate":"2024-03-13"},{"lineNumber":188,"author":{"gitId":"Bandov"},"content":"            return true;","lastModifiedDate":"2024-03-20"},{"lineNumber":189,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":190,"author":{"gitId":"Bandov"},"content":"        return false;","lastModifiedDate":"2024-03-20"},{"lineNumber":191,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":192,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":193,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":194,"author":{"gitId":"ReflectiveObsidian"},"content":"    private static void assertValidAttribute(Attribute attribute) {","lastModifiedDate":"2024-03-13"},{"lineNumber":195,"author":{"gitId":"ReflectiveObsidian"},"content":"        if (attribute \u003d\u003d null) {","lastModifiedDate":"2024-03-13"},{"lineNumber":196,"author":{"gitId":"ReflectiveObsidian"},"content":"            throw new IllegalArgumentException(\"Attribute cannot be null.\");","lastModifiedDate":"2024-03-13"},{"lineNumber":197,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":198,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertValidAttributeName(attribute.getName());","lastModifiedDate":"2024-03-13"},{"lineNumber":199,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":200,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":201,"author":{"gitId":"ReflectiveObsidian"},"content":"    private static void assertValidAttributeName(String attributeType) {","lastModifiedDate":"2024-03-13"},{"lineNumber":202,"author":{"gitId":"ReflectiveObsidian"},"content":"        if (attributeType \u003d\u003d \"\") {","lastModifiedDate":"2024-03-13"},{"lineNumber":203,"author":{"gitId":"ReflectiveObsidian"},"content":"            throw new IllegalArgumentException(\"Attribute name cannot be empty.\");","lastModifiedDate":"2024-03-13"},{"lineNumber":204,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":205,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":207,"author":{"gitId":"ReflectiveObsidian"},"content":"    private static void assertAttributeExistsInPerson(String attributeType, Map\u003cString, Attribute\u003e attributes) {","lastModifiedDate":"2024-03-14"},{"lineNumber":208,"author":{"gitId":"ReflectiveObsidian"},"content":"        if (!attributes.containsKey(attributeType)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":209,"author":{"gitId":"ReflectiveObsidian"},"content":"            throw new IllegalArgumentException(\"Attribute with name \" + attributeType + \" does not exist\");","lastModifiedDate":"2024-03-14"},{"lineNumber":210,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":211,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":215,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":222,"author":{"gitId":"Tsenrae"},"content":"        Attribute otherPersonNameAttribute \u003d otherPerson.attributes.get(\"Name\");","lastModifiedDate":"2024-03-18"},{"lineNumber":223,"author":{"gitId":"Tsenrae"},"content":"        Attribute thisPersonNameAttribute \u003d this.attributes.get(\"Name\");","lastModifiedDate":"2024-03-18"},{"lineNumber":224,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":226,"author":{"gitId":"Tsenrae"},"content":"                \u0026\u0026 otherPersonNameAttribute !\u003d null","lastModifiedDate":"2024-03-18"},{"lineNumber":227,"author":{"gitId":"Tsenrae"},"content":"                \u0026\u0026 thisPersonNameAttribute !\u003d null","lastModifiedDate":"2024-03-18"},{"lineNumber":228,"author":{"gitId":"Tsenrae"},"content":"                \u0026\u0026 otherPersonNameAttribute.getValueAsString().equals(thisPersonNameAttribute.getValueAsString());","lastModifiedDate":"2024-03-18"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":233,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":234,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":246,"author":{"gitId":"ReflectiveObsidian"},"content":"        // compare all attributes","lastModifiedDate":"2024-03-13"},{"lineNumber":247,"author":{"gitId":"ReflectiveObsidian"},"content":"        for (Map.Entry\u003cString, Attribute\u003e entry : attributes.entrySet()) {","lastModifiedDate":"2024-03-13"},{"lineNumber":248,"author":{"gitId":"ReflectiveObsidian"},"content":"            if (!otherPerson.hasAttribute(entry.getKey())) {","lastModifiedDate":"2024-03-13"},{"lineNumber":249,"author":{"gitId":"ReflectiveObsidian"},"content":"                return false;","lastModifiedDate":"2024-03-13"},{"lineNumber":250,"author":{"gitId":"ReflectiveObsidian"},"content":"            }","lastModifiedDate":"2024-03-13"},{"lineNumber":251,"author":{"gitId":"ReflectiveObsidian"},"content":"            if (!entry.getValue().getValueAsString().equals(","lastModifiedDate":"2024-03-13"},{"lineNumber":252,"author":{"gitId":"ReflectiveObsidian"},"content":"                    otherPerson.getAttribute(entry.getKey()).getValueAsString())) {","lastModifiedDate":"2024-03-13"},{"lineNumber":253,"author":{"gitId":"ReflectiveObsidian"},"content":"                return false;","lastModifiedDate":"2024-03-13"},{"lineNumber":254,"author":{"gitId":"ReflectiveObsidian"},"content":"            }","lastModifiedDate":"2024-03-13"},{"lineNumber":255,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":256,"author":{"gitId":"ReflectiveObsidian"},"content":"        if (!tags.equals(otherPerson.tags)) { // Earmarked for deprecation - to be superseded by relations","lastModifiedDate":"2024-03-13"},{"lineNumber":257,"author":{"gitId":"ReflectiveObsidian"},"content":"            return false;","lastModifiedDate":"2024-03-13"},{"lineNumber":258,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":259,"author":{"gitId":"ReflectiveObsidian"},"content":"        return true;","lastModifiedDate":"2024-03-13"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":261,"author":{"gitId":"ReflectiveObsidian"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":262,"author":{"gitId":"ReflectiveObsidian"},"content":"     * Returns true if the UUID of the person is the same as the UUID of the other object.","lastModifiedDate":"2024-03-11"},{"lineNumber":263,"author":{"gitId":"ReflectiveObsidian"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":264,"author":{"gitId":"ReflectiveObsidian"},"content":"     * @param other The object to compare with.","lastModifiedDate":"2024-03-11"},{"lineNumber":265,"author":{"gitId":"ReflectiveObsidian"},"content":"     * @return True if the UUID of the person is the same as the UUID of the other object.","lastModifiedDate":"2024-03-11"},{"lineNumber":266,"author":{"gitId":"ReflectiveObsidian"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":267,"author":{"gitId":"ReflectiveObsidian"},"content":"    public boolean equalsUuid(Object other) {","lastModifiedDate":"2024-03-11"},{"lineNumber":268,"author":{"gitId":"ReflectiveObsidian"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":269,"author":{"gitId":"ReflectiveObsidian"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":270,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":271,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":272,"author":{"gitId":"ReflectiveObsidian"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-11"},{"lineNumber":273,"author":{"gitId":"ReflectiveObsidian"},"content":"            return true;","lastModifiedDate":"2024-03-11"},{"lineNumber":274,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2024-03-11"},{"lineNumber":277,"author":{"gitId":"ReflectiveObsidian"},"content":"        return uuid.equals(otherPerson.uuid);","lastModifiedDate":"2024-03-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":283,"author":{"gitId":"ReflectiveObsidian"},"content":"        return Objects.hash(","lastModifiedDate":"2024-03-13"},{"lineNumber":284,"author":{"gitId":"ReflectiveObsidian"},"content":"                attributes,","lastModifiedDate":"2024-03-13"},{"lineNumber":285,"author":{"gitId":"ReflectiveObsidian"},"content":"                uuid);","lastModifiedDate":"2024-03-13"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":291,"author":{"gitId":"ReflectiveObsidian"},"content":"                .add(\"uuid\", uuid)","lastModifiedDate":"2024-03-11"},{"lineNumber":292,"author":{"gitId":"ReflectiveObsidian"},"content":"                .add(\"name\", getName().toString())","lastModifiedDate":"2024-03-14"},{"lineNumber":293,"author":{"gitId":"ReflectiveObsidian"},"content":"                .add(\"phone\", getPhone().toString())","lastModifiedDate":"2024-03-14"},{"lineNumber":294,"author":{"gitId":"ReflectiveObsidian"},"content":"                .add(\"email\", getEmail().toString())","lastModifiedDate":"2024-03-14"},{"lineNumber":295,"author":{"gitId":"ReflectiveObsidian"},"content":"                .add(\"address\", getAddress().toString())","lastModifiedDate":"2024-03-14"},{"lineNumber":296,"author":{"gitId":"ReflectiveObsidian"},"content":"                .add(\"tags\", getTags()) // Earmarked for deprecation - to be superseded by relations","lastModifiedDate":"2024-03-14"},{"lineNumber":297,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":299,"author":{"gitId":"ReflectiveObsidian"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":300,"author":{"gitId":"ReflectiveObsidian"},"content":"     * Returns a string representation of all the attributes of the person.","lastModifiedDate":"2024-03-14"},{"lineNumber":301,"author":{"gitId":"ReflectiveObsidian"},"content":"     * The attributes are sorted by length of the string representation.","lastModifiedDate":"2024-03-14"},{"lineNumber":302,"author":{"gitId":"ReflectiveObsidian"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":303,"author":{"gitId":"ReflectiveObsidian"},"content":"     * @return A string representation of all the attributes of the person.","lastModifiedDate":"2024-03-14"},{"lineNumber":304,"author":{"gitId":"ReflectiveObsidian"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":305,"author":{"gitId":"ReflectiveObsidian"},"content":"    public String allAttributesAsString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":306,"author":{"gitId":"ReflectiveObsidian"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-03-14"},{"lineNumber":307,"author":{"gitId":"ReflectiveObsidian"},"content":"        if (attributes.isEmpty()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":308,"author":{"gitId":"ReflectiveObsidian"},"content":"            return \"No details available\";","lastModifiedDate":"2024-03-14"},{"lineNumber":309,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":310,"author":{"gitId":"ReflectiveObsidian"},"content":"        // Solution below generated by Github Copilot","lastModifiedDate":"2024-03-14"},{"lineNumber":311,"author":{"gitId":"ReflectiveObsidian"},"content":"        List\u003cMap.Entry\u003cString, Attribute\u003e\u003e sortedAttributes \u003d new ArrayList\u003c\u003e(attributes.entrySet());","lastModifiedDate":"2024-03-14"},{"lineNumber":312,"author":{"gitId":"ReflectiveObsidian"},"content":"        sortedAttributes.sort(","lastModifiedDate":"2024-03-14"},{"lineNumber":313,"author":{"gitId":"ReflectiveObsidian"},"content":"                Comparator.comparingInt(","lastModifiedDate":"2024-03-14"},{"lineNumber":314,"author":{"gitId":"ReflectiveObsidian"},"content":"                        entry -\u003e (entry.getKey() + \": \" + entry.getValue().getValueAsString()).length()));","lastModifiedDate":"2024-03-14"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":316,"author":{"gitId":"ReflectiveObsidian"},"content":"        for (Map.Entry\u003cString, Attribute\u003e entry : sortedAttributes) {","lastModifiedDate":"2024-03-14"},{"lineNumber":317,"author":{"gitId":"ReflectiveObsidian"},"content":"            sb.append(entry.getKey()).append(\": \").append(entry.getValue().getValueAsString()).append(\"\\n\");","lastModifiedDate":"2024-03-14"},{"lineNumber":318,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":319,"author":{"gitId":"ReflectiveObsidian"},"content":"        return sb.toString().trim();","lastModifiedDate":"2024-03-14"},{"lineNumber":320,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":322,"author":{"gitId":"Tsenrae"},"content":"    public Set\u003cAttribute\u003e getAttributes() {","lastModifiedDate":"2024-03-18"},{"lineNumber":323,"author":{"gitId":"Tsenrae"},"content":"        return new HashSet\u003c\u003e(attributes.values());","lastModifiedDate":"2024-03-18"},{"lineNumber":324,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":325,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":326,"author":{"gitId":"Bandov"},"content":"    public void setAttribute(String name, String str) {","lastModifiedDate":"2024-03-20"},{"lineNumber":327,"author":{"gitId":"Bandov"},"content":"        attributes.put(name, new StringAttribute(name, str));","lastModifiedDate":"2024-03-20"},{"lineNumber":328,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ReflectiveObsidian":185,"Bandov":15,"-":92,"Tsenrae":37}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"ReflectiveObsidian"},"content":"        return internalList.stream().anyMatch(toCheck::equalsUuid);","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"ReflectiveObsidian"},"content":"                if (persons.get(i).equalsUuid(persons.get(j))) {","lastModifiedDate":"2024-03-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":150,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":151,"author":{"gitId":"Bandov"},"content":"     * Deletes an attribute from a person identified by UUID.","lastModifiedDate":"2024-03-20"},{"lineNumber":152,"author":{"gitId":"Bandov"},"content":"     * Iterates through the list of persons until the matching UUID is found, then deletes the specified attribute.","lastModifiedDate":"2024-03-20"},{"lineNumber":153,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":154,"author":{"gitId":"Bandov"},"content":"     * @param uuid The UUID of the person from whom to delete the attribute.","lastModifiedDate":"2024-03-20"},{"lineNumber":155,"author":{"gitId":"Bandov"},"content":"     * @param attributeName The name of the attribute to delete.","lastModifiedDate":"2024-03-20"},{"lineNumber":156,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":157,"author":{"gitId":"Bandov"},"content":"    public void deleteAttribute(String uuid, String attributeName) {","lastModifiedDate":"2024-03-20"},{"lineNumber":158,"author":{"gitId":"Bandov"},"content":"        for (Person person : internalList) {","lastModifiedDate":"2024-03-20"},{"lineNumber":159,"author":{"gitId":"Bandov"},"content":"            if (person.getUuid().toString().equals(uuid)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":160,"author":{"gitId":"Bandov"},"content":"                person.deleteAttribute(attributeName);","lastModifiedDate":"2024-03-20"},{"lineNumber":161,"author":{"gitId":"Bandov"},"content":"                return;","lastModifiedDate":"2024-03-20"},{"lineNumber":162,"author":{"gitId":"Bandov"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":163,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":164,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":165,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":166,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":167,"author":{"gitId":"Bandov"},"content":"     * Retrieves a Person object by their UUID.","lastModifiedDate":"2024-03-20"},{"lineNumber":168,"author":{"gitId":"Bandov"},"content":"     * Searches through the internal list of persons for a match with the provided UUID.","lastModifiedDate":"2024-03-20"},{"lineNumber":169,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":170,"author":{"gitId":"Bandov"},"content":"     * @param uuid The UUID of the person to retrieve.","lastModifiedDate":"2024-03-20"},{"lineNumber":171,"author":{"gitId":"Bandov"},"content":"     * @return The Person object if found, null otherwise.","lastModifiedDate":"2024-03-20"},{"lineNumber":172,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":173,"author":{"gitId":"Bandov"},"content":"    public Person getPersonByUuid(UUID uuid) {","lastModifiedDate":"2024-03-20"},{"lineNumber":174,"author":{"gitId":"Bandov"},"content":"        for (Person person : internalList) {","lastModifiedDate":"2024-03-20"},{"lineNumber":175,"author":{"gitId":"Bandov"},"content":"            if (person.getUuid().equals(uuid)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":176,"author":{"gitId":"Bandov"},"content":"                return person;","lastModifiedDate":"2024-03-20"},{"lineNumber":177,"author":{"gitId":"Bandov"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":178,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":179,"author":{"gitId":"Bandov"},"content":"        return null;","lastModifiedDate":"2024-03-20"},{"lineNumber":180,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":181,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":182,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":183,"author":{"gitId":"Bandov"},"content":"     * Finds the full UUID of a person based on the last few digits provided.","lastModifiedDate":"2024-03-20"},{"lineNumber":184,"author":{"gitId":"Bandov"},"content":"     * Searches each person\u0027s UUID for a match on the last four digits.","lastModifiedDate":"2024-03-20"},{"lineNumber":185,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":186,"author":{"gitId":"Bandov"},"content":"     * @param digits The last few digits of the person\u0027s UUID.","lastModifiedDate":"2024-03-20"},{"lineNumber":187,"author":{"gitId":"Bandov"},"content":"     * @return The full UUID of the person if a match is found, null otherwise.","lastModifiedDate":"2024-03-20"},{"lineNumber":188,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":189,"author":{"gitId":"Bandov"},"content":"    public UUID getFullUuid(String digits) {","lastModifiedDate":"2024-03-20"},{"lineNumber":190,"author":{"gitId":"Bandov"},"content":"        for (Person p : internalList) {","lastModifiedDate":"2024-03-20"},{"lineNumber":191,"author":{"gitId":"Bandov"},"content":"            String currentPersonUuid \u003d p.getUuidString();","lastModifiedDate":"2024-03-20"},{"lineNumber":192,"author":{"gitId":"Bandov"},"content":"            int len \u003d currentPersonUuid.length();","lastModifiedDate":"2024-03-20"},{"lineNumber":193,"author":{"gitId":"Bandov"},"content":"            String toMatch \u003d currentPersonUuid.substring(len - 4);","lastModifiedDate":"2024-03-20"},{"lineNumber":194,"author":{"gitId":"Bandov"},"content":"            boolean isMatch \u003d toMatch.equals(digits);","lastModifiedDate":"2024-03-20"},{"lineNumber":195,"author":{"gitId":"Bandov"},"content":"            if (isMatch) {","lastModifiedDate":"2024-03-20"},{"lineNumber":196,"author":{"gitId":"Bandov"},"content":"                return p.getUuid();","lastModifiedDate":"2024-03-20"},{"lineNumber":197,"author":{"gitId":"Bandov"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":198,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":199,"author":{"gitId":"Bandov"},"content":"        return null;","lastModifiedDate":"2024-03-20"},{"lineNumber":200,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":201,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":202,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":203,"author":{"gitId":"Bandov"},"content":"     * Checks if a person identified by UUID has a specified attribute.","lastModifiedDate":"2024-03-20"},{"lineNumber":204,"author":{"gitId":"Bandov"},"content":"     * Iterates through the list of persons to find a match for the UUID, then checks for the attribute.","lastModifiedDate":"2024-03-20"},{"lineNumber":205,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":206,"author":{"gitId":"Bandov"},"content":"     * @param uuidString The UUID of the person as a string.","lastModifiedDate":"2024-03-20"},{"lineNumber":207,"author":{"gitId":"Bandov"},"content":"     * @param attributeName The name of the attribute to check for.","lastModifiedDate":"2024-03-20"},{"lineNumber":208,"author":{"gitId":"Bandov"},"content":"     * @return true if the person has the specified attribute, false otherwise.","lastModifiedDate":"2024-03-20"},{"lineNumber":209,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":210,"author":{"gitId":"Bandov"},"content":"    public boolean hasAttribute(String uuidString, String attributeName) {","lastModifiedDate":"2024-03-20"},{"lineNumber":211,"author":{"gitId":"Bandov"},"content":"        for (Person person : internalList) {","lastModifiedDate":"2024-03-20"},{"lineNumber":212,"author":{"gitId":"Bandov"},"content":"            if (person.getUuidString().equals(uuidString)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":213,"author":{"gitId":"Bandov"},"content":"                return person.hasAttribute(attributeName);","lastModifiedDate":"2024-03-20"},{"lineNumber":214,"author":{"gitId":"Bandov"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":215,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":216,"author":{"gitId":"Bandov"},"content":"        return false;","lastModifiedDate":"2024-03-20"},{"lineNumber":217,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ReflectiveObsidian":2,"Bandov":70,"-":146}},{"path":"src/main/java/seedu/address/model/person/attribute/Attribute.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ReflectiveObsidian"},"content":"package seedu.address.model.person.attribute;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":" * Represents an abstract base for various types of attributes that can be associated with a person.","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":" * This class provides the foundation for storing and processing different types of attributes,","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":" * such as names, dates, or numerical values, by defining a common interface that all attribute types must implement.","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":" * The class includes a static factory method for creating appropriate attribute","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":" * instances based on the provided value\u0027s format.","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"public abstract class Attribute {","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"    protected String name;","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"     * Constructs an {@code Attribute} with the specified name.","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"     * @param name The name of the attribute.","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"    public Attribute(String name) {","lastModifiedDate":"2024-02-27"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-02-27"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"     * Returns the value of the attribute as a {@code String}.","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"     * This method must be implemented by all concrete subclasses of {@code Attribute}","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"     * to provide a standardized way of retrieving the attribute\u0027s value.","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"     * @return The attribute\u0027s value as a {@code String}.","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"    public abstract String getValueAsString();","lastModifiedDate":"2024-02-27"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"    public String getName() {","lastModifiedDate":"2024-02-27"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"        return name;","lastModifiedDate":"2024-02-27"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"Bandov"},"content":"     * Creates and returns an {@code Attribute} instance based on the provided name and value.","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"Bandov"},"content":"     * The method attempts to interpret the value as an integer, a date in ISO_LOCAL_DATE format,","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"Bandov"},"content":"     * or falls back to treating it as a string.","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"Bandov"},"content":"     * Accordingly, it returns an instance of {@code IntegerAttribute},","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"Bandov"},"content":"     * {@code DateAttribute}, or {@code StringAttribute}.","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"Bandov"},"content":"     * @param name  The name of the attribute.","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"Bandov"},"content":"     * @param value The value of the attribute as a {@code String}.","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"Bandov"},"content":"     * @return An {@code Attribute} instance appropriate to the value\u0027s format.","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"Bandov"},"content":"     * @throws NumberFormatException If the value cannot be parsed as an integer but is expected to be one.","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"Bandov"},"content":"     * @throws DateTimeParseException If the value cannot be parsed as a date but is expected to be one.","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"Bandov"},"content":"    public static Attribute fromString(String name, String value) {","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"Bandov"},"content":"        // Try to parse as an integer","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"Bandov"},"content":"        try {","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"Bandov"},"content":"            int intValue \u003d Integer.parseInt(value);","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"Bandov"},"content":"            return new IntegerAttribute(name, intValue);","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"Bandov"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"Bandov"},"content":"            // Not an Integer, try next","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"Bandov"},"content":"        // Try to parse as a date","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"Bandov"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ISO_LOCAL_DATE;","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"Bandov"},"content":"        try {","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"Bandov"},"content":"            LocalDate dateValue \u003d LocalDate.parse(value, dateFormatter);","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"Bandov"},"content":"            return new DateAttribute(name, dateValue);","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"Bandov"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"Bandov"},"content":"            // Not a Date, treat as String","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":70,"author":{"gitId":"Bandov"},"content":"        // Default to treating as a String","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"Bandov"},"content":"        return new StringAttribute(name, value);","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-02-27"}],"authorContributionMap":{"ReflectiveObsidian":1,"Bandov":72}},{"path":"src/main/java/seedu/address/model/person/attribute/BirthdayAttribute.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ReflectiveObsidian"},"content":"package seedu.address.model.person.attribute;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"ReflectiveObsidian"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"ReflectiveObsidian"},"content":" * Date attribute with LocalDate value","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"ReflectiveObsidian"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"ReflectiveObsidian"},"content":"public class BirthdayAttribute extends DateAttribute {","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"ReflectiveObsidian"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"ReflectiveObsidian"},"content":"     * Constructs a BirthdayAttribute.","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"ReflectiveObsidian"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"ReflectiveObsidian"},"content":"     * @param name Name of the attribute.","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"ReflectiveObsidian"},"content":"     * @param date A LocalDate.","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"ReflectiveObsidian"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"    public BirthdayAttribute(String name, LocalDate date) {","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"        super(name, date);","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"        // Validate that the provided date is before today","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"        if (!date.isBefore(LocalDate.now())) {","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"            throw new IllegalArgumentException(\"Birthday must be before today.\");","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"ReflectiveObsidian":11,"Bandov":11}},{"path":"src/main/java/seedu/address/model/person/attribute/DateAttribute.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ReflectiveObsidian"},"content":"package seedu.address.model.person.attribute;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":" * Represents an attribute that holds a date value in a person\u0027s record.","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":" * This class extends {@link Attribute} to include functionality specific to date management.","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"public class DateAttribute extends Attribute {","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"    private LocalDate value;","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"ReflectiveObsidian"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"ReflectiveObsidian"},"content":"     * Constructs a DateAttribute.","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"ReflectiveObsidian"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"ReflectiveObsidian"},"content":"     * @param name Name of the attribute.","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"ReflectiveObsidian"},"content":"     * @param value A LocalDate.","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"    public DateAttribute(String name, LocalDate value) {","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"        super(name);","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"        this.value \u003d value;","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"    public LocalDate getValue() {","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"        return value;","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"    @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"    public String getValueAsString() {","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"        return value.toString();","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"    // Function for searching records by a specific date","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"    public boolean isOnDate(LocalDate date) {","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"        return value.isEqual(date);","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"ReflectiveObsidian":6,"Bandov":31}},{"path":"src/main/java/seedu/address/model/person/attribute/IntegerAttribute.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ReflectiveObsidian"},"content":"package seedu.address.model.person.attribute;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":" * Integer attribute with integer value","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"public class IntegerAttribute extends Attribute {","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"    private int value;","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"     * Constructor for IntegerAttribute","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"     * @param name name of the attribute","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"     * @param value value of the attribute","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"    public IntegerAttribute(String name, int value) {","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"        super(name);","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"        this.value \u003d value;","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"    public int getValue() {","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"        return value;","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"    @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"    public String getValueAsString() {","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"        return Integer.toString(value);","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"    // Function for sorting by integer value","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"    public int compare(IntegerAttribute other) {","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"        return Integer.compare(value, other.value);","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"ReflectiveObsidian":1,"Bandov":32}},{"path":"src/main/java/seedu/address/model/person/attribute/NameAttribute.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ReflectiveObsidian"},"content":"package seedu.address.model.person.attribute;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":" * Name attribute with string value","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"public class NameAttribute extends StringAttribute {","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"    public NameAttribute(String name, String value) {","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"        super(name, value);","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"ReflectiveObsidian":1,"Bandov":9}},{"path":"src/main/java/seedu/address/model/person/attribute/PhoneNumberAttribute.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ReflectiveObsidian"},"content":"package seedu.address.model.person.attribute;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":" * Phone number attribute with integer value","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"public class PhoneNumberAttribute extends IntegerAttribute {","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"    public PhoneNumberAttribute(String name, int value) {","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"        super(name, value);","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"ReflectiveObsidian":1,"Bandov":11}},{"path":"src/main/java/seedu/address/model/person/attribute/SexAttribute.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ReflectiveObsidian"},"content":"package seedu.address.model.person.attribute;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"ReflectiveObsidian"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"ReflectiveObsidian"},"content":" * Gender attribute with enum value","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"ReflectiveObsidian"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"ReflectiveObsidian"},"content":"public class SexAttribute extends Attribute {","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"    private Gender gender;","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"ReflectiveObsidian"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"ReflectiveObsidian"},"content":"     * Gender enum","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"ReflectiveObsidian"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"    public enum Gender {","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"        MALE, FEMALE","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"ReflectiveObsidian"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"ReflectiveObsidian"},"content":"     * Constructor for SexAttribute","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"ReflectiveObsidian"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"ReflectiveObsidian"},"content":"     * @param name Name of the attribute","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"ReflectiveObsidian"},"content":"     * @param gender Sex of the person","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"ReflectiveObsidian"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"    public SexAttribute(String name, Gender gender) {","lastModifiedDate":"2024-03-10"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"        super(name);","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"    @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"    public String getValueAsString() {","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"        return gender.toString();","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"    public Gender getGender() {","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"        return gender;","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"    public void setGender(Gender gender) {","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"ReflectiveObsidian":14,"Bandov":24}},{"path":"src/main/java/seedu/address/model/person/attribute/StringAttribute.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ReflectiveObsidian"},"content":"package seedu.address.model.person.attribute;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":" * Represents a String-based attribute for a person in the address book.","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":" * A subclass of {@code Attribute}, it encapsulates a {@code String} value,","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":" * providing a means to store and retrieve string-based information about a person.","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"public class StringAttribute extends Attribute {","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"    private String value;","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"     * Constructs a new StringAttribute instance with a specified name and value.","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"     * @param name The name of the attribute, which serves as an identifier.","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"     * @param value The value of the attribute, representing the data stored within.","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"    public StringAttribute(String name, String value) {","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"        super(name);","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"        this.value \u003d value;","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"    public String getValue() {","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"        return value;","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"    @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"    public String getValueAsString() {","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"        return value;","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"    // Function for partial string matching","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"    public boolean matches(String searchString) {","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"        return value.contains(searchString);","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"ReflectiveObsidian":1,"Bandov":34}},{"path":"src/main/java/seedu/address/model/person/relationship/BioParentsRelationship.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emberlynn-Loo"},"content":"package seedu.address.model.person.relationship;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Emberlynn-Loo"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"Emberlynn-Loo"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Emberlynn-Loo"},"content":" * Represents a parent-child relationship between two persons.","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"Emberlynn-Loo"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Emberlynn-Loo"},"content":"public class BioParentsRelationship extends RoleBasedRelationship {","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"Emberlynn-Loo"},"content":"    private static final String ROLE_PARENT \u003d \"parent\";","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"Emberlynn-Loo"},"content":"    private static final String ROLE_CHILD \u003d \"child\";","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"Emberlynn-Loo"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"Emberlynn-Loo"},"content":"     * Creates a new BioParentsRelationship between two persons.","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"DingBao-sys"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"DingBao-sys"},"content":"    public BioParentsRelationship(UUID parentUuid, UUID childUuid) {","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"DingBao-sys"},"content":"        super(parentUuid, childUuid, \"family\", ROLE_PARENT, ROLE_CHILD);","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"Emberlynn-Loo"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"DingBao-sys":3,"Emberlynn-Loo":15}},{"path":"src/main/java/seedu/address/model/person/relationship/FriendsRelationship.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emberlynn-Loo"},"content":"package seedu.address.model.person.relationship;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Emberlynn-Loo"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"Emberlynn-Loo"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Emberlynn-Loo"},"content":" * Represents a friends relationship between two persons.","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"Emberlynn-Loo"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"DingBao-sys"},"content":"public class FriendsRelationship extends Relationship {","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"Emberlynn-Loo"},"content":"    public FriendsRelationship(UUID person1, UUID person2) {","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"DingBao-sys"},"content":"        super(person1, person2, \"friend\");","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"Emberlynn-Loo"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"DingBao-sys":2,"Emberlynn-Loo":10}},{"path":"src/main/java/seedu/address/model/person/relationship/Relationship.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emberlynn-Loo"},"content":"package seedu.address.model.person.relationship;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"DingBao-sys"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"DingBao-sys"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"Emberlynn-Loo"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"Tsenrae"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"Tsenrae"},"content":" * Represents a relationship between two people.","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"Tsenrae"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"DingBao-sys"},"content":"public class Relationship {","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"DingBao-sys"},"content":"    protected static ArrayList\u003cString\u003e validDescriptors \u003d new ArrayList\u003cString\u003e(","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"DingBao-sys"},"content":"            Arrays.asList(\"family\",","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"DingBao-sys"},"content":"                    \"friend\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"Emberlynn-Loo"},"content":"    protected UUID person1;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"Emberlynn-Loo"},"content":"    protected UUID person2;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"DingBao-sys"},"content":"    protected String relationshipDescriptor;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"    protected String type;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"Tsenrae"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"Tsenrae"},"content":"     * Creates a new Relationship object with the given UUIDs.","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"Tsenrae"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"Tsenrae"},"content":"     * @param person1 The UUID of the first person in the relationship.","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"Tsenrae"},"content":"     * @param person2 The UUID of the second person in the relationship.","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"Tsenrae"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"DingBao-sys"},"content":"    public Relationship(UUID person1, UUID person2, String relationshipDescriptor) {","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"Emberlynn-Loo"},"content":"        this.person1 \u003d person1;","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"Emberlynn-Loo"},"content":"        this.person2 \u003d person2;","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"DingBao-sys"},"content":"        if (!validDescriptors.contains(relationshipDescriptor)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"DingBao-sys"},"content":"            throw new IllegalArgumentException(\"Invalid Relationship type\");","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"DingBao-sys"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"DingBao-sys"},"content":"        this.relationshipDescriptor \u003d relationshipDescriptor;","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"Emberlynn-Loo"},"content":"    // Getters for person UUIDs","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"Emberlynn-Loo"},"content":"    public UUID getPerson1() {","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"Emberlynn-Loo"},"content":"        return person1;","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"Emberlynn-Loo"},"content":"    public UUID getPerson2() {","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"Emberlynn-Loo"},"content":"        return person2;","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"DingBao-sys"},"content":"    public String getRoleDescriptor(UUID targetPerson) {","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"DingBao-sys"},"content":"        return this.relationshipDescriptor;","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"Tsenrae"},"content":"    public String getRelationshipDescriptor() {","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"Tsenrae"},"content":"        return this.relationshipDescriptor;","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"DingBao-sys"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"DingBao-sys"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"DingBao-sys"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"DingBao-sys"},"content":"            return true;","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"DingBao-sys"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"DingBao-sys"},"content":"        if (!(o instanceof Relationship)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"DingBao-sys"},"content":"            return false;","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"DingBao-sys"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"DingBao-sys"},"content":"        Relationship other \u003d (Relationship) o;","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"DingBao-sys"},"content":"        return ((other.person1.equals(this.person1) \u0026\u0026 other.person2.equals(this.person2))","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"DingBao-sys"},"content":"                || (other.person1.equals(this.person2) \u0026\u0026 other.person2.equals(this.person1)))","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"DingBao-sys"},"content":"                \u0026\u0026 other.relationshipDescriptor.equals(relationshipDescriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"DingBao-sys"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"DingBao-sys"},"content":"    public String toString() {","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"DingBao-sys"},"content":"        return String.format(\"%s and %s are %s\", person1.toString(),","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"DingBao-sys"},"content":"                person2.toString(), this.relationshipDescriptor);","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"Emberlynn-Loo"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"DingBao-sys":34,"Bandov":1,"Emberlynn-Loo":20,"Tsenrae":13}},{"path":"src/main/java/seedu/address/model/person/relationship/RelationshipUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DingBao-sys"},"content":"package seedu.address.model.person.relationship;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"DingBao-sys"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"DingBao-sys"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"DingBao-sys"},"content":" * Represents a utility class for managing the relationships associated with a person.","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"DingBao-sys"},"content":" * Allows for adding, deleting, and checking for existing relationships.","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"DingBao-sys"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"DingBao-sys"},"content":"public class RelationshipUtil {","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"DingBao-sys"},"content":"    private ArrayList\u003cRelationship\u003e relationshipsTracker \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"DingBao-sys"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"DingBao-sys"},"content":"     * Adds a new relationship to the tracker.","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"DingBao-sys"},"content":"     * @param toAdd The relationship to be added.","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"DingBao-sys"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"DingBao-sys"},"content":"    public void addRelationship(Relationship toAdd) {","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"DingBao-sys"},"content":"        relationshipsTracker.add(toAdd);","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"DingBao-sys"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"DingBao-sys"},"content":"     * Deletes a specific relationship from the tracker.","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"DingBao-sys"},"content":"     * @param toDelete The relationship to be deleted.","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"DingBao-sys"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"DingBao-sys"},"content":"    public void deleteRelationship(Relationship toDelete) {","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"DingBao-sys"},"content":"        relationshipsTracker.remove(toDelete);","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"DingBao-sys"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"DingBao-sys"},"content":"     * Checks if a specific relationship exists in the tracker.","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"DingBao-sys"},"content":"     * @param toFind The relationship to find.","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"DingBao-sys"},"content":"     * @return true if the relationship exists, false otherwise.","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"DingBao-sys"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"DingBao-sys"},"content":"    public boolean hasRelationship(Relationship toFind) {","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"DingBao-sys"},"content":"        return !relationshipsTracker.isEmpty() \u0026\u0026 relationshipsTracker.contains(toFind);","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"Emberlynn-Loo"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"Emberlynn-Loo"},"content":"     * Checks if a specific relationship exists in the tracker.","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"Emberlynn-Loo"},"content":"     * @param toFind The relationship to find.","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"Emberlynn-Loo"},"content":"     * @return true if the relationship exists, false otherwise.","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"Emberlynn-Loo"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"Emberlynn-Loo"},"content":"    public boolean hasRelationshipWithDescriptor(Relationship toFind) {","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"Emberlynn-Loo"},"content":"        for (Relationship relationship : relationshipsTracker) {","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"Emberlynn-Loo"},"content":"            if ((relationship.getPerson1().equals(toFind.getPerson1()) \u0026\u0026 relationship.getPerson2()","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"Emberlynn-Loo"},"content":"                    .equals(toFind.getPerson2())","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"Emberlynn-Loo"},"content":"                    || (relationship.getPerson1().equals(toFind.getPerson2()) \u0026\u0026 relationship.getPerson2()","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"Emberlynn-Loo"},"content":"                            .equals(toFind.getPerson1()))) \u0026\u0026 relationship.getRoleDescriptor(","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"Emberlynn-Loo"},"content":"                            toFind.getPerson1()).equals(toFind.getRoleDescriptor(toFind.getPerson2()))) {","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"Emberlynn-Loo"},"content":"                return true;","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"Emberlynn-Loo"},"content":"            }","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"Emberlynn-Loo"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"Emberlynn-Loo"},"content":"        return false;","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"DingBao-sys"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"DingBao-sys"},"content":"     * Retrieves a string representation of an existing relationship in the tracker.","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"DingBao-sys"},"content":"     * @param toGet The relationship to retrieve.","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"DingBao-sys"},"content":"     * @return A string representation of the specified relationship if it exists.","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"DingBao-sys"},"content":"     * @throws IndexOutOfBoundsException if the relationship does not exist in the tracker.","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"DingBao-sys"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"DingBao-sys"},"content":"    public String getExistingRelationship(Relationship toGet) {","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"Emberlynn-Loo"},"content":"        for (Relationship relationship : relationshipsTracker) {","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"Emberlynn-Loo"},"content":"            if (relationship.equals(toGet)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"Emberlynn-Loo"},"content":"                return relationship.toString();","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"Emberlynn-Loo"},"content":"            }","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"DingBao-sys"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"Emberlynn-Loo"},"content":"        throw new IllegalArgumentException(\"Relationship does not exist.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"Tsenrae"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"Tsenrae"},"content":"     * Retrieves the list of relationships in the tracker.","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"Tsenrae"},"content":"     * @return The list of relationships in the tracker.","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"Tsenrae"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"Tsenrae"},"content":"    public ArrayList\u003cRelationship\u003e getRelationshipsTracker() {","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"Tsenrae"},"content":"        return relationshipsTracker;","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"DingBao-sys"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"DingBao-sys"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"DingBao-sys"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"DingBao-sys"},"content":"            return true;","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"DingBao-sys"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"DingBao-sys"},"content":"        if (!(o instanceof RelationshipUtil)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"DingBao-sys"},"content":"            return false;","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"DingBao-sys"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"DingBao-sys"},"content":"        RelationshipUtil other \u003d (RelationshipUtil) o;","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"DingBao-sys"},"content":"        return relationshipsTracker.equals(other.relationshipsTracker);","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"Tsenrae"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"Tsenrae"},"content":"    public String toString() {","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"Tsenrae"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"Tsenrae"},"content":"        for (Relationship relationship : relationshipsTracker) {","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"Tsenrae"},"content":"            sb.append(relationship.toString());","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"Tsenrae"},"content":"            sb.append(\"\\n\");","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"Tsenrae"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"Tsenrae"},"content":"        return sb.toString();","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"DingBao-sys"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"DingBao-sys":58,"Emberlynn-Loo":24,"Tsenrae":17}},{"path":"src/main/java/seedu/address/model/person/relationship/RoleBasedRelationship.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emberlynn-Loo"},"content":"package seedu.address.model.person.relationship;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Emberlynn-Loo"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"Emberlynn-Loo"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"Emberlynn-Loo"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"Emberlynn-Loo"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Emberlynn-Loo"},"content":" * Represents a relationship between two persons with roles.","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"Emberlynn-Loo"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"Emberlynn-Loo"},"content":"public class RoleBasedRelationship extends Relationship {","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"DingBao-sys"},"content":"    private Map\u003cUUID, String\u003e roles \u003d new HashMap\u003c\u003e(); // Map of person UUID to their role in the relationship","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"Emberlynn-Loo"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"Emberlynn-Loo"},"content":"     * Creates a new RoleBasedRelationship with the given UUIDs of the two persons.","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"Emberlynn-Loo"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"Emberlynn-Loo"},"content":"     * @param person1 The UUID of the first person in the relationship.","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"Emberlynn-Loo"},"content":"     * @param person2 The UUID of the second person in the relationship.","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"Emberlynn-Loo"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"DingBao-sys"},"content":"    public RoleBasedRelationship(UUID person1, UUID person2,","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"DingBao-sys"},"content":"                                 String relationDescriptor, String rolePerson1, String rolePerson2) {","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"DingBao-sys"},"content":"        super(person1, person2, relationDescriptor);","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"DingBao-sys"},"content":"        roles.put(person1, rolePerson1);","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"DingBao-sys"},"content":"        roles.put(person2, rolePerson2);","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"DingBao-sys"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"DingBao-sys"},"content":"    public String getRoleDescriptor(UUID targetPerson) {","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"DingBao-sys"},"content":"        if (!targetPerson.equals(super.getPerson1()) \u0026\u0026 !targetPerson.equals(super.getPerson2())) {","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"DingBao-sys"},"content":"            throw new IllegalArgumentException(\"This person is not in this relationship\");","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"Emberlynn-Loo"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"DingBao-sys"},"content":"        return roles.get(targetPerson);","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"DingBao-sys"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"DingBao-sys"},"content":"    public String toString() {","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"DingBao-sys"},"content":"        return String.format(\"%s\\n %s is %s, %s is %s\",","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"DingBao-sys"},"content":"                super.toString(), super.getPerson1().toString(), getRoleDescriptor(super.getPerson1()),","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"DingBao-sys"},"content":"                super.getPerson2().toString(), getRoleDescriptor(super.getPerson2()));","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"Emberlynn-Loo"},"content":"}","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"DingBao-sys":16,"Emberlynn-Loo":24,"Tsenrae":1}},{"path":"src/main/java/seedu/address/model/person/relationship/SpousesRelationship.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emberlynn-Loo"},"content":"package seedu.address.model.person.relationship;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Emberlynn-Loo"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"Emberlynn-Loo"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Emberlynn-Loo"},"content":" * Represents a friends relationship between two persons.","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"Emberlynn-Loo"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"DingBao-sys"},"content":"public class SpousesRelationship extends RoleBasedRelationship {","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"Emberlynn-Loo"},"content":"    public SpousesRelationship(UUID person1, UUID person2) {","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"DingBao-sys"},"content":"        super(person1, person2, \"family\", \"husband\", \"wife\");","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"Emberlynn-Loo"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"DingBao-sys":2,"Emberlynn-Loo":10}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedAttribute.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tsenrae"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"Tsenrae"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"Tsenrae"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"Tsenrae"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"Tsenrae"},"content":"import seedu.address.model.person.attribute.Attribute;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"Tsenrae"},"content":"import seedu.address.model.person.attribute.NameAttribute;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"Tsenrae"},"content":"import seedu.address.model.person.attribute.StringAttribute;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"Tsenrae"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"Tsenrae"},"content":" * Jackson-friendly version of {@link Attribute}.","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"Tsenrae"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"Tsenrae"},"content":"class JsonAdaptedAttribute {","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"Tsenrae"},"content":"    public final String value;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"Tsenrae"},"content":"    private final String name;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"Tsenrae"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"Tsenrae"},"content":"     * Constructs a {@code JsonAdaptedAttribute} with the given attribute details.","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"Tsenrae"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"Tsenrae"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"Tsenrae"},"content":"    public JsonAdaptedAttribute(@JsonProperty(\"name\") String name, @JsonProperty(\"value\") String value) {","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"Tsenrae"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"Tsenrae"},"content":"        this.value \u003d value;","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"Tsenrae"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"Tsenrae"},"content":"     * Converts a given {@code Attribute} into this class for Jackson use.","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"Tsenrae"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"Tsenrae"},"content":"    public JsonAdaptedAttribute(Attribute source) {","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"Tsenrae"},"content":"        this.name \u003d source.getName();","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"Tsenrae"},"content":"        this.value \u003d source.getValueAsString();","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"Tsenrae"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"Tsenrae"},"content":"     * Converts this Jackson-friendly adapted attribute object into the model\u0027s {@code Attribute} object.","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"Tsenrae"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"Tsenrae"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted attribute.","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"Tsenrae"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"Tsenrae"},"content":"    public Attribute toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"Tsenrae"},"content":"        if (name \u003d\u003d null || value \u003d\u003d null || name.isEmpty() || value.isEmpty()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"Tsenrae"},"content":"            throw new IllegalValueException(\"Invalid attribute type or value in JSON.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"Tsenrae"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"Tsenrae"},"content":"        if (name.equals(\"Name\") || name.equals(\"name\")) {","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"Tsenrae"},"content":"            return new NameAttribute(\"Name\", value);","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"Tsenrae"},"content":"        } else {","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"Tsenrae"},"content":"            return new StringAttribute(name, value);","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"Tsenrae"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"Tsenrae"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"Tsenrae":51}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPersonAttr.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tsenrae"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"Tsenrae"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"Tsenrae"},"content":"import java.util.List;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"Tsenrae"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"Tsenrae"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"Tsenrae"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"Tsenrae"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"Tsenrae"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"Tsenrae"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"Tsenrae"},"content":"import seedu.address.model.person.attribute.Attribute;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"Tsenrae"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"Tsenrae"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"Tsenrae"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"Tsenrae"},"content":"class JsonAdaptedPersonAttr {","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"Tsenrae"},"content":"    private final List\u003cJsonAdaptedAttribute\u003e attributes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"Tsenrae"},"content":"    private final String uuid;","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"Tsenrae"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"Tsenrae"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"Tsenrae"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"Tsenrae"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"Tsenrae"},"content":"    public JsonAdaptedPersonAttr(@JsonProperty(\"uuid\") String uuid,","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"Tsenrae"},"content":"                                 @JsonProperty(\"attributes\") List\u003cJsonAdaptedAttribute\u003e attributes) {","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"Tsenrae"},"content":"        if (attributes !\u003d null) {","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"Tsenrae"},"content":"            this.attributes.addAll(attributes);;","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"Tsenrae"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"Tsenrae"},"content":"        this.uuid \u003d uuid;","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"Tsenrae"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"Tsenrae"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"Tsenrae"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"Tsenrae"},"content":"    public JsonAdaptedPersonAttr(Person source) {","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"Tsenrae"},"content":"        attributes.addAll(source.getAttributes().stream()","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"Tsenrae"},"content":"                .map(JsonAdaptedAttribute::new)","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"Tsenrae"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"Tsenrae"},"content":"        this.uuid \u003d source.getUuidString();","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"Tsenrae"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"Tsenrae"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"Tsenrae"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"Tsenrae"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"Tsenrae"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"Tsenrae"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"Tsenrae"},"content":"        final List\u003cAttribute\u003e personAttributes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"Tsenrae"},"content":"        for (JsonAdaptedAttribute attribute : attributes) {","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"Tsenrae"},"content":"            personAttributes.add(attribute.toModelType());","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"Tsenrae"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"Tsenrae"},"content":"        return new Person(UUID.fromString(uuid), personAttributes.toArray(new Attribute[0]));","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"Tsenrae"},"content":"    public List\u003cJsonAdaptedAttribute\u003e getAttributes() {","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"Tsenrae"},"content":"        return attributes;","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"Tsenrae"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"Tsenrae":62}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedRelationship.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tsenrae"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"Tsenrae"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"Tsenrae"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"Tsenrae"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"Tsenrae"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"Tsenrae"},"content":"import seedu.address.model.person.relationship.Relationship;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"Tsenrae"},"content":"import seedu.address.model.person.relationship.RoleBasedRelationship;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"Tsenrae"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"Tsenrae"},"content":" * Jackson-friendly version of {@link Relationship}.","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"Tsenrae"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"Tsenrae"},"content":"public class JsonAdaptedRelationship {","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"Tsenrae"},"content":"    public final String person1;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"Tsenrae"},"content":"    public final String person2;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"Tsenrae"},"content":"    private final String relationshipDescriptor;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"Tsenrae"},"content":"    private final String rolePerson1;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"Tsenrae"},"content":"    private final String rolePerson2;","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"Tsenrae"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"Tsenrae"},"content":"     * Constructs a {@code JsonAdaptedRelationship} with the given relationship details.","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"Tsenrae"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"Tsenrae"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"Tsenrae"},"content":"    public JsonAdaptedRelationship(@JsonProperty(\"person1\") String person1,","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"Tsenrae"},"content":"                                   @JsonProperty(\"person2\") String person2,","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"Tsenrae"},"content":"                                   @JsonProperty(\"relationshipDescriptor\") String relationshipDescriptor,","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"Tsenrae"},"content":"                                   @JsonProperty(\"rolePerson1\") String rolePerson1,","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"Tsenrae"},"content":"                                   @JsonProperty(\"rolePerson2\") String rolePerson2) {","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"Tsenrae"},"content":"        this.person1 \u003d person1;","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"Tsenrae"},"content":"        this.person2 \u003d person2;","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"Tsenrae"},"content":"        this.relationshipDescriptor \u003d relationshipDescriptor;","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"Tsenrae"},"content":"        this.rolePerson1 \u003d rolePerson1;","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"Tsenrae"},"content":"        this.rolePerson2 \u003d rolePerson2;","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"Tsenrae"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"Tsenrae"},"content":"     * Converts a given {@code Relationship} into this class for Jackson use.","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"Tsenrae"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"Tsenrae"},"content":"    public JsonAdaptedRelationship(Relationship source) {","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"Tsenrae"},"content":"        this.person1 \u003d source.getPerson1().toString();","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"Tsenrae"},"content":"        this.person2 \u003d source.getPerson2().toString();","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"Tsenrae"},"content":"        this.relationshipDescriptor \u003d source.getRelationshipDescriptor();","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"Tsenrae"},"content":"        if (source instanceof RoleBasedRelationship) {","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"Tsenrae"},"content":"            RoleBasedRelationship roleBasedSource \u003d (RoleBasedRelationship) source;","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"Tsenrae"},"content":"            rolePerson1 \u003d roleBasedSource.getRoleDescriptor(source.getPerson1());","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"Tsenrae"},"content":"            rolePerson2 \u003d roleBasedSource.getRoleDescriptor(source.getPerson2());","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"Tsenrae"},"content":"        } else {","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"Tsenrae"},"content":"            rolePerson1 \u003d null;","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"Tsenrae"},"content":"            rolePerson2 \u003d null;","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"Tsenrae"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"Tsenrae"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"Tsenrae"},"content":"     * Converts this Jackson-friendly adapted relationship object into the model\u0027s {@code Relationship} object.","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"Tsenrae"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"Tsenrae"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted relationship.","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"Tsenrae"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"Tsenrae"},"content":"    public Relationship toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"Tsenrae"},"content":"        if (relationshipDescriptor \u003d\u003d null || relationshipDescriptor.isEmpty() || person1 \u003d\u003d null || person2 \u003d\u003d null) {","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"Tsenrae"},"content":"            throw new IllegalValueException(\"Invalid relationship type or value in JSON.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"Tsenrae"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"Tsenrae"},"content":"        if (rolePerson1 !\u003d null \u0026\u0026 rolePerson2 !\u003d null) {","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"Tsenrae"},"content":"            return new RoleBasedRelationship(UUID.fromString(person1),","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"Tsenrae"},"content":"                    UUID.fromString(person2), relationshipDescriptor, rolePerson1, rolePerson2);","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"Tsenrae"},"content":"        } else {","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"Tsenrae"},"content":"            return new Relationship(UUID.fromString(person1), UUID.fromString(person2), relationshipDescriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"Tsenrae"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"Tsenrae"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"Tsenrae":71}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"Tsenrae"},"content":"import seedu.address.model.person.relationship.Relationship;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"Tsenrae"},"content":"    private final List\u003cJsonAdaptedPersonAttr\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"Tsenrae"},"content":"    private final List\u003cJsonAdaptedRelationship\u003e relationships \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"Tsenrae"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPersonAttr\u003e persons,","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"Tsenrae"},"content":"                                       @JsonProperty(\"relationships\") List\u003cJsonAdaptedRelationship\u003e relationships) {","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"Tsenrae"},"content":"        if (relationships !\u003d null) {","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"Tsenrae"},"content":"            this.relationships.addAll(relationships);","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"Tsenrae"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"Tsenrae"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPersonAttr::new).collect(Collectors.toList()));","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"Tsenrae"},"content":"        relationships.addAll(","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"Tsenrae"},"content":"                source.getRelationshipList().stream().map(JsonAdaptedRelationship::new).collect(Collectors.toList()));","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"Tsenrae"},"content":"        for (JsonAdaptedPersonAttr jsonAdaptedPersonAttr : persons) {","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"Tsenrae"},"content":"            Person person \u003d jsonAdaptedPersonAttr.toModelType();","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"Tsenrae"},"content":"        for (JsonAdaptedRelationship jsonAdaptedRelationship : relationships) {","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"Tsenrae"},"content":"            Relationship relationship \u003d jsonAdaptedRelationship.toModelType();","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"Tsenrae"},"content":"            addressBook.addRelationship(relationship);","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"Tsenrae"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":55,"Tsenrae":17}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"    private Label uuid;","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"    private Label attributes;","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"Bandov"},"content":"        attributes.setText(displayAttributes());","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"Bandov"},"content":"        uuid.setText(person.getUuid().toString().substring(32, 36));","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"Bandov"},"content":"    private String displayAttributes() {","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"Bandov"},"content":"        return person.allAttributesAsString();","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"Bandov":9,"-":38}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"        \u003cLabel fx:id\u003d\"uuid\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"        \u003cLabel fx:id\u003d\"attributes\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Bandov":2,"-":31}},{"path":"src/test/java/seedu/address/logic/MessagesTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ReflectiveObsidian"},"content":"package seedu.address.logic;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"ReflectiveObsidian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"ReflectiveObsidian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"ReflectiveObsidian"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"ReflectiveObsidian"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"ReflectiveObsidian"},"content":"import seedu.address.model.person.attribute.Attribute;","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"ReflectiveObsidian"},"content":"class MessagesTest {","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void getErrorMessageForDuplicatePrefixes() {","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertEquals(Messages.MESSAGE_DUPLICATE_FIELDS + \"name\",","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"ReflectiveObsidian"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(new Prefix(\"name\")));","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void getErrorMessageForDuplicatePrefixes_assertDuplicatePrefixesLength() {","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertEquals(Messages.MESSAGE_DUPLICATE_FIELDS,","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"ReflectiveObsidian"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(new Prefix(\"\")));","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void format() {","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"ReflectiveObsidian"},"content":"        Person person \u003d new Person(new Attribute[0]);","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertEquals(\"Details:\\n\"","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"ReflectiveObsidian"},"content":"                + \"No details available\", Messages.format(person));","lastModifiedDate":"2024-03-22"},{"lineNumber":29,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":30,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":31,"author":{"gitId":"ReflectiveObsidian"},"content":"}","lastModifiedDate":"2024-03-22"},{"lineNumber":32,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"ReflectiveObsidian":32}},{"path":"src/test/java/seedu/address/logic/attribute/AddAttributeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bandov"},"content":"package seedu.address.logic.attribute;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"import seedu.address.logic.attributes.AddAttributeCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"public class AddAttributeCommandTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"    public void execute_null() {","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"        AddAttributeCommand addAttributeCommand \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"                new AddAttributeCommand(ALICE.getUuidString(), \"Name\", \"Alice\");","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"        assertThrows(NullPointerException.class, () -\u003e addAttributeCommand.execute(null));","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"    public void execute_pass() throws CommandException {","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"        ALICE.deleteAttribute(\"Name\");","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"        AddAttributeCommand addAttributeCommand \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"                new AddAttributeCommand(ALICE.getUuidString().substring(36 - 4), \"Name\", \"Alice\");","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"        addAttributeCommand.execute(model);","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"        assertNotNull(ALICE.getAttribute(\"Name\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"    public void execute_fail() {","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"        AddAttributeCommand addAttributeCommand \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"Bandov"},"content":"                new AddAttributeCommand(null, \"Name\", \"Alice\");","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"Bandov"},"content":"        assertThrows(NullPointerException.class, () -\u003e addAttributeCommand.execute(null));","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"Bandov"},"content":"    public void execute_fail2() {","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"Bandov"},"content":"        AddAttributeCommand addAttributeCommand \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"Bandov"},"content":"                new AddAttributeCommand(ALICE.getUuidString(), null, \"Alice\");","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"Bandov"},"content":"        assertThrows(NullPointerException.class, () -\u003e addAttributeCommand.execute(model));","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"Bandov"},"content":"    public void execute_fail3() {","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"Bandov"},"content":"        AddAttributeCommand addAttributeCommand \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"Bandov"},"content":"                new AddAttributeCommand(ALICE.getUuidString(), \"Name\", null);","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"Bandov"},"content":"        assertThrows(NullPointerException.class, () -\u003e addAttributeCommand.execute(model));","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"Bandov":56}},{"path":"src/test/java/seedu/address/logic/attribute/DeleteAttributeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bandov"},"content":"package seedu.address.logic.attribute;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"import seedu.address.logic.attributes.DeleteAttributeCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"public class DeleteAttributeCommandTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"    public void execute_null() {","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"        DeleteAttributeCommand deleteAttributeCommand \u003d new DeleteAttributeCommand(ALICE.getUuidString(), \"Name\");","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"        assertThrows(NullPointerException.class, () -\u003e deleteAttributeCommand.execute(null));","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"        ALICE.setAttribute(\"Name\", \"Alice Pauline\");","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"    public void execute_fail() {","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"        DeleteAttributeCommand deleteAttributeCommand \u003d new DeleteAttributeCommand(null, \"Name\");","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"        assertThrows(NullPointerException.class, () -\u003e deleteAttributeCommand.execute(model));","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"    public void execute_fail2() {","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"        DeleteAttributeCommand deleteAttributeCommand \u003d new DeleteAttributeCommand(ALICE.getUuidString(), null);","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"        assertThrows(NullPointerException.class, () -\u003e deleteAttributeCommand.execute(model));","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"Bandov"},"content":"    public void execute_pass() throws CommandException {","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"Bandov"},"content":"        DeleteAttributeCommand deleteAttributeCommand \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"Bandov"},"content":"                new DeleteAttributeCommand(ALICE.getUuidString().substring(32, 36), \"Address\");","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"Bandov"},"content":"        deleteAttributeCommand.execute(model);","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"Bandov"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e ALICE.getAttribute(\"Address\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"Bandov"},"content":"    public void execute_noAttribute() {","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"Bandov"},"content":"        DeleteAttributeCommand deleteAttributeCommand \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"Bandov"},"content":"                new DeleteAttributeCommand(ALICE.getUuidString().substring(32, 36), \"Dog\");","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"Bandov"},"content":"        assertThrows(CommandException.class, () -\u003e deleteAttributeCommand.execute(model));","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"Bandov"},"content":"    public void execute_noPerson() {","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"Bandov"},"content":"        DeleteAttributeCommand deleteAttributeCommand \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"Bandov"},"content":"                new DeleteAttributeCommand(\"1234\", \"Name\");","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"Bandov"},"content":"        assertThrows(Exception.class, () -\u003e deleteAttributeCommand.execute(model));","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"Bandov":59}},{"path":"src/test/java/seedu/address/logic/attribute/PersonAttributeCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bandov"},"content":"package seedu.address.logic.attribute;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"import seedu.address.logic.attributes.AddAttributeCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"import seedu.address.logic.attributes.DeleteAttributeCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"import seedu.address.logic.attributes.PersonAttributeCommandParser;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"class PersonAttributeCommandParserTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"    private final PersonAttributeCommandParser parser \u003d new PersonAttributeCommandParser();","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"    void parse_validAddCommand_returnsAddAttributeCommand() throws ParseException {","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"        String userInput \u003d \"addAttribute \\\\uuid 12345 \\\\nickname Johnny\";","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"        Command command \u003d parser.parse(userInput);","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"        assertTrue(command instanceof AddAttributeCommand);","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"    void parse_validDeleteCommand_returnsDeleteAttributeCommand() throws ParseException {","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"        String userInput \u003d \"deleteAttribute \\\\uuid 12345 \\\\nickname\";","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"        Command command \u003d parser.parse(userInput);","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"        assertTrue(command instanceof DeleteAttributeCommand);","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"    void parse_incompleteCommand_throwsParseException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"        String incompleteCommand \u003d \"addAttribute 12345\";","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(incompleteCommand));","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"Bandov"},"content":"    void parse_unknownCommand_throwsParseException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"Bandov"},"content":"        String unknownCommand \u003d \"modifyAttribute 12345 nickname Johnny\";","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"Bandov"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(unknownCommand));","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"Bandov":44}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"ReflectiveObsidian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"ReflectiveObsidian"},"content":"import seedu.address.model.person.attribute.Attribute;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"ReflectiveObsidian"},"content":"        Person validPerson \u003d new Person(new Attribute[0]);","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertTrue(expectedModel.hasPerson(validPerson));","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"ReflectiveObsidian":5,"-":33}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"ReflectiveObsidian"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"ReflectiveObsidian"},"content":"import seedu.address.model.person.attribute.Attribute;","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"DingBao-sys"},"content":"import seedu.address.model.person.relationship.Relationship;","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void execute_nullModel_throwsNullPointerException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"ReflectiveObsidian"},"content":"        AddCommand addCommand \u003d new AddCommand(new HashMap\u003c\u003e());","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertThrows(NullPointerException.class, () -\u003e addCommand.execute(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"ReflectiveObsidian"},"content":"        Person validPerson \u003d new Person(new Attribute[0]);","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"ReflectiveObsidian"},"content":"        CommandResult commandResult \u003d new AddCommand(new HashMap\u003c\u003e()).execute(modelStub);","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"ReflectiveObsidian"},"content":"        HashMap aliceHashMap \u003d new HashMap();","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"ReflectiveObsidian"},"content":"        HashMap bobHashMap \u003d new HashMap();","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"ReflectiveObsidian"},"content":"        aliceHashMap.put(\"Name\", \"Alice\");","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"ReflectiveObsidian"},"content":"        bobHashMap.put(\"Name\", \"Bob\");","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"ReflectiveObsidian"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(aliceHashMap);","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"ReflectiveObsidian"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bobHashMap);","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"ReflectiveObsidian"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(aliceHashMap);","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"ReflectiveObsidian"},"content":"        HashMap\u003cString, String\u003e aliceHashMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"ReflectiveObsidian"},"content":"        aliceHashMap.put(\"Name\", \"Alice\");","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"ReflectiveObsidian"},"content":"        AddCommand addCommand \u003d new AddCommand(aliceHashMap);","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"ReflectiveObsidian"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{attributeMap\u003d{Name\u003dAlice}}\";","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"Emberlynn-Loo"},"content":"    public class ModelStub implements Model {","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":162,"author":{"gitId":"Bandov"},"content":"        @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":163,"author":{"gitId":"Bandov"},"content":"        public void deleteAttribute(String uuid, String attributeName) {","lastModifiedDate":"2024-03-20"},{"lineNumber":164,"author":{"gitId":"Bandov"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":165,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":166,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":167,"author":{"gitId":"Bandov"},"content":"        @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":168,"author":{"gitId":"DingBao-sys"},"content":"        public boolean hasRelationship(Relationship target) {","lastModifiedDate":"2024-03-20"},{"lineNumber":169,"author":{"gitId":"Bandov"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":170,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":171,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":172,"author":{"gitId":"Emberlynn-Loo"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":173,"author":{"gitId":"Emberlynn-Loo"},"content":"        public boolean hasRelationshipWithDescriptor(Relationship target) {","lastModifiedDate":"2024-03-21"},{"lineNumber":174,"author":{"gitId":"Emberlynn-Loo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":175,"author":{"gitId":"Emberlynn-Loo"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":176,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":177,"author":{"gitId":"Bandov"},"content":"        @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":178,"author":{"gitId":"DingBao-sys"},"content":"        public void addRelationship(Relationship target) {","lastModifiedDate":"2024-03-20"},{"lineNumber":179,"author":{"gitId":"Bandov"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":180,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":181,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":182,"author":{"gitId":"Bandov"},"content":"        @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":183,"author":{"gitId":"DingBao-sys"},"content":"        public void deleteRelationship(Relationship toDelete) {","lastModifiedDate":"2024-03-20"},{"lineNumber":184,"author":{"gitId":"DingBao-sys"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":185,"author":{"gitId":"DingBao-sys"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":186,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":187,"author":{"gitId":"DingBao-sys"},"content":"        @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":188,"author":{"gitId":"DingBao-sys"},"content":"        public String getExistingRelationship(Relationship toGet) {","lastModifiedDate":"2024-03-20"},{"lineNumber":189,"author":{"gitId":"DingBao-sys"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":190,"author":{"gitId":"DingBao-sys"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":191,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":192,"author":{"gitId":"DingBao-sys"},"content":"        @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":193,"author":{"gitId":"DingBao-sys"},"content":"        public Person getPersonByUuid(UUID id) {","lastModifiedDate":"2024-03-20"},{"lineNumber":194,"author":{"gitId":"DingBao-sys"},"content":"            throw new AssertionError(\"this method should not be called\");","lastModifiedDate":"2024-03-20"},{"lineNumber":195,"author":{"gitId":"DingBao-sys"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":196,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":197,"author":{"gitId":"Bandov"},"content":"        public boolean hasAttribute(String uuidString, String attributeName) {","lastModifiedDate":"2024-03-20"},{"lineNumber":198,"author":{"gitId":"Bandov"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":199,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":200,"author":{"gitId":"DingBao-sys"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":201,"author":{"gitId":"DingBao-sys"},"content":"        public UUID getFullUuid(String digits) {","lastModifiedDate":"2024-03-21"},{"lineNumber":202,"author":{"gitId":"DingBao-sys"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2024-03-21"},{"lineNumber":203,"author":{"gitId":"DingBao-sys"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":204,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"ReflectiveObsidian":20,"DingBao-sys":20,"Bandov":20,"-":182,"Emberlynn-Loo":6,"Tsenrae":1}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"ReflectiveObsidian"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"ReflectiveObsidian"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test void parse_emptyArgs_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"ReflectiveObsidian"},"content":"        HashMap\u003cString, String\u003e expectedAttributeMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertParseSuccess(parser, \"add\", new AddCommand(expectedAttributeMap));","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void parse_singleAttribute_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"ReflectiveObsidian"},"content":"        HashMap\u003cString, String\u003e expectedAttributeMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"ReflectiveObsidian"},"content":"        expectedAttributeMap.put(\"Name\", VALID_NAME_BOB);","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":30,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertParseSuccess(parser, \"add /Name \" + VALID_NAME_BOB, new AddCommand(expectedAttributeMap));","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void parse_multipleAttributes_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"ReflectiveObsidian"},"content":"        HashMap\u003cString, String\u003e expectedAttributeMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"ReflectiveObsidian"},"content":"        expectedAttributeMap.put(\"Name\", VALID_NAME_BOB);","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"ReflectiveObsidian"},"content":"        expectedAttributeMap.put(\"Phone\", VALID_PHONE_BOB);","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"ReflectiveObsidian"},"content":"        expectedAttributeMap.put(\"Email\", VALID_EMAIL_BOB);","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"ReflectiveObsidian"},"content":"        expectedAttributeMap.put(\"Address\", VALID_ADDRESS_BOB);","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"ReflectiveObsidian"},"content":"        expectedAttributeMap.put(\"Tag\", VALID_TAG_FRIEND);","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertParseSuccess(parser, \"add /Name \" + VALID_NAME_BOB + \" /Phone \" + VALID_PHONE_BOB + \" /Email \"","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"ReflectiveObsidian"},"content":"                + VALID_EMAIL_BOB + \" /Address \" + VALID_ADDRESS_BOB + \" /Tag \"","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"ReflectiveObsidian"},"content":"                + VALID_TAG_FRIEND, new AddCommand(expectedAttributeMap));","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void parse_incompleteAttribute_parseException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"ReflectiveObsidian"},"content":"        String command \u003d \"add /Name\";","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"ReflectiveObsidian"},"content":"        try {","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"ReflectiveObsidian"},"content":"            parser.parse(command);","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"ReflectiveObsidian"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"ReflectiveObsidian"},"content":"            assert e.getMessage().equals(\"Invalid command format! \\n\" + AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"ReflectiveObsidian":28,"-":28}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"ReflectiveObsidian"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"import seedu.address.logic.attributes.AddAttributeCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"import seedu.address.logic.attributes.DeleteAttributeCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.logic.relationship.DeleteRelationshipCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.logic.relationship.EditRelationshipCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"ReflectiveObsidian"},"content":"import seedu.address.model.person.attribute.Attribute;","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"ReflectiveObsidian"},"content":"import seedu.address.model.person.attribute.NameAttribute;","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"ReflectiveObsidian"},"content":"        Person person \u003d new Person(new Attribute[0]);","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"ReflectiveObsidian"},"content":"        person.updateAttribute(new NameAttribute(\"Name\", \"Amy Bee\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"ReflectiveObsidian"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"ReflectiveObsidian"},"content":"                AddCommand.COMMAND_WORD","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"ReflectiveObsidian"},"content":"                        + \" /Name Amy Bee\");","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"ReflectiveObsidian"},"content":"        HashMap\u003cString, String\u003e attributes \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"ReflectiveObsidian"},"content":"        attributes.put(\"Name\", \"Amy Bee\");","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertEquals(new AddCommand(attributes), command);","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"Bandov"},"content":"    public void parseCommand_addAttribute() throws Exception {","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"Bandov"},"content":"        String userInput \u003d \"addAttribute \\\\uuid 4000 \\\\name John\";","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"Bandov"},"content":"        Command command \u003d parser.parseCommand(userInput);","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"Bandov"},"content":"        assertTrue(command instanceof AddAttributeCommand);","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"Bandov"},"content":"    public void parseCommand_delAttribute() throws Exception {","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"Bandov"},"content":"        String userInput \u003d \"deleteAttribute \\\\uuid 4000 \\\\name John\";","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"Bandov"},"content":"        Command command \u003d parser.parseCommand(userInput);","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"Bandov"},"content":"        assertTrue(command instanceof DeleteAttributeCommand);","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":114,"author":{"gitId":"Bandov"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, ()","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"Bandov"},"content":"                -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":118,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":119,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void parseCommand_editRelationship() throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"Emberlynn-Loo"},"content":"        String userInput \u003d \"editRelation 1234 5678 family friend\";","lastModifiedDate":"2024-03-21"},{"lineNumber":121,"author":{"gitId":"Emberlynn-Loo"},"content":"        Command command \u003d parser.parseCommand(userInput);","lastModifiedDate":"2024-03-21"},{"lineNumber":122,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertTrue(command instanceof EditRelationshipCommand);","lastModifiedDate":"2024-03-21"},{"lineNumber":123,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":124,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":125,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":126,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void parseCommand_deleteRelationship() throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":127,"author":{"gitId":"Emberlynn-Loo"},"content":"        String userInput \u003d \"deleteRelation 1234 5678 family\";","lastModifiedDate":"2024-03-21"},{"lineNumber":128,"author":{"gitId":"Emberlynn-Loo"},"content":"        Command command \u003d parser.parseCommand(userInput);","lastModifiedDate":"2024-03-21"},{"lineNumber":129,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertTrue(command instanceof DeleteRelationshipCommand);","lastModifiedDate":"2024-03-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"ReflectiveObsidian":11,"Bandov":21,"-":84,"Emberlynn-Loo":15}},{"path":"src/test/java/seedu/address/logic/parser/ArgumentMultimapTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ReflectiveObsidian"},"content":"package seedu.address.logic;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"ReflectiveObsidian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"ReflectiveObsidian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"ReflectiveObsidian"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"ReflectiveObsidian"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"ReflectiveObsidian"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"ReflectiveObsidian"},"content":"class ArgumentMultimapTest {","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void verifyNoDuplicatePrefixesFor_duplicate_exception() {","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"ReflectiveObsidian"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"ReflectiveObsidian"},"content":"        Prefix prefix \u003d new Prefix(\"p/\");","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"ReflectiveObsidian"},"content":"        try {","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"ReflectiveObsidian"},"content":"            argMultimap.verifyNoDuplicatePrefixesFor(new Prefix[] {prefix, prefix});","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"ReflectiveObsidian"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"ReflectiveObsidian"},"content":"            assertTrue(e instanceof ParseException);","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void verifyNoDuplicatePrefixesFor_noDuplicate_noException() {","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"ReflectiveObsidian"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"ReflectiveObsidian"},"content":"        Prefix prefix \u003d new Prefix(\"p/\");","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"ReflectiveObsidian"},"content":"        try {","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"ReflectiveObsidian"},"content":"            argMultimap.verifyNoDuplicatePrefixesFor(new Prefix[] {prefix});","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"ReflectiveObsidian"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2024-03-22"},{"lineNumber":29,"author":{"gitId":"ReflectiveObsidian"},"content":"            assertTrue(false);","lastModifiedDate":"2024-03-22"},{"lineNumber":30,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":31,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":32,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":33,"author":{"gitId":"ReflectiveObsidian"},"content":"}","lastModifiedDate":"2024-03-22"},{"lineNumber":34,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"ReflectiveObsidian":34}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"DingBao-sys"},"content":"    private static final String INVALID_UUID_1 \u003d \"?909\";","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"DingBao-sys"},"content":"    private static final String INVALID_UUID_2 \u003d \"99990\";","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"DingBao-sys"},"content":"    private static final String VALID_UUID_1 \u003d \"789d\";","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"DingBao-sys"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":200,"author":{"gitId":"DingBao-sys"},"content":"    public void parseUuid_invalidValue1_throwsParseException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":201,"author":{"gitId":"DingBao-sys"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseUuid(INVALID_UUID_1));","lastModifiedDate":"2024-03-21"},{"lineNumber":202,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":203,"author":{"gitId":"DingBao-sys"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":204,"author":{"gitId":"DingBao-sys"},"content":"    public void parseUuid_invalidValue2_throwsParseException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":205,"author":{"gitId":"DingBao-sys"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseUuid(INVALID_UUID_2));","lastModifiedDate":"2024-03-21"},{"lineNumber":206,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":207,"author":{"gitId":"DingBao-sys"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":208,"author":{"gitId":"DingBao-sys"},"content":"    public void parseUuid_validValue_returnsUuid() throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":209,"author":{"gitId":"DingBao-sys"},"content":"        String expected \u003d VALID_UUID_1;","lastModifiedDate":"2024-03-21"},{"lineNumber":210,"author":{"gitId":"DingBao-sys"},"content":"        String test \u003d ParserUtil.parseUuid(expected);","lastModifiedDate":"2024-03-21"},{"lineNumber":211,"author":{"gitId":"DingBao-sys"},"content":"        assertEquals(expected, test);","lastModifiedDate":"2024-03-21"},{"lineNumber":212,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"DingBao-sys":17,"-":196}},{"path":"src/test/java/seedu/address/logic/relationship/AddRelationshipCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DingBao-sys"},"content":"package seedu.address.logic.relationship;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"DingBao-sys"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"DingBao-sys"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"DingBao-sys"},"content":"import static seedu.address.testutil.TypicalPersonsUuid.getTypicalAddressBook;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"DingBao-sys"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"DingBao-sys"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"DingBao-sys"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"DingBao-sys"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"DingBao-sys"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"DingBao-sys"},"content":"class AddRelationshipCommandParserTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"DingBao-sys"},"content":"    private Model model;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"DingBao-sys"},"content":"    private AddRelationshipCommandParser parser \u003d new AddRelationshipCommandParser();","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"DingBao-sys"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"DingBao-sys"},"content":"    void setUp() {","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"DingBao-sys"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"DingBao-sys"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"DingBao-sys"},"content":"    void parse_validInput_success() throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"DingBao-sys"},"content":"        String userInput \u003d \"0001 0003 family\";","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"DingBao-sys"},"content":"        AddRelationshipCommand expected \u003d new AddRelationshipCommand(\"0001\", \"0003\", \"family\");","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"DingBao-sys"},"content":"        assertParseSuccess(parser, userInput, expected);","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"DingBao-sys"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"DingBao-sys"},"content":"    void parseInvalidInput_throwsParseException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"DingBao-sys"},"content":"        String userInput \u003d \"0001 19000 family\";","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"DingBao-sys"},"content":"        assertParseFailure(parser, userInput, \"The UUID provided is invalid.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"DingBao-sys"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"DingBao-sys"},"content":"    void parse_invalidInputMissingParts_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"DingBao-sys"},"content":"        String userInput \u003d \"0001 family\";","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertParseFailure(parser, userInput, \"Invalid command format! \\n%1$s\");","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"DingBao-sys"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"DingBao-sys":37,"Emberlynn-Loo":1}},{"path":"src/test/java/seedu/address/logic/relationship/AddRelationshipCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tsenrae"},"content":"package seedu.address.logic.relationship;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"DingBao-sys"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"DingBao-sys"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"DingBao-sys"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"DingBao-sys"},"content":"import static seedu.address.testutil.TypicalPersonsUuid.getTypicalAddressBook;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"DingBao-sys"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"Tsenrae"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"Tsenrae"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"DingBao-sys"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"DingBao-sys"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"DingBao-sys"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"DingBao-sys"},"content":"import seedu.address.model.person.relationship.Relationship;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"Tsenrae"},"content":"class AddRelationshipCommandTest {","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"DingBao-sys"},"content":"    private Model model;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"DingBao-sys"},"content":"    private Model expectedModel;","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"Tsenrae"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"Tsenrae"},"content":"    void setUp() {","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"DingBao-sys"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"DingBao-sys"},"content":"        expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"Tsenrae"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"DingBao-sys"},"content":"    void execute_validInput_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"DingBao-sys"},"content":"        String testOriginUuid \u003d \"0001\";","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"DingBao-sys"},"content":"        String testTargetUuid \u003d \"0002\";","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"DingBao-sys"},"content":"        String relationshipDescriptor \u003d \"family\";","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"DingBao-sys"},"content":"        AddRelationshipCommand addRelationshipCommand \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"DingBao-sys"},"content":"                new AddRelationshipCommand(testOriginUuid, testTargetUuid, relationshipDescriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"DingBao-sys"},"content":"        String expectedMessage \u003d \"Add success\";","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"DingBao-sys"},"content":"        UUID person1Uuid \u003d UUID.fromString(\"00000000-0000-0000-0000-000000000001\");","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"DingBao-sys"},"content":"        UUID person2Uuid \u003d UUID.fromString(\"00000000-0000-0000-0000-000000000002\");","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"DingBao-sys"},"content":"        String familyRelationshipDescriptor \u003d \"family\";","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"DingBao-sys"},"content":"        expectedModel.addRelationship(","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"DingBao-sys"},"content":"                new Relationship(person1Uuid, person2Uuid, familyRelationshipDescriptor));","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"DingBao-sys"},"content":"        assertCommandSuccess(addRelationshipCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"Tsenrae"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"DingBao-sys"},"content":"    void testExecute_duplicateInputThrowsException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"DingBao-sys"},"content":"        String testOriginUuid \u003d \"0001\";","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"DingBao-sys"},"content":"        String testTargetUuid \u003d \"0001\";","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"DingBao-sys"},"content":"        String relationshipDescriptor \u003d \"family\";","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"DingBao-sys"},"content":"        AddRelationshipCommand addRelationshipCommand \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"DingBao-sys"},"content":"                new AddRelationshipCommand(testOriginUuid, testTargetUuid, relationshipDescriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"DingBao-sys"},"content":"        assertCommandFailure(addRelationshipCommand, model,","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"DingBao-sys"},"content":"                \"Relationships must be between 2 different people\");","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"Tsenrae"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"DingBao-sys"},"content":"    void testExecute_invalidUuidInputThrowsException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"DingBao-sys"},"content":"        String testOriginUuid \u003d \"0001\";","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"DingBao-sys"},"content":"        String testTargetUuid \u003d \"0019\";","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"DingBao-sys"},"content":"        String relationshipDescriptor \u003d \"family\";","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"DingBao-sys"},"content":"        AddRelationshipCommand addRelationshipCommand \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"DingBao-sys"},"content":"                new AddRelationshipCommand(testOriginUuid, testTargetUuid, relationshipDescriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"DingBao-sys"},"content":"        assertCommandFailure(addRelationshipCommand, model,","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"DingBao-sys"},"content":"                \"The UUID provided is invalid.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"DingBao-sys"},"content":"    @Test","lastModifiedDate":"2024-03-22"},{"lineNumber":66,"author":{"gitId":"DingBao-sys"},"content":"    void testExecuteAddingExistingRelationshipThrowsException() {","lastModifiedDate":"2024-03-22"},{"lineNumber":67,"author":{"gitId":"DingBao-sys"},"content":"        String testOriginUuid \u003d \"0001\";","lastModifiedDate":"2024-03-22"},{"lineNumber":68,"author":{"gitId":"DingBao-sys"},"content":"        String testTargetUuid \u003d \"0002\";","lastModifiedDate":"2024-03-22"},{"lineNumber":69,"author":{"gitId":"DingBao-sys"},"content":"        String relationshipDescriptor \u003d \"family\";","lastModifiedDate":"2024-03-22"},{"lineNumber":70,"author":{"gitId":"DingBao-sys"},"content":"        AddRelationshipCommand addRelationshipCommand \u003d","lastModifiedDate":"2024-03-22"},{"lineNumber":71,"author":{"gitId":"DingBao-sys"},"content":"                new AddRelationshipCommand(testOriginUuid, testTargetUuid, relationshipDescriptor);","lastModifiedDate":"2024-03-22"},{"lineNumber":72,"author":{"gitId":"DingBao-sys"},"content":"        UUID person1Uuid \u003d UUID.fromString(\"00000000-0000-0000-0000-000000000001\");","lastModifiedDate":"2024-03-22"},{"lineNumber":73,"author":{"gitId":"DingBao-sys"},"content":"        UUID person2Uuid \u003d UUID.fromString(\"00000000-0000-0000-0000-000000000002\");","lastModifiedDate":"2024-03-22"},{"lineNumber":74,"author":{"gitId":"DingBao-sys"},"content":"        String familyRelationshipDescriptor \u003d \"family\";","lastModifiedDate":"2024-03-22"},{"lineNumber":75,"author":{"gitId":"DingBao-sys"},"content":"        model.addRelationship(new Relationship(person1Uuid, person2Uuid, familyRelationshipDescriptor));","lastModifiedDate":"2024-03-22"},{"lineNumber":76,"author":{"gitId":"DingBao-sys"},"content":"        assertCommandFailure(addRelationshipCommand, model,","lastModifiedDate":"2024-03-22"},{"lineNumber":77,"author":{"gitId":"DingBao-sys"},"content":"                \"Sorry, 00000000-0000-0000-0000-000000000001 and 00000000-0000-0000-0000-000000000002 are family\");","lastModifiedDate":"2024-03-22"},{"lineNumber":78,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":79,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"DingBao-sys"},"content":"    @Test","lastModifiedDate":"2024-03-22"},{"lineNumber":81,"author":{"gitId":"DingBao-sys"},"content":"    void testExecuteAddInvalidRelationshipDescriptorThrowsException() {","lastModifiedDate":"2024-03-22"},{"lineNumber":82,"author":{"gitId":"DingBao-sys"},"content":"        String testOriginUuid \u003d \"0001\";","lastModifiedDate":"2024-03-22"},{"lineNumber":83,"author":{"gitId":"DingBao-sys"},"content":"        String testTargetUuid \u003d \"0002\";","lastModifiedDate":"2024-03-22"},{"lineNumber":84,"author":{"gitId":"DingBao-sys"},"content":"        String relationshipDescriptor \u003d \"spouse\";","lastModifiedDate":"2024-03-22"},{"lineNumber":85,"author":{"gitId":"DingBao-sys"},"content":"        AddRelationshipCommand addRelationshipCommand \u003d","lastModifiedDate":"2024-03-22"},{"lineNumber":86,"author":{"gitId":"DingBao-sys"},"content":"                new AddRelationshipCommand(testOriginUuid, testTargetUuid, relationshipDescriptor);","lastModifiedDate":"2024-03-22"},{"lineNumber":87,"author":{"gitId":"DingBao-sys"},"content":"        assertCommandFailure(addRelationshipCommand, model, \"Invalid Relationship type\");","lastModifiedDate":"2024-03-22"},{"lineNumber":88,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":89,"author":{"gitId":"DingBao-sys"},"content":"    @Test","lastModifiedDate":"2024-03-22"},{"lineNumber":90,"author":{"gitId":"DingBao-sys"},"content":"    void testEqualsMethodWithSameArguments() {","lastModifiedDate":"2024-03-22"},{"lineNumber":91,"author":{"gitId":"DingBao-sys"},"content":"        String testOriginUuid \u003d \"0001\";","lastModifiedDate":"2024-03-22"},{"lineNumber":92,"author":{"gitId":"DingBao-sys"},"content":"        String testTargetUuid \u003d \"0002\";","lastModifiedDate":"2024-03-22"},{"lineNumber":93,"author":{"gitId":"DingBao-sys"},"content":"        String relationshipDescriptor \u003d \"family\";","lastModifiedDate":"2024-03-22"},{"lineNumber":94,"author":{"gitId":"DingBao-sys"},"content":"        AddRelationshipCommand test1 \u003d","lastModifiedDate":"2024-03-22"},{"lineNumber":95,"author":{"gitId":"DingBao-sys"},"content":"                new AddRelationshipCommand(testOriginUuid, testTargetUuid, relationshipDescriptor);","lastModifiedDate":"2024-03-22"},{"lineNumber":96,"author":{"gitId":"DingBao-sys"},"content":"        AddRelationshipCommand test2 \u003d","lastModifiedDate":"2024-03-22"},{"lineNumber":97,"author":{"gitId":"DingBao-sys"},"content":"                new AddRelationshipCommand(testOriginUuid, testTargetUuid, relationshipDescriptor);","lastModifiedDate":"2024-03-22"},{"lineNumber":98,"author":{"gitId":"DingBao-sys"},"content":"        assertEquals(test1.equals(test2), true);","lastModifiedDate":"2024-03-22"},{"lineNumber":99,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":100,"author":{"gitId":"DingBao-sys"},"content":"    @Test","lastModifiedDate":"2024-03-22"},{"lineNumber":101,"author":{"gitId":"DingBao-sys"},"content":"    void testEqualsMethodWithNotAddRelationshipCommandInstance() {","lastModifiedDate":"2024-03-22"},{"lineNumber":102,"author":{"gitId":"DingBao-sys"},"content":"        String testOriginUuid \u003d \"0001\";","lastModifiedDate":"2024-03-22"},{"lineNumber":103,"author":{"gitId":"DingBao-sys"},"content":"        String testTargetUuid \u003d \"0002\";","lastModifiedDate":"2024-03-22"},{"lineNumber":104,"author":{"gitId":"DingBao-sys"},"content":"        String relationshipDescriptor \u003d \"family\";","lastModifiedDate":"2024-03-22"},{"lineNumber":105,"author":{"gitId":"DingBao-sys"},"content":"        AddRelationshipCommand test1 \u003d","lastModifiedDate":"2024-03-22"},{"lineNumber":106,"author":{"gitId":"DingBao-sys"},"content":"                new AddRelationshipCommand(testOriginUuid, testTargetUuid, relationshipDescriptor);","lastModifiedDate":"2024-03-22"},{"lineNumber":107,"author":{"gitId":"DingBao-sys"},"content":"        String test2 \u003d \"test\";","lastModifiedDate":"2024-03-22"},{"lineNumber":108,"author":{"gitId":"DingBao-sys"},"content":"        assertEquals(test1.equals(test2), false);","lastModifiedDate":"2024-03-22"},{"lineNumber":109,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":110,"author":{"gitId":"DingBao-sys"},"content":"    @Test","lastModifiedDate":"2024-03-22"},{"lineNumber":111,"author":{"gitId":"DingBao-sys"},"content":"    void testEqualsMethodWithSameInstance() {","lastModifiedDate":"2024-03-22"},{"lineNumber":112,"author":{"gitId":"DingBao-sys"},"content":"        String testOriginUuid \u003d \"0001\";","lastModifiedDate":"2024-03-22"},{"lineNumber":113,"author":{"gitId":"DingBao-sys"},"content":"        String testTargetUuid \u003d \"0002\";","lastModifiedDate":"2024-03-22"},{"lineNumber":114,"author":{"gitId":"DingBao-sys"},"content":"        String relationshipDescriptor \u003d \"family\";","lastModifiedDate":"2024-03-22"},{"lineNumber":115,"author":{"gitId":"DingBao-sys"},"content":"        AddRelationshipCommand test1 \u003d","lastModifiedDate":"2024-03-22"},{"lineNumber":116,"author":{"gitId":"DingBao-sys"},"content":"                new AddRelationshipCommand(testOriginUuid, testTargetUuid, relationshipDescriptor);","lastModifiedDate":"2024-03-22"},{"lineNumber":117,"author":{"gitId":"DingBao-sys"},"content":"        assertEquals(test1.equals(test1), true);","lastModifiedDate":"2024-03-22"},{"lineNumber":118,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":119,"author":{"gitId":"DingBao-sys"},"content":"}","lastModifiedDate":"2024-03-22"},{"lineNumber":120,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":121,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"DingBao-sys":102,"Tsenrae":19}},{"path":"src/test/java/seedu/address/logic/relationship/DeleteRelationshipCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DingBao-sys"},"content":"//package seedu.address.logic.relationship;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"DingBao-sys"},"content":"//import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"DingBao-sys"},"content":"//import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"DingBao-sys"},"content":"//import java.util.HashMap;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"DingBao-sys"},"content":"//import java.util.Map;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"DingBao-sys"},"content":"//import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"DingBao-sys"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"DingBao-sys"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"DingBao-sys"},"content":"//import seedu.address.model.person.attribute.Attribute;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"DingBao-sys"},"content":"//import seedu.address.model.person.attribute.NameAttribute;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"DingBao-sys"},"content":"//import seedu.address.model.person.relationship.BioParentsRelationship;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"DingBao-sys"},"content":"//import seedu.address.model.person.relationship.RelationshipUtil;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"DingBao-sys"},"content":"//class DeleteRelationshipCommandParserTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"DingBao-sys"},"content":"//    private Map\u003cString, Person\u003e personMap;","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"DingBao-sys"},"content":"//    private RelationshipUtil relationshipManager;","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"DingBao-sys"},"content":"//    private DeleteRelationshipCommandParser parser;","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"DingBao-sys"},"content":"//    @BeforeEach","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"DingBao-sys"},"content":"//    void setUp() {","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"DingBao-sys"},"content":"//        personMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"DingBao-sys"},"content":"//        relationshipManager \u003d new RelationshipUtil();","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"DingBao-sys"},"content":"//        parser \u003d new DeleteRelationshipCommandParser();","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"DingBao-sys"},"content":"//    }","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"DingBao-sys"},"content":"//    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"DingBao-sys"},"content":"//    void parse_validInput_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"DingBao-sys"},"content":"//        // Add some dummy persons and relationships to test parsing","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"DingBao-sys"},"content":"//        Attribute name1 \u003d new NameAttribute(\"Name\", \"John Doe\");","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"DingBao-sys"},"content":"//        Attribute name2 \u003d new NameAttribute(\"Name\", \"Jane Doe\");","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"DingBao-sys"},"content":"//        Attribute[] attributes1 \u003d new Attribute[]{name1};","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"DingBao-sys"},"content":"//        Attribute[] attributes2 \u003d new Attribute[]{name2};","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"DingBao-sys"},"content":"//        // Adding dummy people for testing","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"DingBao-sys"},"content":"//        Person person1 \u003d new Person(attributes1);","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"DingBao-sys"},"content":"//        Person person2 \u003d new Person(attributes2);","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"DingBao-sys"},"content":"//        personMap.put(person1.getUuidString(), person1);","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"DingBao-sys"},"content":"//        personMap.put(person2.getUuidString(), person2);","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"DingBao-sys"},"content":"//        relationshipManager.addRelationship(","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"DingBao-sys"},"content":"//                new BioParentsRelationship(person1.getUuid(), person2.getUuid()));","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"DingBao-sys"},"content":"//        // Parse a valid delete relationship command","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"DingBao-sys"},"content":"//        assertDoesNotThrow(() -\u003e parser.parse(\"deleterelation /TestRelationship \"","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"DingBao-sys"},"content":"//                + person1.getUuidString() + \",\" + person2.getUuidString()));","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"DingBao-sys"},"content":"//    }","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"DingBao-sys"},"content":"//    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"DingBao-sys"},"content":"//    void parse_invalidMissingParts_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"DingBao-sys"},"content":"//        assertThrows(IllegalArgumentException.class, () -\u003e parser.parse(\"deleterelation /TestRelationship 1234\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"DingBao-sys"},"content":"//    }","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"DingBao-sys"},"content":"//    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"DingBao-sys"},"content":"//    void parse_invalidIncorrectUuids_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"DingBao-sys"},"content":"//        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"DingBao-sys"},"content":"//                parser.parse(\"deleterelation /TestRelationship invalid,invalid\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"DingBao-sys"},"content":"//    }","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"DingBao-sys"},"content":"//    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"DingBao-sys"},"content":"//    void parse_invalidRelationshipType_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"DingBao-sys"},"content":"//        assertThrows(IllegalArgumentException.class, () -\u003e parser.parse(\"deleterelation /InvalidType 1234,5678\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"DingBao-sys"},"content":"//    }","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"DingBao-sys"},"content":"//}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"DingBao-sys":67}},{"path":"src/test/java/seedu/address/logic/relationship/DeleteRelationshipCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DingBao-sys"},"content":"//package seedu.address.logic.relationship;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"DingBao-sys"},"content":"//import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"DingBao-sys"},"content":"//import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"DingBao-sys"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"DingBao-sys"},"content":"//import java.util.HashMap;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"DingBao-sys"},"content":"//import java.util.Map;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"DingBao-sys"},"content":"//import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"DingBao-sys"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"DingBao-sys"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"DingBao-sys"},"content":"//import seedu.address.model.person.attribute.Attribute;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"DingBao-sys"},"content":"//import seedu.address.model.person.attribute.NameAttribute;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"DingBao-sys"},"content":"//import seedu.address.model.person.relationship.Relationship;","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"DingBao-sys"},"content":"//import seedu.address.model.person.relationship.RelationshipUtil;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"DingBao-sys"},"content":"//import seedu.address.model.person.relationship.RoleBasedRelationship;","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"DingBao-sys"},"content":"//class DeleteRelationshipCommandTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"DingBao-sys"},"content":"//    private Map\u003cString, Person\u003e personMap;","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"DingBao-sys"},"content":"//    private RelationshipUtil relationshipManager;","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"DingBao-sys"},"content":"//    private DeleteRelationshipCommand command;","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"DingBao-sys"},"content":"//    @BeforeEach","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"DingBao-sys"},"content":"//    void setUp() {","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"DingBao-sys"},"content":"//        personMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"DingBao-sys"},"content":"//        relationshipManager \u003d new RelationshipUtil();","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"DingBao-sys"},"content":"//        // Assume NameAttribute is a subclass of Attribute suitable for testing","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"DingBao-sys"},"content":"//        Attribute name1 \u003d new NameAttribute(\"Name\", \"John Doe\");","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"DingBao-sys"},"content":"//        Attribute name2 \u003d new NameAttribute(\"Name\", \"Jane Doe\");","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"DingBao-sys"},"content":"//        Attribute[] attributes1 \u003d new Attribute[]{name1};","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"DingBao-sys"},"content":"//        Attribute[] attributes2 \u003d new Attribute[]{name2};","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"DingBao-sys"},"content":"//        // Adding dummy people for testing","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"DingBao-sys"},"content":"//        Person person1 \u003d new Person(attributes1);","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"DingBao-sys"},"content":"//        Person person2 \u003d new Person(attributes2);","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"DingBao-sys"},"content":"//        String uuid1 \u003d person1.getUuidString();","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"DingBao-sys"},"content":"//        String uuid2 \u003d person2.getUuidString();","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"DingBao-sys"},"content":"//        personMap.put(uuid1, person1);","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"DingBao-sys"},"content":"//        personMap.put(uuid2, person2);","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"DingBao-sys"},"content":"//        command \u003d new DeleteRelationshipCommand(uuid1, uuid2, \"family\");","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"DingBao-sys"},"content":"//    }","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"DingBao-sys"},"content":"//    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"DingBao-sys"},"content":"//    void parseCommand_validInput_relationshipRemoved() {","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"DingBao-sys"},"content":"//        // Create a relationship between two persons","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"DingBao-sys"},"content":"//        Attribute name1 \u003d new NameAttribute(\"Name\", \"John Doe\");","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"DingBao-sys"},"content":"//        Attribute name2 \u003d new NameAttribute(\"Name\", \"Jane Doe\");","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"DingBao-sys"},"content":"//        Attribute[] attributes1 \u003d new Attribute[]{name1};","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"DingBao-sys"},"content":"//        Attribute[] attributes2 \u003d new Attribute[]{name2};","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"DingBao-sys"},"content":"//        // Adding dummy people for testing","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"DingBao-sys"},"content":"//        Person person1 \u003d new Person(attributes1);","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"DingBao-sys"},"content":"//        Person person2 \u003d new Person(attributes2);","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"DingBao-sys"},"content":"//        String uuid1 \u003d person1.getUuidString();","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"DingBao-sys"},"content":"//        String uuid2 \u003d person2.getUuidString();","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"DingBao-sys"},"content":"//        personMap.put(uuid1, person1);","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"DingBao-sys"},"content":"//        personMap.put(uuid2, person2);","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"DingBao-sys"},"content":"//    }","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"DingBao-sys"},"content":"//    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"DingBao-sys"},"content":"//    void parseCommand_invalidInput_relationshipRemoved() {","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"DingBao-sys"},"content":"//        String uuid1 \u003d personMap.keySet().iterator().next();","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"DingBao-sys"},"content":"//        String uuid2 \u003d personMap.keySet().iterator().next();","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"DingBao-sys"},"content":"//        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"DingBao-sys"},"content":"//                command.parseCommand(\"deleterelation /friends \" + uuid1 + \" \" + uuid2));","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"DingBao-sys"},"content":"//    }","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"DingBao-sys"},"content":"//    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"DingBao-sys"},"content":"//    void parseCommand_invalidRelationshipType_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"DingBao-sys"},"content":"//        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"DingBao-sys"},"content":"//                command.parseCommand(\"deleterelation /InvalidType 1234,5678\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"DingBao-sys"},"content":"//    }","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"DingBao-sys"},"content":"//    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"DingBao-sys"},"content":"//    void parseCommand_invalidMissingParts_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"DingBao-sys"},"content":"//        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"DingBao-sys"},"content":"//                command.parseCommand(\"deleterelation /TestRelationship 1234\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"DingBao-sys"},"content":"//    }","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"DingBao-sys"},"content":"//    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"DingBao-sys"},"content":"//    void parseCommand_invalidIncorrectUuids_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"DingBao-sys"},"content":"//        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"DingBao-sys"},"content":"//                command.parseCommand(\"deleterelation /TestRelationship invalid,invalid\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"DingBao-sys"},"content":"//    }","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"DingBao-sys"},"content":"//    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"DingBao-sys"},"content":"//    void parseCommand_validRelationshipCheck_relationshipRemoved() {","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"DingBao-sys"},"content":"//        // Create a relationship between two persons","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"DingBao-sys"},"content":"//        Attribute name1 \u003d new NameAttribute(\"Name\", \"John Doe\");","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"DingBao-sys"},"content":"//        Attribute name2 \u003d new NameAttribute(\"Name\", \"Jane Doe\");","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"DingBao-sys"},"content":"//        Attribute[] attributes1 \u003d new Attribute[]{name1};","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"DingBao-sys"},"content":"//        Attribute[] attributes2 \u003d new Attribute[]{name2};","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"DingBao-sys"},"content":"//        // Adding dummy people for testing","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"DingBao-sys"},"content":"//        Person person1 \u003d new Person(attributes1);","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"DingBao-sys"},"content":"//        Person person2 \u003d new Person(attributes2);","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"DingBao-sys"},"content":"//        String uuid1 \u003d person1.getUuidString();","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"DingBao-sys"},"content":"//        String uuid2 \u003d person2.getUuidString();","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"DingBao-sys"},"content":"//        personMap.put(uuid1, person1);","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"DingBao-sys"},"content":"//        personMap.put(uuid2, person2);","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"DingBao-sys"},"content":"//        Relationship relationship \u003d new RoleBasedRelationship(person1.getUuid(), person2.getUuid());","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"DingBao-sys"},"content":"//        // Add the relationship to the RelationshipManager","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"DingBao-sys"},"content":"//        relationshipManager.addRelationship(\"TestRelationship\", relationship);","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"DingBao-sys"},"content":"//        // Parse the command to delete the relationship","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"DingBao-sys"},"content":"//        assertDoesNotThrow(() -\u003e command.parseCommand(\"deleterelation /TestRelationship \"","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"DingBao-sys"},"content":"//                + person1.getUuid() + \",\" + person2.getUuid()));","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"DingBao-sys"},"content":"//        // Check if the relationship is removed","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"DingBao-sys"},"content":"//        assertTrue(relationshipManager.getRelationships(\"TestRelationship\").isEmpty());","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"DingBao-sys"},"content":"//    }","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-20"},{"lineNumber":122,"author":{"gitId":"DingBao-sys"},"content":"//    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"DingBao-sys"},"content":"//    void parseCommand_invalidNoMatchingRelationship_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":124,"author":{"gitId":"DingBao-sys"},"content":"//        // Create a relationship between two persons","lastModifiedDate":"2024-03-20"},{"lineNumber":125,"author":{"gitId":"DingBao-sys"},"content":"//        Attribute name1 \u003d new NameAttribute(\"Name\", \"John Doe\");","lastModifiedDate":"2024-03-20"},{"lineNumber":126,"author":{"gitId":"DingBao-sys"},"content":"//        Attribute name2 \u003d new NameAttribute(\"Name\", \"Jane Doe\");","lastModifiedDate":"2024-03-20"},{"lineNumber":127,"author":{"gitId":"DingBao-sys"},"content":"//        Attribute[] attributes1 \u003d new Attribute[]{name1};","lastModifiedDate":"2024-03-20"},{"lineNumber":128,"author":{"gitId":"DingBao-sys"},"content":"//        Attribute[] attributes2 \u003d new Attribute[]{name2};","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-20"},{"lineNumber":130,"author":{"gitId":"DingBao-sys"},"content":"//        // Adding dummy people for testing","lastModifiedDate":"2024-03-20"},{"lineNumber":131,"author":{"gitId":"DingBao-sys"},"content":"//        Person person1 \u003d new Person(attributes1);","lastModifiedDate":"2024-03-20"},{"lineNumber":132,"author":{"gitId":"DingBao-sys"},"content":"//        Person person2 \u003d new Person(attributes2);","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"DingBao-sys"},"content":"//        String uuid1 \u003d person1.getUuidString();","lastModifiedDate":"2024-03-20"},{"lineNumber":134,"author":{"gitId":"DingBao-sys"},"content":"//        String uuid2 \u003d person2.getUuidString();","lastModifiedDate":"2024-03-20"},{"lineNumber":135,"author":{"gitId":"DingBao-sys"},"content":"//        personMap.put(uuid1, person1);","lastModifiedDate":"2024-03-20"},{"lineNumber":136,"author":{"gitId":"DingBao-sys"},"content":"//        personMap.put(uuid2, person2);","lastModifiedDate":"2024-03-20"},{"lineNumber":137,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-20"},{"lineNumber":138,"author":{"gitId":"DingBao-sys"},"content":"//        Relationship relationship \u003d new RoleBasedRelationship(person1.getUuid(), person2.getUuid());","lastModifiedDate":"2024-03-20"},{"lineNumber":139,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-20"},{"lineNumber":140,"author":{"gitId":"DingBao-sys"},"content":"//        // Add the relationship to the RelationshipManager","lastModifiedDate":"2024-03-20"},{"lineNumber":141,"author":{"gitId":"DingBao-sys"},"content":"//        relationshipManager.addRelationship(\"TestRelationship\", relationship);","lastModifiedDate":"2024-03-20"},{"lineNumber":142,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-20"},{"lineNumber":143,"author":{"gitId":"DingBao-sys"},"content":"//        // Try to delete a relationship that doesn\u0027t exist","lastModifiedDate":"2024-03-20"},{"lineNumber":144,"author":{"gitId":"DingBao-sys"},"content":"//        assertThrows(IllegalArgumentException.class, () -\u003e command.parseCommand(\"deleterelation /TestRelationship \"","lastModifiedDate":"2024-03-20"},{"lineNumber":145,"author":{"gitId":"DingBao-sys"},"content":"//                + \"invalid,invalid\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":146,"author":{"gitId":"DingBao-sys"},"content":"//    }","lastModifiedDate":"2024-03-20"},{"lineNumber":147,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-20"},{"lineNumber":148,"author":{"gitId":"DingBao-sys"},"content":"//    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":149,"author":{"gitId":"DingBao-sys"},"content":"//    void parseCommand_relationshipNotFound_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":150,"author":{"gitId":"DingBao-sys"},"content":"//        // Create a relationship between two persons","lastModifiedDate":"2024-03-20"},{"lineNumber":151,"author":{"gitId":"DingBao-sys"},"content":"//        Attribute name1 \u003d new NameAttribute(\"Name\", \"John Doe\");","lastModifiedDate":"2024-03-20"},{"lineNumber":152,"author":{"gitId":"DingBao-sys"},"content":"//        Attribute name2 \u003d new NameAttribute(\"Name\", \"Jane Doe\");","lastModifiedDate":"2024-03-20"},{"lineNumber":153,"author":{"gitId":"DingBao-sys"},"content":"//        Attribute[] attributes1 \u003d new Attribute[]{name1};","lastModifiedDate":"2024-03-20"},{"lineNumber":154,"author":{"gitId":"DingBao-sys"},"content":"//        Attribute[] attributes2 \u003d new Attribute[]{name2};","lastModifiedDate":"2024-03-20"},{"lineNumber":155,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-20"},{"lineNumber":156,"author":{"gitId":"DingBao-sys"},"content":"//        // Adding dummy people for testing","lastModifiedDate":"2024-03-20"},{"lineNumber":157,"author":{"gitId":"DingBao-sys"},"content":"//        Person person1 \u003d new Person(attributes1);","lastModifiedDate":"2024-03-20"},{"lineNumber":158,"author":{"gitId":"DingBao-sys"},"content":"//        Person person2 \u003d new Person(attributes2);","lastModifiedDate":"2024-03-20"},{"lineNumber":159,"author":{"gitId":"DingBao-sys"},"content":"//        String uuid1 \u003d person1.getUuidString();","lastModifiedDate":"2024-03-20"},{"lineNumber":160,"author":{"gitId":"DingBao-sys"},"content":"//        String uuid2 \u003d person2.getUuidString();","lastModifiedDate":"2024-03-20"},{"lineNumber":161,"author":{"gitId":"DingBao-sys"},"content":"//        personMap.put(uuid1, person1);","lastModifiedDate":"2024-03-20"},{"lineNumber":162,"author":{"gitId":"DingBao-sys"},"content":"//        personMap.put(uuid2, person2);","lastModifiedDate":"2024-03-20"},{"lineNumber":163,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-20"},{"lineNumber":164,"author":{"gitId":"DingBao-sys"},"content":"//        // No relationship added to RelationshipManager","lastModifiedDate":"2024-03-20"},{"lineNumber":165,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-20"},{"lineNumber":166,"author":{"gitId":"DingBao-sys"},"content":"//        // Try to delete a relationship that doesn\u0027t exist","lastModifiedDate":"2024-03-20"},{"lineNumber":167,"author":{"gitId":"DingBao-sys"},"content":"//        assertThrows(IllegalArgumentException.class, () -\u003e command.parseCommand(\"deleterelation /TestRelationship \"","lastModifiedDate":"2024-03-20"},{"lineNumber":168,"author":{"gitId":"DingBao-sys"},"content":"//                + person1.getUuid() + \",\" + person2.getUuid()));","lastModifiedDate":"2024-03-20"},{"lineNumber":169,"author":{"gitId":"DingBao-sys"},"content":"//    }","lastModifiedDate":"2024-03-20"},{"lineNumber":170,"author":{"gitId":"DingBao-sys"},"content":"//}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"DingBao-sys":170}},{"path":"src/test/java/seedu/address/logic/relationship/EditRelationshipCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emberlynn-Loo"},"content":"package seedu.address.logic.relationship;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"Emberlynn-Loo"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"Emberlynn-Loo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"Emberlynn-Loo"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"Emberlynn-Loo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"Emberlynn-Loo"},"content":"public class EditRelationshipCommandParserTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"Emberlynn-Loo"},"content":"    private final EditRelationshipCommandParser parser \u003d new EditRelationshipCommandParser();","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void parse_invalidInputMissingParts_throwsParseException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"Emberlynn-Loo"},"content":"        String userInput \u003d \"uuid1 uuid2 family\";","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInput));","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void parse_invalidInputInvalidUuid_throwsParseException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"Emberlynn-Loo"},"content":"        String userInput \u003d \"invalidUuid uuid2 family friend\";","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInput));","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void parse_invalidInputInvalidRelationshipDescriptors_throwsParseException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"Emberlynn-Loo"},"content":"        String userInput \u003d \"uuid1 uuid2 invalidRelationship friend\";","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInput));","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void parse_invalidInputSameDescriptors_throwsParseException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"Emberlynn-Loo"},"content":"        String userInput \u003d \"uuid1 uuid2 family family\";","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInput));","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void parse_validInput_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Valid input with UUIDs and relationship descriptors","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"Emberlynn-Loo"},"content":"        String userInput \u003d \"1234 \"","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"Emberlynn-Loo"},"content":"                + \"5432 \"","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"Emberlynn-Loo"},"content":"                + \"family friend\";","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"Emberlynn-Loo"},"content":"        EditRelationshipCommandParser parser \u003d new EditRelationshipCommandParser();","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"Emberlynn-Loo"},"content":"        try {","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"Emberlynn-Loo"},"content":"            EditRelationshipCommand command \u003d parser.parse(userInput);","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"Emberlynn-Loo"},"content":"            assertNotNull(command);","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"Emberlynn-Loo"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"Emberlynn-Loo"},"content":"            fail(\"Unexpected ParseException thrown\");","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"Emberlynn-Loo"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void parse_invalidInputWrongFormat_exceptionThrown() {","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Invalid input with wrong format","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"Emberlynn-Loo"},"content":"        String userInput \u003d \"invalid input\";","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"Emberlynn-Loo"},"content":"        EditRelationshipCommandParser parser \u003d new EditRelationshipCommandParser();","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInput));","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void parse_invalidInputInvalidUuid_exceptionThrown() {","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Invalid input with invalid UUIDs","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"Emberlynn-Loo"},"content":"        String userInput \u003d \"invalid-uuid invalid-uuid oldDescriptor newDescriptor\";","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"Emberlynn-Loo"},"content":"        EditRelationshipCommandParser parser \u003d new EditRelationshipCommandParser();","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInput));","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"Emberlynn-Loo"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"Emberlynn-Loo":75}},{"path":"src/test/java/seedu/address/logic/relationship/EditRelationshipCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emberlynn-Loo"},"content":"package seedu.address.logic.relationship;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"Emberlynn-Loo"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"Emberlynn-Loo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"Emberlynn-Loo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"Emberlynn-Loo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"Emberlynn-Loo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"Emberlynn-Loo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"Emberlynn-Loo"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"Emberlynn-Loo"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"Emberlynn-Loo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.model.person.relationship.Relationship;","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.testutil.TypicalPersonsUuid;","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"Emberlynn-Loo"},"content":"public class EditRelationshipCommandTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"Emberlynn-Loo"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"Emberlynn-Loo"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void execute_editNonExistentRelationship_throwsCommandException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"Emberlynn-Loo"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"Emberlynn-Loo"},"content":"        EditRelationshipCommand editCommand \u003d new EditRelationshipCommand(\"uuid1\", \"uuid2\",","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"Emberlynn-Loo"},"content":"                \"family\", \"friend\");","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertThrows(CommandException.class, () -\u003e editCommand.execute(model));","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void execute_editSameDescriptor_throwsCommandException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"Emberlynn-Loo"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"Emberlynn-Loo"},"content":"        Relationship existingRelationship \u003d new Relationship(UUID.randomUUID(),","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"Emberlynn-Loo"},"content":"                UUID.randomUUID(), \"family\");","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"Emberlynn-Loo"},"content":"        model.addRelationship(existingRelationship);","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"Emberlynn-Loo"},"content":"        EditRelationshipCommand editCommand \u003d new EditRelationshipCommand(\"uuid1\", \"uuid2\",","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"Emberlynn-Loo"},"content":"                \"family\", \"family\");","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertThrows(CommandException.class, () -\u003e editCommand.execute(model));","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void execute_originUuidIsNull_throwsCommandException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Setup","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"Emberlynn-Loo"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"Emberlynn-Loo"},"content":"        String originUuid \u003d null;","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"Emberlynn-Loo"},"content":"        String targetUuid \u003d \"target123\";","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"Emberlynn-Loo"},"content":"        String oldRelationshipDescriptor \u003d \"family\";","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"Emberlynn-Loo"},"content":"        String newRelationshipDescriptor \u003d \"friend\";","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"Emberlynn-Loo"},"content":"        EditRelationshipCommand editCommand \u003d new EditRelationshipCommand(originUuid, targetUuid,","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"Emberlynn-Loo"},"content":"                oldRelationshipDescriptor, newRelationshipDescriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Verify","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertThrows(CommandException.class, () -\u003e editCommand.execute(model),","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"Emberlynn-Loo"},"content":"                Messages.MESSAGE_INVALID_PERSON_UUID);","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void execute_invalidTargetUuid_throwsCommandException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"Emberlynn-Loo"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"Emberlynn-Loo"},"content":"        String originUuid \u003d \"1234\";","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"Emberlynn-Loo"},"content":"        String targetUuid \u003d null;","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"Emberlynn-Loo"},"content":"        String oldDescriptor \u003d \"family\";","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"Emberlynn-Loo"},"content":"        String newDescriptor \u003d \"friend\";","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"Emberlynn-Loo"},"content":"        EditRelationshipCommand editCommand \u003d new EditRelationshipCommand(originUuid, targetUuid,","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"Emberlynn-Loo"},"content":"                oldDescriptor, newDescriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertThrows(CommandException.class, () -\u003e editCommand.execute(model),","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"Emberlynn-Loo"},"content":"                Messages.MESSAGE_INVALID_PERSON_UUID);","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void execute_originAndTargetUuidsAreSame_throwsCommandException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Setup","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"Emberlynn-Loo"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"Emberlynn-Loo"},"content":"        String originUuid \u003d \"person123\";","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"Emberlynn-Loo"},"content":"        String targetUuid \u003d \"person123\";","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"Emberlynn-Loo"},"content":"        String oldRelationshipDescriptor \u003d \"family\";","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"Emberlynn-Loo"},"content":"        String newRelationshipDescriptor \u003d \"friend\";","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"Emberlynn-Loo"},"content":"        EditRelationshipCommand editCommand \u003d new EditRelationshipCommand(originUuid, targetUuid,","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"Emberlynn-Loo"},"content":"                oldRelationshipDescriptor, newRelationshipDescriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Verify","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertThrows(CommandException.class, () -\u003e editCommand.execute(model),","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"Emberlynn-Loo"},"content":"                \"Relationships must be between 2 different people\");","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void execute_oldAndNewDescriptorsAreSame_throwsCommandException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Setup","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"Emberlynn-Loo"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"Emberlynn-Loo"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersonsUuid.getTypicalAddressBook();","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"Emberlynn-Loo"},"content":"        model.setAddressBook(typicalPersonsAddressBook);","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"Emberlynn-Loo"},"content":"        String originUuid \u003d \"0001\";","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"Emberlynn-Loo"},"content":"        String targetUuid \u003d \"0006\";","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"Emberlynn-Loo"},"content":"        String oldRelationshipDescriptor \u003d \"family\";","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"Emberlynn-Loo"},"content":"        String newRelationshipDescriptor \u003d \"family\";","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"Emberlynn-Loo"},"content":"        EditRelationshipCommand editCommand \u003d new EditRelationshipCommand(originUuid, targetUuid,","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"Emberlynn-Loo"},"content":"                oldRelationshipDescriptor, newRelationshipDescriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Verify","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"Emberlynn-Loo"},"content":"        CommandException exception \u003d assertThrows(CommandException.class, () -\u003e editCommand.execute(model),","lastModifiedDate":"2024-03-21"},{"lineNumber":108,"author":{"gitId":"Emberlynn-Loo"},"content":"                \"There\u0027s no need to edit the relationship if the new relationship is the same as the old one.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Check the exception message","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertEquals(\"There\u0027s no need to edit the relationship if the new relationship is the same as the old one.\",","lastModifiedDate":"2024-03-21"},{"lineNumber":112,"author":{"gitId":"Emberlynn-Loo"},"content":"                exception.getMessage());","lastModifiedDate":"2024-03-21"},{"lineNumber":113,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":114,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":116,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void execute_relationshipToEditDoesNotExist_throwsCommandException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":117,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Setup","lastModifiedDate":"2024-03-21"},{"lineNumber":118,"author":{"gitId":"Emberlynn-Loo"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-03-21"},{"lineNumber":119,"author":{"gitId":"Emberlynn-Loo"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersonsUuid.getTypicalAddressBook();","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"Emberlynn-Loo"},"content":"        model.setAddressBook(typicalPersonsAddressBook);","lastModifiedDate":"2024-03-21"},{"lineNumber":121,"author":{"gitId":"Emberlynn-Loo"},"content":"        String originUuid \u003d \"0001\";","lastModifiedDate":"2024-03-21"},{"lineNumber":122,"author":{"gitId":"Emberlynn-Loo"},"content":"        String targetUuid \u003d \"0003\";","lastModifiedDate":"2024-03-21"},{"lineNumber":123,"author":{"gitId":"Emberlynn-Loo"},"content":"        String oldDescriptor \u003d \"family\";","lastModifiedDate":"2024-03-21"},{"lineNumber":124,"author":{"gitId":"Emberlynn-Loo"},"content":"        String newDescriptor \u003d \"friend\";","lastModifiedDate":"2024-03-21"},{"lineNumber":125,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":126,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Attempt to edit a non-existent relationship","lastModifiedDate":"2024-03-21"},{"lineNumber":127,"author":{"gitId":"Emberlynn-Loo"},"content":"        EditRelationshipCommand editCommand \u003d new EditRelationshipCommand(","lastModifiedDate":"2024-03-21"},{"lineNumber":128,"author":{"gitId":"Emberlynn-Loo"},"content":"                originUuid, targetUuid, oldDescriptor, newDescriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":129,"author":{"gitId":"Emberlynn-Loo"},"content":"        Relationship toEditOff \u003d new Relationship(UUID.fromString(\"00000000-0000-0000-0000-000000000001\"),","lastModifiedDate":"2024-03-21"},{"lineNumber":130,"author":{"gitId":"Emberlynn-Loo"},"content":"                UUID.fromString(\"00000000-0000-0000-0000-000000000003\"), oldDescriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":131,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Verify","lastModifiedDate":"2024-03-21"},{"lineNumber":132,"author":{"gitId":"Emberlynn-Loo"},"content":"        CommandException exception \u003d assertThrows(CommandException.class, () -\u003e editCommand.execute(model),","lastModifiedDate":"2024-03-21"},{"lineNumber":133,"author":{"gitId":"Emberlynn-Loo"},"content":"                String.format(\"Sorry %s do not exist\", toEditOff));","lastModifiedDate":"2024-03-21"},{"lineNumber":134,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":135,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Check the exception message","lastModifiedDate":"2024-03-21"},{"lineNumber":136,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertEquals(String.format(\"Sorry %s do not exist\", toEditOff),","lastModifiedDate":"2024-03-21"},{"lineNumber":137,"author":{"gitId":"Emberlynn-Loo"},"content":"                exception.getMessage());","lastModifiedDate":"2024-03-21"},{"lineNumber":138,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":139,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":140,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":141,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":142,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void execute_existingRelationships_throwsCommandException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":143,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Setup","lastModifiedDate":"2024-03-21"},{"lineNumber":144,"author":{"gitId":"Emberlynn-Loo"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-03-21"},{"lineNumber":145,"author":{"gitId":"Emberlynn-Loo"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersonsUuid.getTypicalAddressBook();","lastModifiedDate":"2024-03-21"},{"lineNumber":146,"author":{"gitId":"Emberlynn-Loo"},"content":"        model.setAddressBook(typicalPersonsAddressBook);","lastModifiedDate":"2024-03-21"},{"lineNumber":147,"author":{"gitId":"Emberlynn-Loo"},"content":"        String originUuid \u003d \"0001\";","lastModifiedDate":"2024-03-21"},{"lineNumber":148,"author":{"gitId":"Emberlynn-Loo"},"content":"        String targetUuid \u003d \"0002\";","lastModifiedDate":"2024-03-21"},{"lineNumber":149,"author":{"gitId":"Emberlynn-Loo"},"content":"        String oldDescriptor \u003d \"friend\";","lastModifiedDate":"2024-03-21"},{"lineNumber":150,"author":{"gitId":"Emberlynn-Loo"},"content":"        String newDescriptor \u003d \"family\";","lastModifiedDate":"2024-03-21"},{"lineNumber":151,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":152,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Add the relationship to the model","lastModifiedDate":"2024-03-21"},{"lineNumber":153,"author":{"gitId":"Emberlynn-Loo"},"content":"        Relationship oldRelationship \u003d new Relationship(","lastModifiedDate":"2024-03-21"},{"lineNumber":154,"author":{"gitId":"Emberlynn-Loo"},"content":"                UUID.fromString(\"00000000-0000-0000-0000-000000000001\"),","lastModifiedDate":"2024-03-21"},{"lineNumber":155,"author":{"gitId":"Emberlynn-Loo"},"content":"                UUID.fromString(\"00000000-0000-0000-0000-000000000002\"), oldDescriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":156,"author":{"gitId":"Emberlynn-Loo"},"content":"        Relationship existingRelationship \u003d new Relationship(","lastModifiedDate":"2024-03-21"},{"lineNumber":157,"author":{"gitId":"Emberlynn-Loo"},"content":"                UUID.fromString(\"00000000-0000-0000-0000-000000000001\"),","lastModifiedDate":"2024-03-21"},{"lineNumber":158,"author":{"gitId":"Emberlynn-Loo"},"content":"                UUID.fromString(\"00000000-0000-0000-0000-000000000002\"), newDescriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":159,"author":{"gitId":"Emberlynn-Loo"},"content":"        model.addRelationship(oldRelationship);","lastModifiedDate":"2024-03-21"},{"lineNumber":160,"author":{"gitId":"Emberlynn-Loo"},"content":"        model.addRelationship(existingRelationship);","lastModifiedDate":"2024-03-21"},{"lineNumber":161,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":162,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Attempt to edit the relationship with the same descriptor","lastModifiedDate":"2024-03-21"},{"lineNumber":163,"author":{"gitId":"Emberlynn-Loo"},"content":"        EditRelationshipCommand editCommand \u003d new EditRelationshipCommand(","lastModifiedDate":"2024-03-21"},{"lineNumber":164,"author":{"gitId":"Emberlynn-Loo"},"content":"                originUuid, targetUuid, oldDescriptor, newDescriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":165,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":166,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Verify","lastModifiedDate":"2024-03-21"},{"lineNumber":167,"author":{"gitId":"Emberlynn-Loo"},"content":"        CommandException exception \u003d assertThrows(CommandException.class, () -\u003e editCommand.execute(model),","lastModifiedDate":"2024-03-21"},{"lineNumber":168,"author":{"gitId":"Emberlynn-Loo"},"content":"                String.format(\"%s already exists\", existingRelationship));","lastModifiedDate":"2024-03-21"},{"lineNumber":169,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":170,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Check the exception message","lastModifiedDate":"2024-03-21"},{"lineNumber":171,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertEquals(String.format(\"%s already exists\", existingRelationship),","lastModifiedDate":"2024-03-21"},{"lineNumber":172,"author":{"gitId":"Emberlynn-Loo"},"content":"                exception.getMessage());","lastModifiedDate":"2024-03-21"},{"lineNumber":173,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":174,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":175,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":176,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void execute_invalidRelationshipType_throwsCommandException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":177,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Setup","lastModifiedDate":"2024-03-21"},{"lineNumber":178,"author":{"gitId":"Emberlynn-Loo"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-03-21"},{"lineNumber":179,"author":{"gitId":"Emberlynn-Loo"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersonsUuid.getTypicalAddressBook();","lastModifiedDate":"2024-03-21"},{"lineNumber":180,"author":{"gitId":"Emberlynn-Loo"},"content":"        model.setAddressBook(typicalPersonsAddressBook);","lastModifiedDate":"2024-03-21"},{"lineNumber":181,"author":{"gitId":"Emberlynn-Loo"},"content":"        String originUuid \u003d \"0001\";","lastModifiedDate":"2024-03-21"},{"lineNumber":182,"author":{"gitId":"Emberlynn-Loo"},"content":"        String targetUuid \u003d \"0006\";","lastModifiedDate":"2024-03-21"},{"lineNumber":183,"author":{"gitId":"Emberlynn-Loo"},"content":"        String oldRelationshipDescriptor \u003d \"family\";","lastModifiedDate":"2024-03-21"},{"lineNumber":184,"author":{"gitId":"Emberlynn-Loo"},"content":"        String newRelationshipDescriptor \u003d \"invalid\";","lastModifiedDate":"2024-03-21"},{"lineNumber":185,"author":{"gitId":"Emberlynn-Loo"},"content":"        EditRelationshipCommand editCommand \u003d new EditRelationshipCommand(originUuid, targetUuid,","lastModifiedDate":"2024-03-21"},{"lineNumber":186,"author":{"gitId":"Emberlynn-Loo"},"content":"                oldRelationshipDescriptor, newRelationshipDescriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":187,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":188,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Verify","lastModifiedDate":"2024-03-21"},{"lineNumber":189,"author":{"gitId":"Emberlynn-Loo"},"content":"        CommandException exception \u003d assertThrows(CommandException.class, () -\u003e editCommand.execute(model),","lastModifiedDate":"2024-03-21"},{"lineNumber":190,"author":{"gitId":"Emberlynn-Loo"},"content":"                \"Invalid Relationship type\");","lastModifiedDate":"2024-03-21"},{"lineNumber":191,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Check the exception message","lastModifiedDate":"2024-03-21"},{"lineNumber":192,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertEquals(String.format(\"Invalid Relationship type\"),","lastModifiedDate":"2024-03-21"},{"lineNumber":193,"author":{"gitId":"Emberlynn-Loo"},"content":"                exception.getMessage());","lastModifiedDate":"2024-03-21"},{"lineNumber":194,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":195,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":196,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":197,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void execute_successfulRelationship_throwsCommandException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":198,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Setup","lastModifiedDate":"2024-03-21"},{"lineNumber":199,"author":{"gitId":"Emberlynn-Loo"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-03-21"},{"lineNumber":200,"author":{"gitId":"Emberlynn-Loo"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersonsUuid.getTypicalAddressBook();","lastModifiedDate":"2024-03-21"},{"lineNumber":201,"author":{"gitId":"Emberlynn-Loo"},"content":"        model.setAddressBook(typicalPersonsAddressBook);","lastModifiedDate":"2024-03-21"},{"lineNumber":202,"author":{"gitId":"Emberlynn-Loo"},"content":"        String originUuid \u003d \"0001\";","lastModifiedDate":"2024-03-21"},{"lineNumber":203,"author":{"gitId":"Emberlynn-Loo"},"content":"        String targetUuid \u003d \"0002\";","lastModifiedDate":"2024-03-21"},{"lineNumber":204,"author":{"gitId":"Emberlynn-Loo"},"content":"        String oldRelationshipDescriptor \u003d \"friend\";","lastModifiedDate":"2024-03-21"},{"lineNumber":205,"author":{"gitId":"Emberlynn-Loo"},"content":"        String newRelationshipDescriptor \u003d \"family\";","lastModifiedDate":"2024-03-21"},{"lineNumber":206,"author":{"gitId":"Emberlynn-Loo"},"content":"        EditRelationshipCommand editCommand \u003d new EditRelationshipCommand(originUuid, targetUuid,","lastModifiedDate":"2024-03-21"},{"lineNumber":207,"author":{"gitId":"Emberlynn-Loo"},"content":"                oldRelationshipDescriptor, newRelationshipDescriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":208,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":209,"author":{"gitId":"Emberlynn-Loo"},"content":"        CommandResult result \u003d assertDoesNotThrow(() -\u003e editCommand.execute(model));","lastModifiedDate":"2024-03-21"},{"lineNumber":210,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":211,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Verify","lastModifiedDate":"2024-03-21"},{"lineNumber":212,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertEquals(EditRelationshipCommand.MESSAGE_EDIT_RELATIONSHIP_SUCCESS, result.getFeedbackToUser());","lastModifiedDate":"2024-03-21"},{"lineNumber":213,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":214,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Assert that the relationship was deleted and added successfully","lastModifiedDate":"2024-03-21"},{"lineNumber":215,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID fullOriginUuid \u003d model.getFullUuid(originUuid);","lastModifiedDate":"2024-03-21"},{"lineNumber":216,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID fullTargetUuid \u003d model.getFullUuid(targetUuid);","lastModifiedDate":"2024-03-21"},{"lineNumber":217,"author":{"gitId":"Emberlynn-Loo"},"content":"        Relationship expectedDeletedRelationship \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":218,"author":{"gitId":"Emberlynn-Loo"},"content":"                new Relationship(fullOriginUuid, fullTargetUuid, oldRelationshipDescriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":219,"author":{"gitId":"Emberlynn-Loo"},"content":"        Relationship expectedAddedRelationship \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":220,"author":{"gitId":"Emberlynn-Loo"},"content":"                new Relationship(fullOriginUuid, fullTargetUuid, newRelationshipDescriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":221,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":222,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertFalse(model.hasRelationshipWithDescriptor(expectedDeletedRelationship));","lastModifiedDate":"2024-03-21"},{"lineNumber":223,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertTrue(model.hasRelationshipWithDescriptor(expectedAddedRelationship));","lastModifiedDate":"2024-03-21"},{"lineNumber":224,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":225,"author":{"gitId":"Emberlynn-Loo"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"Emberlynn-Loo":225}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"import static seedu.address.testutil.TypicalPersons.CAT;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"import static seedu.address.testutil.TypicalPersonsUuid.ALICE;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"import static seedu.address.testutil.TypicalPersonsUuid.HOON;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"import static seedu.address.testutil.TypicalPersonsUuid.getTypicalAddressBook;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"Emberlynn-Loo"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.model.person.attribute.Attribute;","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.model.person.attribute.NameAttribute;","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"Tsenrae"},"content":"import seedu.address.model.person.relationship.Relationship;","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"Tsenrae"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \",\"","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"Tsenrae"},"content":"                + \" relationships\u003d\" + \"}\";","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"Bandov"},"content":"    void deleteAttribute_existingAttribute_removesAttribute() {","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"Bandov"},"content":"        assertTrue(CAT.hasAttribute(\"Name\"), \"Attribute should exist before deletion.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"Bandov"},"content":"        CAT.deleteAttribute(\"Name\");","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"Bandov"},"content":"        assertFalse(CAT.hasAttribute(\"Name\"), \"Attribute should not exist after deletion.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"Bandov"},"content":"        CAT.setAttribute(\"Name\", \"Cat\");","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"Bandov"},"content":"    void getPersonByUuid_existingUuid_returnsPerson() {","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"Bandov"},"content":"        Person result \u003d HOON;","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"Bandov"},"content":"        String uuidString \u003d result.getUuid().toString();","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"Bandov"},"content":"        assertNotNull(result, \"Should return a person for existing UUID.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"Bandov"},"content":"        assertEquals(uuidString, result.getUuid().toString(), \"Returned person should have the same UUID.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"Bandov"},"content":"    void hasAttribute_existingAttribute_returnsTrue() {","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"Bandov"},"content":"        boolean result \u003d HOON.hasAttribute(\"Name\");","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"Bandov"},"content":"        assertTrue(result, \"Should return true for an existing attribute.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"Bandov"},"content":"    void hasAttribute_nonExistentAttribute_returnsFalse() {","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"Bandov"},"content":"        boolean result \u003d HOON.hasAttribute(\"Pet\");","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"Bandov"},"content":"        assertFalse(result, \"Should return false for a non-existent attribute.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"Bandov"},"content":"    void deleteAttribute_test() {","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"Bandov"},"content":"        addressBook.addPerson(HOON);","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"Bandov"},"content":"        addressBook.deleteAttribute(HOON.getUuidString(), \"Name\");","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"Bandov"},"content":"        assertFalse(HOON.hasAttribute(\"Name\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"Bandov"},"content":"        HOON.setAttribute(\"Name\", \"Hoon Meier\");","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"Tsenrae"},"content":"        private final List\u003cRelationship\u003e relationships \u003d Collections.emptyList();","lastModifiedDate":"2024-03-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":133,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":134,"author":{"gitId":"Tsenrae"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":135,"author":{"gitId":"Tsenrae"},"content":"        public List\u003cRelationship\u003e getRelationshipList() {","lastModifiedDate":"2024-03-21"},{"lineNumber":136,"author":{"gitId":"Tsenrae"},"content":"            return relationships;","lastModifiedDate":"2024-03-21"},{"lineNumber":137,"author":{"gitId":"Tsenrae"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":140,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":141,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void hasRelationshipWithDescriptor_existingRelationship_returnsTrue() {","lastModifiedDate":"2024-03-21"},{"lineNumber":142,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute name1 \u003d new NameAttribute(\"Name\", \"John Doe\");","lastModifiedDate":"2024-03-21"},{"lineNumber":143,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute name2 \u003d new NameAttribute(\"Name\", \"Jane Doe\");","lastModifiedDate":"2024-03-21"},{"lineNumber":144,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute[] attributes1 \u003d new Attribute[]{name1};","lastModifiedDate":"2024-03-21"},{"lineNumber":145,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute[] attributes2 \u003d new Attribute[]{name2};","lastModifiedDate":"2024-03-21"},{"lineNumber":146,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":147,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Adding dummy people for testing","lastModifiedDate":"2024-03-21"},{"lineNumber":148,"author":{"gitId":"Emberlynn-Loo"},"content":"        Person person1 \u003d new Person(attributes1);","lastModifiedDate":"2024-03-21"},{"lineNumber":149,"author":{"gitId":"Emberlynn-Loo"},"content":"        Person person2 \u003d new Person(attributes2);","lastModifiedDate":"2024-03-21"},{"lineNumber":150,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID uuid11 \u003d person1.getUuid();","lastModifiedDate":"2024-03-21"},{"lineNumber":151,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID uuid22 \u003d person2.getUuid();","lastModifiedDate":"2024-03-21"},{"lineNumber":152,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Create an instance of AddressBook","lastModifiedDate":"2024-03-21"},{"lineNumber":153,"author":{"gitId":"Emberlynn-Loo"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2024-03-21"},{"lineNumber":154,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":155,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Create a test relationship","lastModifiedDate":"2024-03-21"},{"lineNumber":156,"author":{"gitId":"Emberlynn-Loo"},"content":"        Relationship testRelationship \u003d new Relationship(uuid11, uuid22, \"family\");","lastModifiedDate":"2024-03-21"},{"lineNumber":157,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":158,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Add the test relationship to the address book","lastModifiedDate":"2024-03-21"},{"lineNumber":159,"author":{"gitId":"Emberlynn-Loo"},"content":"        addressBook.addRelationship(testRelationship);","lastModifiedDate":"2024-03-21"},{"lineNumber":160,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":161,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Check if the address book has the test relationship with the descriptor","lastModifiedDate":"2024-03-21"},{"lineNumber":162,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertTrue(addressBook.hasRelationshipWithDescriptor(testRelationship));","lastModifiedDate":"2024-03-21"},{"lineNumber":163,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":164,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":165,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":166,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void getExistingRelationship_existingRelationship_returnsStringRepresentation() {","lastModifiedDate":"2024-03-21"},{"lineNumber":167,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute name1 \u003d new NameAttribute(\"Name\", \"John Doe\");","lastModifiedDate":"2024-03-21"},{"lineNumber":168,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute name2 \u003d new NameAttribute(\"Name\", \"Jane Doe\");","lastModifiedDate":"2024-03-21"},{"lineNumber":169,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute[] attributes1 \u003d new Attribute[]{name1};","lastModifiedDate":"2024-03-21"},{"lineNumber":170,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute[] attributes2 \u003d new Attribute[]{name2};","lastModifiedDate":"2024-03-21"},{"lineNumber":171,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":172,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Adding dummy people for testing","lastModifiedDate":"2024-03-21"},{"lineNumber":173,"author":{"gitId":"Emberlynn-Loo"},"content":"        Person person1 \u003d new Person(attributes1);","lastModifiedDate":"2024-03-21"},{"lineNumber":174,"author":{"gitId":"Emberlynn-Loo"},"content":"        Person person2 \u003d new Person(attributes2);","lastModifiedDate":"2024-03-21"},{"lineNumber":175,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID uuid11 \u003d person1.getUuid();","lastModifiedDate":"2024-03-21"},{"lineNumber":176,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID uuid22 \u003d person2.getUuid();","lastModifiedDate":"2024-03-21"},{"lineNumber":177,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Create an instance of AddressBook","lastModifiedDate":"2024-03-21"},{"lineNumber":178,"author":{"gitId":"Emberlynn-Loo"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2024-03-21"},{"lineNumber":179,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":180,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Create a test relationship","lastModifiedDate":"2024-03-21"},{"lineNumber":181,"author":{"gitId":"Emberlynn-Loo"},"content":"        Relationship testRelationship \u003d new Relationship(uuid11, uuid22, \"family\");","lastModifiedDate":"2024-03-21"},{"lineNumber":182,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":183,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Add the test relationship to the address book","lastModifiedDate":"2024-03-21"},{"lineNumber":184,"author":{"gitId":"Emberlynn-Loo"},"content":"        addressBook.addRelationship(testRelationship);","lastModifiedDate":"2024-03-21"},{"lineNumber":185,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":186,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Check if the address book has the test relationship with the descriptor","lastModifiedDate":"2024-03-21"},{"lineNumber":187,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertEquals(testRelationship.toString(), addressBook.getExistingRelationship(testRelationship));","lastModifiedDate":"2024-03-21"},{"lineNumber":188,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":189,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":190,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":191,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void hasRelationshipWithDescriptor_nonExistingRelationship_returnsFalse() {","lastModifiedDate":"2024-03-21"},{"lineNumber":192,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute name1 \u003d new NameAttribute(\"Name\", \"John Doe\");","lastModifiedDate":"2024-03-21"},{"lineNumber":193,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute name2 \u003d new NameAttribute(\"Name\", \"Jane Doe\");","lastModifiedDate":"2024-03-21"},{"lineNumber":194,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute[] attributes1 \u003d new Attribute[]{name1};","lastModifiedDate":"2024-03-21"},{"lineNumber":195,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute[] attributes2 \u003d new Attribute[]{name2};","lastModifiedDate":"2024-03-21"},{"lineNumber":196,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":197,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Adding dummy people for testing","lastModifiedDate":"2024-03-21"},{"lineNumber":198,"author":{"gitId":"Emberlynn-Loo"},"content":"        Person person1 \u003d new Person(attributes1);","lastModifiedDate":"2024-03-21"},{"lineNumber":199,"author":{"gitId":"Emberlynn-Loo"},"content":"        Person person2 \u003d new Person(attributes2);","lastModifiedDate":"2024-03-21"},{"lineNumber":200,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID uuid11 \u003d person1.getUuid();","lastModifiedDate":"2024-03-21"},{"lineNumber":201,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID uuid22 \u003d person2.getUuid();","lastModifiedDate":"2024-03-21"},{"lineNumber":202,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Create an instance of AddressBook","lastModifiedDate":"2024-03-21"},{"lineNumber":203,"author":{"gitId":"Emberlynn-Loo"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2024-03-21"},{"lineNumber":204,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":205,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Create a test relationship","lastModifiedDate":"2024-03-21"},{"lineNumber":206,"author":{"gitId":"Emberlynn-Loo"},"content":"        Relationship testRelationship \u003d new Relationship(uuid11, uuid22, \"family\");","lastModifiedDate":"2024-03-21"},{"lineNumber":207,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":208,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Check if the address book has the test relationship with the descriptor","lastModifiedDate":"2024-03-21"},{"lineNumber":209,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertFalse(addressBook.hasRelationshipWithDescriptor(testRelationship));","lastModifiedDate":"2024-03-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":212,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":213,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void getExistingRelationship_nonExistingRelationship_throwsException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":214,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Create an instance of AddressBook","lastModifiedDate":"2024-03-21"},{"lineNumber":215,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute name1 \u003d new NameAttribute(\"Name\", \"John Doe\");","lastModifiedDate":"2024-03-21"},{"lineNumber":216,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute name2 \u003d new NameAttribute(\"Name\", \"Jane Doe\");","lastModifiedDate":"2024-03-21"},{"lineNumber":217,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute[] attributes1 \u003d new Attribute[]{name1};","lastModifiedDate":"2024-03-21"},{"lineNumber":218,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute[] attributes2 \u003d new Attribute[]{name2};","lastModifiedDate":"2024-03-21"},{"lineNumber":219,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":220,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Adding dummy people for testing","lastModifiedDate":"2024-03-21"},{"lineNumber":221,"author":{"gitId":"Emberlynn-Loo"},"content":"        Person person1 \u003d new Person(attributes1);","lastModifiedDate":"2024-03-21"},{"lineNumber":222,"author":{"gitId":"Emberlynn-Loo"},"content":"        Person person2 \u003d new Person(attributes2);","lastModifiedDate":"2024-03-21"},{"lineNumber":223,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID uuid11 \u003d person1.getUuid();","lastModifiedDate":"2024-03-21"},{"lineNumber":224,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID uuid22 \u003d person2.getUuid();","lastModifiedDate":"2024-03-21"},{"lineNumber":225,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Create an instance of AddressBook","lastModifiedDate":"2024-03-21"},{"lineNumber":226,"author":{"gitId":"Emberlynn-Loo"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2024-03-21"},{"lineNumber":227,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":228,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Create a test relationship","lastModifiedDate":"2024-03-21"},{"lineNumber":229,"author":{"gitId":"Emberlynn-Loo"},"content":"        Relationship testRelationship \u003d new Relationship(uuid11, uuid22, \"family\");","lastModifiedDate":"2024-03-21"},{"lineNumber":230,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":231,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Check if invoking getExistingRelationship with the non-existing relationship throws an exception","lastModifiedDate":"2024-03-21"},{"lineNumber":232,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e addressBook.getExistingRelationship(testRelationship));","lastModifiedDate":"2024-03-21"},{"lineNumber":233,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":234,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":235,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":236,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void equals_sameObject_returnsTrue() {","lastModifiedDate":"2024-03-21"},{"lineNumber":237,"author":{"gitId":"Emberlynn-Loo"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2024-03-21"},{"lineNumber":238,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertTrue(addressBook.equals(addressBook));","lastModifiedDate":"2024-03-21"},{"lineNumber":239,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":240,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":241,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":242,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void equals_differentObject_returnsFalse() {","lastModifiedDate":"2024-03-21"},{"lineNumber":243,"author":{"gitId":"Emberlynn-Loo"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2024-03-21"},{"lineNumber":244,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertFalse(addressBook.equals(new Object()));","lastModifiedDate":"2024-03-21"},{"lineNumber":245,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":246,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":247,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":248,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void equals_equalAddressBooks_returnsTrue() {","lastModifiedDate":"2024-03-21"},{"lineNumber":249,"author":{"gitId":"Emberlynn-Loo"},"content":"        AddressBook addressBook1 \u003d new AddressBook();","lastModifiedDate":"2024-03-21"},{"lineNumber":250,"author":{"gitId":"Emberlynn-Loo"},"content":"        AddressBook addressBook2 \u003d new AddressBook();","lastModifiedDate":"2024-03-21"},{"lineNumber":251,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertTrue(addressBook1.equals(addressBook2));","lastModifiedDate":"2024-03-21"},{"lineNumber":252,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"Bandov":47,"-":83,"Emberlynn-Loo":114,"Tsenrae":9}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"import static seedu.address.testutil.TypicalPersons.DOG;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.model.person.attribute.Attribute;","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.model.person.attribute.NameAttribute;","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.model.person.relationship.Relationship;","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":139,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":140,"author":{"gitId":"Bandov"},"content":"    void deleteAttribute_callsDeleteAttributeOnAddressBook() {","lastModifiedDate":"2024-03-20"},{"lineNumber":141,"author":{"gitId":"Bandov"},"content":"        DOG.deleteAttribute(\"Name\");","lastModifiedDate":"2024-03-20"},{"lineNumber":142,"author":{"gitId":"Bandov"},"content":"        assertFalse(DOG.hasAttribute(\"Name\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":143,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":144,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":145,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":146,"author":{"gitId":"Bandov"},"content":"    void getFullUuid_callsGetFullUuidOnAddressBook() {","lastModifiedDate":"2024-03-20"},{"lineNumber":147,"author":{"gitId":"Bandov"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2024-03-20"},{"lineNumber":148,"author":{"gitId":"Bandov"},"content":"        UUID result \u003d modelManager.getFullUuid(ALICE.getUuidString().substring(32, 36));","lastModifiedDate":"2024-03-20"},{"lineNumber":149,"author":{"gitId":"Bandov"},"content":"        assertEquals(ALICE.getUuidString(), result.toString());","lastModifiedDate":"2024-03-20"},{"lineNumber":150,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":151,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":152,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":153,"author":{"gitId":"Bandov"},"content":"    void getPersonByUuid_callsGetPersonByUuidOnAddressBook() {","lastModifiedDate":"2024-03-20"},{"lineNumber":154,"author":{"gitId":"Bandov"},"content":"        modelManager.addPerson(HOON);","lastModifiedDate":"2024-03-20"},{"lineNumber":155,"author":{"gitId":"Bandov"},"content":"        Person result \u003d modelManager.getPersonByUuid(HOON.getUuid());","lastModifiedDate":"2024-03-20"},{"lineNumber":156,"author":{"gitId":"Bandov"},"content":"        assertEquals(HOON, result);","lastModifiedDate":"2024-03-20"},{"lineNumber":157,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":158,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":159,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":160,"author":{"gitId":"Bandov"},"content":"    void hasAttribute_callsHasAttributeOnAddressBook() {","lastModifiedDate":"2024-03-20"},{"lineNumber":161,"author":{"gitId":"Bandov"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2024-03-20"},{"lineNumber":162,"author":{"gitId":"Bandov"},"content":"        assertTrue(modelManager.hasAttribute(ALICE.getUuidString(), \"Name\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":163,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":164,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":165,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":166,"author":{"gitId":"Bandov"},"content":"    void deleteAttribute_test() {","lastModifiedDate":"2024-03-20"},{"lineNumber":167,"author":{"gitId":"Bandov"},"content":"        modelManager.addPerson(HOON);","lastModifiedDate":"2024-03-20"},{"lineNumber":168,"author":{"gitId":"Bandov"},"content":"        modelManager.deleteAttribute(HOON.getUuidString(), \"Name\");","lastModifiedDate":"2024-03-20"},{"lineNumber":169,"author":{"gitId":"Bandov"},"content":"        assertFalse(HOON.hasAttribute(\"Name\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":170,"author":{"gitId":"Bandov"},"content":"        HOON.setAttribute(\"Name\", \"Hoon Meier\");","lastModifiedDate":"2024-03-20"},{"lineNumber":171,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":172,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":173,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":174,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void deleteRelationship_validRelationship_relationshipDeleted() {","lastModifiedDate":"2024-03-21"},{"lineNumber":175,"author":{"gitId":"Emberlynn-Loo"},"content":"        ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2024-03-21"},{"lineNumber":176,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute name1 \u003d new NameAttribute(\"Name\", \"John Doe\");","lastModifiedDate":"2024-03-21"},{"lineNumber":177,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute name2 \u003d new NameAttribute(\"Name\", \"Jane Doe\");","lastModifiedDate":"2024-03-21"},{"lineNumber":178,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute[] attributes1 \u003d new Attribute[]{name1};","lastModifiedDate":"2024-03-21"},{"lineNumber":179,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute[] attributes2 \u003d new Attribute[]{name2};","lastModifiedDate":"2024-03-21"},{"lineNumber":180,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":181,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Adding dummy people for testing","lastModifiedDate":"2024-03-21"},{"lineNumber":182,"author":{"gitId":"Emberlynn-Loo"},"content":"        Person person1 \u003d new Person(attributes1);","lastModifiedDate":"2024-03-21"},{"lineNumber":183,"author":{"gitId":"Emberlynn-Loo"},"content":"        Person person2 \u003d new Person(attributes2);","lastModifiedDate":"2024-03-21"},{"lineNumber":184,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID uuid11 \u003d person1.getUuid();","lastModifiedDate":"2024-03-21"},{"lineNumber":185,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID uuid22 \u003d person2.getUuid();","lastModifiedDate":"2024-03-21"},{"lineNumber":186,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":187,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Create a test relationship","lastModifiedDate":"2024-03-21"},{"lineNumber":188,"author":{"gitId":"Emberlynn-Loo"},"content":"        Relationship relationship \u003d new Relationship(uuid11, uuid22, \"family\");","lastModifiedDate":"2024-03-21"},{"lineNumber":189,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":190,"author":{"gitId":"Emberlynn-Loo"},"content":"        modelManager.deleteRelationship(relationship);","lastModifiedDate":"2024-03-21"},{"lineNumber":191,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":192,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertFalse(modelManager.hasRelationship(relationship));","lastModifiedDate":"2024-03-21"},{"lineNumber":193,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":194,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":195,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":196,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void getExistingRelationship_validRelationship_relationshipReturned() {","lastModifiedDate":"2024-03-21"},{"lineNumber":197,"author":{"gitId":"Emberlynn-Loo"},"content":"        ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2024-03-21"},{"lineNumber":198,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute name1 \u003d new NameAttribute(\"Name\", \"John Doe\");","lastModifiedDate":"2024-03-21"},{"lineNumber":199,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute name2 \u003d new NameAttribute(\"Name\", \"Jane Doe\");","lastModifiedDate":"2024-03-21"},{"lineNumber":200,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute[] attributes1 \u003d new Attribute[]{name1};","lastModifiedDate":"2024-03-21"},{"lineNumber":201,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute[] attributes2 \u003d new Attribute[]{name2};","lastModifiedDate":"2024-03-21"},{"lineNumber":202,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":203,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Adding dummy people for testing","lastModifiedDate":"2024-03-21"},{"lineNumber":204,"author":{"gitId":"Emberlynn-Loo"},"content":"        Person person1 \u003d new Person(attributes1);","lastModifiedDate":"2024-03-21"},{"lineNumber":205,"author":{"gitId":"Emberlynn-Loo"},"content":"        Person person2 \u003d new Person(attributes2);","lastModifiedDate":"2024-03-21"},{"lineNumber":206,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID uuid11 \u003d person1.getUuid();","lastModifiedDate":"2024-03-21"},{"lineNumber":207,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID uuid22 \u003d person2.getUuid();","lastModifiedDate":"2024-03-21"},{"lineNumber":208,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Create a test relationship","lastModifiedDate":"2024-03-21"},{"lineNumber":209,"author":{"gitId":"Emberlynn-Loo"},"content":"        Relationship relationship \u003d new Relationship(uuid11, uuid22, \"family\");","lastModifiedDate":"2024-03-21"},{"lineNumber":210,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":211,"author":{"gitId":"Emberlynn-Loo"},"content":"        modelManager.addRelationship(relationship);","lastModifiedDate":"2024-03-21"},{"lineNumber":212,"author":{"gitId":"Emberlynn-Loo"},"content":"        String result \u003d modelManager.getExistingRelationship(relationship);","lastModifiedDate":"2024-03-21"},{"lineNumber":213,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":214,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertEquals(relationship.toString(), result);","lastModifiedDate":"2024-03-21"},{"lineNumber":215,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":216,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":217,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":218,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void hasRelationshipWithDescriptor_validRelationship_trueReturned() {","lastModifiedDate":"2024-03-21"},{"lineNumber":219,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Create a new ModelManager","lastModifiedDate":"2024-03-21"},{"lineNumber":220,"author":{"gitId":"Emberlynn-Loo"},"content":"        ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2024-03-21"},{"lineNumber":221,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute name1 \u003d new NameAttribute(\"Name\", \"John Doe\");","lastModifiedDate":"2024-03-21"},{"lineNumber":222,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute name2 \u003d new NameAttribute(\"Name\", \"Jane Doe\");","lastModifiedDate":"2024-03-21"},{"lineNumber":223,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute[] attributes1 \u003d new Attribute[]{name1};","lastModifiedDate":"2024-03-21"},{"lineNumber":224,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute[] attributes2 \u003d new Attribute[]{name2};","lastModifiedDate":"2024-03-21"},{"lineNumber":225,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":226,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Adding dummy people for testing","lastModifiedDate":"2024-03-21"},{"lineNumber":227,"author":{"gitId":"Emberlynn-Loo"},"content":"        Person person1 \u003d new Person(attributes1);","lastModifiedDate":"2024-03-21"},{"lineNumber":228,"author":{"gitId":"Emberlynn-Loo"},"content":"        Person person2 \u003d new Person(attributes2);","lastModifiedDate":"2024-03-21"},{"lineNumber":229,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID uuid11 \u003d person1.getUuid();","lastModifiedDate":"2024-03-21"},{"lineNumber":230,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID uuid22 \u003d person2.getUuid();","lastModifiedDate":"2024-03-21"},{"lineNumber":231,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Create a test relationship","lastModifiedDate":"2024-03-21"},{"lineNumber":232,"author":{"gitId":"Emberlynn-Loo"},"content":"        Relationship relationship \u003d new Relationship(uuid11, uuid22, \"family\");","lastModifiedDate":"2024-03-21"},{"lineNumber":233,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":234,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Add the relationship to the model manager","lastModifiedDate":"2024-03-21"},{"lineNumber":235,"author":{"gitId":"Emberlynn-Loo"},"content":"        modelManager.addRelationship(relationship);","lastModifiedDate":"2024-03-21"},{"lineNumber":236,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":237,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Check if the model manager has the relationship with the same descriptor","lastModifiedDate":"2024-03-21"},{"lineNumber":238,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertTrue(modelManager.hasRelationshipWithDescriptor(relationship));","lastModifiedDate":"2024-03-21"},{"lineNumber":239,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"Bandov":38,"-":131,"Emberlynn-Loo":71}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"Tsenrae"},"content":"import static seedu.address.testutil.TypicalPersonsUuid.ALICE;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"Tsenrae"},"content":"import static seedu.address.testutil.TypicalPersonsUuid.BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"ReflectiveObsidian"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"ReflectiveObsidian"},"content":"import seedu.address.model.person.attribute.Attribute;","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"ReflectiveObsidian"},"content":"import seedu.address.model.person.attribute.BirthdayAttribute;","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"ReflectiveObsidian"},"content":"import seedu.address.model.person.attribute.NameAttribute;","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"ReflectiveObsidian"},"content":"import seedu.address.model.person.attribute.StringAttribute;","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"ReflectiveObsidian"},"content":"        String expected \u003d Person.class.getCanonicalName()","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"ReflectiveObsidian"},"content":"                + \"{uuid\u003d\" + ALICE.getUuidString()","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"ReflectiveObsidian"},"content":"                + \", name\u003d\" + ALICE.getName()","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"ReflectiveObsidian"},"content":"                + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"ReflectiveObsidian"},"content":"                + \", email\u003d\" + ALICE.getEmail()","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"ReflectiveObsidian"},"content":"                + \", address\u003d\" + ALICE.getAddress()","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"ReflectiveObsidian"},"content":"                + \", tags\u003d\" + ALICE.getTags() + \"}\";","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void getName() {","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertEquals(VALID_NAME_BOB, BOB.getName().toString());","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":88,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void getName_noName() { // to deprecate","lastModifiedDate":"2024-03-22"},{"lineNumber":89,"author":{"gitId":"ReflectiveObsidian"},"content":"        Person person \u003d new Person(new Attribute[0]);","lastModifiedDate":"2024-03-22"},{"lineNumber":90,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertEquals(\"no name\", person.getName().toString());","lastModifiedDate":"2024-03-22"},{"lineNumber":91,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":92,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-22"},{"lineNumber":93,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void getPhone() {","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertEquals(VALID_PHONE_BOB, BOB.getPhone().toString());","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void getPhone_noPhone() { // to deprecate","lastModifiedDate":"2024-03-22"},{"lineNumber":98,"author":{"gitId":"ReflectiveObsidian"},"content":"        Person person \u003d new Person(new Attribute[0]);","lastModifiedDate":"2024-03-22"},{"lineNumber":99,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertEquals(\"00000000\", person.getPhone().toString());","lastModifiedDate":"2024-03-22"},{"lineNumber":100,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":101,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-22"},{"lineNumber":102,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void getEmail() {","lastModifiedDate":"2024-03-11"},{"lineNumber":103,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertEquals(VALID_EMAIL_BOB, BOB.getEmail().toString());","lastModifiedDate":"2024-03-11"},{"lineNumber":104,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":106,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void getEmail_noEmail() { // to deprecate","lastModifiedDate":"2024-03-22"},{"lineNumber":107,"author":{"gitId":"ReflectiveObsidian"},"content":"        Person person \u003d new Person(new Attribute[0]);","lastModifiedDate":"2024-03-22"},{"lineNumber":108,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertEquals(\"noemail@noemail.noemail\", person.getEmail().toString());","lastModifiedDate":"2024-03-22"},{"lineNumber":109,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":110,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-22"},{"lineNumber":111,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void getAddress() {","lastModifiedDate":"2024-03-11"},{"lineNumber":112,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertEquals(VALID_ADDRESS_BOB, BOB.getAddress().toString());","lastModifiedDate":"2024-03-11"},{"lineNumber":113,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":114,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":115,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void getAddress_noAddress() { // to deprecate","lastModifiedDate":"2024-03-22"},{"lineNumber":116,"author":{"gitId":"ReflectiveObsidian"},"content":"        Person person \u003d new Person(new Attribute[0]);","lastModifiedDate":"2024-03-22"},{"lineNumber":117,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertEquals(\"no address\", person.getAddress().toString());","lastModifiedDate":"2024-03-22"},{"lineNumber":118,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":119,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-22"},{"lineNumber":120,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void getUuidString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":121,"author":{"gitId":"ReflectiveObsidian"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-11"},{"lineNumber":122,"author":{"gitId":"ReflectiveObsidian"},"content":"        String personUuidString \u003d person.getUuidString();","lastModifiedDate":"2024-03-11"},{"lineNumber":123,"author":{"gitId":"ReflectiveObsidian"},"content":"        // Solution below adapted from Github Copilot","lastModifiedDate":"2024-03-11"},{"lineNumber":124,"author":{"gitId":"ReflectiveObsidian"},"content":"        String uuidFormat \u003d \"^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$\";","lastModifiedDate":"2024-03-11"},{"lineNumber":125,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertTrue(personUuidString.matches(uuidFormat));","lastModifiedDate":"2024-03-11"},{"lineNumber":126,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":127,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":128,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void getUuidString_differentUuids() {","lastModifiedDate":"2024-03-12"},{"lineNumber":129,"author":{"gitId":"ReflectiveObsidian"},"content":"        Person person1 \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-11"},{"lineNumber":130,"author":{"gitId":"ReflectiveObsidian"},"content":"        Person person2 \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-11"},{"lineNumber":131,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertFalse(person1.getUuidString().equals(person2.getUuidString()));","lastModifiedDate":"2024-03-11"},{"lineNumber":132,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":133,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":134,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void equalsUuid_samePerson_true() {","lastModifiedDate":"2024-03-12"},{"lineNumber":135,"author":{"gitId":"ReflectiveObsidian"},"content":"        Person person1 \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-11"},{"lineNumber":136,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertTrue(person1.equalsUuid(person1));","lastModifiedDate":"2024-03-11"},{"lineNumber":137,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":138,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":139,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void equalsUuid_differentUuids_false() {","lastModifiedDate":"2024-03-12"},{"lineNumber":140,"author":{"gitId":"ReflectiveObsidian"},"content":"        Person person1 \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-11"},{"lineNumber":141,"author":{"gitId":"ReflectiveObsidian"},"content":"        Person person2 \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-11"},{"lineNumber":142,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertFalse(person1.equalsUuid(person2));","lastModifiedDate":"2024-03-11"},{"lineNumber":143,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":144,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":145,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void equalsUuid_notPerson_false() {","lastModifiedDate":"2024-03-12"},{"lineNumber":146,"author":{"gitId":"ReflectiveObsidian"},"content":"        Person person1 \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-11"},{"lineNumber":147,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertFalse(person1.equalsUuid(\"not a person\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":148,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":149,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":150,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void getUuid() {","lastModifiedDate":"2024-03-11"},{"lineNumber":151,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertTrue(ALICE.getUuid() !\u003d null);","lastModifiedDate":"2024-03-11"},{"lineNumber":152,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":153,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":154,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void hasAttribute_noAttribute_false() {","lastModifiedDate":"2024-03-13"},{"lineNumber":155,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertFalse(ALICE.hasAttribute(\"no attribute\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":156,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":157,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":158,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void hasAttribute_hasAttribute_true() {","lastModifiedDate":"2024-03-13"},{"lineNumber":159,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertTrue(ALICE.hasAttribute(\"Name\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":160,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":161,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":162,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void getAttribute_noAttribute_null() {","lastModifiedDate":"2024-03-13"},{"lineNumber":163,"author":{"gitId":"ReflectiveObsidian"},"content":"        try {","lastModifiedDate":"2024-03-13"},{"lineNumber":164,"author":{"gitId":"ReflectiveObsidian"},"content":"            ALICE.getAttribute(\"no attribute\");","lastModifiedDate":"2024-03-13"},{"lineNumber":165,"author":{"gitId":"ReflectiveObsidian"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-13"},{"lineNumber":166,"author":{"gitId":"ReflectiveObsidian"},"content":"            assertTrue(e instanceof IllegalArgumentException);","lastModifiedDate":"2024-03-13"},{"lineNumber":167,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":168,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":169,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":170,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void getAttribute_hasAttribute() {","lastModifiedDate":"2024-03-13"},{"lineNumber":171,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertTrue(ALICE.getAttribute(\"Name\") !\u003d null);","lastModifiedDate":"2024-03-13"},{"lineNumber":172,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":173,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":174,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void getAttribute_noAttribute() {","lastModifiedDate":"2024-03-13"},{"lineNumber":175,"author":{"gitId":"ReflectiveObsidian"},"content":"        try {","lastModifiedDate":"2024-03-13"},{"lineNumber":176,"author":{"gitId":"ReflectiveObsidian"},"content":"            ALICE.getAttribute(\"no attribute\");","lastModifiedDate":"2024-03-13"},{"lineNumber":177,"author":{"gitId":"ReflectiveObsidian"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-13"},{"lineNumber":178,"author":{"gitId":"ReflectiveObsidian"},"content":"            assertTrue(e instanceof IllegalArgumentException);","lastModifiedDate":"2024-03-13"},{"lineNumber":179,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":180,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":181,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":182,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void getAttribute_hasAttribute_correctAttribute() {","lastModifiedDate":"2024-03-13"},{"lineNumber":183,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertTrue(ALICE.getAttribute(\"Name\").getName().equals(\"Name\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":184,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":185,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test public void getAttribute_invalidName() {","lastModifiedDate":"2024-03-13"},{"lineNumber":186,"author":{"gitId":"ReflectiveObsidian"},"content":"        try {","lastModifiedDate":"2024-03-13"},{"lineNumber":187,"author":{"gitId":"ReflectiveObsidian"},"content":"            ALICE.getAttribute(\"\");","lastModifiedDate":"2024-03-13"},{"lineNumber":188,"author":{"gitId":"ReflectiveObsidian"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-13"},{"lineNumber":189,"author":{"gitId":"ReflectiveObsidian"},"content":"            assertTrue(e instanceof IllegalArgumentException);","lastModifiedDate":"2024-03-13"},{"lineNumber":190,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":191,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":192,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":193,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void updateAttribute_noAttribute() {","lastModifiedDate":"2024-03-13"},{"lineNumber":194,"author":{"gitId":"ReflectiveObsidian"},"content":"        try {","lastModifiedDate":"2024-03-13"},{"lineNumber":195,"author":{"gitId":"ReflectiveObsidian"},"content":"            Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2024-03-13"},{"lineNumber":196,"author":{"gitId":"ReflectiveObsidian"},"content":"            aliceCopy.updateAttribute(new StringAttribute(\"no attribute\", \"new value\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":197,"author":{"gitId":"ReflectiveObsidian"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-13"},{"lineNumber":198,"author":{"gitId":"ReflectiveObsidian"},"content":"            assertTrue(e instanceof IllegalArgumentException);","lastModifiedDate":"2024-03-13"},{"lineNumber":199,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":200,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":201,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":202,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void updateAttribute_hasAttribute() {","lastModifiedDate":"2024-03-13"},{"lineNumber":203,"author":{"gitId":"ReflectiveObsidian"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2024-03-13"},{"lineNumber":204,"author":{"gitId":"ReflectiveObsidian"},"content":"        aliceCopy.updateAttribute(new NameAttribute(\"Name\", \"new value\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":205,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertEquals(\"new value\", aliceCopy.getAttribute(\"Name\").getValueAsString());","lastModifiedDate":"2024-03-13"},{"lineNumber":206,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":207,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":208,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void updateAttribute_invalidName() {","lastModifiedDate":"2024-03-13"},{"lineNumber":209,"author":{"gitId":"ReflectiveObsidian"},"content":"        try {","lastModifiedDate":"2024-03-13"},{"lineNumber":210,"author":{"gitId":"ReflectiveObsidian"},"content":"            Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2024-03-13"},{"lineNumber":211,"author":{"gitId":"ReflectiveObsidian"},"content":"            aliceCopy.updateAttribute(new StringAttribute(\"\", \"new value\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":212,"author":{"gitId":"ReflectiveObsidian"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-13"},{"lineNumber":213,"author":{"gitId":"ReflectiveObsidian"},"content":"            assertTrue(e instanceof IllegalArgumentException);","lastModifiedDate":"2024-03-13"},{"lineNumber":214,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":215,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":216,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":217,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void deleteAttribute_noAttribute() {","lastModifiedDate":"2024-03-13"},{"lineNumber":218,"author":{"gitId":"ReflectiveObsidian"},"content":"        try {","lastModifiedDate":"2024-03-13"},{"lineNumber":219,"author":{"gitId":"ReflectiveObsidian"},"content":"            Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2024-03-13"},{"lineNumber":220,"author":{"gitId":"ReflectiveObsidian"},"content":"            aliceCopy.deleteAttribute(\"no attribute\");","lastModifiedDate":"2024-03-13"},{"lineNumber":221,"author":{"gitId":"ReflectiveObsidian"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-13"},{"lineNumber":222,"author":{"gitId":"ReflectiveObsidian"},"content":"            assertTrue(e instanceof IllegalArgumentException);","lastModifiedDate":"2024-03-13"},{"lineNumber":223,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":224,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":225,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":226,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void deleteAttribute_hasAttribute() {","lastModifiedDate":"2024-03-13"},{"lineNumber":227,"author":{"gitId":"ReflectiveObsidian"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2024-03-13"},{"lineNumber":228,"author":{"gitId":"ReflectiveObsidian"},"content":"        aliceCopy.deleteAttribute(\"Name\");","lastModifiedDate":"2024-03-13"},{"lineNumber":229,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertFalse(aliceCopy.hasAttribute(\"Name\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":230,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":231,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":232,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void person_nameAttribute() {","lastModifiedDate":"2024-03-14"},{"lineNumber":233,"author":{"gitId":"ReflectiveObsidian"},"content":"        NameAttribute name \u003d new NameAttribute(\"Name\", \"Alice Pauline\");","lastModifiedDate":"2024-03-14"},{"lineNumber":234,"author":{"gitId":"ReflectiveObsidian"},"content":"        BirthdayAttribute birthday \u003d new BirthdayAttribute(","lastModifiedDate":"2024-03-14"},{"lineNumber":235,"author":{"gitId":"ReflectiveObsidian"},"content":"                \"Birthday\",","lastModifiedDate":"2024-03-14"},{"lineNumber":236,"author":{"gitId":"ReflectiveObsidian"},"content":"                LocalDate.of(1999, 1, 1));","lastModifiedDate":"2024-03-14"},{"lineNumber":237,"author":{"gitId":"ReflectiveObsidian"},"content":"        Person aliceCopy \u003d new Person(new Attribute[]{name, birthday});","lastModifiedDate":"2024-03-14"},{"lineNumber":238,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":239,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertEquals(\"Alice Pauline\", aliceCopy.getAttribute(\"Name\").getValueAsString());","lastModifiedDate":"2024-03-14"},{"lineNumber":240,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertEquals(","lastModifiedDate":"2024-03-14"},{"lineNumber":241,"author":{"gitId":"ReflectiveObsidian"},"content":"                LocalDate.of(1999, 1, 1).toString(),","lastModifiedDate":"2024-03-14"},{"lineNumber":242,"author":{"gitId":"ReflectiveObsidian"},"content":"                aliceCopy.getAttribute(\"Birthday\").getValueAsString());","lastModifiedDate":"2024-03-14"},{"lineNumber":243,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":244,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":245,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":246,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void allAttributesAsString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":247,"author":{"gitId":"ReflectiveObsidian"},"content":"        NameAttribute name \u003d new NameAttribute(\"Name\", \"Alice Pauline\");","lastModifiedDate":"2024-03-14"},{"lineNumber":248,"author":{"gitId":"ReflectiveObsidian"},"content":"        BirthdayAttribute birthday \u003d new BirthdayAttribute(","lastModifiedDate":"2024-03-14"},{"lineNumber":249,"author":{"gitId":"ReflectiveObsidian"},"content":"                \"Birthday\",","lastModifiedDate":"2024-03-14"},{"lineNumber":250,"author":{"gitId":"ReflectiveObsidian"},"content":"                LocalDate.of(1999, 1, 1));","lastModifiedDate":"2024-03-14"},{"lineNumber":251,"author":{"gitId":"ReflectiveObsidian"},"content":"        Person aliceCopy \u003d new Person(new Attribute[]{name, birthday});","lastModifiedDate":"2024-03-14"},{"lineNumber":252,"author":{"gitId":"ReflectiveObsidian"},"content":"        assertEquals(","lastModifiedDate":"2024-03-14"},{"lineNumber":253,"author":{"gitId":"ReflectiveObsidian"},"content":"                \"Name: Alice Pauline\\nBirthday: 1999-01-01\",","lastModifiedDate":"2024-03-14"},{"lineNumber":254,"author":{"gitId":"ReflectiveObsidian"},"content":"                aliceCopy.allAttributesAsString());","lastModifiedDate":"2024-03-14"},{"lineNumber":255,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":256,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":257,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":258,"author":{"gitId":"Bandov"},"content":"    public void deleteAttributeTest() {","lastModifiedDate":"2024-03-20"},{"lineNumber":259,"author":{"gitId":"Bandov"},"content":"        NameAttribute name \u003d new NameAttribute(\"Name\", \"Alice Pauline\");","lastModifiedDate":"2024-03-20"},{"lineNumber":260,"author":{"gitId":"Bandov"},"content":"        BirthdayAttribute birthday \u003d new BirthdayAttribute(","lastModifiedDate":"2024-03-20"},{"lineNumber":261,"author":{"gitId":"Bandov"},"content":"                \"Birthday\",","lastModifiedDate":"2024-03-20"},{"lineNumber":262,"author":{"gitId":"Bandov"},"content":"                LocalDate.of(1999, 1, 1));","lastModifiedDate":"2024-03-20"},{"lineNumber":263,"author":{"gitId":"Bandov"},"content":"        Person aliceCopy \u003d new Person(new Attribute[]{name, birthday});","lastModifiedDate":"2024-03-20"},{"lineNumber":264,"author":{"gitId":"Bandov"},"content":"        aliceCopy.deleteAttribute(\"Name\");","lastModifiedDate":"2024-03-20"},{"lineNumber":265,"author":{"gitId":"Bandov"},"content":"        assertFalse(aliceCopy.hasAttribute(\"Name\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":266,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"ReflectiveObsidian":185,"Bandov":11,"-":69,"Tsenrae":2}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":170,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":171,"author":{"gitId":"Bandov"},"content":"    void deleteAttribute_existingAttribute_removesAttribute() {","lastModifiedDate":"2024-03-20"},{"lineNumber":172,"author":{"gitId":"Bandov"},"content":"        assertTrue(IDA.hasAttribute(\"Name\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":173,"author":{"gitId":"Bandov"},"content":"        IDA.deleteAttribute(\"Name\");","lastModifiedDate":"2024-03-20"},{"lineNumber":174,"author":{"gitId":"Bandov"},"content":"        assertFalse(IDA.hasAttribute(\"Name\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":175,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":176,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":177,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":178,"author":{"gitId":"Bandov"},"content":"    void getPersonByUuid_existingUuid_returnsPerson() {","lastModifiedDate":"2024-03-20"},{"lineNumber":179,"author":{"gitId":"Bandov"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-20"},{"lineNumber":180,"author":{"gitId":"Bandov"},"content":"        Person foundPerson \u003d uniquePersonList.getPersonByUuid(ALICE.getUuid());","lastModifiedDate":"2024-03-20"},{"lineNumber":181,"author":{"gitId":"Bandov"},"content":"        assertNotNull(foundPerson);","lastModifiedDate":"2024-03-20"},{"lineNumber":182,"author":{"gitId":"Bandov"},"content":"        assertEquals(ALICE.getUuid(), foundPerson.getUuid());","lastModifiedDate":"2024-03-20"},{"lineNumber":183,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":184,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":185,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":186,"author":{"gitId":"Bandov"},"content":"    void getFullUuid_matchingDigits_returnsFullUuid() {","lastModifiedDate":"2024-03-20"},{"lineNumber":187,"author":{"gitId":"Bandov"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-20"},{"lineNumber":188,"author":{"gitId":"Bandov"},"content":"        String lastFourDigits \u003d ALICE.getUuidString().substring(36 - 4);","lastModifiedDate":"2024-03-20"},{"lineNumber":189,"author":{"gitId":"Bandov"},"content":"        UUID foundUuid \u003d uniquePersonList.getFullUuid(lastFourDigits);","lastModifiedDate":"2024-03-20"},{"lineNumber":190,"author":{"gitId":"Bandov"},"content":"        assertNotNull(foundUuid);","lastModifiedDate":"2024-03-20"},{"lineNumber":191,"author":{"gitId":"Bandov"},"content":"        assertEquals(ALICE.getUuid(), foundUuid);","lastModifiedDate":"2024-03-20"},{"lineNumber":192,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":193,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":194,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":195,"author":{"gitId":"Bandov"},"content":"    void hasAttribute_existingAttribute_returnsTrue() {","lastModifiedDate":"2024-03-20"},{"lineNumber":196,"author":{"gitId":"Bandov"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-20"},{"lineNumber":197,"author":{"gitId":"Bandov"},"content":"        boolean result \u003d uniquePersonList.hasAttribute(ALICE.getUuidString(), \"Phone\");","lastModifiedDate":"2024-03-20"},{"lineNumber":198,"author":{"gitId":"Bandov"},"content":"        assertTrue(result);","lastModifiedDate":"2024-03-20"},{"lineNumber":199,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":200,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":201,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":202,"author":{"gitId":"Bandov"},"content":"    void hasAttribute_nonExistingAttribute_returnsFalse() {","lastModifiedDate":"2024-03-20"},{"lineNumber":203,"author":{"gitId":"Bandov"},"content":"        boolean result \u003d uniquePersonList.hasAttribute(ALICE.getUuidString(), \"NonExistentAttribute\");","lastModifiedDate":"2024-03-20"},{"lineNumber":204,"author":{"gitId":"Bandov"},"content":"        assertFalse(result);","lastModifiedDate":"2024-03-20"},{"lineNumber":205,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Bandov":39,"-":167}},{"path":"src/test/java/seedu/address/model/person/attribute/AttributeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ReflectiveObsidian"},"content":"package seedu.address.model.person.attribute;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"public class AttributeTest {","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"    private static class ConcreteAttribute extends Attribute {","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"        private String value;","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"        public ConcreteAttribute(String name, String value) {","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"            super(name);","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"            this.value \u003d value;","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"        @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"        public String getValueAsString() {","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"            return value;","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"    private ConcreteAttribute attribute;","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"    public void setUp() {","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"        attribute \u003d new ConcreteAttribute(\"TestName\", \"TestValue\");","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"    public void getName_returnsCorrectName() {","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"TestName\", attribute.getName(), \"The name should match the one set in constructor.\");","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"Bandov"},"content":"    public void getValueAsString_returnsCorrectValue() {","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"TestValue\", attribute.getValueAsString(), \"The value should match the one set in constructor.\");","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"Bandov"},"content":"    public void testFromStringWithInteger() {","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"Bandov"},"content":"        String name \u003d \"testInt\";","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"Bandov"},"content":"        String value \u003d \"123\";","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"Bandov"},"content":"        Attribute result \u003d Attribute.fromString(name, value);","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"Bandov"},"content":"        assertTrue(result instanceof IntegerAttribute, \"The result should be an instance of IntegerAttribute\");","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"Bandov"},"content":"        assertEquals(name, result.getName(), \"Attribute name should match\");","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"Bandov"},"content":"        assertEquals(Integer.parseInt(value), ((IntegerAttribute) result).getValue(), \"Attribute value should match\");","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"Bandov"},"content":"    public void testFromStringWithDate() {","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"Bandov"},"content":"        String name \u003d \"testDate\";","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"Bandov"},"content":"        String value \u003d \"2020-01-01\";","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"Bandov"},"content":"        Attribute result \u003d Attribute.fromString(name, value);","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"Bandov"},"content":"        assertTrue(result instanceof DateAttribute, \"The result should be an instance of DateAttribute\");","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"Bandov"},"content":"        assertEquals(name, result.getName(), \"Attribute name should match\");","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"Bandov"},"content":"        assertEquals(LocalDate.parse(value), ((DateAttribute) result).getValue(), \"Attribute value should match\");","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"Bandov"},"content":"    public void testFromStringWithString() {","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"Bandov"},"content":"        String name \u003d \"testString\";","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"Bandov"},"content":"        String value \u003d \"notAnIntOrDate\";","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"Bandov"},"content":"        Attribute result \u003d Attribute.fromString(name, value);","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"Bandov"},"content":"        assertTrue(result instanceof StringAttribute, \"The result should be an instance of StringAttribute\");","lastModifiedDate":"2024-03-13"},{"lineNumber":70,"author":{"gitId":"Bandov"},"content":"        assertEquals(name, result.getName(), \"Attribute name should match\");","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"Bandov"},"content":"        assertEquals(value, ((StringAttribute) result).getValue(), \"Attribute value should match\");","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"Bandov"},"content":"    public void testFromStringWithInvalidDate() {","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"Bandov"},"content":"        String name \u003d \"testInvalidDate\";","lastModifiedDate":"2024-03-13"},{"lineNumber":77,"author":{"gitId":"Bandov"},"content":"        String value \u003d \"2020-02-30\"; // This is an invalid date","lastModifiedDate":"2024-03-13"},{"lineNumber":78,"author":{"gitId":"Bandov"},"content":"        Attribute result \u003d Attribute.fromString(name, value);","lastModifiedDate":"2024-03-13"},{"lineNumber":79,"author":{"gitId":"Bandov"},"content":"        assertTrue(result instanceof StringAttribute, \"Should fallback to StringAttribute on invalid date\");","lastModifiedDate":"2024-03-13"},{"lineNumber":80,"author":{"gitId":"Bandov"},"content":"        assertEquals(value, ((StringAttribute) result).getValue(), \"Attribute value should match\");","lastModifiedDate":"2024-03-13"},{"lineNumber":81,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":82,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"ReflectiveObsidian":1,"Bandov":81}},{"path":"src/test/java/seedu/address/model/person/attribute/BirthdayAttributeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ReflectiveObsidian"},"content":"package seedu.address.model.person.attribute;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"public class BirthdayAttributeTest {","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"    public void testValidBirthdayBeforeToday() {","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"        // Assuming today is not the test execution day, adjust the date accordingly","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"        LocalDate validBirthday \u003d LocalDate.now().minusYears(20); // 20 years ago","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"        BirthdayAttribute birthdayAttribute \u003d new BirthdayAttribute(\"ValidBirthday\", validBirthday);","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"        assertEquals(validBirthday, birthdayAttribute.getValue(),","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"                \"Birthday should be set correctly for dates before today\");","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"    public void testInvalidBirthdayToday() {","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"        // Test with today\u0027s date","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"            new BirthdayAttribute(\"BirthdayToday\", today);","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"        }, \"Should throw IllegalArgumentException for birthdays set to today\");","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"    public void testInvalidBirthdayInFuture() {","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"        // Test with a future date","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"        LocalDate futureDate \u003d LocalDate.now().plusDays(1); // Tomorrow","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"            new BirthdayAttribute(\"FutureBirthday\", futureDate);","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"        }, \"Should throw IllegalArgumentException for future birthdays\");","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"ReflectiveObsidian":1,"Bandov":37}},{"path":"src/test/java/seedu/address/model/person/attribute/DateAttributeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ReflectiveObsidian"},"content":"package seedu.address.model.person.attribute;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"public class DateAttributeTest {","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"    public void testConstructor() {","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"        LocalDate testDate \u003d LocalDate.of(2020, 1, 1);","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"        DateAttribute dateAttribute \u003d new DateAttribute(\"TestDate\", testDate);","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"TestDate\", dateAttribute.getName(), \"Constructor should correctly set name\");","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"        assertEquals(testDate, dateAttribute.getValue(), \"Constructor should correctly set date value\");","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"    public void testGetValueAsString() {","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"        LocalDate testDate \u003d LocalDate.of(2020, 2, 20);","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"        DateAttribute dateAttribute \u003d new DateAttribute(\"TestDateAsString\", testDate);","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"2020-02-20\", dateAttribute.getValueAsString(),","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"                \"getValueAsString should return correct date string\");","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"    public void testIsOnDate() {","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"        LocalDate testDate \u003d LocalDate.of(2021, 3, 15);","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"        DateAttribute dateAttribute \u003d new DateAttribute(\"TestIsOnDate\", testDate);","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"        // Test with the same date","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"        assertTrue(dateAttribute.isOnDate(LocalDate.of(2021, 3, 15)),","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"                \"isOnDate should return true for the same date\");","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"        // Test with a different date","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"Bandov"},"content":"        assertFalse(dateAttribute.isOnDate(LocalDate.of(2021, 3, 14)),","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"Bandov"},"content":"                \"isOnDate should return false for a different date\");","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"ReflectiveObsidian":1,"Bandov":42}},{"path":"src/test/java/seedu/address/model/person/attribute/IntegerAttributeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ReflectiveObsidian"},"content":"package seedu.address.model.person.attribute;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"public class IntegerAttributeTest {","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"    private IntegerAttribute attributeOne;","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"    private IntegerAttribute attributeTwo;","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"    private IntegerAttribute attributeThree;","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"    public void setUp() {","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"        attributeOne \u003d new IntegerAttribute(\"TestAttributeOne\", 5);","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"        attributeTwo \u003d new IntegerAttribute(\"TestAttributeTwo\", 10);","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"        attributeThree \u003d new IntegerAttribute(\"TestAttributeThree\", 5);","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"    public void testGetValue() {","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"        assertEquals(5, attributeOne.getValue());","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"        assertEquals(10, attributeTwo.getValue());","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"    public void testGetValueAsString() {","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"5\", attributeOne.getValueAsString());","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"10\", attributeTwo.getValueAsString());","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"    public void testCompare() {","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"        assertEquals(0, attributeOne.compare(attributeThree)); // same value","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"        assertTrue(attributeOne.compare(attributeTwo) \u003c 0); // attributeOne \u003c attributeTwo","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"        assertTrue(attributeTwo.compare(attributeOne) \u003e 0); // attributeTwo \u003e attributeOne","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"Bandov"},"content":"    public void testConstructor() {","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"TestAttributeOne\", attributeOne.getName()); //test the getName method","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"Bandov"},"content":"        assertEquals(5, attributeOne.getValue());","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-02-28"},{"lineNumber":47,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"ReflectiveObsidian":1,"Bandov":46}},{"path":"src/test/java/seedu/address/model/person/attribute/NameAttributeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ReflectiveObsidian"},"content":"package seedu.address.model.person.attribute;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"public class NameAttributeTest {","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"    public void testConstructor() {","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"        // Given name and value for the NameAttribute","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"        String attributeName \u003d \"FullName\";","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"        String attributeValue \u003d \"John Doe\";","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"        // When creating a new NameAttribute","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"        NameAttribute nameAttribute \u003d new NameAttribute(attributeName, attributeValue);","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"        // Then the name and value should be correctly set","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"        assertEquals(attributeName, nameAttribute.getName(), \"Attribute name should be correctly set by constructor\");","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"        assertEquals(attributeValue, nameAttribute.getValue(), \"Name value should be correctly set by constructor\");","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"ReflectiveObsidian":1,"Bandov":22}},{"path":"src/test/java/seedu/address/model/person/attribute/PhoneNumberAttributeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ReflectiveObsidian"},"content":"package seedu.address.model.person.attribute;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"public class PhoneNumberAttributeTest {","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"    public void testConstructor() {","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"        // Example phone number","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"        int phoneNumberValue \u003d 123456789;","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"        PhoneNumberAttribute phoneNumberAttribute \u003d new PhoneNumberAttribute(\"TestPhone\", phoneNumberValue);","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"TestPhone\", phoneNumberAttribute.getName(),","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"                \"Name should be correctly set by constructor\");","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"        assertEquals(phoneNumberValue, phoneNumberAttribute.getValue(),","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"                \"Phone number value should be correctly set by constructor\");","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"ReflectiveObsidian":1,"Bandov":20}},{"path":"src/test/java/seedu/address/model/person/attribute/SexAttributeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ReflectiveObsidian"},"content":"package seedu.address.model.person.attribute;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"public class SexAttributeTest {","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"    public void testConstructorAndGetter() {","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"        SexAttribute maleSexAttribute \u003d new SexAttribute(\"Gender\", SexAttribute.Gender.MALE);","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"        assertEquals(SexAttribute.Gender.MALE, maleSexAttribute.getGender(),","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"                \"Constructor should correctly set gender to MALE\");","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"        SexAttribute femaleSexAttribute \u003d new SexAttribute(\"Gender\", SexAttribute.Gender.FEMALE);","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"        assertEquals(SexAttribute.Gender.FEMALE, femaleSexAttribute.getGender(),","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"                \"Constructor should correctly set gender to FEMALE\");","lastModifiedDate":"2024-03-10"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"    public void testGetValueAsString() {","lastModifiedDate":"2024-03-10"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"        SexAttribute sexAttribute \u003d new SexAttribute(\"Gender\", SexAttribute.Gender.MALE);","lastModifiedDate":"2024-03-10"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"MALE\", sexAttribute.getValueAsString(),","lastModifiedDate":"2024-03-10"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"                \"getValueAsString should return \u0027MALE\u0027 for male gender\");","lastModifiedDate":"2024-03-10"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"        sexAttribute.setGender(SexAttribute.Gender.FEMALE);","lastModifiedDate":"2024-03-10"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"FEMALE\", sexAttribute.getValueAsString(),","lastModifiedDate":"2024-03-10"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"                \"getValueAsString should return \u0027FEMALE\u0027 after setting gender to female\");","lastModifiedDate":"2024-03-10"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-03-10"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"    public void testSetGender() {","lastModifiedDate":"2024-03-10"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"        SexAttribute sexAttribute \u003d new SexAttribute(\"Gender\", SexAttribute.Gender.MALE);","lastModifiedDate":"2024-03-10"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"        sexAttribute.setGender(SexAttribute.Gender.FEMALE);","lastModifiedDate":"2024-03-10"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"        assertEquals(SexAttribute.Gender.FEMALE, sexAttribute.getGender(),","lastModifiedDate":"2024-03-10"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"                \"setGender should correctly change gender to FEMALE\");","lastModifiedDate":"2024-03-10"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-03-10"},{"lineNumber":39,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-10"}],"authorContributionMap":{"ReflectiveObsidian":1,"Bandov":38}},{"path":"src/test/java/seedu/address/model/person/attribute/StringAttributeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ReflectiveObsidian"},"content":"package seedu.address.model.person.attribute;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"public class StringAttributeTest {","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"    private StringAttribute stringAttributeOne;","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"    private StringAttribute stringAttributeTwo;","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"    public void setUp() {","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"        stringAttributeOne \u003d new StringAttribute(\"TestAttributeOne\", \"TestValueOne\");","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"        stringAttributeTwo \u003d new StringAttribute(\"TestAttributeTwo\", \"TestValueTwo\");","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"    public void getValue_returnsCorrectValue() {","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"TestValueOne\", stringAttributeOne.getValue());","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"TestValueTwo\", stringAttributeTwo.getValue());","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"    public void getValueAsString_returnsCorrectValue() {","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"TestValueOne\", stringAttributeOne.getValueAsString());","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"TestValueTwo\", stringAttributeTwo.getValueAsString());","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"    @Test void matches_returnsCorrectValue() {","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"        assertEquals(true, stringAttributeOne.matches(\"Test\"));","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"        assertEquals(false, stringAttributeOne.matches(\"TestValueTwo\"));","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"ReflectiveObsidian":1,"Bandov":33}},{"path":"src/test/java/seedu/address/model/person/relationship/BioParentsRelationshipTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DingBao-sys"},"content":"//// BioParentsRelationshipTest.java","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"DingBao-sys"},"content":"//package seedu.address.model.person.relationship;","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"DingBao-sys"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"DingBao-sys"},"content":"//import java.util.UUID;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"DingBao-sys"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"DingBao-sys"},"content":"//public class BioParentsRelationshipTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"DingBao-sys"},"content":"//    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"DingBao-sys"},"content":"//    public void testBioParentsRelationshipCreation() {","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"DingBao-sys"},"content":"//        UUID parentUuid \u003d UUID.randomUUID();","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"DingBao-sys"},"content":"//        UUID childUuid \u003d UUID.randomUUID();","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"DingBao-sys"},"content":"//        BioParentsRelationship bioParentsRelationship \u003d new BioParentsRelationship(parentUuid, childUuid);","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"DingBao-sys"},"content":"//        assertEquals(parentUuid, bioParentsRelationship.getPerson1());","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"DingBao-sys"},"content":"//        assertEquals(childUuid, bioParentsRelationship.getPerson2());","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"DingBao-sys"},"content":"//        assertEquals(\"parent\", bioParentsRelationship.getRole(parentUuid));","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"DingBao-sys"},"content":"//        assertEquals(\"child\", bioParentsRelationship.getRole(childUuid));","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"DingBao-sys"},"content":"//    }","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"DingBao-sys"},"content":"//}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"DingBao-sys":22}},{"path":"src/test/java/seedu/address/model/person/relationship/FriendsRelationshipTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emberlynn-Loo"},"content":"// FriendsRelationshipTest.java","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Emberlynn-Loo"},"content":"package seedu.address.model.person.relationship;","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"Emberlynn-Loo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Emberlynn-Loo"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Emberlynn-Loo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"Emberlynn-Loo"},"content":"public class FriendsRelationshipTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void testFriendsRelationshipCreation() {","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID person1 \u003d UUID.randomUUID();","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID person2 \u003d UUID.randomUUID();","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"Emberlynn-Loo"},"content":"        FriendsRelationship friendsRelationship \u003d new FriendsRelationship(person1, person2);","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertEquals(person1, friendsRelationship.getPerson1());","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertEquals(person2, friendsRelationship.getPerson2());","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"Emberlynn-Loo"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Emberlynn-Loo":20}},{"path":"src/test/java/seedu/address/model/person/relationship/RelationshipTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DingBao-sys"},"content":"package seedu.address.model.person.relationship;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"DingBao-sys"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"DingBao-sys"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"DingBao-sys"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"DingBao-sys"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"DingBao-sys"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"DingBao-sys"},"content":"public class RelationshipTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"DingBao-sys"},"content":"    private static final UUID PERSON_1_UUID \u003d UUID.fromString(\"00000000-0000-0000-0000-000000000001\");","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"DingBao-sys"},"content":"    private static final UUID PERSON_2_UUID \u003d UUID.fromString(\"00000000-0000-0000-0000-000000000002\");","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"DingBao-sys"},"content":"    private static final String FAMILY_RELATIONSHIP_DESCRIPTOR \u003d \"family\";","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"DingBao-sys"},"content":"    private static final String FRIEND_RELATIONSHIP_DESCRIPTOR \u003d \"friend\";","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"DingBao-sys"},"content":"    private static final String INVALID_RELATIONSHIP_DESCRIPTOR \u003d \"spouse\";","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"DingBao-sys"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"DingBao-sys"},"content":"    public void testConstructorWithValidFamilyDescriptorDoesNotThrowIllegalArgumentException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"DingBao-sys"},"content":"        assertDoesNotThrow(() -\u003e new Relationship(PERSON_1_UUID, PERSON_2_UUID, FAMILY_RELATIONSHIP_DESCRIPTOR));","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"DingBao-sys"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"DingBao-sys"},"content":"    public void testConstructorWithInvalidFamilyDescriptorDoesThrowIllegalArgumentException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"DingBao-sys"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"DingBao-sys"},"content":"                new Relationship(PERSON_1_UUID, PERSON_2_UUID, INVALID_RELATIONSHIP_DESCRIPTOR));","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"DingBao-sys"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"DingBao-sys"},"content":"    public void getPerson1_returnsCorrectUuid() {","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"DingBao-sys"},"content":"        Relationship test \u003d new Relationship(PERSON_1_UUID, PERSON_2_UUID, FAMILY_RELATIONSHIP_DESCRIPTOR);","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"DingBao-sys"},"content":"        assertEquals(PERSON_1_UUID, test.getPerson1());","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"DingBao-sys"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"DingBao-sys"},"content":"    public void getPerson2_returnsCorrectUuid() {","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"DingBao-sys"},"content":"        Relationship test \u003d new Relationship(PERSON_1_UUID, PERSON_2_UUID, FAMILY_RELATIONSHIP_DESCRIPTOR);","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"DingBao-sys"},"content":"        assertEquals(PERSON_2_UUID, test.getPerson2());","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"DingBao-sys"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"DingBao-sys"},"content":"    public void testEqualsMethod() {","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"DingBao-sys"},"content":"        Relationship test1 \u003d new Relationship(PERSON_1_UUID, PERSON_2_UUID, FAMILY_RELATIONSHIP_DESCRIPTOR);","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"DingBao-sys"},"content":"        Relationship test2 \u003d new Relationship(PERSON_1_UUID, PERSON_2_UUID, FAMILY_RELATIONSHIP_DESCRIPTOR);","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"DingBao-sys"},"content":"        Relationship test3 \u003d new Relationship(PERSON_2_UUID, PERSON_1_UUID, FAMILY_RELATIONSHIP_DESCRIPTOR);","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"DingBao-sys"},"content":"        Relationship test4 \u003d new Relationship(PERSON_2_UUID, PERSON_1_UUID, FRIEND_RELATIONSHIP_DESCRIPTOR);","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"DingBao-sys"},"content":"        assertEquals(test1.equals(test2), true);","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"DingBao-sys"},"content":"        assertEquals(test1.equals(test3), true);","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"DingBao-sys"},"content":"        assertEquals(test3.equals(test4), false);","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"DingBao-sys"},"content":"        assertEquals(test1.equals(test4), false);","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"DingBao-sys"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"DingBao-sys"},"content":"    public void testStringMethod() {","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"DingBao-sys"},"content":"        Relationship test1 \u003d new Relationship(PERSON_1_UUID, PERSON_2_UUID, FAMILY_RELATIONSHIP_DESCRIPTOR);","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"DingBao-sys"},"content":"        assertEquals(","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"DingBao-sys"},"content":"                String.format(\"%s and %s are %s\",","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"DingBao-sys"},"content":"                        PERSON_1_UUID.toString(),","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"DingBao-sys"},"content":"                        PERSON_2_UUID.toString(),","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"DingBao-sys"},"content":"                        FAMILY_RELATIONSHIP_DESCRIPTOR), test1.toString());","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"DingBao-sys"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"DingBao-sys":56}},{"path":"src/test/java/seedu/address/model/person/relationship/RelationshipUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DingBao-sys"},"content":"package seedu.address.model.person.relationship;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"DingBao-sys"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"Emberlynn-Loo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"Emberlynn-Loo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"Emberlynn-Loo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"DingBao-sys"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"DingBao-sys"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.model.person.attribute.Attribute;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.model.person.attribute.NameAttribute;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"DingBao-sys"},"content":"public class RelationshipUtilTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"DingBao-sys"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void deleteRelationship_existingRelationship_successfullyDeleted() {","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute name1 \u003d new NameAttribute(\"Name\", \"John Doe\");","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute name2 \u003d new NameAttribute(\"Name\", \"Jane Doe\");","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute[] attributes1 \u003d new Attribute[]{name1};","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute[] attributes2 \u003d new Attribute[]{name2};","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Adding dummy people for testing","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"Emberlynn-Loo"},"content":"        Person person1 \u003d new Person(attributes1);","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"Emberlynn-Loo"},"content":"        Person person2 \u003d new Person(attributes2);","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID uuid11 \u003d person1.getUuid();","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID uuid22 \u003d person2.getUuid();","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Create a test relationship","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"Emberlynn-Loo"},"content":"        Relationship testRelationship \u003d new Relationship(uuid11, uuid22, \"family\");","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Create RelationshipUtil instance and add the test relationship","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"Emberlynn-Loo"},"content":"        RelationshipUtil relationshipUtil \u003d new RelationshipUtil();","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"Emberlynn-Loo"},"content":"        relationshipUtil.addRelationship(testRelationship);","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Delete the test relationship","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"Emberlynn-Loo"},"content":"        relationshipUtil.deleteRelationship(testRelationship);","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Check if the relationship has been deleted","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertFalse(relationshipUtil.hasRelationship(testRelationship));","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"DingBao-sys"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void hasRelationship_existingRelationship_returnsTrue() {","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute name1 \u003d new NameAttribute(\"Name\", \"John Doe\");","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute name2 \u003d new NameAttribute(\"Name\", \"Jane Doe\");","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute[] attributes1 \u003d new Attribute[]{name1};","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute[] attributes2 \u003d new Attribute[]{name2};","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Adding dummy people for testing","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"Emberlynn-Loo"},"content":"        Person person1 \u003d new Person(attributes1);","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"Emberlynn-Loo"},"content":"        Person person2 \u003d new Person(attributes2);","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID uuid11 \u003d person1.getUuid();","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID uuid22 \u003d person2.getUuid();","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Create a test relationship","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"Emberlynn-Loo"},"content":"        Relationship testRelationship \u003d new Relationship(uuid11, uuid22, \"family\");","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Create RelationshipUtil instance and add the test relationship","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"Emberlynn-Loo"},"content":"        RelationshipUtil relationshipUtil \u003d new RelationshipUtil();","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"Emberlynn-Loo"},"content":"        relationshipUtil.addRelationship(testRelationship);","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Check if the relationship exists","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertTrue(relationshipUtil.hasRelationship(testRelationship));","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"DingBao-sys"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void hasRelationshipWithDescriptor_existingRelationshipWithDescriptor_returnsTrue() {","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute name1 \u003d new NameAttribute(\"Name\", \"John Doe\");","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute name2 \u003d new NameAttribute(\"Name\", \"Jane Doe\");","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute[] attributes1 \u003d new Attribute[]{name1};","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute[] attributes2 \u003d new Attribute[]{name2};","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Adding dummy people for testing","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"Emberlynn-Loo"},"content":"        Person person1 \u003d new Person(attributes1);","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"Emberlynn-Loo"},"content":"        Person person2 \u003d new Person(attributes2);","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID uuid11 \u003d person1.getUuid();","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID uuid22 \u003d person2.getUuid();","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Create a test relationship","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"Emberlynn-Loo"},"content":"        Relationship testRelationship \u003d new Relationship(uuid11, uuid22, \"family\");","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Create RelationshipUtil instance and add the test relationship","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"Emberlynn-Loo"},"content":"        RelationshipUtil relationshipUtil \u003d new RelationshipUtil();","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"Emberlynn-Loo"},"content":"        relationshipUtil.addRelationship(testRelationship);","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Check if the relationship with the specified descriptor exists","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertTrue(relationshipUtil.hasRelationshipWithDescriptor(testRelationship));","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"DingBao-sys"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void hasRelationshipWithDescriptor_matchingRelationship_returnsTrue() {","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Create dummy people for testing","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute name1 \u003d new NameAttribute(\"Name\", \"John Doe\");","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute name2 \u003d new NameAttribute(\"Name\", \"Jane Doe\");","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute[] attributes1 \u003d new Attribute[]{name1};","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute[] attributes2 \u003d new Attribute[]{name2};","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"Emberlynn-Loo"},"content":"        Person person1 \u003d new Person(attributes1);","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"Emberlynn-Loo"},"content":"        Person person2 \u003d new Person(attributes2);","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID uuid1 \u003d person1.getUuid();","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID uuid2 \u003d person2.getUuid();","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Create two test relationships","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"Emberlynn-Loo"},"content":"        Relationship matchingRelationship \u003d new Relationship(uuid1, uuid2, \"family\");","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"Emberlynn-Loo"},"content":"        Relationship nonMatchingRelationship \u003d new Relationship(uuid1, uuid2, \"friend\");","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Create RelationshipUtil instance and add the relationships","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"Emberlynn-Loo"},"content":"        RelationshipUtil relationshipUtil \u003d new RelationshipUtil();","lastModifiedDate":"2024-03-21"},{"lineNumber":108,"author":{"gitId":"Emberlynn-Loo"},"content":"        relationshipUtil.addRelationship(matchingRelationship);","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"Emberlynn-Loo"},"content":"        relationshipUtil.addRelationship(nonMatchingRelationship);","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Check if the matching relationship exists with the correct descriptor","lastModifiedDate":"2024-03-21"},{"lineNumber":112,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertTrue(relationshipUtil.hasRelationshipWithDescriptor(matchingRelationship));","lastModifiedDate":"2024-03-21"},{"lineNumber":113,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":114,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"DingBao-sys"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":116,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void hasRelationshipWithDescriptor_existingRelationshipWithReversedPersons_returnsTrue() {","lastModifiedDate":"2024-03-21"},{"lineNumber":117,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Create dummy people for testing","lastModifiedDate":"2024-03-21"},{"lineNumber":118,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute name1 \u003d new NameAttribute(\"Name\", \"John Doe\");","lastModifiedDate":"2024-03-21"},{"lineNumber":119,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute name2 \u003d new NameAttribute(\"Name\", \"Jane Doe\");","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute[] attributes1 \u003d new Attribute[]{name1};","lastModifiedDate":"2024-03-21"},{"lineNumber":121,"author":{"gitId":"Emberlynn-Loo"},"content":"        Attribute[] attributes2 \u003d new Attribute[]{name2};","lastModifiedDate":"2024-03-21"},{"lineNumber":122,"author":{"gitId":"Emberlynn-Loo"},"content":"        Person person1 \u003d new Person(attributes1);","lastModifiedDate":"2024-03-21"},{"lineNumber":123,"author":{"gitId":"Emberlynn-Loo"},"content":"        Person person2 \u003d new Person(attributes2);","lastModifiedDate":"2024-03-21"},{"lineNumber":124,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID uuid1 \u003d person1.getUuid();","lastModifiedDate":"2024-03-21"},{"lineNumber":125,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID uuid2 \u003d person2.getUuid();","lastModifiedDate":"2024-03-21"},{"lineNumber":126,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":127,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Create a test relationship with reversed persons","lastModifiedDate":"2024-03-21"},{"lineNumber":128,"author":{"gitId":"Emberlynn-Loo"},"content":"        Relationship testRelationship \u003d new Relationship(uuid2, uuid1, \"family\");","lastModifiedDate":"2024-03-21"},{"lineNumber":129,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":130,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Create RelationshipUtil instance and add the test relationship","lastModifiedDate":"2024-03-21"},{"lineNumber":131,"author":{"gitId":"Emberlynn-Loo"},"content":"        RelationshipUtil relationshipUtil \u003d new RelationshipUtil();","lastModifiedDate":"2024-03-21"},{"lineNumber":132,"author":{"gitId":"Emberlynn-Loo"},"content":"        relationshipUtil.addRelationship(new Relationship(uuid1, uuid2, \"family\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":133,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":134,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Check if the relationship exists with reversed persons but the same role descriptor","lastModifiedDate":"2024-03-21"},{"lineNumber":135,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertTrue(relationshipUtil.hasRelationshipWithDescriptor(testRelationship));","lastModifiedDate":"2024-03-21"},{"lineNumber":136,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":137,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":138,"author":{"gitId":"DingBao-sys"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":139,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void getExistingRelationship_existingRelationship_returnsStringRepresentation() {","lastModifiedDate":"2024-03-21"},{"lineNumber":140,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Create a RelationshipUtil instance","lastModifiedDate":"2024-03-21"},{"lineNumber":141,"author":{"gitId":"Emberlynn-Loo"},"content":"        RelationshipUtil relationshipUtil \u003d new RelationshipUtil();","lastModifiedDate":"2024-03-21"},{"lineNumber":142,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":143,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Create UUIDs for two persons","lastModifiedDate":"2024-03-21"},{"lineNumber":144,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID person1Uuid \u003d UUID.randomUUID();","lastModifiedDate":"2024-03-21"},{"lineNumber":145,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID person2Uuid \u003d UUID.randomUUID();","lastModifiedDate":"2024-03-21"},{"lineNumber":146,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":147,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Create a relationship and add it to the RelationshipUtil","lastModifiedDate":"2024-03-21"},{"lineNumber":148,"author":{"gitId":"Emberlynn-Loo"},"content":"        Relationship relationship \u003d new Relationship(person1Uuid, person2Uuid, \"family\");","lastModifiedDate":"2024-03-21"},{"lineNumber":149,"author":{"gitId":"Emberlynn-Loo"},"content":"        relationshipUtil.addRelationship(relationship);","lastModifiedDate":"2024-03-21"},{"lineNumber":150,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":151,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Retrieve the string representation using getExistingRelationship","lastModifiedDate":"2024-03-21"},{"lineNumber":152,"author":{"gitId":"Emberlynn-Loo"},"content":"        String expectedString \u003d String.format(\"%s and %s are %s\",","lastModifiedDate":"2024-03-21"},{"lineNumber":153,"author":{"gitId":"Emberlynn-Loo"},"content":"                person1Uuid, person2Uuid, \"family\");","lastModifiedDate":"2024-03-21"},{"lineNumber":154,"author":{"gitId":"Emberlynn-Loo"},"content":"        String actualString \u003d relationshipUtil.getExistingRelationship(relationship);","lastModifiedDate":"2024-03-21"},{"lineNumber":155,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":156,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Assert that the retrieved string matches the expected string representation","lastModifiedDate":"2024-03-21"},{"lineNumber":157,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertEquals(expectedString, actualString);","lastModifiedDate":"2024-03-21"},{"lineNumber":158,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":159,"author":{"gitId":"DingBao-sys"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":160,"author":{"gitId":"DingBao-sys"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":161,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void getExistingRelationship_nonExistingRelationship_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":162,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Create a RelationshipUtil instance","lastModifiedDate":"2024-03-21"},{"lineNumber":163,"author":{"gitId":"Emberlynn-Loo"},"content":"        RelationshipUtil relationshipUtil \u003d new RelationshipUtil();","lastModifiedDate":"2024-03-21"},{"lineNumber":164,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":165,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Create UUIDs for two persons","lastModifiedDate":"2024-03-21"},{"lineNumber":166,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID person1Uuid \u003d UUID.randomUUID();","lastModifiedDate":"2024-03-21"},{"lineNumber":167,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID person2Uuid \u003d UUID.randomUUID();","lastModifiedDate":"2024-03-21"},{"lineNumber":168,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":169,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Create a relationship without adding it to the RelationshipUtil","lastModifiedDate":"2024-03-21"},{"lineNumber":170,"author":{"gitId":"Emberlynn-Loo"},"content":"        Relationship relationship \u003d new Relationship(person1Uuid, person2Uuid, \"family\");","lastModifiedDate":"2024-03-21"},{"lineNumber":171,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":172,"author":{"gitId":"Emberlynn-Loo"},"content":"        // Assert that trying to retrieve a non-existing relationship throws an exception","lastModifiedDate":"2024-03-21"},{"lineNumber":173,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e relationshipUtil.getExistingRelationship(relationship));","lastModifiedDate":"2024-03-21"},{"lineNumber":174,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":175,"author":{"gitId":"DingBao-sys"},"content":"    @Test","lastModifiedDate":"2024-03-22"},{"lineNumber":176,"author":{"gitId":"DingBao-sys"},"content":"    public void testEqualsMethodWithSameInstance() {","lastModifiedDate":"2024-03-22"},{"lineNumber":177,"author":{"gitId":"DingBao-sys"},"content":"        RelationshipUtil test \u003d new RelationshipUtil();","lastModifiedDate":"2024-03-22"},{"lineNumber":178,"author":{"gitId":"DingBao-sys"},"content":"        assertEquals(test.equals(test), true);","lastModifiedDate":"2024-03-22"},{"lineNumber":179,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":180,"author":{"gitId":"DingBao-sys"},"content":"    @Test","lastModifiedDate":"2024-03-22"},{"lineNumber":181,"author":{"gitId":"DingBao-sys"},"content":"    public void testEqualsMethodReturnFalseWithDifferentInstance() {","lastModifiedDate":"2024-03-22"},{"lineNumber":182,"author":{"gitId":"DingBao-sys"},"content":"        RelationshipUtil test \u003d new RelationshipUtil();","lastModifiedDate":"2024-03-22"},{"lineNumber":183,"author":{"gitId":"DingBao-sys"},"content":"        String test2 \u003d \"\";","lastModifiedDate":"2024-03-22"},{"lineNumber":184,"author":{"gitId":"DingBao-sys"},"content":"        assertEquals(test.equals(test2), false);","lastModifiedDate":"2024-03-22"},{"lineNumber":185,"author":{"gitId":"DingBao-sys"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":186,"author":{"gitId":"DingBao-sys"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"DingBao-sys":37,"Emberlynn-Loo":149}},{"path":"src/test/java/seedu/address/model/person/relationship/RoleBasedRelationshipTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DingBao-sys"},"content":"//package seedu.address.model.person.relationship;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"DingBao-sys"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"DingBao-sys"},"content":"//import java.util.UUID;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"DingBao-sys"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"DingBao-sys"},"content":"//public class RoleBasedRelationshipTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"DingBao-sys"},"content":"//    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"DingBao-sys"},"content":"//    public void testRoleBasedRelationshipCreation() {","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"DingBao-sys"},"content":"//        UUID person1 \u003d UUID.randomUUID();","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"DingBao-sys"},"content":"//        UUID person2 \u003d UUID.randomUUID();","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"DingBao-sys"},"content":"//        RoleBasedRelationship relationship \u003d new RoleBasedRelationship(person1, person2, \"Family\",","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"DingBao-sys"},"content":"//                \"Parent\", \"Child\");","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"DingBao-sys"},"content":"//        assertEquals(person1, relationship.getPerson1());","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"DingBao-sys"},"content":"//        assertEquals(person2, relationship.getPerson2());","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"DingBao-sys"},"content":"//    }","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"DingBao-sys"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"DingBao-sys"},"content":"//    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"DingBao-sys"},"content":"//    public void testAddRoleAndGetRoleDescriptor() {","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"DingBao-sys"},"content":"//        UUID person1 \u003d UUID.randomUUID();","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"DingBao-sys"},"content":"//        UUID person2 \u003d UUID.randomUUID();","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"DingBao-sys"},"content":"//        RoleBasedRelationship relationship \u003d new RoleBasedRelationship(person1, person2, \"Family\",","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"DingBao-sys"},"content":"//                \"Parent\", \"Child\");","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"DingBao-sys"},"content":"//        String role1 \u003d relationship.getRoleDescriptor(person1);","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"DingBao-sys"},"content":"//        String role2 \u003d relationship.getRoleDescriptor(person2);","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"DingBao-sys"},"content":"//        assertEquals(role1, \"Parent\");","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"DingBao-sys"},"content":"//        assertEquals(role2, \"Child\");","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"DingBao-sys"},"content":"//    }","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"DingBao-sys"},"content":"//}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"DingBao-sys":32}},{"path":"src/test/java/seedu/address/model/person/relationship/SpousesRelationshipTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emberlynn-Loo"},"content":"package seedu.address.model.person.relationship;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Emberlynn-Loo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"Emberlynn-Loo"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"Emberlynn-Loo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"Emberlynn-Loo"},"content":"public class SpousesRelationshipTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"Emberlynn-Loo"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"Emberlynn-Loo"},"content":"    public void testSpousesRelationshipCreation() {","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID person1 \u003d UUID.randomUUID();","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"Emberlynn-Loo"},"content":"        UUID person2 \u003d UUID.randomUUID();","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"Emberlynn-Loo"},"content":"        SpousesRelationship spousesRelationship \u003d new SpousesRelationship(person1, person2);","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertEquals(person1, spousesRelationship.getPerson1());","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"Emberlynn-Loo"},"content":"        assertEquals(person2, spousesRelationship.getPerson2());","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"Emberlynn-Loo"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Emberlynn-Loo":19}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedAttributeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tsenrae"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"Tsenrae"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"Tsenrae"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"Tsenrae"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"Tsenrae"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"Tsenrae"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"Tsenrae"},"content":"import seedu.address.model.person.attribute.Attribute;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"Tsenrae"},"content":"public class JsonAdaptedAttributeTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"Tsenrae"},"content":"    private static final String VALID_TYPE \u003d \"Name\";","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"Tsenrae"},"content":"    private static final String VALID_VALUE \u003d \"John Doe\";","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"Tsenrae"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"Tsenrae"},"content":"    public void toModelType_validAttribute_returnsAttribute() throws IllegalValueException {","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"Tsenrae"},"content":"        // Create JsonAdaptedAttribute with valid type and value","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"Tsenrae"},"content":"        JsonAdaptedAttribute jsonAdaptedAttribute \u003d new JsonAdaptedAttribute(VALID_TYPE, VALID_VALUE);","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"Tsenrae"},"content":"        // Convert to model type and check if conversion was successful","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"Tsenrae"},"content":"        Attribute attribute \u003d jsonAdaptedAttribute.toModelType();","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"Tsenrae"},"content":"        assertEquals(VALID_TYPE, attribute.getName());","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"Tsenrae"},"content":"        assertEquals(VALID_VALUE, attribute.getValueAsString());","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"Tsenrae"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"Tsenrae"},"content":"    public void toModelType_nullType_throwsIllegalValueException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"Tsenrae"},"content":"        // Create JsonAdaptedAttribute with null type","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"Tsenrae"},"content":"        JsonAdaptedAttribute jsonAdaptedAttribute \u003d new JsonAdaptedAttribute(null, VALID_VALUE);","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"Tsenrae"},"content":"        // Verify that IllegalValueException is thrown when converting to model type","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"Tsenrae"},"content":"        assertThrows(IllegalValueException.class, jsonAdaptedAttribute::toModelType);","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"Tsenrae"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"Tsenrae"},"content":"    public void toModelType_nullValue_throwsIllegalValueException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"Tsenrae"},"content":"        // Create JsonAdaptedAttribute with null value","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"Tsenrae"},"content":"        JsonAdaptedAttribute jsonAdaptedAttribute \u003d new JsonAdaptedAttribute(VALID_TYPE, null);","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"Tsenrae"},"content":"        // Verify that IllegalValueException is thrown when converting to model type","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"Tsenrae"},"content":"        assertThrows(IllegalValueException.class, jsonAdaptedAttribute::toModelType);","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"Tsenrae"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"Tsenrae"},"content":"    public void toModelType_emptyType_throwsIllegalValueException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"Tsenrae"},"content":"        // Create JsonAdaptedAttribute with empty type","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"Tsenrae"},"content":"        JsonAdaptedAttribute jsonAdaptedAttribute \u003d new JsonAdaptedAttribute(null, VALID_VALUE);","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"Tsenrae"},"content":"        // Verify that IllegalValueException is thrown when converting to model type","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"Tsenrae"},"content":"        assertThrows(IllegalValueException.class, jsonAdaptedAttribute::toModelType);","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"Tsenrae"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"Tsenrae"},"content":"    public void toModelType_emptyValue_throwsIllegalValueException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"Tsenrae"},"content":"        // Create JsonAdaptedAttribute with empty value","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"Tsenrae"},"content":"        JsonAdaptedAttribute jsonAdaptedAttribute \u003d new JsonAdaptedAttribute(VALID_TYPE, \"\");","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"Tsenrae"},"content":"        // Verify that IllegalValueException is thrown when converting to model type","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"Tsenrae"},"content":"        assertThrows(IllegalValueException.class, jsonAdaptedAttribute::toModelType);","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"Tsenrae"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"Tsenrae"},"content":"    public void toModelType_invalidType_throwsIllegalValueException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"Tsenrae"},"content":"        // Create JsonAdaptedAttribute with invalid type","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"Tsenrae"},"content":"        JsonAdaptedAttribute jsonAdaptedAttribute \u003d new JsonAdaptedAttribute(\"\", VALID_VALUE);","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"Tsenrae"},"content":"        // Verify that IllegalValueException is thrown when converting to model type","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"Tsenrae"},"content":"        assertThrows(IllegalValueException.class, jsonAdaptedAttribute::toModelType);","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"Tsenrae"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"Tsenrae"},"content":"    public void constructor_nullAttribute_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"Tsenrae"},"content":"        try {","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"Tsenrae"},"content":"            new JsonAdaptedAttribute(null);","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"Tsenrae"},"content":"            fail(\"Expected NullPointerException to be thrown\");","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"Tsenrae"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"Tsenrae"},"content":"            // Expected exception","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"Tsenrae"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"Tsenrae"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"Tsenrae"},"content":"    public void toModelType_validAttribute_success() {","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"Tsenrae"},"content":"        JsonAdaptedAttribute jsonAdaptedAttribute \u003d new JsonAdaptedAttribute(\"Name\", \"John Doe\");","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"Tsenrae"},"content":"        try {","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"Tsenrae"},"content":"            Attribute attribute \u003d jsonAdaptedAttribute.toModelType();","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"Tsenrae"},"content":"            assertEquals(\"Name\", attribute.getName());","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"Tsenrae"},"content":"            assertEquals(\"John Doe\", attribute.getValueAsString());","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"Tsenrae"},"content":"        } catch (IllegalValueException e) {","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"Tsenrae"},"content":"            fail(\"Unexpected IllegalValueException thrown\");","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"Tsenrae"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"Tsenrae"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"Tsenrae":95}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonAttrTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tsenrae"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"Tsenrae"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"Tsenrae"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"Tsenrae"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"Tsenrae"},"content":"import java.util.List;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"Tsenrae"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"Tsenrae"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"Tsenrae"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"Tsenrae"},"content":"import seedu.address.model.person.attribute.Attribute;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"Tsenrae"},"content":"import seedu.address.model.person.attribute.NameAttribute;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"Tsenrae"},"content":"import seedu.address.model.person.attribute.StringAttribute;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"Tsenrae"},"content":"public class JsonAdaptedPersonAttrTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"Tsenrae"},"content":"    private static final String VALID_ATTRIBUTE_NAME \u003d \"Age\";","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"Tsenrae"},"content":"    private static final String VALID_ATTRIBUTE_VALUE \u003d \"30\";","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"Tsenrae"},"content":"    private static final String VALID_UUID \u003d \"00000000-0000-0000-0000-000000000001\";","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"Tsenrae"},"content":"    private static final JsonAdaptedAttribute VALID_ATTRIBUTE \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"Tsenrae"},"content":"            new JsonAdaptedAttribute(VALID_ATTRIBUTE_NAME, VALID_ATTRIBUTE_VALUE);","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"Tsenrae"},"content":"    private static final List\u003cJsonAdaptedAttribute\u003e VALID_ATTRIBUTES \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"Tsenrae"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"Tsenrae"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"Tsenrae"},"content":"        // Create a list of valid attributes","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"Tsenrae"},"content":"        VALID_ATTRIBUTES.add(VALID_ATTRIBUTE);","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"Tsenrae"},"content":"        // Create JsonAdaptedPersonAttr with valid attributes and tags","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"Tsenrae"},"content":"        JsonAdaptedPersonAttr jsonAdaptedPersonAttr \u003d new JsonAdaptedPersonAttr(VALID_UUID, VALID_ATTRIBUTES);","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"Tsenrae"},"content":"        // Convert to model type and check if conversion was successful","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"Tsenrae"},"content":"        Person person \u003d jsonAdaptedPersonAttr.toModelType();","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"Tsenrae"},"content":"        assertEquals(1, person.getAttributes().size());","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"Tsenrae"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"Tsenrae"},"content":"    public void toModelType_invalidAttribute_throwsIllegalValueException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"Tsenrae"},"content":"        // Create JsonAdaptedAttribute with invalid type","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"Tsenrae"},"content":"        JsonAdaptedAttribute jsonAdaptedAttribute \u003d new JsonAdaptedAttribute(\"\", VALID_ATTRIBUTE_VALUE);","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"Tsenrae"},"content":"        List\u003cJsonAdaptedAttribute\u003e invalidAttributes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"Tsenrae"},"content":"        invalidAttributes.add(jsonAdaptedAttribute);","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"Tsenrae"},"content":"        // Create JsonAdaptedPersonAttr with invalid attributes","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"Tsenrae"},"content":"        JsonAdaptedPersonAttr jsonAdaptedPersonAttr \u003d new JsonAdaptedPersonAttr(VALID_UUID, invalidAttributes);","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"Tsenrae"},"content":"        // Verify that IllegalValueException is thrown when converting to model type","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"Tsenrae"},"content":"        assertThrows(IllegalValueException.class, jsonAdaptedPersonAttr::toModelType);","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"Tsenrae"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"Tsenrae"},"content":"    public void constructor_validPerson_success() {","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"Tsenrae"},"content":"        // Create a Person with attributes and tags","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"Tsenrae"},"content":"        Attribute[] attributes \u003d new Attribute[2];","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"Tsenrae"},"content":"        attributes[0] \u003d new NameAttribute(\"Name\", \"John Doe\");","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"Tsenrae"},"content":"        attributes[1] \u003d new StringAttribute(\"Email\", \"john@example.com\");","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"Tsenrae"},"content":"        Person person \u003d new Person(attributes);","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"Tsenrae"},"content":"        // Convert the Person to JsonAdaptedPersonAttr","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"Tsenrae"},"content":"        JsonAdaptedPersonAttr jsonAdaptedPersonAttr \u003d new JsonAdaptedPersonAttr(person);","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"Tsenrae"},"content":"        // Check if attributes are converted correctly","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"Tsenrae"},"content":"        assertEquals(2, jsonAdaptedPersonAttr.getAttributes().size());","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"Tsenrae"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"Tsenrae":71}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedRelationshipTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tsenrae"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"Tsenrae"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"Tsenrae"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"Tsenrae"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"Tsenrae"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"Tsenrae"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"Tsenrae"},"content":"import seedu.address.model.person.relationship.Relationship;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"Tsenrae"},"content":"import seedu.address.model.person.relationship.RoleBasedRelationship;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"Tsenrae"},"content":"public class JsonAdaptedRelationshipTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"Tsenrae"},"content":"    private static final UUID VALID_UUID1 \u003d UUID.randomUUID();","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"Tsenrae"},"content":"    private static final UUID VALID_UUID2 \u003d UUID.randomUUID();","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"Tsenrae"},"content":"    private static final String VALID_DESCRIPTOR1 \u003d \"friend\";","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"Tsenrae"},"content":"    private static final String VALID_DESCRIPTOR2 \u003d \"family\";","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"Tsenrae"},"content":"    private static final String VALID_ROLE1 \u003d \"husband\";","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"Tsenrae"},"content":"    private static final String VALID_ROLE2 \u003d \"wife\";","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"Tsenrae"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"Tsenrae"},"content":"    public void toModelType_validRelationshipDetails_returnsRelationship() throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"Tsenrae"},"content":"        JsonAdaptedRelationship relationship \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"Tsenrae"},"content":"                new JsonAdaptedRelationship(new Relationship(VALID_UUID1, VALID_UUID2, VALID_DESCRIPTOR1));","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"Tsenrae"},"content":"        assertEquals(new Relationship(VALID_UUID1, VALID_UUID2, VALID_DESCRIPTOR1), relationship.toModelType());","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"Tsenrae"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"Tsenrae"},"content":"    public void toModelType_validRoleBasedRelationshipDetails_returnsRoleBasedRelationship() throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"Tsenrae"},"content":"        JsonAdaptedRelationship relationship \u003d new JsonAdaptedRelationship(","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"Tsenrae"},"content":"                new RoleBasedRelationship(VALID_UUID1, VALID_UUID2, VALID_DESCRIPTOR2, VALID_ROLE1, VALID_ROLE2));","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"Tsenrae"},"content":"        assertEquals(","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"Tsenrae"},"content":"                new RoleBasedRelationship(VALID_UUID1, VALID_UUID2, VALID_DESCRIPTOR2, VALID_ROLE1, VALID_ROLE2),","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"Tsenrae"},"content":"                    relationship.toModelType());","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"Tsenrae"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"Tsenrae"},"content":"    public void toModelType_invalidDescriptor_throwsIllegalValueException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"Tsenrae"},"content":"        JsonAdaptedRelationship relationship \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"Tsenrae"},"content":"                new JsonAdaptedRelationship(VALID_UUID1.toString(),","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"Tsenrae"},"content":"                        VALID_UUID2.toString(), \"\", VALID_ROLE1, VALID_ROLE2);","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"Tsenrae"},"content":"        assertThrows(IllegalValueException.class, relationship::toModelType);","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"Tsenrae"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"Tsenrae"},"content":"    public void toModelType_nullDescriptor_throwsIllegalValueException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"Tsenrae"},"content":"        JsonAdaptedRelationship relationship \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"Tsenrae"},"content":"                new JsonAdaptedRelationship(VALID_UUID1.toString(), VALID_UUID2.toString(),","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"Tsenrae"},"content":"                        null, VALID_ROLE1, VALID_ROLE2);","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"Tsenrae"},"content":"        assertThrows(IllegalValueException.class, relationship::toModelType);","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"Tsenrae"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"Tsenrae"},"content":"    public void toModelType_nullPerson1_throwsIllegalValueException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"Tsenrae"},"content":"        JsonAdaptedRelationship relationship \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"Tsenrae"},"content":"                new JsonAdaptedRelationship(null, VALID_UUID2.toString(), VALID_DESCRIPTOR1, VALID_ROLE1, VALID_ROLE2);","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"Tsenrae"},"content":"        assertThrows(IllegalValueException.class, relationship::toModelType);","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"Tsenrae"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"Tsenrae"},"content":"    public void toModelType_nullPerson2_throwsIllegalValueException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"Tsenrae"},"content":"        JsonAdaptedRelationship relationship \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"Tsenrae"},"content":"                new JsonAdaptedRelationship(VALID_UUID1.toString(), null, VALID_DESCRIPTOR1, VALID_ROLE1, VALID_ROLE2);","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"Tsenrae"},"content":"        assertThrows(IllegalValueException.class, relationship::toModelType);","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"Tsenrae"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"Tsenrae":68}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"Tsenrae"},"content":"import static seedu.address.testutil.TypicalPersonsUuid.ALICE;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"Tsenrae"},"content":"import static seedu.address.testutil.TypicalPersonsUuid.HOON;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"Tsenrae"},"content":"import static seedu.address.testutil.TypicalPersonsUuid.IDA;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"Tsenrae"},"content":"import static seedu.address.testutil.TypicalPersonsUuid.getTypicalAddressBook;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":96,"Tsenrae":4}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"Tsenrae"},"content":"import seedu.address.testutil.TypicalPersonsUuid;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"Tsenrae"},"content":"    public void toModelType_typicalPersonsUuidFile_success() throws Exception {","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"Tsenrae"},"content":"        System.out.println(addressBookFromFile.toString());","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"Tsenrae"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersonsUuid.getTypicalAddressBook();","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":36,"Tsenrae":4}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Tsenrae"},"content":"import static seedu.address.testutil.TypicalPersonsUuid.getTypicalAddressBook;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":67,"Tsenrae":1}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"Tsenrae"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new Person(name, phone, email, address, tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"Tsenrae"},"content":"    public Person buildWithUuid(String uuid) {","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"Tsenrae"},"content":"        return new Person(UUID.fromString(uuid), name, phone, email, address);","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"-":96,"Tsenrae":5}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":51,"author":{"gitId":"Bandov"},"content":"    public static final Person DOG \u003d new PersonBuilder().withName(\"Dog\").withPhone(\"12345678\")","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"Bandov"},"content":"            .withEmail(\"dog@dog.com\").withAddress(\"dog street\").build();","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"Bandov"},"content":"    public static final Person CAT \u003d new PersonBuilder().withName(\"Cat\").withPhone(\"87654321\")","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"Bandov"},"content":"            .withEmail(\"cat@cat.com\").withAddress(\"cat street\").build();","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"Bandov":6,"-":76}},{"path":"src/test/java/seedu/address/testutil/TypicalPersonsUuid.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tsenrae"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"Tsenrae"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"Tsenrae"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"Tsenrae"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"Tsenrae"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"Tsenrae"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"Tsenrae"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"Tsenrae"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"Tsenrae"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"Tsenrae"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"Tsenrae"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"Tsenrae"},"content":"import java.util.List;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"Emberlynn-Loo"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"Tsenrae"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"Tsenrae"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.model.person.relationship.Relationship;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"Emberlynn-Loo"},"content":"import seedu.address.model.person.relationship.RoleBasedRelationship;","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"Tsenrae"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"Emberlynn-Loo"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"Tsenrae"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"Tsenrae"},"content":"public class TypicalPersonsUuid {","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"Tsenrae"},"content":"    public static final String ALICE_UUID \u003d \"00000000-0000-0000-0000-000000000001\";","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"Tsenrae"},"content":"    public static final String BENSON_UUID \u003d \"00000000-0000-0000-0000-000000000002\";","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"Tsenrae"},"content":"    public static final String CARL_UUID \u003d \"00000000-0000-0000-0000-000000000003\";","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"Tsenrae"},"content":"    public static final String DANIEL_UUID \u003d \"00000000-0000-0000-0000-000000000004\";","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"Tsenrae"},"content":"    public static final String ELLE_UUID \u003d \"00000000-0000-0000-0000-000000000005\";","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"Tsenrae"},"content":"    public static final String FIONA_UUID \u003d \"00000000-0000-0000-0000-000000000006\";","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"Tsenrae"},"content":"    public static final String GEORGE_UUID \u003d \"00000000-0000-0000-0000-000000000007\";","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"Tsenrae"},"content":"    public static final String HOON_UUID \u003d \"00000000-0000-0000-0000-000000000008\";","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"Tsenrae"},"content":"    public static final String IDA_UUID \u003d \"00000000-0000-0000-0000-000000000009\";","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"Tsenrae"},"content":"    public static final String AMY_UUID \u003d \"00000000-0000-0000-0000-000000000010\";","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"Tsenrae"},"content":"    public static final String BOB_UUID \u003d \"00000000-0000-0000-0000-000000000011\";","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"Tsenrae"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"Tsenrae"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"Tsenrae"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"Tsenrae"},"content":"            .buildWithUuid(ALICE_UUID);","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"Tsenrae"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"Tsenrae"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"Tsenrae"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"Tsenrae"},"content":"            .buildWithUuid(BENSON_UUID);","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"Tsenrae"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"Tsenrae"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").buildWithUuid(CARL_UUID);","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"Tsenrae"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"Tsenrae"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").buildWithUuid(DANIEL_UUID);","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"Tsenrae"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"Tsenrae"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").buildWithUuid(ELLE_UUID);","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"Tsenrae"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"Tsenrae"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").buildWithUuid(FIONA_UUID);","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"Tsenrae"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"Tsenrae"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").buildWithUuid(GEORGE_UUID);","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"Emberlynn-Loo"},"content":"    public static final Relationship ALICE_BENSON \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"Emberlynn-Loo"},"content":"            new Relationship(UUID.fromString(ALICE_UUID), UUID.fromString(BENSON_UUID), \"friend\");","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"Emberlynn-Loo"},"content":"    public static final Relationship CARL_DANIEL \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"Emberlynn-Loo"},"content":"            new Relationship(UUID.fromString(CARL_UUID), UUID.fromString(DANIEL_UUID), \"friend\");","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"Emberlynn-Loo"},"content":"    public static final Relationship ELLE_FIONA \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"Emberlynn-Loo"},"content":"            new Relationship(UUID.fromString(ELLE_UUID), UUID.fromString(FIONA_UUID), \"friend\");","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"Emberlynn-Loo"},"content":"    public static final RoleBasedRelationship ALICE_DANIEL_ROLE \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"Emberlynn-Loo"},"content":"            new RoleBasedRelationship(UUID.fromString(ALICE_UUID), UUID.fromString(DANIEL_UUID),","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"Emberlynn-Loo"},"content":"                    \"family\", \"wife\", \"husband\");","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"Emberlynn-Loo"},"content":"    public static final RoleBasedRelationship CARL_ELLE_ROLE \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"Emberlynn-Loo"},"content":"            new RoleBasedRelationship(UUID.fromString(CARL_UUID), UUID.fromString(ELLE_UUID),","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"Emberlynn-Loo"},"content":"                    \"family\", \"husband\", \"wife\");","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"Tsenrae"},"content":"    // Manually added","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"Tsenrae"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"Tsenrae"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").buildWithUuid(HOON_UUID);","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"Tsenrae"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"Tsenrae"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").buildWithUuid(IDA_UUID);","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"Tsenrae"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"Tsenrae"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"Tsenrae"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).buildWithUuid(AMY_UUID);","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"Tsenrae"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"Tsenrae"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).buildWithUuid(BOB_UUID);","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"Tsenrae"},"content":"    private TypicalPersonsUuid() {} // prevents instantiation","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"Tsenrae"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"Tsenrae"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"Tsenrae"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"Tsenrae"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"Tsenrae"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"Tsenrae"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"Tsenrae"},"content":"            ab.addPerson(person);","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"Tsenrae"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"Emberlynn-Loo"},"content":"        for (Relationship relationship : getTypicalRelationships()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"Emberlynn-Loo"},"content":"            ab.addRelationship(relationship);","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"Emberlynn-Loo"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"Tsenrae"},"content":"        return ab;","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"Tsenrae"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"Tsenrae"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"Tsenrae"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"Tsenrae"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"Emberlynn-Loo"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"Emberlynn-Loo"},"content":"    public static List\u003cRelationship\u003e getTypicalRelationships() {","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"Emberlynn-Loo"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE_BENSON, CARL_DANIEL, ELLE_FIONA, ALICE_DANIEL_ROLE, CARL_ELLE_ROLE));","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"Emberlynn-Loo"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":108,"author":{"gitId":"Tsenrae"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"Tsenrae":81,"Emberlynn-Loo":27}}]
