[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103-F09-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions) [![codecov](https://codecov.io/gh/AY2324S2-CS2103-F09-1/tp/graph/badge.svg?token\u003dNB86I9H23Z)](https://codecov.io/gh/AY2324S2-CS2103-F09-1/tp)","lastModifiedDate":"2024-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"felixchanyy"},"content":"## About the app","lastModifiedDate":"2024-03-04"},{"lineNumber":6,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":"EstateEase simplifies residential property management for real estate listing agents in Singapore.","lastModifiedDate":"2024-03-04"},{"lineNumber":8,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":9,"author":{"gitId":"felixchanyy"},"content":"### Key Features:","lastModifiedDate":"2024-03-04"},{"lineNumber":10,"author":{"gitId":"felixchanyy"},"content":"  * With intuitive tools for listing and client communication, the app is tailored for efficiency.","lastModifiedDate":"2024-03-04"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":"  * Agents can quickly access contacts and prioritize them, ensuring swift connections with clients.","lastModifiedDate":"2024-03-04"},{"lineNumber":12,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"### Example Usages:","lastModifiedDate":"2024-03-04"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":"  * Allows real estate agents to add and delete client information.","lastModifiedDate":"2024-03-04"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"  * Allows real estate agents to prioritize client contacts for efficient communication","lastModifiedDate":"2024-03-04"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"  * Allows real estate agents to load and save the list using JSON file","lastModifiedDate":"2024-03-04"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"## Acknowledgements","lastModifiedDate":"2024-03-04"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":"This project is based on the AddressBook-Level3 project created by the","lastModifiedDate":"2024-03-04"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"[SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-04"}],"authorContributionMap":{"felixchanyy":17,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"lokidoki102"},"content":"run {","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"lokidoki102"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":72,"lokidoki102":5}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"felixchanyy"},"content":"You can reach us at the email `felixchanyy.22@u.nus.edu`","lastModifiedDate":"2024-03-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":"### Felix Chan","lastModifiedDate":"2024-03-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"\u003cimg src\u003d\"images/felixchanyy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"[[homepage](https://nus-cs2103-ay2324s2.github.io/website)]","lastModifiedDate":"2024-03-04"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":"[[github](https://github.com/felixchanyy)]","lastModifiedDate":"2024-03-04"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"[[portfolio](https://www.linkedin.com/in/felixchanyy)]","lastModifiedDate":"2024-03-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"felixchanyy"},"content":"* Role: Team Lead, Scheduling and Tracking, Git Expert","lastModifiedDate":"2024-03-04"},{"lineNumber":23,"author":{"gitId":"felixchanyy"},"content":"* Responsibilities: Responsible for overall project coordination,  in charge of defining, assigning, and tracking","lastModifiedDate":"2024-03-04"},{"lineNumber":24,"author":{"gitId":"felixchanyy"},"content":"project tasks, helps other team members with matters related to Git","lastModifiedDate":"2024-03-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"felixchanyy"},"content":"### Yek Khoon Sun","lastModifiedDate":"2024-03-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"felixchanyy"},"content":"\u003cimg src\u003d\"images/khoonsun47.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"felixchanyy"},"content":"[[github](http://github.com/khoonsun47)]","lastModifiedDate":"2024-03-04"},{"lineNumber":31,"author":{"gitId":"felixchanyy"},"content":"[[portfolio](https://sg.linkedin.com/in/yek-khoon-sun-2b2270177)]","lastModifiedDate":"2024-03-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":"* Role: Testing","lastModifiedDate":"2024-03-04"},{"lineNumber":34,"author":{"gitId":"felixchanyy"},"content":"* Responsibilities: Ensures the testing of the project is done properly and on time","lastModifiedDate":"2024-03-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"felixchanyy"},"content":"### Carl Lim","lastModifiedDate":"2024-03-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"felixchanyy"},"content":"\u003cimg src\u003d\"images/lokidoki102.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"felixchanyy"},"content":"[[github](http://github.com/lokidoki102)]","lastModifiedDate":"2024-03-04"},{"lineNumber":41,"author":{"gitId":"felixchanyy"},"content":"[[portfolio](https://www.linkedin.com/in/carl-lim-483980152/)]","lastModifiedDate":"2024-03-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"felixchanyy"},"content":"* Role: Code Quality, IntelliJ expert","lastModifiedDate":"2024-03-04"},{"lineNumber":44,"author":{"gitId":"felixchanyy"},"content":"* Responsibilities: Looks after code quality and code review, ensures adherence to coding standards,","lastModifiedDate":"2024-03-04"},{"lineNumber":45,"author":{"gitId":"felixchanyy"},"content":"helps other team members with matters related to IntelliJ","lastModifiedDate":"2024-03-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"felixchanyy"},"content":"### Zeng Zihui","lastModifiedDate":"2024-03-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"felixchanyy"},"content":"\u003cimg src\u003d\"images/zengzihui.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"felixchanyy"},"content":"[[github](http://github.com/zengzihui)]","lastModifiedDate":"2024-03-04"},{"lineNumber":52,"author":{"gitId":"felixchanyy"},"content":"[[portfolio](https://www.linkedin.com/in/zeng-zihui)]","lastModifiedDate":"2024-03-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"felixchanyy"},"content":"* Role: Documentation, In charge of UI","lastModifiedDate":"2024-03-04"},{"lineNumber":55,"author":{"gitId":"felixchanyy"},"content":"* Responsibilities: Responsible for the quality of various project documents,","lastModifiedDate":"2024-03-04"},{"lineNumber":56,"author":{"gitId":"felixchanyy"},"content":"review changes done to UI, act as the gate keeper of its quality, help others when they face","lastModifiedDate":"2024-03-04"},{"lineNumber":57,"author":{"gitId":"felixchanyy"},"content":"difficulties while modifying UI","lastModifiedDate":"2024-03-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"felixchanyy"},"content":"### Liu Zhengyang","lastModifiedDate":"2024-03-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"felixchanyy"},"content":"\u003cimg src\u003d\"images/redcolorbicycle.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"felixchanyy"},"content":"[[github](http://github.com/redcolorbicycle)]","lastModifiedDate":"2024-03-04"},{"lineNumber":64,"author":{"gitId":"felixchanyy"},"content":"[[portfolio](https://www.linkedin.com/in/liu-zhengyang)]","lastModifiedDate":"2024-03-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"felixchanyy"},"content":"* Role: Deliverables and deadlines","lastModifiedDate":"2024-03-04"},{"lineNumber":67,"author":{"gitId":"felixchanyy"},"content":"* Responsibilities: Ensure project deliverables are done on time and in the right format","lastModifiedDate":"2024-03-04"}],"authorContributionMap":{"felixchanyy":36,"-":31}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"zengzihui"},"content":"# EstateEase Developer Guide","lastModifiedDate":"2024-03-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"This project is based on the AddressBook-Level3 project created by the","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"[SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"lokidoki102"},"content":"### \\[Proposed\\] Edit Buyer/Seller feature","lastModifiedDate":"2024-03-29"},{"lineNumber":162,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":163,"author":{"gitId":"lokidoki102"},"content":"#### Proposed Implementation","lastModifiedDate":"2024-03-29"},{"lineNumber":164,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":165,"author":{"gitId":"lokidoki102"},"content":"The proposed edit buyer/seller mechanism allows user to edit a Buyer or Seller accordingly.","lastModifiedDate":"2024-03-29"},{"lineNumber":166,"author":{"gitId":"lokidoki102"},"content":"Previously, AB3 only allows users to edit a Person, but since we have two types of Person,","lastModifiedDate":"2024-03-29"},{"lineNumber":167,"author":{"gitId":"lokidoki102"},"content":"there\u0027s a need to separate out the requirements accordingly.","lastModifiedDate":"2024-03-29"},{"lineNumber":168,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":169,"author":{"gitId":"lokidoki102"},"content":"#### Implementation Details","lastModifiedDate":"2024-03-29"},{"lineNumber":170,"author":{"gitId":"lokidoki102"},"content":"- Upon invoking the command `editBuyer [INDEX]` or `editSeller [INDEX]`, the system will identify the specified person by index.","lastModifiedDate":"2024-03-29"},{"lineNumber":171,"author":{"gitId":"lokidoki102"},"content":"- The System, will then check if the target person type corresponds to the right command.","lastModifiedDate":"2024-03-29"},{"lineNumber":172,"author":{"gitId":"lokidoki102"},"content":"  (i.e. editBuyer should only work with Buyer type and editSeller should only work with Seller type)","lastModifiedDate":"2024-03-29"},{"lineNumber":173,"author":{"gitId":"lokidoki102"},"content":"- It will then retrieve the buyer/seller from the model (in memory storage), to edit the changes accordingly.","lastModifiedDate":"2024-03-29"},{"lineNumber":174,"author":{"gitId":"lokidoki102"},"content":"- Once, the edit is successful, the json (storage) is also updated accordingly.","lastModifiedDate":"2024-03-29"},{"lineNumber":175,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":176,"author":{"gitId":"lokidoki102"},"content":"#### Why It\u0027s Implemented That Way","lastModifiedDate":"2024-03-29"},{"lineNumber":177,"author":{"gitId":"lokidoki102"},"content":"- The edit function is separated out into Buyer and Seller as each Buyer and Seller have a minor difference in their attributes.","lastModifiedDate":"2024-03-29"},{"lineNumber":178,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":179,"author":{"gitId":"felixchanyy"},"content":"### [Proposed] Matching Buyer feature","lastModifiedDate":"2024-03-29"},{"lineNumber":180,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":181,"author":{"gitId":"felixchanyy"},"content":"#### Proposed Implementation","lastModifiedDate":"2024-03-29"},{"lineNumber":182,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":183,"author":{"gitId":"felixchanyy"},"content":"The Matching Buyer feature aims to facilitate the process of connecting buyers with suitable seller houses based on their housing type and budget.","lastModifiedDate":"2024-03-29"},{"lineNumber":184,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":185,"author":{"gitId":"felixchanyy"},"content":"#### Implementation Details","lastModifiedDate":"2024-03-29"},{"lineNumber":186,"author":{"gitId":"felixchanyy"},"content":"- Upon invoking the command `match [buyer_name]`, the system will identify the specified buyer by name.","lastModifiedDate":"2024-03-29"},{"lineNumber":187,"author":{"gitId":"felixchanyy"},"content":"- It will then retrieve the buyer\u0027s housing type and budget from the database.","lastModifiedDate":"2024-03-29"},{"lineNumber":188,"author":{"gitId":"felixchanyy"},"content":"- The system will compare these attributes with each available seller house\u0027s housing type and price.","lastModifiedDate":"2024-03-29"},{"lineNumber":189,"author":{"gitId":"felixchanyy"},"content":"- Suitable matches will be determined based on compatibility, and a list of matched seller houses will be presented to the user.","lastModifiedDate":"2024-03-29"},{"lineNumber":190,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":191,"author":{"gitId":"felixchanyy"},"content":"#### Why It\u0027s Implemented That Way","lastModifiedDate":"2024-03-29"},{"lineNumber":192,"author":{"gitId":"felixchanyy"},"content":"- This implementation focuses on simplicity and efficiency by directly comparing buyer requirements with available seller houses.","lastModifiedDate":"2024-03-29"},{"lineNumber":193,"author":{"gitId":"felixchanyy"},"content":"- Retrieving buyer information by name ensures personalized matching and ease of use.","lastModifiedDate":"2024-03-29"},{"lineNumber":194,"author":{"gitId":"felixchanyy"},"content":"- By considering both housing type and budget, the system ensures that matched houses meet the buyer\u0027s specific criteria effectively.","lastModifiedDate":"2024-03-29"},{"lineNumber":195,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":196,"author":{"gitId":"felixchanyy"},"content":"#### Alternatives Considered","lastModifiedDate":"2024-03-29"},{"lineNumber":197,"author":{"gitId":"felixchanyy"},"content":"- Alternative approaches, such as machine learning-based recommendation systems, were considered but deemed unnecessary for the current scope of the feature.","lastModifiedDate":"2024-03-29"},{"lineNumber":198,"author":{"gitId":"felixchanyy"},"content":"- Additional matching criteria, such as location or amenities, were also contemplated, but it was decided to prioritize simplicity and clarity for the initial implementation.","lastModifiedDate":"2024-03-29"},{"lineNumber":199,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":200,"author":{"gitId":"KhoonSun47"},"content":"### \\[Proposed\\] Add seller feature","lastModifiedDate":"2024-03-29"},{"lineNumber":201,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":202,"author":{"gitId":"KhoonSun47"},"content":"#### Proposed Implementation","lastModifiedDate":"2024-03-29"},{"lineNumber":203,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":204,"author":{"gitId":"KhoonSun47"},"content":"The proposed add seller mechanism is facilitated by `Person`. It extends `Person` with additional field `House`.","lastModifiedDate":"2024-03-29"},{"lineNumber":205,"author":{"gitId":"zengzihui"},"content":"This feature aims to facilitate the process of adding seller to EstateEase. Additionally, it implements the following operations:","lastModifiedDate":"2024-03-29"},{"lineNumber":206,"author":{"gitId":"KhoonSun47"},"content":"* `Seller#addHouse()` — Add a house to the seller list of houses.","lastModifiedDate":"2024-03-29"},{"lineNumber":207,"author":{"gitId":"KhoonSun47"},"content":"* `Seller#addHouse()` — Get a list of houses from the seller.","lastModifiedDate":"2024-03-29"},{"lineNumber":208,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":209,"author":{"gitId":"KhoonSun47"},"content":"Given below is an example usage scenario and how the add seller behaves at each step.","lastModifiedDate":"2024-03-29"},{"lineNumber":210,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":211,"author":{"gitId":"KhoonSun47"},"content":"Step 1: The user launches the application for the first time. The `AddressBook` will be initialized with the initial address book state (consisting of both `Buyer` and `Seller` details).","lastModifiedDate":"2024-03-29"},{"lineNumber":212,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":213,"author":{"gitId":"KhoonSun47"},"content":"Step 2: The user executes the `addSeller n/David ...` command to add one `Seller` and one `House` in the `AddressBook`.","lastModifiedDate":"2024-03-29"},{"lineNumber":214,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":215,"author":{"gitId":"zengzihui"},"content":"Step 3: After the user add `Seller` to EstateEase, it will then be displayed in the list of `Person`.","lastModifiedDate":"2024-03-29"},{"lineNumber":216,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":217,"author":{"gitId":"KhoonSun47"},"content":"**Note:** If the `Seller` has the same name as a `Seller` or a `Buyer`, it will return an error to the user that the person has existed. Each `Buyer` and `Seller` are unique, and `Buyer` cannot be a `Seller`, and vice versa.","lastModifiedDate":"2024-03-29"},{"lineNumber":218,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":219,"author":{"gitId":"KhoonSun47"},"content":"The following sequence diagram shows how an `addSeller` operation goes through the `Logic` component:","lastModifiedDate":"2024-03-30"},{"lineNumber":220,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":221,"author":{"gitId":"KhoonSun47"},"content":"\u003cpuml src\u003d\"diagrams/AddSellerSequenceDiagram-Logic.puml\" alt\u003d\"AddSellerSequenceDiagram-Logic\" /\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":222,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":223,"author":{"gitId":"KhoonSun47"},"content":"Similarly, how an `addSeller` operation goes through the `Model` component:","lastModifiedDate":"2024-03-30"},{"lineNumber":224,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":225,"author":{"gitId":"KhoonSun47"},"content":"\u003cpuml src\u003d\"diagrams/AddSellerSequenceDiagram-Model.puml\" alt\u003d\"AddSellerSequenceDiagram-Model\" /\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":226,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":227,"author":{"gitId":"KhoonSun47"},"content":"Similarly, how an `addSeller` operation goes through the `Storage` component:","lastModifiedDate":"2024-03-30"},{"lineNumber":228,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":229,"author":{"gitId":"KhoonSun47"},"content":"\u003cpuml src\u003d\"diagrams/AddSellerSequenceDiagram-Storage.puml\" alt\u003d\"AddSellerSequenceDiagram-Storage\" /\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":230,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":231,"author":{"gitId":"KhoonSun47"},"content":"The following activity diagram summarizes what happens when a user executes the `addSeller` command","lastModifiedDate":"2024-03-30"},{"lineNumber":232,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":233,"author":{"gitId":"KhoonSun47"},"content":"\u003cpuml src\u003d\"diagrams/AddSellerActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":234,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":235,"author":{"gitId":"KhoonSun47"},"content":"#### Design Considerations","lastModifiedDate":"2024-03-29"},{"lineNumber":236,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":237,"author":{"gitId":"KhoonSun47"},"content":"**Aspect: How `addSeller` executes:**","lastModifiedDate":"2024-03-29"},{"lineNumber":238,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":239,"author":{"gitId":"KhoonSun47"},"content":"* **Alternative 1 (current choice):** Use a new command to add `Seller`.","lastModifiedDate":"2024-03-29"},{"lineNumber":240,"author":{"gitId":"KhoonSun47"},"content":"    * Pros: Easy to implement, lesser confusion on adding `Seller` and `Buyer`.","lastModifiedDate":"2024-03-29"},{"lineNumber":241,"author":{"gitId":"KhoonSun47"},"content":"    * Cons: May lead to many commands, which is difficult for user to remember.","lastModifiedDate":"2024-03-29"},{"lineNumber":242,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":243,"author":{"gitId":"KhoonSun47"},"content":"* **Alternative 2:** Use a prefix to differentiate between `Seller` and `Buyer`","lastModifiedDate":"2024-03-29"},{"lineNumber":244,"author":{"gitId":"KhoonSun47"},"content":"  itself.","lastModifiedDate":"2024-03-29"},{"lineNumber":245,"author":{"gitId":"KhoonSun47"},"content":"    * Pros: Having lesser commands is easier for the user to remember.","lastModifiedDate":"2024-03-29"},{"lineNumber":246,"author":{"gitId":"KhoonSun47"},"content":"    * Cons: Difficult to implement, having more prefixes means more validation.","lastModifiedDate":"2024-03-29"},{"lineNumber":247,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":248,"author":{"gitId":"KhoonSun47"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2024-03-29"},{"lineNumber":249,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":250,"author":{"gitId":"redcolorbicycle"},"content":"### \\[Proposed\\] Add House feature","lastModifiedDate":"2024-03-29"},{"lineNumber":251,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":252,"author":{"gitId":"redcolorbicycle"},"content":"#### Proposed Implementation","lastModifiedDate":"2024-03-29"},{"lineNumber":253,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":254,"author":{"gitId":"redcolorbicycle"},"content":"The proposed add house mechanism allows user to add a House.","lastModifiedDate":"2024-03-29"},{"lineNumber":255,"author":{"gitId":"redcolorbicycle"},"content":"Previously, AB3 does not have a House implementation. Given that buyers and sellers will need to have Houses","lastModifiedDate":"2024-03-29"},{"lineNumber":256,"author":{"gitId":"redcolorbicycle"},"content":"associated, there is a need to for an add House feature.","lastModifiedDate":"2024-03-29"},{"lineNumber":257,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":258,"author":{"gitId":"redcolorbicycle"},"content":"#### Implementation Details","lastModifiedDate":"2024-03-29"},{"lineNumber":259,"author":{"gitId":"redcolorbicycle"},"content":"- Upon invoking the command `addSeller`, the system will take in the relevant arguments such as StreetName, Level","lastModifiedDate":"2024-03-29"},{"lineNumber":260,"author":{"gitId":"redcolorbicycle"},"content":"- or UnitNumber.","lastModifiedDate":"2024-03-29"},{"lineNumber":261,"author":{"gitId":"redcolorbicycle"},"content":"- The System will then create a House associated with the Seller.","lastModifiedDate":"2024-03-29"},{"lineNumber":262,"author":{"gitId":"redcolorbicycle"},"content":"- The House will be linked to the Seller for all further commands.","lastModifiedDate":"2024-03-29"},{"lineNumber":263,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":264,"author":{"gitId":"redcolorbicycle"},"content":"#### Why It\u0027s Implemented That Way","lastModifiedDate":"2024-03-29"},{"lineNumber":265,"author":{"gitId":"redcolorbicycle"},"content":"- The add house function allows houses to be easily added alongside Sellers, making it more convenient as compared","lastModifiedDate":"2024-03-29"},{"lineNumber":266,"author":{"gitId":"redcolorbicycle"},"content":"- to adding separately.","lastModifiedDate":"2024-03-29"},{"lineNumber":267,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":268,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":269,"author":{"gitId":"zengzihui"},"content":"### \\[Proposed\\] Add buyer feature","lastModifiedDate":"2024-03-29"},{"lineNumber":270,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":271,"author":{"gitId":"zengzihui"},"content":"#### Proposed Implementation","lastModifiedDate":"2024-03-29"},{"lineNumber":272,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":273,"author":{"gitId":"zengzihui"},"content":"This feature aims to facilitate the process of adding buyer to EstateEase.","lastModifiedDate":"2024-03-29"},{"lineNumber":274,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":275,"author":{"gitId":"zengzihui"},"content":"Given below is an example usage scenario and how the add buyer behaves at each step.","lastModifiedDate":"2024-03-29"},{"lineNumber":276,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":277,"author":{"gitId":"zengzihui"},"content":"Step 1: The user launches the application for the first time. The `AddressBook` will be initialized with the initial address book state (consisting of both `Buyer` and `Seller` details).","lastModifiedDate":"2024-03-29"},{"lineNumber":278,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":279,"author":{"gitId":"zengzihui"},"content":"Step 2: The user executes the `addBuyer n/Ben ...` command to add one `Buyer`.","lastModifiedDate":"2024-03-29"},{"lineNumber":280,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":281,"author":{"gitId":"zengzihui"},"content":"Step 3: After the user add `Buyer` to EstateEase, it will then be displayed in the list of `Person`.","lastModifiedDate":"2024-03-29"},{"lineNumber":282,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":283,"author":{"gitId":"zengzihui"},"content":"**Note:** If the `Buyer` has the same name as a `Seller` or a `Buyer`, it will return an error to the user that the person has existed. Each `Buyer` and `Seller` are unique, and `Buyer` cannot be a `Seller`, and vice versa.","lastModifiedDate":"2024-03-29"},{"lineNumber":284,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":285,"author":{"gitId":"zengzihui"},"content":"#### Design Considerations","lastModifiedDate":"2024-03-29"},{"lineNumber":286,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":287,"author":{"gitId":"zengzihui"},"content":"**Aspect: How `addBuyer` executes:**","lastModifiedDate":"2024-03-29"},{"lineNumber":288,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":289,"author":{"gitId":"zengzihui"},"content":"* **Alternative 1 (current choice):** Use a new command to add `Buyer`.","lastModifiedDate":"2024-03-29"},{"lineNumber":290,"author":{"gitId":"zengzihui"},"content":"    * Pros: Easy to implement, lesser confusion on adding `Seller` and `Buyer`.","lastModifiedDate":"2024-03-29"},{"lineNumber":291,"author":{"gitId":"zengzihui"},"content":"    * Cons: May lead to many commands, which is difficult for user to remember.","lastModifiedDate":"2024-03-29"},{"lineNumber":292,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":293,"author":{"gitId":"zengzihui"},"content":"* **Alternative 2:** Use a prefix to differentiate between `Seller` and `Buyer`","lastModifiedDate":"2024-03-29"},{"lineNumber":294,"author":{"gitId":"zengzihui"},"content":"  itself.","lastModifiedDate":"2024-03-29"},{"lineNumber":295,"author":{"gitId":"zengzihui"},"content":"    * Pros: Having lesser commands is easier for the user to remember.","lastModifiedDate":"2024-03-29"},{"lineNumber":296,"author":{"gitId":"zengzihui"},"content":"    * Cons: Difficult to implement, having more prefixes means more validation.","lastModifiedDate":"2024-03-29"},{"lineNumber":297,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":298,"author":{"gitId":"zengzihui"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2024-03-29"},{"lineNumber":299,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":300,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":331,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":338,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12"},{"lineNumber":341,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Logic.puml\" alt\u003d\"UndoSequenceDiagram-Logic\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":353,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":357,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Model.puml\" alt\u003d\"UndoSequenceDiagram-Model\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":359,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":363,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":404,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":405,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":406,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":407,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"zengzihui"},"content":"* Residential Property Real Estate Listing Agent in Singapore","lastModifiedDate":"2024-03-04"},{"lineNumber":417,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":419,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"zengzihui"},"content":"**Value proposition**: EstateEase simplifies residential property management for real estate listing agents in Singapore. With intuitive tools for listing and client communication, the app is tailored for efficiency. Agents can quickly access contacts and prioritize them, ensuring swift connections with clients.","lastModifiedDate":"2024-03-04"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"zengzihui"},"content":"Priorities: Urgent (must-must have) - `* * * *`, High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2024-03-07"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"| Priority  | As a …​                     | I want to …​                                                                                  | So that I can…​                                                              |","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"zengzihui"},"content":"|-----------|-----------------------------|-----------------------------------------------------------------------------------------------|------------------------------------------------------------------------------|","lastModifiedDate":"2024-03-07"},{"lineNumber":430,"author":{"gitId":"zengzihui"},"content":"| `* * * *` | real estate agent           | add home-owners clients                                                                       | keep track of their contact details and the properties that they are selling |","lastModifiedDate":"2024-03-07"},{"lineNumber":431,"author":{"gitId":"zengzihui"},"content":"| `* * * *` | real estate agent           | add home-buyer clients                                                                        | keep track of their contact details and requirements                         |","lastModifiedDate":"2024-03-07"},{"lineNumber":432,"author":{"gitId":"zengzihui"},"content":"| `* * * *` | real estate agent           | view the list of all contacts stored                                                          | quickly find the contact I need                                              |","lastModifiedDate":"2024-03-07"},{"lineNumber":433,"author":{"gitId":"zengzihui"},"content":"| `* * * *` | real estate agent           | delete the contact that I want to remove                                                      | remove outdated or irrelevant contacts                                       |","lastModifiedDate":"2024-03-07"},{"lineNumber":434,"author":{"gitId":"zengzihui"},"content":"| `* * * *` | real estate agent           | be able to exit the program when I want to                                                    | close the application                                                        |","lastModifiedDate":"2024-03-07"},{"lineNumber":435,"author":{"gitId":"zengzihui"},"content":"| `* * * *` | real estate agent           | be able to automatically save the data I added, changed, and deleted                          | load the data when I open the application, with the saved data, next time    |","lastModifiedDate":"2024-03-07"},{"lineNumber":436,"author":{"gitId":"felixchanyy"},"content":"| `* * *`   | real estate agent           | keep track of my buyer\u0027s budget and the price of the houses                                   | better manage my client\u0027s requirement                                        |","lastModifiedDate":"2024-03-29"},{"lineNumber":437,"author":{"gitId":"felixchanyy"},"content":"| `* * *`   | real estate agent           | match the buyer with sellers based on the buyer\u0027s requirements                                | quickly identify properties that align with the buyers\u0027 preferences          |","lastModifiedDate":"2024-03-29"},{"lineNumber":438,"author":{"gitId":"zengzihui"},"content":"| `* * *`   | real estate agent           | find for a specific contact                                                                   | access their details without scrolling through a long list                   |","lastModifiedDate":"2024-03-07"},{"lineNumber":439,"author":{"gitId":"zengzihui"},"content":"| `* * *`   | real estate agent           | easily update or modify existing contact information                                          | have accurate and up-to-date records                                         |","lastModifiedDate":"2024-03-07"},{"lineNumber":440,"author":{"gitId":"zengzihui"},"content":"| `* * *`   | real estate agent           | add new houses to the home-sellers                                                            | keep track of the houses the home-sellers have                               |","lastModifiedDate":"2024-03-07"},{"lineNumber":441,"author":{"gitId":"zengzihui"},"content":"| `* * *`   | real estate agent           | have whatever contacts I add load to the laptop I am using                                    | do not need to re-enter all the details whenever I open the app              |","lastModifiedDate":"2024-03-07"},{"lineNumber":442,"author":{"gitId":"zengzihui"},"content":"| `* *`     | busy real estate agent      | be able to view specific buyer\u0027s requirements                                                 | understand what are their needs quickly                                      |","lastModifiedDate":"2024-03-07"},{"lineNumber":443,"author":{"gitId":"zengzihui"},"content":"| `* *`     | busy real estate agent      | be able to view specific seller\u0027s properties                                                  | effectively assess their listings quickly                                    |","lastModifiedDate":"2024-03-07"},{"lineNumber":444,"author":{"gitId":"zengzihui"},"content":"| `* *`     | busy real estate agent      | match the buyer with sellers based on the buyer\u0027s requirements                                | quickly identify properties that align with the buyers\u0027 preferences          |","lastModifiedDate":"2024-03-07"},{"lineNumber":445,"author":{"gitId":"zengzihui"},"content":"| `* *`     | busy real estate agent      | be able to tell at a glance whether the contact is a buyer or seller                          | do not need to remember their identity                                       |","lastModifiedDate":"2024-03-07"},{"lineNumber":446,"author":{"gitId":"zengzihui"},"content":"| `* *`     | forgetful real estate agent | filter my contacts based on buyers who do not have a pending or done deal status              | easily identify and manage active buyer contacts                             |","lastModifiedDate":"2024-03-07"},{"lineNumber":447,"author":{"gitId":"zengzihui"},"content":"| `* *`     | forgetful real estate agent | link a buyer to sellers with the properties they are interested in buying                     | push them towards making a transaction                                       |","lastModifiedDate":"2024-03-07"},{"lineNumber":448,"author":{"gitId":"zengzihui"},"content":"| `*`       | busy real estate agent      | be able to add notes about clients when talking to them                                       | do not need to consolidate afterwards                                        |","lastModifiedDate":"2024-03-07"},{"lineNumber":449,"author":{"gitId":"zengzihui"},"content":"| `*`       | real estate agent           | differentiate between home-buyers who are looking for houses and finalizing a deal            | manage them effectively                                                      |","lastModifiedDate":"2024-03-07"},{"lineNumber":450,"author":{"gitId":"felixchanyy"},"content":"| `*`       | real estate agent           | differentiate between home-sellers who are looking to sell their houses and finalizing a deal | manage them effectively                                                      |","lastModifiedDate":"2024-03-29"},{"lineNumber":451,"author":{"gitId":"zengzihui"},"content":"| `*`       | real estate agent           | see the priority of home-sellers after filtering out their selling requirements               | determine who I should prioritize in handling the transactions first         |","lastModifiedDate":"2024-03-07"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"zengzihui"},"content":"(For all use cases below, the **System** is the `EstateEase` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2024-03-04"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"zengzihui"},"content":"**Use case: UC01 - Add a home-seller to contact list**","lastModifiedDate":"2024-03-07"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":460,"author":{"gitId":"KhoonSun47"},"content":"**MSS:**","lastModifiedDate":"2024-03-04"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":462,"author":{"gitId":"KhoonSun47"},"content":"1. User chooses to add home-seller.","lastModifiedDate":"2024-03-06"},{"lineNumber":463,"author":{"gitId":"KhoonSun47"},"content":"2. EstateEase requests for the details of the home-seller.","lastModifiedDate":"2024-03-06"},{"lineNumber":464,"author":{"gitId":"KhoonSun47"},"content":"3. User enters the requested details.","lastModifiedDate":"2024-03-04"},{"lineNumber":465,"author":{"gitId":"KhoonSun47"},"content":"4. EstateEase adds the home-seller and displays the newly added home-seller. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":466,"author":{"gitId":"KhoonSun47"},"content":"   Use case ends.","lastModifiedDate":"2024-03-04"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":468,"author":{"gitId":"KhoonSun47"},"content":"**Precondition for Extension 3g:** EstateEase has received the details of the home-seller from the user. \u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":469,"author":{"gitId":"KhoonSun47"},"content":"**Trigger:** EstateEase validates the entered details and detects that the block number is missing when the house is HDB/Condo.","lastModifiedDate":"2024-03-30"},{"lineNumber":470,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":471,"author":{"gitId":"KhoonSun47"},"content":"**Precondition for Extension 3i and 3j:** EstateEase has received the details of the home-seller from the user. \u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":472,"author":{"gitId":"KhoonSun47"},"content":"**Trigger:** EstateEase validates the entered details and detects that the unit number is missing when the house is HDB/Condo.","lastModifiedDate":"2024-03-30"},{"lineNumber":473,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":474,"author":{"gitId":"KhoonSun47"},"content":"**Extensions**","lastModifiedDate":"2024-03-04"},{"lineNumber":475,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":476,"author":{"gitId":"KhoonSun47"},"content":"* 3a. EstateEase detects missing name in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":477,"author":{"gitId":"KhoonSun47"},"content":"    * 3a1. EstateEase shows an error message regarding missing name. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":478,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-04"},{"lineNumber":479,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":480,"author":{"gitId":"KhoonSun47"},"content":"* 3b. EstateEase detects duplicate name in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":481,"author":{"gitId":"KhoonSun47"},"content":"    * 3b1. EstateEase shows an error message regarding duplicate name. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":482,"author":{"gitId":"KhoonSun47"},"content":"      Use case ends.","lastModifiedDate":"2024-03-04"},{"lineNumber":483,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":484,"author":{"gitId":"KhoonSun47"},"content":"* 3c. EstateEase detects missing phone number in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":485,"author":{"gitId":"KhoonSun47"},"content":"    * 3c1. EstateEase shows an error message regarding missing phone number. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":486,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-04"},{"lineNumber":487,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":488,"author":{"gitId":"KhoonSun47"},"content":"* 3d. EstateEase detects incorrect format for phone number in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":489,"author":{"gitId":"KhoonSun47"},"content":"    * 3d1. EstateEase shows an error message regarding incorrect format for phone number. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":490,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-04"},{"lineNumber":491,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":492,"author":{"gitId":"KhoonSun47"},"content":"* 3e. EstateEase detects missing email in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":493,"author":{"gitId":"KhoonSun47"},"content":"    * 3e1. EstateEase shows an error message regarding missing email. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":494,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-04"},{"lineNumber":495,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":496,"author":{"gitId":"KhoonSun47"},"content":"* 3f. EstateEase detects incorrect format for email in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":497,"author":{"gitId":"KhoonSun47"},"content":"    * 3f1. EstateEase shows an error message regarding incorrect format for email. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":498,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-04"},{"lineNumber":499,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":500,"author":{"gitId":"KhoonSun47"},"content":"* 3g. EstateEase detects missing block number in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":501,"author":{"gitId":"KhoonSun47"},"content":"    * 3g1. EstateEase shows an error message regarding missing block number. \u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":502,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-04"},{"lineNumber":503,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":504,"author":{"gitId":"KhoonSun47"},"content":"* 3h. EstateEase detects missing street name in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":505,"author":{"gitId":"KhoonSun47"},"content":"    * 3h1. EstateEase shows an error message regarding missing street name. \u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":506,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-04"},{"lineNumber":507,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":508,"author":{"gitId":"KhoonSun47"},"content":"* 3i. EstateEase detects missing unit number in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":509,"author":{"gitId":"KhoonSun47"},"content":"    * 3i1. EstateEase shows an error message regarding missing unit number. \u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":510,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-04"},{"lineNumber":511,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":512,"author":{"gitId":"KhoonSun47"},"content":"* 3j. EstateEase detects incorrect format for unit number in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":513,"author":{"gitId":"KhoonSun47"},"content":"    * 3j1. EstateEase shows an error message regarding incorrect format for unit number. \u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":514,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-04"},{"lineNumber":515,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":516,"author":{"gitId":"KhoonSun47"},"content":"* 3k. EstateEase detects missing postal code in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":517,"author":{"gitId":"KhoonSun47"},"content":"    * 3k1. EstateEase shows an error message regarding missing postal code. \u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":518,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-04"},{"lineNumber":519,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":520,"author":{"gitId":"KhoonSun47"},"content":"* 3l. EstateEase detects incorrect format for postal code in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":521,"author":{"gitId":"KhoonSun47"},"content":"    * 3l1. EstateEase shows an error message regarding incorrect format for postal code. \u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":522,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-04"},{"lineNumber":523,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":524,"author":{"gitId":"KhoonSun47"},"content":"* 3m. EstateEase detects missing house price in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":525,"author":{"gitId":"KhoonSun47"},"content":"    * 3m1. EstateEase shows an error message regarding missing house price. \u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":526,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-04"},{"lineNumber":527,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":528,"author":{"gitId":"KhoonSun47"},"content":"* 3n. EstateEase detects incorrect format for house price in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":529,"author":{"gitId":"KhoonSun47"},"content":"    * 3n1. EstateEase shows an error message regarding incorrect format for house price. \u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":530,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-04"},{"lineNumber":531,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":532,"author":{"gitId":"zengzihui"},"content":"**Use case: UC02 - Add a home-buyer to contact list**","lastModifiedDate":"2024-03-07"},{"lineNumber":533,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":534,"author":{"gitId":"KhoonSun47"},"content":"**MSS:**","lastModifiedDate":"2024-03-06"},{"lineNumber":535,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":536,"author":{"gitId":"KhoonSun47"},"content":"1. User chooses to add home-buyer.","lastModifiedDate":"2024-03-06"},{"lineNumber":537,"author":{"gitId":"KhoonSun47"},"content":"2. EstateEase requests for the details of the home-buyer.","lastModifiedDate":"2024-03-06"},{"lineNumber":538,"author":{"gitId":"KhoonSun47"},"content":"3. User enters the requested details.","lastModifiedDate":"2024-03-06"},{"lineNumber":539,"author":{"gitId":"KhoonSun47"},"content":"4. EstateEase adds the home-buyer and displays the newly added home-buyer. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":540,"author":{"gitId":"KhoonSun47"},"content":"   Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":541,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":542,"author":{"gitId":"KhoonSun47"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":543,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":544,"author":{"gitId":"KhoonSun47"},"content":"* 3a. EstateEase detects missing name in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":545,"author":{"gitId":"KhoonSun47"},"content":"    * 3a1. EstateEase shows an error message regarding missing name. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":546,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":547,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":548,"author":{"gitId":"KhoonSun47"},"content":"* 3b. EstateEase detects duplicate name in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":549,"author":{"gitId":"KhoonSun47"},"content":"    * 3b1. EstateEase shows an error message regarding duplicate name. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":550,"author":{"gitId":"KhoonSun47"},"content":"      Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":551,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":552,"author":{"gitId":"KhoonSun47"},"content":"* 3c. EstateEase detects missing phone number in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":553,"author":{"gitId":"KhoonSun47"},"content":"    * 3c1. EstateEase shows an error message regarding missing phone number. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":554,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":555,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":556,"author":{"gitId":"KhoonSun47"},"content":"* 3d. EstateEase detects incorrect format for phone number in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":557,"author":{"gitId":"KhoonSun47"},"content":"    * 3d1. EstateEase shows an error message regarding incorrect format for phone number. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":558,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":559,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":560,"author":{"gitId":"KhoonSun47"},"content":"* 3e. EstateEase detects missing email in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":561,"author":{"gitId":"KhoonSun47"},"content":"    * 3e1. EstateEase shows an error message regarding missing email. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":562,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":563,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":564,"author":{"gitId":"KhoonSun47"},"content":"* 3f. EstateEase detects incorrect format for email in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":565,"author":{"gitId":"KhoonSun47"},"content":"    * 3f1. EstateEase shows an error message regarding incorrect format for email. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":566,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":567,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":568,"author":{"gitId":"KhoonSun47"},"content":"* 3g. EstateEase detects incorrect format for interested housing type in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":569,"author":{"gitId":"KhoonSun47"},"content":"    * 3g1. EstateEase shows an error message regarding incorrect format for interested housing type. \u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":570,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":571,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":572,"author":{"gitId":"KhoonSun47"},"content":"* 3g. EstateEase detects missing interested housing type in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":573,"author":{"gitId":"KhoonSun47"},"content":"    * 3g1. EstateEase shows an error message regarding missing interested housing type. \u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":574,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":575,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":576,"author":{"gitId":"zengzihui"},"content":"**Use case: UC03 - Add more houses to home-seller**","lastModifiedDate":"2024-03-07"},{"lineNumber":577,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":578,"author":{"gitId":"KhoonSun47"},"content":"**MSS:**","lastModifiedDate":"2024-03-06"},{"lineNumber":579,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":580,"author":{"gitId":"zengzihui"},"content":"1. User chooses to add new house to home-seller.","lastModifiedDate":"2024-03-07"},{"lineNumber":581,"author":{"gitId":"zengzihui"},"content":"2. EstateEase requests for the details of the house.","lastModifiedDate":"2024-03-07"},{"lineNumber":582,"author":{"gitId":"KhoonSun47"},"content":"3. User enters requested details.","lastModifiedDate":"2024-03-06"},{"lineNumber":583,"author":{"gitId":"zengzihui"},"content":"4. EstateEase adds the new house and displays the newly added house of the home-seller. \u003cbr\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":584,"author":{"gitId":"KhoonSun47"},"content":"   Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":585,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":586,"author":{"gitId":"KhoonSun47"},"content":"**Precondition for Extension 3d:** EstateEase has received the details of the house from the user. \u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":587,"author":{"gitId":"KhoonSun47"},"content":"**Trigger:** EstateEase validates the entered details and detects that the block number is missing when the house is HDB/Condo.","lastModifiedDate":"2024-03-30"},{"lineNumber":588,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":589,"author":{"gitId":"KhoonSun47"},"content":"**Precondition for Extension 3f and 3g:** EstateEase has received the details of the house from the user. \u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":590,"author":{"gitId":"KhoonSun47"},"content":"**Trigger:** EstateEase validates the entered details and detects that the unit number is missing when the house is HDB/Condo.","lastModifiedDate":"2024-03-30"},{"lineNumber":591,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":592,"author":{"gitId":"KhoonSun47"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":593,"author":{"gitId":"KhoonSun47"},"content":"* 1a. The contact list does not have any home-seller. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":594,"author":{"gitId":"KhoonSun47"},"content":"    * 1a1. EstateEase shows an error message stating that the contact list does not have home-seller. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":595,"author":{"gitId":"KhoonSun47"},"content":"      Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":596,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":597,"author":{"gitId":"KhoonSun47"},"content":"* 3a. EstateEase detects missing name of the home-seller in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":598,"author":{"gitId":"KhoonSun47"},"content":"    * 3a1. EstateEase shows an error message regarding missing name. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":599,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":600,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":601,"author":{"gitId":"KhoonSun47"},"content":"* 3b. EstateEase detects invalid name of the home-seller in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":602,"author":{"gitId":"KhoonSun47"},"content":"    * 3b1. EstateEase shows an error message regarding invalid name. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":603,"author":{"gitId":"KhoonSun47"},"content":"      Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":604,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":605,"author":{"gitId":"KhoonSun47"},"content":"* 3c. EstateEase detects that the name does not belong to home-seller, but to home-buyer instead. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":606,"author":{"gitId":"KhoonSun47"},"content":"    * 3c1. EstateEase shows an error message regarding home can only be attached to home-seller, instead of home-buyer. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":607,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":608,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":609,"author":{"gitId":"KhoonSun47"},"content":"* 3d. EstateEase detects missing block number in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":610,"author":{"gitId":"KhoonSun47"},"content":"    * 3d1. EstateEase shows an error message regarding missing block number. \u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":611,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":612,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":613,"author":{"gitId":"KhoonSun47"},"content":"* 3e. EstateEase detects missing street name in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":614,"author":{"gitId":"KhoonSun47"},"content":"    * 3e1. EstateEase shows an error message regarding missing street name. \u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":615,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":616,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":617,"author":{"gitId":"KhoonSun47"},"content":"* 3f. EstateEase detects missing unit number in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":618,"author":{"gitId":"KhoonSun47"},"content":"    * 3f1. EstateEase shows an error message regarding missing unit number. \u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":619,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":620,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":621,"author":{"gitId":"KhoonSun47"},"content":"* 3g. EstateEase detects incorrect format for unit number in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":622,"author":{"gitId":"KhoonSun47"},"content":"    * 3g1. EstateEase shows an error message regarding incorrect format for unit number. \u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":623,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":624,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":625,"author":{"gitId":"KhoonSun47"},"content":"* 3h. EstateEase detects missing postal code in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":626,"author":{"gitId":"KhoonSun47"},"content":"    * 3h1. EstateEase shows an error message regarding missing postal code. \u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":627,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":628,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":629,"author":{"gitId":"KhoonSun47"},"content":"* 3i. EstateEase detects incorrect format for postal code in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":630,"author":{"gitId":"KhoonSun47"},"content":"    * 3i1. EstateEase shows an error message regarding incorrect format for postal code. \u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":631,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":632,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":633,"author":{"gitId":"KhoonSun47"},"content":"* 3j. EstateEase detects missing house price in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":634,"author":{"gitId":"KhoonSun47"},"content":"    * 3j1. EstateEase shows an error message regarding missing house price. \u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":635,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":636,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":637,"author":{"gitId":"KhoonSun47"},"content":"* 3k. EstateEase detects incorrect format for house price in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":638,"author":{"gitId":"KhoonSun47"},"content":"    * 3k1. EstateEase shows an error message regarding incorrect format for house price. \u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":639,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":640,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":641,"author":{"gitId":"zengzihui"},"content":"**Use case: UC04 - View all contacts**","lastModifiedDate":"2024-03-07"},{"lineNumber":642,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":643,"author":{"gitId":"redcolorbicycle"},"content":"**MSS:**","lastModifiedDate":"2024-03-05"},{"lineNumber":644,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":645,"author":{"gitId":"lokidoki102"},"content":"1.  User requests to list all of his/her contacts.","lastModifiedDate":"2024-03-06"},{"lineNumber":646,"author":{"gitId":"lokidoki102"},"content":"2.  EstateEase displays a list of contacts, each with their details","lastModifiedDate":"2024-03-06"},{"lineNumber":647,"author":{"gitId":"lokidoki102"},"content":"    and an indication of whether they are a buyer or seller.","lastModifiedDate":"2024-03-06"},{"lineNumber":648,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":649,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2024-03-05"},{"lineNumber":650,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":651,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2024-03-05"},{"lineNumber":652,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":653,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-03-06"},{"lineNumber":654,"author":{"gitId":"lokidoki102"},"content":"    * 2a1. EstateEase displays a message stating that the list is empty.","lastModifiedDate":"2024-03-06"},{"lineNumber":655,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":656,"author":{"gitId":"redcolorbicycle"},"content":"      Use case ends.","lastModifiedDate":"2024-03-05"},{"lineNumber":657,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":658,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":659,"author":{"gitId":"zengzihui"},"content":"**Use case: UC05 - Delete a contact**","lastModifiedDate":"2024-03-07"},{"lineNumber":660,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":661,"author":{"gitId":"lokidoki102"},"content":"**MSS:**","lastModifiedDate":"2024-03-04"},{"lineNumber":662,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"zengzihui"},"content":"1.  User requests to \u003cu\u003eview all contacts (UC04)\u003c/u\u003e.","lastModifiedDate":"2024-03-07"},{"lineNumber":664,"author":{"gitId":"zengzihui"},"content":"2.  User requests to delete a specific contact in the contact list.","lastModifiedDate":"2024-03-07"},{"lineNumber":665,"author":{"gitId":"zengzihui"},"content":"3.  EstateEase deletes the contact.","lastModifiedDate":"2024-03-07"},{"lineNumber":666,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":668,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":670,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":671,"author":{"gitId":"zengzihui"},"content":"* 1a. The contact list is empty.","lastModifiedDate":"2024-03-07"},{"lineNumber":672,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":673,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":674,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"zengzihui"},"content":"* 2a. The given index is invalid input type.","lastModifiedDate":"2024-03-07"},{"lineNumber":676,"author":{"gitId":"zengzihui"},"content":"    * 2a1. EstateEase shows an error message regarding the invalid input type.","lastModifiedDate":"2024-03-07"},{"lineNumber":677,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":678,"author":{"gitId":"zengzihui"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-07"},{"lineNumber":679,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":680,"author":{"gitId":"zengzihui"},"content":"* 2b. The given index is out of range.","lastModifiedDate":"2024-03-07"},{"lineNumber":681,"author":{"gitId":"zengzihui"},"content":"    * 2b1. EstateEase shows an error message regarding the out of range.","lastModifiedDate":"2024-03-07"},{"lineNumber":682,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":683,"author":{"gitId":"zengzihui"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-07"},{"lineNumber":684,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":685,"author":{"gitId":"zengzihui"},"content":"**Use case: UC06 - Load contact data from file**","lastModifiedDate":"2024-03-07"},{"lineNumber":686,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":687,"author":{"gitId":"felixchanyy"},"content":"**Actor: EstateEase**","lastModifiedDate":"2024-03-06"},{"lineNumber":688,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":689,"author":{"gitId":"felixchanyy"},"content":"**Preconditions:**","lastModifiedDate":"2024-03-06"},{"lineNumber":690,"author":{"gitId":"felixchanyy"},"content":"- EstateEase is initialized.","lastModifiedDate":"2024-03-06"},{"lineNumber":691,"author":{"gitId":"felixchanyy"},"content":"- The user starts the application.","lastModifiedDate":"2024-03-06"},{"lineNumber":692,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":693,"author":{"gitId":"felixchanyy"},"content":"**MSS:**","lastModifiedDate":"2024-03-06"},{"lineNumber":694,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":695,"author":{"gitId":"felixchanyy"},"content":"1. EstateEase automatically loads existing contact and address data from a JSON file stored in the \"data\" folder at the same directory level as the application.","lastModifiedDate":"2024-03-06"},{"lineNumber":696,"author":{"gitId":"felixchanyy"},"content":"2. EstateEase parses the JSON file and imports the contact and address data into the application\u0027s memory.","lastModifiedDate":"2024-03-06"},{"lineNumber":697,"author":{"gitId":"felixchanyy"},"content":"3. EstateEase displays the imported contact and address data to the user.","lastModifiedDate":"2024-03-06"},{"lineNumber":698,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":699,"author":{"gitId":"felixchanyy"},"content":"   Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":700,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":701,"author":{"gitId":"felixchanyy"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":702,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":703,"author":{"gitId":"felixchanyy"},"content":"* 1a. EstateEase detects that the JSON file in the \"data\" folder is missing or inaccessible.","lastModifiedDate":"2024-03-06"},{"lineNumber":704,"author":{"gitId":"felixchanyy"},"content":"    * 1a1. EstateEase attempts to create an empty JSON file named \"addressbook.json\" in the \"data\" folder.","lastModifiedDate":"2024-03-06"},{"lineNumber":705,"author":{"gitId":"felixchanyy"},"content":"    * 1a2. If EstateEase fails to create the JSON file:","lastModifiedDate":"2024-03-06"},{"lineNumber":706,"author":{"gitId":"felixchanyy"},"content":"        * 1a2a. EstateEase displays an error message indicating that the contact and address data could not be loaded, and the \"data\" folder could not be accessed.","lastModifiedDate":"2024-03-06"},{"lineNumber":707,"author":{"gitId":"felixchanyy"},"content":"          Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":708,"author":{"gitId":"felixchanyy"},"content":"    * 1a3. If EstateEase successfully creates the JSON file:","lastModifiedDate":"2024-03-06"},{"lineNumber":709,"author":{"gitId":"felixchanyy"},"content":"        * 1a3a. EstateEase proceeds to load contact and address data from the newly created JSON file.","lastModifiedDate":"2024-03-06"},{"lineNumber":710,"author":{"gitId":"felixchanyy"},"content":"          Use case continues from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":711,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":712,"author":{"gitId":"felixchanyy"},"content":"* 1b. EstateEase detects that the JSON file in the \"data\" folder is empty.","lastModifiedDate":"2024-03-06"},{"lineNumber":713,"author":{"gitId":"felixchanyy"},"content":"    * 1b1. EstateEase displays a message indicating that there are no contacts with address data to load.","lastModifiedDate":"2024-03-06"},{"lineNumber":714,"author":{"gitId":"felixchanyy"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":715,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":716,"author":{"gitId":"felixchanyy"},"content":"* 1c. EstateEase detects that the JSON file in the \"data\" folder has incorrect format.","lastModifiedDate":"2024-03-06"},{"lineNumber":717,"author":{"gitId":"felixchanyy"},"content":"    * 1c1. EstateEase displays an error message indicating that the contact and address data could not be loaded due to incorrect file format.","lastModifiedDate":"2024-03-06"},{"lineNumber":718,"author":{"gitId":"felixchanyy"},"content":"      Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":719,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":720,"author":{"gitId":"felixchanyy"},"content":"* 1d. EstateEase detects that the \"data\" folder does not exist.","lastModifiedDate":"2024-03-06"},{"lineNumber":721,"author":{"gitId":"felixchanyy"},"content":"    * 1d1. EstateEase attempts to create the \"data\" folder.","lastModifiedDate":"2024-03-06"},{"lineNumber":722,"author":{"gitId":"felixchanyy"},"content":"    * 1d2. If EstateEase fails to create the \"data\" folder:","lastModifiedDate":"2024-03-06"},{"lineNumber":723,"author":{"gitId":"felixchanyy"},"content":"        * 1d2a. EstateEase displays an error message indicating that the \"data\" folder could not be created.","lastModifiedDate":"2024-03-06"},{"lineNumber":724,"author":{"gitId":"felixchanyy"},"content":"          Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":725,"author":{"gitId":"felixchanyy"},"content":"    * 1d3. If EstateEase successfully creates the \"data\" folder:","lastModifiedDate":"2024-03-06"},{"lineNumber":726,"author":{"gitId":"felixchanyy"},"content":"        * 1d3a. EstateEase proceeds to create an empty JSON file named \"addressbook.json\" in the \"data\" folder.","lastModifiedDate":"2024-03-06"},{"lineNumber":727,"author":{"gitId":"felixchanyy"},"content":"        * 1d3b. EstateEase proceeds to load contact and address data from the newly created JSON file.","lastModifiedDate":"2024-03-06"},{"lineNumber":728,"author":{"gitId":"felixchanyy"},"content":"          Use case continues from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":729,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":730,"author":{"gitId":"zengzihui"},"content":"**Use case: UC07 - Save to storage**","lastModifiedDate":"2024-03-07"},{"lineNumber":731,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":732,"author":{"gitId":"lokidoki102"},"content":"**Actor: EstateEase**","lastModifiedDate":"2024-03-04"},{"lineNumber":733,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":734,"author":{"gitId":"lokidoki102"},"content":"**Preconditions: The user initiates an add or delete command**","lastModifiedDate":"2024-03-04"},{"lineNumber":735,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":736,"author":{"gitId":"lokidoki102"},"content":"**MSS:**","lastModifiedDate":"2024-03-04"},{"lineNumber":737,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":738,"author":{"gitId":"lokidoki102"},"content":"1.  EstateEase processes the add (UC01) or delete (UC03) command and updates the address book accordingly.","lastModifiedDate":"2024-03-04"},{"lineNumber":739,"author":{"gitId":"lokidoki102"},"content":"2.  EstateEase attempts to update the JSON file accordingly.","lastModifiedDate":"2024-03-04"},{"lineNumber":740,"author":{"gitId":"lokidoki102"},"content":"3.  EstateEase successfully updates the JSON file.","lastModifiedDate":"2024-03-04"},{"lineNumber":741,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":742,"author":{"gitId":"lokidoki102"},"content":"    Use case ends.","lastModifiedDate":"2024-03-04"},{"lineNumber":743,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":744,"author":{"gitId":"lokidoki102"},"content":"**Extensions**","lastModifiedDate":"2024-03-04"},{"lineNumber":745,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":746,"author":{"gitId":"lokidoki102"},"content":"* 2a. EstateEase is unable to write to the JSON file due to file permission issue.","lastModifiedDate":"2024-03-04"},{"lineNumber":747,"author":{"gitId":"lokidoki102"},"content":"    * 2a1. EstateEase shows error message regarding the insufficient file permission to the user.","lastModifiedDate":"2024-03-04"},{"lineNumber":748,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":749,"author":{"gitId":"lokidoki102"},"content":"      Use case ends.","lastModifiedDate":"2024-03-04"},{"lineNumber":750,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":751,"author":{"gitId":"lokidoki102"},"content":"* 2b. EstateEase is unable to write to the JSON file due to some IOException.","lastModifiedDate":"2024-03-04"},{"lineNumber":752,"author":{"gitId":"lokidoki102"},"content":"    * 2b1. EstateEase shows error message regarding the IOException to the user.","lastModifiedDate":"2024-03-04"},{"lineNumber":753,"author":{"gitId":"lokidoki102"},"content":"      Use case ends.","lastModifiedDate":"2024-03-04"},{"lineNumber":754,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":755,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":756,"author":{"gitId":"zengzihui"},"content":"**Use case: UC08 - Search a contact**","lastModifiedDate":"2024-03-07"},{"lineNumber":757,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":758,"author":{"gitId":"felixchanyy"},"content":"**MSS:**","lastModifiedDate":"2024-03-06"},{"lineNumber":759,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":760,"author":{"gitId":"zengzihui"},"content":"1. User requests to search for a contact.","lastModifiedDate":"2024-03-07"},{"lineNumber":761,"author":{"gitId":"zengzihui"},"content":"2. EstateEase displays all the contacts that match the inputted contact name.","lastModifiedDate":"2024-03-07"},{"lineNumber":762,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":763,"author":{"gitId":"zengzihui"},"content":"   Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":764,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":765,"author":{"gitId":"felixchanyy"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":766,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":767,"author":{"gitId":"zengzihui"},"content":"* 1a. The given contact name does not match any contact names in the contact list.","lastModifiedDate":"2024-03-07"},{"lineNumber":768,"author":{"gitId":"zengzihui"},"content":"    * 1a1. EstateEase shows an error message indicating no matches found.","lastModifiedDate":"2024-03-07"},{"lineNumber":769,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":770,"author":{"gitId":"zengzihui"},"content":"      Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":771,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":772,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":773,"author":{"gitId":"zengzihui"},"content":"**Use case: UC09 - View a home-buyer\u0027s requirements**","lastModifiedDate":"2024-03-07"},{"lineNumber":774,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":775,"author":{"gitId":"felixchanyy"},"content":"**MSS:**","lastModifiedDate":"2024-03-06"},{"lineNumber":776,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":777,"author":{"gitId":"zengzihui"},"content":"1. User enters the command to view the specific buyer\u0027s requirements.","lastModifiedDate":"2024-03-07"},{"lineNumber":778,"author":{"gitId":"zengzihui"},"content":"2. EstateEase processes the view command with home-buyer as filter.","lastModifiedDate":"2024-03-07"},{"lineNumber":779,"author":{"gitId":"zengzihui"},"content":"3. EstateEase displays the home-buyer\u0027s requirements.","lastModifiedDate":"2024-03-07"},{"lineNumber":780,"author":{"gitId":"zengzihui"},"content":"   Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":781,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":782,"author":{"gitId":"felixchanyy"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":783,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":784,"author":{"gitId":"zengzihui"},"content":"* 2a. EstateEase detects an invalid name.","lastModifiedDate":"2024-03-07"},{"lineNumber":785,"author":{"gitId":"zengzihui"},"content":"    *   2a1. EstateEase shows an error message regarding an invalid entry.","lastModifiedDate":"2024-03-07"},{"lineNumber":786,"author":{"gitId":"zengzihui"},"content":"        Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":787,"author":{"gitId":"zengzihui"},"content":"* 2b. Command does not match EstateEase\u0027s registered command spelling.","lastModifiedDate":"2024-03-07"},{"lineNumber":788,"author":{"gitId":"zengzihui"},"content":"    *   2b1. EstateEase shows an error message regarding an invalid command.","lastModifiedDate":"2024-03-07"},{"lineNumber":789,"author":{"gitId":"felixchanyy"},"content":"        Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":790,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":791,"author":{"gitId":"zengzihui"},"content":"**Use case: UC10 - View a home-seller\u0027s properties**","lastModifiedDate":"2024-03-07"},{"lineNumber":792,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":793,"author":{"gitId":"felixchanyy"},"content":"**MSS:**","lastModifiedDate":"2024-03-06"},{"lineNumber":794,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":795,"author":{"gitId":"zengzihui"},"content":"1. User enters the command to view the specific seller\u0027s requirements.","lastModifiedDate":"2024-03-07"},{"lineNumber":796,"author":{"gitId":"zengzihui"},"content":"2. EstateEase processes the view command with home-seller as filter.","lastModifiedDate":"2024-03-07"},{"lineNumber":797,"author":{"gitId":"zengzihui"},"content":"3. EstateEase displays the home-seller\u0027s requirements.","lastModifiedDate":"2024-03-07"},{"lineNumber":798,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":799,"author":{"gitId":"zengzihui"},"content":"   Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":800,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":801,"author":{"gitId":"felixchanyy"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":802,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":803,"author":{"gitId":"zengzihui"},"content":"* 2a. EstateEase detects an invalid name.","lastModifiedDate":"2024-03-07"},{"lineNumber":804,"author":{"gitId":"zengzihui"},"content":"    * 2a1. EstateEase shows an error message regarding an invalid entry.","lastModifiedDate":"2024-03-07"},{"lineNumber":805,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":806,"author":{"gitId":"felixchanyy"},"content":"      Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":807,"author":{"gitId":"zengzihui"},"content":"* 2b. Command does not match EstateEase\u0027s registered command spelling.","lastModifiedDate":"2024-03-07"},{"lineNumber":808,"author":{"gitId":"zengzihui"},"content":"    * 2b1. EstateEase shows an error message regarding an invalid command.","lastModifiedDate":"2024-03-07"},{"lineNumber":809,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":810,"author":{"gitId":"zengzihui"},"content":"      Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":811,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":812,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":813,"author":{"gitId":"zengzihui"},"content":"**Use case: UC11 - Edit contact details**","lastModifiedDate":"2024-03-07"},{"lineNumber":814,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":815,"author":{"gitId":"lokidoki102"},"content":"**MSS:**","lastModifiedDate":"2024-03-06"},{"lineNumber":816,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":817,"author":{"gitId":"zengzihui"},"content":"1.  User requests to \u003cu\u003eview all contacts (UC04)\u003c/u\u003e.","lastModifiedDate":"2024-03-07"},{"lineNumber":818,"author":{"gitId":"zengzihui"},"content":"2.  User requests to edit the details of a specific person in the list.","lastModifiedDate":"2024-03-07"},{"lineNumber":819,"author":{"gitId":"zengzihui"},"content":"3.  EstateEase updates the details of the specific person selected by the user.","lastModifiedDate":"2024-03-07"},{"lineNumber":820,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":821,"author":{"gitId":"lokidoki102"},"content":"    Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":822,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":823,"author":{"gitId":"lokidoki102"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":824,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":825,"author":{"gitId":"zengzihui"},"content":"* 2a. The given index is invalid.","lastModifiedDate":"2024-03-07"},{"lineNumber":826,"author":{"gitId":"zengzihui"},"content":"    * 2a1. EstateEase shows an error message.","lastModifiedDate":"2024-03-07"},{"lineNumber":827,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":828,"author":{"gitId":"lokidoki102"},"content":"      Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":829,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":830,"author":{"gitId":"zengzihui"},"content":"* 2b. The new value for the field being updated is not valid.","lastModifiedDate":"2024-03-07"},{"lineNumber":831,"author":{"gitId":"zengzihui"},"content":"    * 2b1. EstateEase shows error message, indicating the nature of the invalid input.","lastModifiedDate":"2024-03-07"},{"lineNumber":832,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":833,"author":{"gitId":"lokidoki102"},"content":"      Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":834,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":835,"author":{"gitId":"zengzihui"},"content":"**Use case: UC12 - Filter out buyers**","lastModifiedDate":"2024-03-07"},{"lineNumber":836,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":837,"author":{"gitId":"zengzihui"},"content":"**MSS:**","lastModifiedDate":"2024-03-07"},{"lineNumber":838,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":839,"author":{"gitId":"zengzihui"},"content":"1.  User requests to view only buyers that are still looking for a houses or those that","lastModifiedDate":"2024-03-07"},{"lineNumber":840,"author":{"gitId":"zengzihui"},"content":"    have already gotten their house.","lastModifiedDate":"2024-03-07"},{"lineNumber":841,"author":{"gitId":"zengzihui"},"content":"2.  EstateEase shows a list of all his/her house buyers based on the filter","lastModifiedDate":"2024-03-07"},{"lineNumber":842,"author":{"gitId":"zengzihui"},"content":"    (i.e. still looking for a house).","lastModifiedDate":"2024-03-07"},{"lineNumber":843,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":844,"author":{"gitId":"zengzihui"},"content":"    Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":845,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":846,"author":{"gitId":"zengzihui"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":847,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":848,"author":{"gitId":"zengzihui"},"content":"* 1a. There are no buyers that match the filter.","lastModifiedDate":"2024-03-07"},{"lineNumber":849,"author":{"gitId":"zengzihui"},"content":"    * 1a1. EstateEase displays a message stating that the list is empty.","lastModifiedDate":"2024-03-07"},{"lineNumber":850,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":851,"author":{"gitId":"zengzihui"},"content":"      Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":852,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":853,"author":{"gitId":"zengzihui"},"content":"**Use case: UC13 - Find matching sellers for a buyer**","lastModifiedDate":"2024-03-07"},{"lineNumber":854,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":855,"author":{"gitId":"zengzihui"},"content":"**MSS:**","lastModifiedDate":"2024-03-07"},{"lineNumber":856,"author":{"gitId":"zengzihui"},"content":"1. User requests to \u003cu\u003efilter out buyers (UC12)\u003c/u\u003e.","lastModifiedDate":"2024-03-07"},{"lineNumber":857,"author":{"gitId":"zengzihui"},"content":"2. User requests to find all the matching sellers for a buyer based on their requirements.","lastModifiedDate":"2024-03-07"},{"lineNumber":858,"author":{"gitId":"zengzihui"},"content":"3. EstateEase displays the list of sellers who have properties that match the buyer\u0027s requirements.","lastModifiedDate":"2024-03-07"},{"lineNumber":859,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":860,"author":{"gitId":"zengzihui"},"content":"Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":861,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":862,"author":{"gitId":"zengzihui"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":863,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":864,"author":{"gitId":"zengzihui"},"content":"* 1a. The list is empty.","lastModifiedDate":"2024-03-07"},{"lineNumber":865,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":866,"author":{"gitId":"zengzihui"},"content":"  Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":867,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":868,"author":{"gitId":"zengzihui"},"content":"* 2a. The given index for the buyer is invalid input type.","lastModifiedDate":"2024-03-07"},{"lineNumber":869,"author":{"gitId":"zengzihui"},"content":"    * 2a1. EstateEase shows an error message indicating the invalid input type.","lastModifiedDate":"2024-03-07"},{"lineNumber":870,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":871,"author":{"gitId":"zengzihui"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-07"},{"lineNumber":872,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":873,"author":{"gitId":"zengzihui"},"content":"* 2b. The given index for the buyer is out of range.","lastModifiedDate":"2024-03-07"},{"lineNumber":874,"author":{"gitId":"zengzihui"},"content":"    * 2b1. EstateEase shows an error message indicating the out of range for the index.","lastModifiedDate":"2024-03-07"},{"lineNumber":875,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":876,"author":{"gitId":"zengzihui"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-07"},{"lineNumber":877,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":878,"author":{"gitId":"zengzihui"},"content":"* 3a. There are no sellers in the contact list.","lastModifiedDate":"2024-03-07"},{"lineNumber":879,"author":{"gitId":"zengzihui"},"content":"    * 3a1. EstateEase shows a message indicating there is no sellers in the contact list.","lastModifiedDate":"2024-03-07"},{"lineNumber":880,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":881,"author":{"gitId":"zengzihui"},"content":"      Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":882,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":883,"author":{"gitId":"zengzihui"},"content":"* 3b. There are no matching properties based on the buyer\u0027s requirements.","lastModifiedDate":"2024-03-07"},{"lineNumber":884,"author":{"gitId":"zengzihui"},"content":"    * 3b1. EstateEase shows a message indicating there is no matching results.","lastModifiedDate":"2024-03-07"},{"lineNumber":885,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":886,"author":{"gitId":"zengzihui"},"content":"      Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":887,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":888,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":889,"author":{"gitId":"zengzihui"},"content":"**Use case: UC14 - Link Buyer to Seller**","lastModifiedDate":"2024-03-07"},{"lineNumber":890,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":891,"author":{"gitId":"zengzihui"},"content":"**MSS:**","lastModifiedDate":"2024-03-07"},{"lineNumber":892,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":893,"author":{"gitId":"zengzihui"},"content":"1. User initiates the process of linking a buyer to sellers for a specific property.","lastModifiedDate":"2024-03-07"},{"lineNumber":894,"author":{"gitId":"zengzihui"},"content":"2. EstateEase validates the provided property information, buyer ID, and seller ID.","lastModifiedDate":"2024-03-07"},{"lineNumber":895,"author":{"gitId":"zengzihui"},"content":"3. EstateEase proceeds to link the buyer to the specified seller(s) for the given property.","lastModifiedDate":"2024-03-07"},{"lineNumber":896,"author":{"gitId":"zengzihui"},"content":"4. Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":897,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":898,"author":{"gitId":"zengzihui"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":899,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":900,"author":{"gitId":"zengzihui"},"content":"* 1a. User provides invalid input for linking.","lastModifiedDate":"2024-03-07"},{"lineNumber":901,"author":{"gitId":"zengzihui"},"content":"    * 1a1. EstateEase displays an error message indicating the issue with the input.","lastModifiedDate":"2024-03-07"},{"lineNumber":902,"author":{"gitId":"zengzihui"},"content":"      Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":903,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":904,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":905,"author":{"gitId":"zengzihui"},"content":"**Use case: UC15 - View home sellers by priority**","lastModifiedDate":"2024-03-07"},{"lineNumber":906,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":907,"author":{"gitId":"zengzihui"},"content":"**Preconditions:**","lastModifiedDate":"2024-03-07"},{"lineNumber":908,"author":{"gitId":"zengzihui"},"content":"- The user initialises a view command with home-seller as a filter","lastModifiedDate":"2024-03-07"},{"lineNumber":909,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":910,"author":{"gitId":"zengzihui"},"content":"**MSS:**","lastModifiedDate":"2024-03-07"},{"lineNumber":911,"author":{"gitId":"zengzihui"},"content":"1.  EstateEase process the view command with home-seller as filter.","lastModifiedDate":"2024-03-07"},{"lineNumber":912,"author":{"gitId":"zengzihui"},"content":"2.  EstateEase shows a list of home-sellers, arranged based on their priority. \u003cbr\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":913,"author":{"gitId":"zengzihui"},"content":"    Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":914,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":915,"author":{"gitId":"zengzihui"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":916,"author":{"gitId":"zengzihui"},"content":"* 1a. The contact list does not have any home-seller. \u003cbr\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":917,"author":{"gitId":"zengzihui"},"content":"    * 1a1. EstateEase shows an error message stating that the contact list does not have home-seller. \u003cbr\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":918,"author":{"gitId":"zengzihui"},"content":"      Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":919,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":920,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":921,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":922,"author":{"gitId":"zengzihui"},"content":"**Use case: UC16 - Differentiate home-seller status**","lastModifiedDate":"2024-03-07"},{"lineNumber":923,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":924,"author":{"gitId":"zengzihui"},"content":"**MSS:**","lastModifiedDate":"2024-03-07"},{"lineNumber":925,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":926,"author":{"gitId":"zengzihui"},"content":"1. User filters for home-sellers","lastModifiedDate":"2024-03-07"},{"lineNumber":927,"author":{"gitId":"zengzihui"},"content":"2. EstateEase displays home-sellers. Free home-sellers are highlighted in green.","lastModifiedDate":"2024-03-07"},{"lineNumber":928,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":929,"author":{"gitId":"lokidoki102"},"content":"   Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":930,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":931,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":932,"author":{"gitId":"zengzihui"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":933,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":934,"author":{"gitId":"zengzihui"},"content":"* 2a. Pending home-sellers are displayed in red.","lastModifiedDate":"2024-03-07"},{"lineNumber":935,"author":{"gitId":"zengzihui"},"content":"    *   2a1. User clicks on one of the pending home-sellers. The home-seller\u0027s status is set to pending.","lastModifiedDate":"2024-03-07"},{"lineNumber":936,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":937,"author":{"gitId":"zengzihui"},"content":"        Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":938,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":939,"author":{"gitId":"zengzihui"},"content":"* 2b. User clicks on one of the free home-sellers. The home-seller\u0027s status is set to free.","lastModifiedDate":"2024-03-07"},{"lineNumber":940,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":941,"author":{"gitId":"zengzihui"},"content":"  Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":942,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":943,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":944,"author":{"gitId":"zengzihui"},"content":"**Use case: UC17 - Differentiate home-buyer status**","lastModifiedDate":"2024-03-07"},{"lineNumber":945,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":946,"author":{"gitId":"zengzihui"},"content":"**MSS:**","lastModifiedDate":"2024-03-07"},{"lineNumber":947,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":948,"author":{"gitId":"zengzihui"},"content":"1.  User requests to \u003cu\u003eview all contacts\u003c/u\u003e.","lastModifiedDate":"2024-03-07"},{"lineNumber":949,"author":{"gitId":"zengzihui"},"content":"2.  EstateEase displays and highlights the home-buyers who are still looking for houses in green,","lastModifiedDate":"2024-03-07"},{"lineNumber":950,"author":{"gitId":"zengzihui"},"content":"    and the home-buyers who are pending in finalizing a deal or done deal in red.","lastModifiedDate":"2024-03-07"},{"lineNumber":951,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":952,"author":{"gitId":"zengzihui"},"content":"    Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":953,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":954,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":955,"author":{"gitId":"zengzihui"},"content":"**Use case: UC18 - Adding notes about clients**","lastModifiedDate":"2024-03-07"},{"lineNumber":956,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":957,"author":{"gitId":"zengzihui"},"content":"**MSS:**","lastModifiedDate":"2024-03-07"},{"lineNumber":958,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":959,"author":{"gitId":"zengzihui"},"content":"1. User enters a remark regarding a client.","lastModifiedDate":"2024-03-07"},{"lineNumber":960,"author":{"gitId":"zengzihui"},"content":"2. EstateEase adds the provided remark to the client identified by the specified index.","lastModifiedDate":"2024-03-07"},{"lineNumber":961,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":962,"author":{"gitId":"zengzihui"},"content":"   Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":963,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":964,"author":{"gitId":"zengzihui"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":965,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":966,"author":{"gitId":"zengzihui"},"content":"* 1a. User enters an invalid index or remark format.","lastModifiedDate":"2024-03-07"},{"lineNumber":967,"author":{"gitId":"zengzihui"},"content":"    * 1a1. EstateEase displays an error message indicating the invalid input.","lastModifiedDate":"2024-03-07"},{"lineNumber":968,"author":{"gitId":"zengzihui"},"content":"      Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":969,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":970,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":971,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":972,"author":{"gitId":"zengzihui"},"content":"**Use case: UC19 - Exit application**","lastModifiedDate":"2024-03-07"},{"lineNumber":973,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":974,"author":{"gitId":"zengzihui"},"content":"**MSS:**","lastModifiedDate":"2024-03-07"},{"lineNumber":975,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":976,"author":{"gitId":"zengzihui"},"content":"1. User enters the \u0027exit\u0027 command.","lastModifiedDate":"2024-03-07"},{"lineNumber":977,"author":{"gitId":"zengzihui"},"content":"2. EstateEase immediately closes the application.","lastModifiedDate":"2024-03-07"},{"lineNumber":978,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":979,"author":{"gitId":"zengzihui"},"content":"   Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":980,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":981,"author":{"gitId":"zengzihui"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":982,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":983,"author":{"gitId":"zengzihui"},"content":"* 1a. User enters an unrecognized command.","lastModifiedDate":"2024-03-07"},{"lineNumber":984,"author":{"gitId":"zengzihui"},"content":"    * 1a1. EstateEase displays a message \"Unknown command\".","lastModifiedDate":"2024-03-07"},{"lineNumber":985,"author":{"gitId":"zengzihui"},"content":"      Use case resumes from the previous step.","lastModifiedDate":"2024-03-07"},{"lineNumber":986,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":987,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":988,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":989,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":990,"author":{"gitId":"KhoonSun47"},"content":"1. The program should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2024-03-06"},{"lineNumber":991,"author":{"gitId":"KhoonSun47"},"content":"2. The program should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2024-03-06"},{"lineNumber":992,"author":{"gitId":"KhoonSun47"},"content":"3. The program should be capable of running both online and offline.","lastModifiedDate":"2024-03-06"},{"lineNumber":993,"author":{"gitId":"KhoonSun47"},"content":"4. The program should be able to recover from common errors and not crash without user intervention.","lastModifiedDate":"2024-03-06"},{"lineNumber":994,"author":{"gitId":"KhoonSun47"},"content":"5. The program should provide meaningful error messages that guide the user to resolve issues.","lastModifiedDate":"2024-03-06"},{"lineNumber":995,"author":{"gitId":"KhoonSun47"},"content":"6. The program should be able to respond to any user input within at most 2 seconds.","lastModifiedDate":"2024-03-06"},{"lineNumber":996,"author":{"gitId":"KhoonSun47"},"content":"7. The program must perform consistently across different devices and operating systems with a reliability rate of 99%.","lastModifiedDate":"2024-03-06"},{"lineNumber":997,"author":{"gitId":"KhoonSun47"},"content":"8. The program only supports one user at a time.","lastModifiedDate":"2024-03-06"},{"lineNumber":998,"author":{"gitId":"KhoonSun47"},"content":"9. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2024-03-06"},{"lineNumber":999,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1000,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":1001,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1002,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09"},{"lineNumber":1003,"author":{"gitId":"KhoonSun47"},"content":"* **CLI**: Command Line Interface","lastModifiedDate":"2024-03-06"},{"lineNumber":1004,"author":{"gitId":"KhoonSun47"},"content":"* **GUI**: Graphical User Interface","lastModifiedDate":"2024-03-06"},{"lineNumber":1005,"author":{"gitId":"KhoonSun47"},"content":"* **Index**: A number that references the position of the contact in the contact list","lastModifiedDate":"2024-03-06"},{"lineNumber":1006,"author":{"gitId":"KhoonSun47"},"content":"* **Unique ID**: An attribute that uniquely identifies the contacts and houses in the contact list","lastModifiedDate":"2024-03-06"},{"lineNumber":1007,"author":{"gitId":"KhoonSun47"},"content":"* **Home-buyer**: The contact who wants to buy a house","lastModifiedDate":"2024-03-06"},{"lineNumber":1008,"author":{"gitId":"KhoonSun47"},"content":"* **Home-seller**: The contact who wants to sell their houses.","lastModifiedDate":"2024-03-06"},{"lineNumber":1009,"author":{"gitId":"KhoonSun47"},"content":"* **Contact**: Home-buyer/Home-seller who is added to the list, containing details of name, phone number etc.","lastModifiedDate":"2024-03-06"},{"lineNumber":1010,"author":{"gitId":"KhoonSun47"},"content":"* **Home**: Details of the homes by the home-seller","lastModifiedDate":"2024-03-06"},{"lineNumber":1011,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1012,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":1013,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1014,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":1015,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1016,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":1017,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1018,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":1019,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":1020,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":1021,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":1022,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1023,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":1024,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1025,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":1026,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1027,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":1028,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1029,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":1030,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1031,"author":{"gitId":"-"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":1032,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1033,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":1034,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1035,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":1036,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1037,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1038,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":1039,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1040,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":1041,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1042,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":1043,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1044,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":1045,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1046,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":1047,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1048,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1049,"author":{"gitId":"-"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":1050,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1051,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1052,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":1053,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1054,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1055,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":1056,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1057,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":1058,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1059,"author":{"gitId":"felixchanyy"},"content":"### Loading and Saving Data","lastModifiedDate":"2024-03-06"},{"lineNumber":1060,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1061,"author":{"gitId":"felixchanyy"},"content":"1. **Dealing with Missing/Created Data Folder**","lastModifiedDate":"2024-03-06"},{"lineNumber":1062,"author":{"gitId":"felixchanyy"},"content":"    - **Loading Data:**","lastModifiedDate":"2024-03-06"},{"lineNumber":1063,"author":{"gitId":"felixchanyy"},"content":"        - _{Explain how to simulate a missing data folder during loading, and the expected behavior}_","lastModifiedDate":"2024-03-06"},{"lineNumber":1064,"author":{"gitId":"felixchanyy"},"content":"    - **Saving Data:**","lastModifiedDate":"2024-03-06"},{"lineNumber":1065,"author":{"gitId":"felixchanyy"},"content":"        - _{Explain how to simulate a missing data folder during saving, and the expected behavior}_","lastModifiedDate":"2024-03-06"},{"lineNumber":1066,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1067,"author":{"gitId":"felixchanyy"},"content":"2.  **Dealing with Missing/Corrupted Data Files**","lastModifiedDate":"2024-03-06"},{"lineNumber":1068,"author":{"gitId":"felixchanyy"},"content":"    - **Loading Data:**","lastModifiedDate":"2024-03-06"},{"lineNumber":1069,"author":{"gitId":"felixchanyy"},"content":"        - _{Explain how to simulate a missing or corrupted data file during loading, and the expected behavior}_","lastModifiedDate":"2024-03-06"},{"lineNumber":1070,"author":{"gitId":"felixchanyy"},"content":"    - **Saving Data:**","lastModifiedDate":"2024-03-06"},{"lineNumber":1071,"author":{"gitId":"felixchanyy"},"content":"        - _{Explain how to simulate a missing or corrupted data file during saving, and the expected behavior}_","lastModifiedDate":"2024-03-06"},{"lineNumber":1072,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":1073,"author":{"gitId":"felixchanyy"},"content":"3. _{ more test cases …​ }_","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"redcolorbicycle":24,"zengzihui":269,"felixchanyy":103,"KhoonSun47":239,"-":370,"lokidoki102":68}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"User Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":"# EstateEase User Guide","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"felixchanyy"},"content":"EstateEase is a **desktop app for managing contacts, optimized for use via a  Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Estate Ease can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"1. Download the latest `addressbook.jar` from [here](https://github.com/se-edu/addressbook-level3/releases).","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your AddressBook.","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar addressbook.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"   * `addSeller n/John Doe p/98765432 e/johnd@example.com type/HDB street/Clementi Ave 2 blk/311 level/02 unitNo/25 postal/578578 price/10000 t/friends t/owesMoney` : Adds a seller named `John Doe` to the Address Book.","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"  e.g. in `addBuyer n/NAME`, `NAME` is a parameter which can be used as `addBuyer n/John Doe`.","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"KhoonSun47"},"content":"### Adding a seller: `addSeller`","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"KhoonSun47"},"content":"Adds a seller to the address book.","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"KhoonSun47"},"content":"Format: `addSeller [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [street/STREET]  [blk/BLOCK] [level/LEVEL] [unitNo/UNIT_NUMBER] [postal/POSTAL_CODE] [price/HOUSE_PRICE] [t/TAG]…​`","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"**Tip:** A person can have any number of tags (including 0)","lastModifiedDate":"2023-09-12"},{"lineNumber":86,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"KhoonSun47"},"content":"**Note:** A seller need to have at least one house. Hence, adding a seller will also add a house to his/her list of houses.","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"KhoonSun47"},"content":"* `addSeller n/John Doe p/98765432 e/johnd@example.com type/HDB street/Clementi Ave 2 blk/311 level/02 unitNo/25 postal/578578 price/10000 t/friends t/owesMoney`","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"AddressBook data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-09-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.  Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Furthermore, certain edits can cause the AddressBook to behave in unexpected ways (e.g., if a value entered is outside the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2023-09-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"Action     | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"-----------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-12"},{"lineNumber":198,"author":{"gitId":"KhoonSun47"},"content":"**Add Seller**    | `addSeller [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [street/STREET]  [blk/BLOCK] [level/LEVEL] [unitNo/UNIT_NUMBER] [postal/POSTAL_CODE] [price/HOUSE_PRICE] [t/TAG]…​`\u003cbr\u003e e.g.,`addSeller n/John Doe p/98765432 e/johnd@example.com type/HDB street/Clementi Ave 2 blk/311 level/02 unitNo/25 postal/578578 price/10000 t/friends t/owesMoney`","lastModifiedDate":"2024-03-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"**Clear**         | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"**Delete**        | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"**Edit**          | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"**Find**          | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"**List**          | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"**Help**          | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"felixchanyy":2,"KhoonSun47":9,"-":193}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003eEstateEase\u003c/a\u003e","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/index.html\" class\u003d\"nav-link\"\u003eHome\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/se-edu/addressbook-level3\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#quick-start)","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#features)","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * [Appendix: Requirements]({{ baseUrl }}/DeveloperGuide.html#appendix-requirements)","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  * [Appendix: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* Tutorials","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Tracing code]({{ baseUrl }}/tutorials/TracingCode.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * [Adding a command]({{ baseUrl }}/tutorials/AddRemark.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  * [Removing Fields]({{ baseUrl }}/tutorials/RemovingFields.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"felixchanyy":1,"-":66}},{"path":"docs/diagrams/AddSellerActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"@startuml","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"skin rose","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"start","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":":User chooses to add home-seller;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":":EstateEase requests for the details of the home-seller;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":":User enters the requested details;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"if () then ([Details Missing or Invalid])","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"    :Show error message;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"else ([Details Valid])","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"    :EstateEase adds the home-seller;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"    :Displays the newly added home-seller;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"endif","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"stop","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"@enduml","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"KhoonSun47":18}},{"path":"docs/diagrams/AddSellerSequenceDiagram-Logic.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"@startuml","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"!include style.puml","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"participant \":AddSellerCommandParser\" as AddSellerCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"participant \"a:AddSellerCommand\" as AddSellerCommand LOGIC_COLOR","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"end box","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"end box","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"box Storage STORAGE_COLOR_T1","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"participant \":Storage\" as Storage STORAGE_COLOR","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"end box","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"[-\u003e LogicManager : execute(addSeller ...)","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"activate LogicManager","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(addSeller ...)","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"AddressBookParser -\u003e AddSellerCommandParser : parse(arguments)","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"activate AddSellerCommandParser","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"create AddSellerCommand","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"AddSellerCommandParser -\u003e AddSellerCommand","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"activate AddSellerCommand","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"AddSellerCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"deactivate AddSellerCommandParser","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"AddressBookParser --\u003e LogicManager :","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"LogicManager -\u003e AddSellerCommand : execute()","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"activate AddSellerCommand","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"AddSellerCommand -\u003e Model : addSeller(seller)","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"activate Model","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"Model --\u003e AddSellerCommand","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"deactivate Model","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"LogicManager -\u003e Storage : saveAddressBook(addressBook)","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"activate Storage","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"Storage --\u003e LogicManager","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"deactivate Storage","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"AddSellerCommand --\u003e LogicManager : result","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"deactivate AddSellerCommand","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"[\u003c-- LogicManager : result","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"@enduml","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"KhoonSun47":59}},{"path":"docs/diagrams/AddSellerSequenceDiagram-Model.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"@startuml","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"!include style.puml","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"participant \":VersionedAddressBook\" as VersionedAddressBook MODEL_COLOR","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"end box","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"[-\u003e Model : addSeller(seller)","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"activate Model","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"Model -\u003e Model : hasPerson(seller)","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"activate Model","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"alt person exists","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"    Model --\u003e Model : true","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"    [\u003c- Model : \"Person cannot be added\"","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"else person does not exist","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"    Model --\u003e Model : false","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"    deactivate Model","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"    Model -\u003e VersionedAddressBook : addPerson(seller)","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"    activate VersionedAddressBook","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"    VersionedAddressBook --\u003e Model :","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"    deactivate VersionedAddressBook","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"    Model -\u003e Model : getFilteredPersonList()","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"    activate Model","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"    Model --\u003e Model : filteredList","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"    deactivate Model","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"    [\u003c- Model : \"Seller added successfully\"","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"end","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"deactivate Model","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"@enduml","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"KhoonSun47":36}},{"path":"docs/diagrams/AddSellerSequenceDiagram-Storage.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"@startuml","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"!include style.puml","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"box Storage STORAGE_COLOR_T1","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"participant \":StorageManager\" as StorageManager STORAGE_COLOR","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"participant \":AddressBookStorage\" as AddressBookStorage STORAGE_COLOR","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"end box","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"[-\u003e StorageManager : saveAddressBook(addressBook)","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"activate StorageManager","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"StorageManager -\u003e AddressBookStorage : saveAddressBook(addressBook)","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"activate AddressBookStorage","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"alt file path is provided","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"    AddressBookStorage -\u003e AddressBookStorage : saveAddressBook(addressBook, filePath)","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"    activate AddressBookStorage","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"    AddressBookStorage --\u003e AddressBookStorage : File Saved","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"    deactivate AddressBookStorage","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"else default path","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"    AddressBookStorage -\u003e AddressBookStorage : saveAddressBook(addressBook)","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"    activate AddressBookStorage","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"    AddressBookStorage --\u003e AddressBookStorage : File Saved","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"    deactivate AddressBookStorage","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"end","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"AddressBookStorage --\u003e StorageManager : saveSuccessful","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"deactivate AddressBookStorage","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"[\u003c-- StorageManager : saveSuccessful","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"deactivate StorageManager","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"@enduml","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"KhoonSun47":33}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"Class PostalCode","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"\u0027@@author lokidoki102","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"Class Street","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"felixchanyy"},"content":"Class Level","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"Class Block","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"\u0027@@author","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"Class UnitNumber","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"redcolorbicycle"},"content":"Class Buyer extends Person","lastModifiedDate":"2024-03-22"},{"lineNumber":29,"author":{"gitId":"redcolorbicycle"},"content":"Class Seller extends Person","lastModifiedDate":"2024-03-22"},{"lineNumber":30,"author":{"gitId":"zengzihui"},"content":"Class House","lastModifiedDate":"2024-03-22"},{"lineNumber":31,"author":{"gitId":"felixchanyy"},"content":"Class Condo implements House","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"redcolorbicycle"},"content":"Class Hdb implements House","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":"Class Landed implements House","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"felixchanyy"},"content":"Class Budget","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"House *--\u003e PostalCode","lastModifiedDate":"2024-03-22"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"House *--\u003e UnitNumber","lastModifiedDate":"2024-03-22"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"House *--\u003e Street","lastModifiedDate":"2024-03-22"},{"lineNumber":60,"author":{"gitId":"felixchanyy"},"content":"Seller *--\u003e \"1..*\" House : sells","lastModifiedDate":"2024-03-23"},{"lineNumber":61,"author":{"gitId":"felixchanyy"},"content":"Buyer *--\u003e \"*\" House : buy","lastModifiedDate":"2024-03-23"},{"lineNumber":62,"author":{"gitId":"zengzihui"},"content":"Buyer *--\u003e Budget","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"zengzihui"},"content":"Buyer *--\u003e InterestedHousingType","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"redcolorbicycle":5,"zengzihui":4,"felixchanyy":6,"KhoonSun47":3,"-":51,"lokidoki102":4}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"    public static final Version VERSION \u003d new Version(1, 2, 1, true);","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":185,"lokidoki102":1}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"     * Formats the {@code person} for display to the user, differentiating between Buyer and Seller.","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"                .append(\"; Phone\u003d \")","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"                .append(\"; Email\u003d \")","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"                .append(\"; Tags\u003d \");","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KhoonSun47":4,"-":44}},{"path":"src/main/java/seedu/address/logic/commands/AddBuyerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BUDGET;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOUSING_TYPE;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":" * Adds a buyer to the address book.","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"public class AddBuyerCommand extends Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"zengzihui"},"content":"    public static final String COMMAND_WORD \u003d \"addBuyer\";","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"zengzihui"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a buyer to EstateEase. \"","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_BUDGET + \"BUDGET \"","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"            + PREFIX_HOUSING_TYPE + \"HOUSING_TYPE \"","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_BUDGET + \"99999900 \"","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"            + PREFIX_HOUSING_TYPE + \"Hdb \"","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"felixchanyy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New buyer added: %1$s\";","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"    public static final String MESSAGE_DUPLICATE_BUYER \u003d \"This person already exists in EstateEase\";","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"felixchanyy"},"content":"    private final Person buyerToAdd;","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"felixchanyy"},"content":"     * Creates an AddBuyerCommand to add the specified buyer.","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"felixchanyy"},"content":"     * @param person The buyer to be added.","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"felixchanyy"},"content":"    public AddBuyerCommand(Person person) {","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"zengzihui"},"content":"        this.buyerToAdd \u003d person;","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"felixchanyy"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"felixchanyy"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"felixchanyy"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"felixchanyy"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"felixchanyy"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"felixchanyy"},"content":"        if (model.hasPerson(buyerToAdd)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"zengzihui"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_BUYER);","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"felixchanyy"},"content":"        model.addPerson(buyerToAdd);","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"felixchanyy"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(buyerToAdd)));","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"felixchanyy"},"content":"        if (!(other instanceof AddBuyerCommand)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"felixchanyy"},"content":"        AddBuyerCommand otherAddCommand \u003d (AddBuyerCommand) other;","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"felixchanyy"},"content":"        return buyerToAdd.equals(otherAddCommand.buyerToAdd);","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"felixchanyy"},"content":"                .add(\"buyerToAdd\", buyerToAdd)","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"zengzihui":5,"felixchanyy":24,"KhoonSun47":3,"-":62}},{"path":"src/main/java/seedu/address/logic/commands/AddSellerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"felixchanyy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BLOCK;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOUSING_TYPE;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LEVEL;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSTALCODE;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STREET;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UNITNUMBER;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"felixchanyy"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"felixchanyy"},"content":" * Adds a seller to the address book.","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"felixchanyy"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"felixchanyy"},"content":"public class AddSellerCommand extends Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"zengzihui"},"content":"    public static final String COMMAND_WORD \u003d \"addSeller\";","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"zengzihui"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a seller to EstateEase. \"","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"felixchanyy"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"zengzihui"},"content":"            + PREFIX_HOUSING_TYPE + \"HOUSING_TYPE \"","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"redcolorbicycle"},"content":"            + PREFIX_STREET + \"STREET \"","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"redcolorbicycle"},"content":"            + PREFIX_BLOCK + \"BLOCK \"","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"redcolorbicycle"},"content":"            + PREFIX_LEVEL + \"LEVEL \"","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"redcolorbicycle"},"content":"            + PREFIX_UNITNUMBER + \"UNIT NUMBER \"","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_POSTALCODE + \"POSTAL CODE \"","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_PRICE + \"PRICE \"","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"felixchanyy"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"felixchanyy"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"redcolorbicycle"},"content":"            + PREFIX_HOUSING_TYPE + \"Hdb \"","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"redcolorbicycle"},"content":"            + PREFIX_STREET + \"Clementi Ave 2 \"","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"            + PREFIX_BLOCK + \"311 \"","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"            + PREFIX_LEVEL + \"02 \"","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"            + PREFIX_UNITNUMBER + \"25 \"","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_POSTALCODE + \"578578 \"","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_PRICE + \"999999999 \"","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_TAG + \"owesMoney \";","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New seller added\u003d %1$s\";","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"    public static final String MESSAGE_DUPLICATE_SELLER \u003d \"This person already exists in EstateEase\";","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"felixchanyy"},"content":"    private final Person sellerToAdd;","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"     * Creates an AddSellerCommand to add the specified {@code Seller}","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"felixchanyy"},"content":"    public AddSellerCommand(Person person) {","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"felixchanyy"},"content":"        requireNonNull(person);","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"felixchanyy"},"content":"        sellerToAdd \u003d person;","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"felixchanyy"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"felixchanyy"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"felixchanyy"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"felixchanyy"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"felixchanyy"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"felixchanyy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"felixchanyy"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"felixchanyy"},"content":"        if (model.hasPerson(sellerToAdd)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"KhoonSun47"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"felixchanyy"},"content":"        model.addPerson(sellerToAdd);","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"felixchanyy"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(sellerToAdd)));","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"felixchanyy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"felixchanyy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"felixchanyy"},"content":"            return true;","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"felixchanyy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"felixchanyy"},"content":"        if (!(other instanceof AddSellerCommand)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"felixchanyy"},"content":"            return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"felixchanyy"},"content":"        AddSellerCommand otherAddCommand \u003d (AddSellerCommand) other;","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"felixchanyy"},"content":"        return sellerToAdd.equals(otherAddCommand.sellerToAdd);","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"felixchanyy"},"content":"    public String toString() {","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"felixchanyy"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"felixchanyy"},"content":"                .add(\"sellerToAdd\", sellerToAdd)","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"felixchanyy"},"content":"                .toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"felixchanyy"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"redcolorbicycle":15,"zengzihui":4,"felixchanyy":82,"KhoonSun47":8}},{"path":"src/main/java/seedu/address/logic/commands/EditBuyerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BUDGET;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOUSING_TYPE;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"import java.util.List;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.house.HousingType;","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.person.Budget;","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.person.Buyer;","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":" * Edits the details of an existing buyer in the EstateEase contacts.","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"public class EditBuyerCommand extends Command {","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"    // TODO: Allow command to edit the budget of the buyer, or any other field that\u0027s yet to be added.","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"    public static final String COMMAND_WORD \u003d \"editBuyer\";","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the buyer identified \"","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"            + \"by the index number used in the displayed list. \"","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"            + \"[\" + PREFIX_HOUSING_TYPE + \"HOUSING_TYPE] \"","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"            + \"[\" + PREFIX_BUDGET + \"BUDGET] \"","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"lokidoki102"},"content":"    public static final String MESSAGE_EDIT_BUYER_SUCCESS \u003d \"Edited Person(Buyer): %1$s\";","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"lokidoki102"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This buyer already exists in EstateEase.\";","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"lokidoki102"},"content":"    public static final String MESSAGE_WRONG_TYPE \u003d \"The person you are trying to edit is not a buyer.\";","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"lokidoki102"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(EditBuyerCommand.class);","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"lokidoki102"},"content":"    private final Index index;","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"lokidoki102"},"content":"    private final EditBuyerDescriptor editBuyerDescriptor;","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"lokidoki102"},"content":"     * @param index                of the person in the filtered person list to edit","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"lokidoki102"},"content":"     * @param editBuyerDescriptor details to edit the person with","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"lokidoki102"},"content":"    public EditBuyerCommand(Index index, EditBuyerDescriptor editBuyerDescriptor) {","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"lokidoki102"},"content":"        requireNonNull(index);","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"lokidoki102"},"content":"        requireNonNull(editBuyerDescriptor);","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"lokidoki102"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"lokidoki102"},"content":"        this.editBuyerDescriptor \u003d new EditBuyerDescriptor(editBuyerDescriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"lokidoki102"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"lokidoki102"},"content":"        logger.info(\"----------------[EDIT BUYER] executing edit command\");","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"lokidoki102"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"lokidoki102"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"lokidoki102"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"lokidoki102"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"lokidoki102"},"content":"        if (!(lastShownList.get(index.getZeroBased()) instanceof Buyer)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"lokidoki102"},"content":"            logger.info(\"----------------[EDIT BUYER] target person is not a buyer\");","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"lokidoki102"},"content":"            throw new CommandException(MESSAGE_WRONG_TYPE);","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"lokidoki102"},"content":"        // safe to cast to Buyer type as there\u0027s already a validation to check if the target is a Buyer.","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"lokidoki102"},"content":"        Buyer buyerToEdit \u003d (Buyer) lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"lokidoki102"},"content":"        Buyer editedBuyer \u003d createEditedBuyer(buyerToEdit, editBuyerDescriptor);","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"lokidoki102"},"content":"        if (!buyerToEdit.isSamePerson(editedBuyer) \u0026\u0026 model.hasPerson(editedBuyer)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"lokidoki102"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-28"},{"lineNumber":99,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":100,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"lokidoki102"},"content":"        model.setPerson(buyerToEdit, editedBuyer);","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"lokidoki102"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-28"},{"lineNumber":103,"author":{"gitId":"lokidoki102"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_BUYER_SUCCESS, Messages.format(editedBuyer)));","lastModifiedDate":"2024-03-28"},{"lineNumber":104,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":105,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":106,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":107,"author":{"gitId":"lokidoki102"},"content":"     * Creates and returns a {@code Buyer} with the details of {@code buyerToEdit}","lastModifiedDate":"2024-03-28"},{"lineNumber":108,"author":{"gitId":"lokidoki102"},"content":"     * edited with {@code editBuyerDescriptor}.","lastModifiedDate":"2024-03-28"},{"lineNumber":109,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":110,"author":{"gitId":"lokidoki102"},"content":"    private static Buyer createEditedBuyer(Buyer buyerToEdit, EditBuyerDescriptor editBuyerDescriptor) {","lastModifiedDate":"2024-03-28"},{"lineNumber":111,"author":{"gitId":"lokidoki102"},"content":"        assert buyerToEdit !\u003d null;","lastModifiedDate":"2024-03-28"},{"lineNumber":112,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":113,"author":{"gitId":"lokidoki102"},"content":"        Name updatedName \u003d editBuyerDescriptor.getName().orElse(buyerToEdit.getName());","lastModifiedDate":"2024-03-28"},{"lineNumber":114,"author":{"gitId":"lokidoki102"},"content":"        Phone updatedPhone \u003d editBuyerDescriptor.getPhone().orElse(buyerToEdit.getPhone());","lastModifiedDate":"2024-03-28"},{"lineNumber":115,"author":{"gitId":"lokidoki102"},"content":"        Email updatedEmail \u003d editBuyerDescriptor.getEmail().orElse(buyerToEdit.getEmail());","lastModifiedDate":"2024-03-28"},{"lineNumber":116,"author":{"gitId":"lokidoki102"},"content":"        Budget updatedBudget \u003d editBuyerDescriptor.getBudget().orElse(buyerToEdit.getBudget());","lastModifiedDate":"2024-03-30"},{"lineNumber":117,"author":{"gitId":"KhoonSun47"},"content":"        HousingType updatedHousingType \u003d editBuyerDescriptor.getHousingType()","lastModifiedDate":"2024-04-01"},{"lineNumber":118,"author":{"gitId":"KhoonSun47"},"content":"                .orElse(buyerToEdit.getPreferredHousingType());","lastModifiedDate":"2024-04-01"},{"lineNumber":119,"author":{"gitId":"lokidoki102"},"content":"        Set\u003cTag\u003e updatedTags \u003d editBuyerDescriptor.getTags().orElse(buyerToEdit.getTags());","lastModifiedDate":"2024-03-28"},{"lineNumber":120,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":121,"author":{"gitId":"KhoonSun47"},"content":"        return new Buyer(updatedName, updatedPhone, updatedEmail, updatedBudget, updatedHousingType, updatedTags);","lastModifiedDate":"2024-04-01"},{"lineNumber":122,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":123,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":124,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":125,"author":{"gitId":"lokidoki102"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-28"},{"lineNumber":126,"author":{"gitId":"lokidoki102"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-28"},{"lineNumber":127,"author":{"gitId":"lokidoki102"},"content":"            return true;","lastModifiedDate":"2024-03-28"},{"lineNumber":128,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":129,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":130,"author":{"gitId":"lokidoki102"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-28"},{"lineNumber":131,"author":{"gitId":"lokidoki102"},"content":"        if (!(other instanceof EditBuyerCommand)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":132,"author":{"gitId":"lokidoki102"},"content":"            return false;","lastModifiedDate":"2024-03-28"},{"lineNumber":133,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":134,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":135,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerCommand otherEditCommand \u003d (EditBuyerCommand) other;","lastModifiedDate":"2024-03-28"},{"lineNumber":136,"author":{"gitId":"lokidoki102"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2024-03-28"},{"lineNumber":137,"author":{"gitId":"lokidoki102"},"content":"                \u0026\u0026 editBuyerDescriptor.equals(otherEditCommand.editBuyerDescriptor);","lastModifiedDate":"2024-03-28"},{"lineNumber":138,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":139,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":140,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":141,"author":{"gitId":"lokidoki102"},"content":"    public String toString() {","lastModifiedDate":"2024-03-28"},{"lineNumber":142,"author":{"gitId":"lokidoki102"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-28"},{"lineNumber":143,"author":{"gitId":"lokidoki102"},"content":"                .add(\"index\", index)","lastModifiedDate":"2024-03-28"},{"lineNumber":144,"author":{"gitId":"lokidoki102"},"content":"                .add(\"editBuyerDescriptor\", editBuyerDescriptor)","lastModifiedDate":"2024-03-28"},{"lineNumber":145,"author":{"gitId":"lokidoki102"},"content":"                .toString();","lastModifiedDate":"2024-03-28"},{"lineNumber":146,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":147,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":148,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":149,"author":{"gitId":"lokidoki102"},"content":"     * Stores the details to edit the buyer with. Each non-empty field value will replace the","lastModifiedDate":"2024-03-28"},{"lineNumber":150,"author":{"gitId":"lokidoki102"},"content":"     * corresponding field value of the byer.","lastModifiedDate":"2024-03-28"},{"lineNumber":151,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":152,"author":{"gitId":"lokidoki102"},"content":"    public static class EditBuyerDescriptor {","lastModifiedDate":"2024-03-28"},{"lineNumber":153,"author":{"gitId":"lokidoki102"},"content":"        private Name name;","lastModifiedDate":"2024-03-28"},{"lineNumber":154,"author":{"gitId":"lokidoki102"},"content":"        private Phone phone;","lastModifiedDate":"2024-03-28"},{"lineNumber":155,"author":{"gitId":"lokidoki102"},"content":"        private Email email;","lastModifiedDate":"2024-03-28"},{"lineNumber":156,"author":{"gitId":"lokidoki102"},"content":"        private HousingType housingType;","lastModifiedDate":"2024-03-31"},{"lineNumber":157,"author":{"gitId":"lokidoki102"},"content":"        private Budget budget;","lastModifiedDate":"2024-03-29"},{"lineNumber":158,"author":{"gitId":"lokidoki102"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2024-03-28"},{"lineNumber":159,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":160,"author":{"gitId":"lokidoki102"},"content":"        public EditBuyerDescriptor() {","lastModifiedDate":"2024-03-28"},{"lineNumber":161,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":162,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":163,"author":{"gitId":"lokidoki102"},"content":"        /**","lastModifiedDate":"2024-03-28"},{"lineNumber":164,"author":{"gitId":"lokidoki102"},"content":"         * Copy constructor.","lastModifiedDate":"2024-03-28"},{"lineNumber":165,"author":{"gitId":"lokidoki102"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2024-03-28"},{"lineNumber":166,"author":{"gitId":"lokidoki102"},"content":"         */","lastModifiedDate":"2024-03-28"},{"lineNumber":167,"author":{"gitId":"lokidoki102"},"content":"        public EditBuyerDescriptor(EditBuyerCommand.EditBuyerDescriptor toCopy) {","lastModifiedDate":"2024-03-28"},{"lineNumber":168,"author":{"gitId":"lokidoki102"},"content":"            setName(toCopy.name);","lastModifiedDate":"2024-03-28"},{"lineNumber":169,"author":{"gitId":"lokidoki102"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2024-03-28"},{"lineNumber":170,"author":{"gitId":"lokidoki102"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2024-03-28"},{"lineNumber":171,"author":{"gitId":"lokidoki102"},"content":"            setHousingType(toCopy.housingType);","lastModifiedDate":"2024-03-28"},{"lineNumber":172,"author":{"gitId":"lokidoki102"},"content":"            setBudget(toCopy.budget);","lastModifiedDate":"2024-03-29"},{"lineNumber":173,"author":{"gitId":"lokidoki102"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2024-03-28"},{"lineNumber":174,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":175,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":176,"author":{"gitId":"lokidoki102"},"content":"        /**","lastModifiedDate":"2024-03-28"},{"lineNumber":177,"author":{"gitId":"lokidoki102"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2024-03-28"},{"lineNumber":178,"author":{"gitId":"lokidoki102"},"content":"         */","lastModifiedDate":"2024-03-28"},{"lineNumber":179,"author":{"gitId":"lokidoki102"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2024-03-28"},{"lineNumber":180,"author":{"gitId":"lokidoki102"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, housingType, budget, tags);","lastModifiedDate":"2024-04-01"},{"lineNumber":181,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":182,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":183,"author":{"gitId":"lokidoki102"},"content":"        public void setName(Name name) {","lastModifiedDate":"2024-03-28"},{"lineNumber":184,"author":{"gitId":"lokidoki102"},"content":"            this.name \u003d name;","lastModifiedDate":"2024-03-28"},{"lineNumber":185,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":186,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":187,"author":{"gitId":"lokidoki102"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2024-03-28"},{"lineNumber":188,"author":{"gitId":"lokidoki102"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2024-03-28"},{"lineNumber":189,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":190,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":191,"author":{"gitId":"lokidoki102"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2024-03-28"},{"lineNumber":192,"author":{"gitId":"lokidoki102"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2024-03-28"},{"lineNumber":193,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":194,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":195,"author":{"gitId":"lokidoki102"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2024-03-28"},{"lineNumber":196,"author":{"gitId":"lokidoki102"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2024-03-28"},{"lineNumber":197,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":198,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":199,"author":{"gitId":"lokidoki102"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2024-03-28"},{"lineNumber":200,"author":{"gitId":"lokidoki102"},"content":"            this.email \u003d email;","lastModifiedDate":"2024-03-28"},{"lineNumber":201,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":202,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":203,"author":{"gitId":"lokidoki102"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2024-03-28"},{"lineNumber":204,"author":{"gitId":"lokidoki102"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2024-03-28"},{"lineNumber":205,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":206,"author":{"gitId":"lokidoki102"},"content":"        public void setBudget(Budget budget) {","lastModifiedDate":"2024-03-29"},{"lineNumber":207,"author":{"gitId":"lokidoki102"},"content":"            this.budget \u003d budget;","lastModifiedDate":"2024-03-29"},{"lineNumber":208,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":209,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":210,"author":{"gitId":"lokidoki102"},"content":"        public Optional\u003cBudget\u003e getBudget() {","lastModifiedDate":"2024-03-29"},{"lineNumber":211,"author":{"gitId":"lokidoki102"},"content":"            return Optional.ofNullable(budget);","lastModifiedDate":"2024-03-29"},{"lineNumber":212,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":213,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":214,"author":{"gitId":"lokidoki102"},"content":"        public void setHousingType(HousingType housingType) {","lastModifiedDate":"2024-03-31"},{"lineNumber":215,"author":{"gitId":"lokidoki102"},"content":"            this.housingType \u003d housingType;","lastModifiedDate":"2024-03-28"},{"lineNumber":216,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":217,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":218,"author":{"gitId":"lokidoki102"},"content":"        public Optional\u003cHousingType\u003e getHousingType() {","lastModifiedDate":"2024-03-31"},{"lineNumber":219,"author":{"gitId":"lokidoki102"},"content":"            return Optional.ofNullable(housingType);","lastModifiedDate":"2024-03-28"},{"lineNumber":220,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":221,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":222,"author":{"gitId":"lokidoki102"},"content":"        /**","lastModifiedDate":"2024-03-28"},{"lineNumber":223,"author":{"gitId":"lokidoki102"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2024-03-28"},{"lineNumber":224,"author":{"gitId":"lokidoki102"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2024-03-28"},{"lineNumber":225,"author":{"gitId":"lokidoki102"},"content":"         */","lastModifiedDate":"2024-03-28"},{"lineNumber":226,"author":{"gitId":"lokidoki102"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-28"},{"lineNumber":227,"author":{"gitId":"lokidoki102"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2024-03-28"},{"lineNumber":228,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":229,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":230,"author":{"gitId":"lokidoki102"},"content":"        /**","lastModifiedDate":"2024-03-28"},{"lineNumber":231,"author":{"gitId":"lokidoki102"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2024-03-28"},{"lineNumber":232,"author":{"gitId":"lokidoki102"},"content":"         * if modification is attempted.","lastModifiedDate":"2024-03-28"},{"lineNumber":233,"author":{"gitId":"lokidoki102"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2024-03-28"},{"lineNumber":234,"author":{"gitId":"lokidoki102"},"content":"         */","lastModifiedDate":"2024-03-28"},{"lineNumber":235,"author":{"gitId":"lokidoki102"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2024-03-28"},{"lineNumber":236,"author":{"gitId":"lokidoki102"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2024-03-28"},{"lineNumber":237,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":238,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":239,"author":{"gitId":"lokidoki102"},"content":"        @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":240,"author":{"gitId":"lokidoki102"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2024-03-28"},{"lineNumber":241,"author":{"gitId":"lokidoki102"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-28"},{"lineNumber":242,"author":{"gitId":"lokidoki102"},"content":"                return true;","lastModifiedDate":"2024-03-28"},{"lineNumber":243,"author":{"gitId":"lokidoki102"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":244,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":245,"author":{"gitId":"lokidoki102"},"content":"            // instanceof handles nulls","lastModifiedDate":"2024-03-28"},{"lineNumber":246,"author":{"gitId":"lokidoki102"},"content":"            if (!(other instanceof EditBuyerCommand.EditBuyerDescriptor)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":247,"author":{"gitId":"lokidoki102"},"content":"                return false;","lastModifiedDate":"2024-03-28"},{"lineNumber":248,"author":{"gitId":"lokidoki102"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":249,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":250,"author":{"gitId":"lokidoki102"},"content":"            EditBuyerCommand.EditBuyerDescriptor otherEditDescriptor \u003d (EditBuyerCommand.EditBuyerDescriptor) other;","lastModifiedDate":"2024-03-28"},{"lineNumber":251,"author":{"gitId":"lokidoki102"},"content":"            return Objects.equals(name, otherEditDescriptor.name)","lastModifiedDate":"2024-03-28"},{"lineNumber":252,"author":{"gitId":"lokidoki102"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditDescriptor.phone)","lastModifiedDate":"2024-03-28"},{"lineNumber":253,"author":{"gitId":"lokidoki102"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditDescriptor.email)","lastModifiedDate":"2024-03-28"},{"lineNumber":254,"author":{"gitId":"lokidoki102"},"content":"                    \u0026\u0026 Objects.equals(housingType, otherEditDescriptor.housingType)","lastModifiedDate":"2024-03-28"},{"lineNumber":255,"author":{"gitId":"lokidoki102"},"content":"                    \u0026\u0026 Objects.equals(budget, otherEditDescriptor.budget)","lastModifiedDate":"2024-03-30"},{"lineNumber":256,"author":{"gitId":"lokidoki102"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditDescriptor.tags);","lastModifiedDate":"2024-03-28"},{"lineNumber":257,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":258,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":259,"author":{"gitId":"lokidoki102"},"content":"        @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":260,"author":{"gitId":"lokidoki102"},"content":"        public String toString() {","lastModifiedDate":"2024-03-28"},{"lineNumber":261,"author":{"gitId":"lokidoki102"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2024-03-28"},{"lineNumber":262,"author":{"gitId":"lokidoki102"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2024-03-28"},{"lineNumber":263,"author":{"gitId":"lokidoki102"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2024-03-28"},{"lineNumber":264,"author":{"gitId":"lokidoki102"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2024-03-28"},{"lineNumber":265,"author":{"gitId":"lokidoki102"},"content":"                    .add(\"housingType\", housingType)","lastModifiedDate":"2024-03-28"},{"lineNumber":266,"author":{"gitId":"lokidoki102"},"content":"                    .add(\"budget\", budget)","lastModifiedDate":"2024-03-30"},{"lineNumber":267,"author":{"gitId":"lokidoki102"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2024-03-28"},{"lineNumber":268,"author":{"gitId":"lokidoki102"},"content":"                    .toString();","lastModifiedDate":"2024-03-28"},{"lineNumber":269,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":270,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":271,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"KhoonSun47":3,"lokidoki102":268}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.HousingType;","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param index                of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"KhoonSun47"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedTags);","lastModifiedDate":"2024-04-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":136,"author":{"gitId":"redcolorbicycle"},"content":"        private HousingType housingType;","lastModifiedDate":"2024-03-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"KhoonSun47"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2024-03-12"},{"lineNumber":140,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":150,"author":{"gitId":"redcolorbicycle"},"content":"            setHousingType(toCopy.housingType);","lastModifiedDate":"2024-03-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"redcolorbicycle"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, housingType, tags);","lastModifiedDate":"2024-03-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"redcolorbicycle"},"content":"        public void setHousingType(HousingType housingType) {","lastModifiedDate":"2024-03-29"},{"lineNumber":187,"author":{"gitId":"redcolorbicycle"},"content":"            this.housingType \u003d housingType;","lastModifiedDate":"2024-03-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"redcolorbicycle"},"content":"        public Optional\u003cHousingType\u003e getHousingType() {","lastModifiedDate":"2024-03-29"},{"lineNumber":191,"author":{"gitId":"redcolorbicycle"},"content":"            return Optional.ofNullable(housingType);","lastModifiedDate":"2024-03-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":226,"author":{"gitId":"redcolorbicycle"},"content":"                    \u0026\u0026 Objects.equals(housingType, otherEditPersonDescriptor.housingType)","lastModifiedDate":"2024-03-18"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":236,"author":{"gitId":"redcolorbicycle"},"content":"                    .add(\"housingType\", housingType)","lastModifiedDate":"2024-03-18"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"redcolorbicycle":11,"KhoonSun47":3,"-":227}},{"path":"src/main/java/seedu/address/logic/parser/AddBuyerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BUDGET;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOUSING_TYPE;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.logic.commands.AddBuyerCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.HousingType;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.person.Budget;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Buyer;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"felixchanyy"},"content":"public class AddBuyerCommandParser implements Parser\u003cAddBuyerCommand\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"felixchanyy"},"content":"    public AddBuyerCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"zengzihui"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_HOUSING_TYPE,","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"felixchanyy"},"content":"                        PREFIX_BUDGET, PREFIX_TAG);","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"felixchanyy"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_HOUSING_TYPE,","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"felixchanyy"},"content":"                PREFIX_BUDGET)","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"felixchanyy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddBuyerCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"felixchanyy"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_HOUSING_TYPE,","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"felixchanyy"},"content":"                PREFIX_BUDGET);","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"redcolorbicycle"},"content":"        HousingType housingType \u003d ParserUtil.parseHousing(argMultimap.getValue(PREFIX_HOUSING_TYPE).get());","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"felixchanyy"},"content":"        Budget budget \u003d ParserUtil.parseBudget(argMultimap.getValue(PREFIX_BUDGET).get());","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"        Buyer buyer \u003d new Buyer(name, phone, email, budget, housingType, tagList);","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"        return new AddBuyerCommand(buyer);","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"redcolorbicycle":2,"zengzihui":2,"felixchanyy":12,"KhoonSun47":3,"-":47}},{"path":"src/main/java/seedu/address/logic/parser/AddSellerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BLOCK;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOUSING_TYPE;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LEVEL;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSTALCODE;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STREET;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UNITNUMBER;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.logic.commands.AddSellerCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.Block;","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.Condominium;","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.Hdb;","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.House;","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.HousingType;","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.Landed;","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.Level;","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.PostalCode;","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.house.Price;","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.Street;","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.UnitNumber;","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.person.Seller;","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"felixchanyy"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"redcolorbicycle"},"content":" * Parses input arguments and creates a new AddSellerCommand object","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"felixchanyy"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"felixchanyy"},"content":"public class AddSellerCommandParser implements Parser\u003cAddSellerCommand\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"     * Parses the given {@code String} of arguments in the context of the AddSellerCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"     * and returns an AddSellerCommand object for execution.","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"felixchanyy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"felixchanyy"},"content":"    public AddSellerCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"felixchanyy"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"                        PREFIX_HOUSING_TYPE, PREFIX_LEVEL, PREFIX_BLOCK, PREFIX_STREET,","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"felixchanyy"},"content":"                        PREFIX_UNITNUMBER, PREFIX_POSTALCODE, PREFIX_PRICE, PREFIX_TAG);","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"zengzihui"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_HOUSING_TYPE,","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"felixchanyy"},"content":"                PREFIX_POSTALCODE, PREFIX_STREET, PREFIX_UNITNUMBER,","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"felixchanyy"},"content":"                PREFIX_PRICE) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddSellerCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"zengzihui"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_HOUSING_TYPE, PREFIX_LEVEL,","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"felixchanyy"},"content":"                PREFIX_EMAIL, PREFIX_BLOCK, PREFIX_STREET, PREFIX_UNITNUMBER, PREFIX_POSTALCODE, PREFIX_PRICE);","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"felixchanyy"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"felixchanyy"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"felixchanyy"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"redcolorbicycle"},"content":"        HousingType housingType \u003d ParserUtil.parseHousing(argMultimap.getValue(PREFIX_HOUSING_TYPE).get());","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"felixchanyy"},"content":"        Price price \u003d ParserUtil.parsePrice(argMultimap.getValue(PREFIX_PRICE).get());","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"felixchanyy"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"KhoonSun47"},"content":"        ArrayList\u003cHouse\u003e houses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"KhoonSun47"},"content":"        // Seperated out the methods to create hdb, condominium and landed (adhere to SLAP)","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"KhoonSun47"},"content":"        houses.add(createHouse(argMultimap, housingType, price));","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":75,"author":{"gitId":"KhoonSun47"},"content":"        Seller seller \u003d new Seller(name, phone, email, houses, tagList);","lastModifiedDate":"2024-04-01"},{"lineNumber":76,"author":{"gitId":"KhoonSun47"},"content":"        return new AddSellerCommand(seller);","lastModifiedDate":"2024-04-01"},{"lineNumber":77,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":78,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"KhoonSun47"},"content":"    private House createHouse(ArgumentMultimap argMultimap, HousingType housingType, Price price)","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"KhoonSun47"},"content":"            throws ParseException {","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"KhoonSun47"},"content":"        PostalCode postalCode \u003d ParserUtil.parsePostalCode(argMultimap.getValue(PREFIX_POSTALCODE).get());","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"KhoonSun47"},"content":"        Street street \u003d ParserUtil.parseStreet(argMultimap.getValue(PREFIX_STREET).get());","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"KhoonSun47"},"content":"        UnitNumber unitNumber \u003d ParserUtil.parseUnitNumber(argMultimap.getValue(PREFIX_UNITNUMBER).get());","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"KhoonSun47"},"content":"        switch (housingType.toString().toLowerCase()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"KhoonSun47"},"content":"        case \"hdb\":","lastModifiedDate":"2024-04-01"},{"lineNumber":87,"author":{"gitId":"KhoonSun47"},"content":"            return createHdb(argMultimap, postalCode, street, unitNumber, price);","lastModifiedDate":"2024-04-01"},{"lineNumber":88,"author":{"gitId":"KhoonSun47"},"content":"        case \"condominium\":","lastModifiedDate":"2024-04-01"},{"lineNumber":89,"author":{"gitId":"KhoonSun47"},"content":"            return createCondominium(argMultimap, postalCode, street, unitNumber, price);","lastModifiedDate":"2024-04-01"},{"lineNumber":90,"author":{"gitId":"KhoonSun47"},"content":"        default:","lastModifiedDate":"2024-04-01"},{"lineNumber":91,"author":{"gitId":"KhoonSun47"},"content":"            return new Landed(unitNumber, postalCode, street, price);","lastModifiedDate":"2024-04-01"},{"lineNumber":92,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":94,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"KhoonSun47"},"content":"    private Hdb createHdb(ArgumentMultimap argMultimap, PostalCode postalCode, Street street,","lastModifiedDate":"2024-04-01"},{"lineNumber":96,"author":{"gitId":"KhoonSun47"},"content":"                          UnitNumber unitNumber, Price price) throws ParseException {","lastModifiedDate":"2024-04-01"},{"lineNumber":97,"author":{"gitId":"redcolorbicycle"},"content":"        Block block \u003d ParserUtil.parseBlock(argMultimap.getValue(PREFIX_BLOCK).get());","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"redcolorbicycle"},"content":"        Level level \u003d ParserUtil.parseLevel(argMultimap.getValue(PREFIX_LEVEL).get());","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"KhoonSun47"},"content":"        return new Hdb(level, postalCode, street, unitNumber, block, price);","lastModifiedDate":"2024-04-01"},{"lineNumber":100,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"KhoonSun47"},"content":"    private Condominium createCondominium(ArgumentMultimap argMultimap, PostalCode postalCode, Street street,","lastModifiedDate":"2024-04-01"},{"lineNumber":103,"author":{"gitId":"KhoonSun47"},"content":"                                          UnitNumber unitNumber, Price price) throws ParseException {","lastModifiedDate":"2024-04-01"},{"lineNumber":104,"author":{"gitId":"KhoonSun47"},"content":"        boolean hasBlock \u003d argMultimap.getValue(PREFIX_BLOCK).isPresent();","lastModifiedDate":"2024-04-01"},{"lineNumber":105,"author":{"gitId":"KhoonSun47"},"content":"        Level level \u003d hasBlock ? ParserUtil.parseLevel(argMultimap.getValue(PREFIX_LEVEL).get()) : null;","lastModifiedDate":"2024-04-01"},{"lineNumber":106,"author":{"gitId":"KhoonSun47"},"content":"        Block block \u003d hasBlock ? ParserUtil.parseBlock(argMultimap.getValue(PREFIX_BLOCK).get()) : null;","lastModifiedDate":"2024-04-01"},{"lineNumber":107,"author":{"gitId":"KhoonSun47"},"content":"        if (block !\u003d null \u0026\u0026 level !\u003d null) {","lastModifiedDate":"2024-04-01"},{"lineNumber":108,"author":{"gitId":"KhoonSun47"},"content":"            return new Condominium(level, postalCode, street, unitNumber, block, price);","lastModifiedDate":"2024-04-01"},{"lineNumber":109,"author":{"gitId":"KhoonSun47"},"content":"        } else {","lastModifiedDate":"2024-04-01"},{"lineNumber":110,"author":{"gitId":"KhoonSun47"},"content":"            return new Condominium(level, postalCode, street, unitNumber, price);","lastModifiedDate":"2024-04-01"},{"lineNumber":111,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":112,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":115,"author":{"gitId":"felixchanyy"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"felixchanyy"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-18"},{"lineNumber":117,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"felixchanyy"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"felixchanyy"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"felixchanyy"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"redcolorbicycle":32,"zengzihui":3,"felixchanyy":44,"KhoonSun47":42}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.logic.commands.AddBuyerCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.logic.commands.AddSellerCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.logic.commands.EditBuyerCommand;","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"felixchanyy"},"content":"        case AddSellerCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"felixchanyy"},"content":"            return new AddSellerCommandParser().parse(arguments);","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"felixchanyy"},"content":"        case AddBuyerCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"felixchanyy"},"content":"            return new AddBuyerCommandParser().parse(arguments);","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"lokidoki102"},"content":"        case EditBuyerCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"lokidoki102"},"content":"            return new EditBuyerCommandParser().parse(arguments);","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"felixchanyy":7,"-":83,"lokidoki102":4}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"zengzihui"},"content":"    public static final Prefix PREFIX_HOUSING_TYPE \u003d new Prefix(\"type/\");","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"    public static final Prefix PREFIX_STREET \u003d new Prefix(\"street/\");","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"    public static final Prefix PREFIX_LEVEL \u003d new Prefix(\"level/\");","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"    public static final Prefix PREFIX_UNITNUMBER \u003d new Prefix(\"unitNo/\");","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"    public static final Prefix PREFIX_BLOCK \u003d new Prefix(\"blk/\");","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"    public static final Prefix PREFIX_POSTALCODE \u003d new Prefix(\"postal/\");","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":"    public static final Prefix PREFIX_BUDGET \u003d new Prefix(\"budget/\");","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"    public static final Prefix PREFIX_PRICE \u003d new Prefix(\"price/\");","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"zengzihui":1,"KhoonSun47":2,"felixchanyy":2,"-":13,"lokidoki102":3}},{"path":"src/main/java/seedu/address/logic/parser/EditBuyerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BUDGET;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOUSING_TYPE;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"import java.util.Collection;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.logic.commands.EditBuyerCommand;","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.logic.commands.EditBuyerCommand.EditBuyerDescriptor;","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":" * Parses input arguments and creates a new EditBuyerCommand object","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"public class EditBuyerCommandParser implements Parser\u003cEditBuyerCommand\u003e {","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"     * Parses the given {@code String} of arguments in the context of the EditBuyerCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"     * and returns an EditBuyerCommand object for execution.","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"    public EditBuyerCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_HOUSING_TYPE,","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"                        PREFIX_BUDGET, PREFIX_TAG);","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"        Index index;","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"        try {","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditBuyerCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_HOUSING_TYPE,","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"                PREFIX_BUDGET);","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerDescriptor editBuyerDescriptor \u003d new EditBuyerDescriptor();","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"            editBuyerDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"lokidoki102"},"content":"            editBuyerDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"lokidoki102"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"            editBuyerDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"lokidoki102"},"content":"        if (argMultimap.getValue(PREFIX_HOUSING_TYPE).isPresent()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"lokidoki102"},"content":"            editBuyerDescriptor.setHousingType(ParserUtil.parseHousing(argMultimap","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"lokidoki102"},"content":"                    .getValue(PREFIX_HOUSING_TYPE).get()));","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"lokidoki102"},"content":"        if (argMultimap.getValue(PREFIX_BUDGET).isPresent()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"lokidoki102"},"content":"            editBuyerDescriptor.setBudget(ParserUtil.parseBudget(argMultimap","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"lokidoki102"},"content":"                    .getValue(PREFIX_BUDGET).get()));","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"lokidoki102"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editBuyerDescriptor::setTags);","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"lokidoki102"},"content":"        if (!editBuyerDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"lokidoki102"},"content":"            throw new ParseException(EditBuyerCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"lokidoki102"},"content":"        return new EditBuyerCommand(index, editBuyerDescriptor);","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"lokidoki102"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"lokidoki102"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"lokidoki102"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"lokidoki102"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"lokidoki102"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"lokidoki102"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"lokidoki102"},"content":"            return Optional.empty();","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"lokidoki102"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"lokidoki102"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"lokidoki102":91}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOUSING_TYPE;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"zengzihui"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_HOUSING_TYPE,","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"redcolorbicycle"},"content":"                        PREFIX_TAG);","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"zengzihui"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_HOUSING_TYPE);","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"zengzihui"},"content":"        if (argMultimap.getValue(PREFIX_HOUSING_TYPE).isPresent()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"redcolorbicycle"},"content":"            editPersonDescriptor.setHousingType(ParserUtil.parseHousing(argMultimap","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"zengzihui"},"content":"                    .getValue(PREFIX_HOUSING_TYPE).get()));","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"redcolorbicycle":3,"zengzihui":5,"-":80}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.house.Block;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.House;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.HousingType;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.house.Level;","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.PostalCode;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.house.Price;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.house.Street;","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.house.UnitNumber;","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.person.Budget;","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":133,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":134,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":135,"author":{"gitId":"KhoonSun47"},"content":"     * Parses a {@code String houseType} into a {@code String houseType}.","lastModifiedDate":"2024-03-21"},{"lineNumber":136,"author":{"gitId":"redcolorbicycle"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-18"},{"lineNumber":137,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":138,"author":{"gitId":"KhoonSun47"},"content":"     * @throws ParseException if the given {@code String houseType} is invalid.","lastModifiedDate":"2024-03-21"},{"lineNumber":139,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":140,"author":{"gitId":"redcolorbicycle"},"content":"    public static HousingType parseHousing(String houseType) throws ParseException {","lastModifiedDate":"2024-03-29"},{"lineNumber":141,"author":{"gitId":"KhoonSun47"},"content":"        requireNonNull(houseType);","lastModifiedDate":"2024-03-21"},{"lineNumber":142,"author":{"gitId":"KhoonSun47"},"content":"        String trimmedName \u003d houseType.trim();","lastModifiedDate":"2024-03-21"},{"lineNumber":143,"author":{"gitId":"KhoonSun47"},"content":"        if (!House.isValidName(trimmedName)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":144,"author":{"gitId":"redcolorbicycle"},"content":"            throw new ParseException(House.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-18"},{"lineNumber":145,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":146,"author":{"gitId":"redcolorbicycle"},"content":"        return new HousingType(trimmedName);","lastModifiedDate":"2024-03-29"},{"lineNumber":147,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":148,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":149,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":150,"author":{"gitId":"lokidoki102"},"content":"     * Parses a {@code String street} into a {@code Street}.","lastModifiedDate":"2024-03-14"},{"lineNumber":151,"author":{"gitId":"lokidoki102"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-14"},{"lineNumber":152,"author":{"gitId":"lokidoki102"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":153,"author":{"gitId":"lokidoki102"},"content":"     * @throws ParseException if the given {@code street} is invalid.","lastModifiedDate":"2024-03-14"},{"lineNumber":154,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":155,"author":{"gitId":"lokidoki102"},"content":"    public static Street parseStreet(String street) throws ParseException {","lastModifiedDate":"2024-03-14"},{"lineNumber":156,"author":{"gitId":"lokidoki102"},"content":"        requireNonNull(street);","lastModifiedDate":"2024-03-14"},{"lineNumber":157,"author":{"gitId":"lokidoki102"},"content":"        String trimmedStreet \u003d street.trim();","lastModifiedDate":"2024-03-14"},{"lineNumber":158,"author":{"gitId":"lokidoki102"},"content":"        if (!Street.isValidStreet(trimmedStreet)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":159,"author":{"gitId":"lokidoki102"},"content":"            throw new ParseException(Street.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":160,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":161,"author":{"gitId":"lokidoki102"},"content":"        return new Street(trimmedStreet);","lastModifiedDate":"2024-03-14"},{"lineNumber":162,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":163,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":164,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":165,"author":{"gitId":"lokidoki102"},"content":"     * Parses a {@code String level} into a {@code Level}.","lastModifiedDate":"2024-03-14"},{"lineNumber":166,"author":{"gitId":"lokidoki102"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-14"},{"lineNumber":167,"author":{"gitId":"lokidoki102"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":168,"author":{"gitId":"lokidoki102"},"content":"     * @throws ParseException if the given {@code level} is invalid.","lastModifiedDate":"2024-03-14"},{"lineNumber":169,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":170,"author":{"gitId":"lokidoki102"},"content":"    public static Level parseLevel(String level) throws ParseException {","lastModifiedDate":"2024-03-14"},{"lineNumber":171,"author":{"gitId":"lokidoki102"},"content":"        requireNonNull(level);","lastModifiedDate":"2024-03-14"},{"lineNumber":172,"author":{"gitId":"lokidoki102"},"content":"        String trimmedLevel \u003d level.trim();","lastModifiedDate":"2024-03-14"},{"lineNumber":173,"author":{"gitId":"lokidoki102"},"content":"        if (!Level.isValidLevel(trimmedLevel)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":174,"author":{"gitId":"lokidoki102"},"content":"            throw new ParseException(Level.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":175,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":176,"author":{"gitId":"lokidoki102"},"content":"        return new Level(trimmedLevel);","lastModifiedDate":"2024-03-14"},{"lineNumber":177,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":178,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":179,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":180,"author":{"gitId":"KhoonSun47"},"content":"     * Parses a {@code String unitNumber} into a {@code unitNumber}.","lastModifiedDate":"2024-03-14"},{"lineNumber":181,"author":{"gitId":"KhoonSun47"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-14"},{"lineNumber":182,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":183,"author":{"gitId":"KhoonSun47"},"content":"     * @throws ParseException if the given {@code unitNumber} is invalid.","lastModifiedDate":"2024-03-14"},{"lineNumber":184,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":185,"author":{"gitId":"KhoonSun47"},"content":"    public static UnitNumber parseUnitNumber(String unitNumber) throws ParseException {","lastModifiedDate":"2024-03-14"},{"lineNumber":186,"author":{"gitId":"KhoonSun47"},"content":"        requireNonNull(unitNumber);","lastModifiedDate":"2024-03-14"},{"lineNumber":187,"author":{"gitId":"KhoonSun47"},"content":"        String trimmedLevel \u003d unitNumber.trim();","lastModifiedDate":"2024-03-14"},{"lineNumber":188,"author":{"gitId":"KhoonSun47"},"content":"        if (!UnitNumber.isValidUnitNumber(trimmedLevel)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":189,"author":{"gitId":"KhoonSun47"},"content":"            throw new ParseException(UnitNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":190,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":191,"author":{"gitId":"KhoonSun47"},"content":"        return new UnitNumber(trimmedLevel);","lastModifiedDate":"2024-03-14"},{"lineNumber":192,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":193,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":194,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":195,"author":{"gitId":"lokidoki102"},"content":"     * Parses a {@code String block} into an {@code Block}.","lastModifiedDate":"2024-03-14"},{"lineNumber":196,"author":{"gitId":"lokidoki102"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-14"},{"lineNumber":197,"author":{"gitId":"lokidoki102"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":198,"author":{"gitId":"lokidoki102"},"content":"     * @throws ParseException if the given {@code block} is invalid.","lastModifiedDate":"2024-03-14"},{"lineNumber":199,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":200,"author":{"gitId":"lokidoki102"},"content":"    public static Block parseBlock(String block) throws ParseException {","lastModifiedDate":"2024-03-14"},{"lineNumber":201,"author":{"gitId":"lokidoki102"},"content":"        requireNonNull(block);","lastModifiedDate":"2024-03-14"},{"lineNumber":202,"author":{"gitId":"lokidoki102"},"content":"        String trimmedBlock \u003d block.trim();","lastModifiedDate":"2024-03-14"},{"lineNumber":203,"author":{"gitId":"lokidoki102"},"content":"        if (!Block.isValidBlock(trimmedBlock)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":204,"author":{"gitId":"lokidoki102"},"content":"            throw new ParseException(Block.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":205,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":206,"author":{"gitId":"lokidoki102"},"content":"        return new Block(trimmedBlock);","lastModifiedDate":"2024-03-14"},{"lineNumber":207,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":208,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":209,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":210,"author":{"gitId":"KhoonSun47"},"content":"     * Parses a {@code String postalCode} into a {@code postalCode}.","lastModifiedDate":"2024-03-12"},{"lineNumber":211,"author":{"gitId":"KhoonSun47"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-12"},{"lineNumber":212,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":213,"author":{"gitId":"KhoonSun47"},"content":"     * @throws ParseException if the given {@code postalCode} is invalid.","lastModifiedDate":"2024-03-12"},{"lineNumber":214,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":215,"author":{"gitId":"KhoonSun47"},"content":"    public static PostalCode parsePostalCode(String postalCode) throws ParseException {","lastModifiedDate":"2024-03-12"},{"lineNumber":216,"author":{"gitId":"KhoonSun47"},"content":"        requireNonNull(postalCode);","lastModifiedDate":"2024-03-12"},{"lineNumber":217,"author":{"gitId":"KhoonSun47"},"content":"        String trimmedPostalCode \u003d postalCode.trim();","lastModifiedDate":"2024-03-12"},{"lineNumber":218,"author":{"gitId":"KhoonSun47"},"content":"        if (!PostalCode.isValidPostalCode(trimmedPostalCode)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":219,"author":{"gitId":"KhoonSun47"},"content":"            throw new ParseException(PostalCode.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":220,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":221,"author":{"gitId":"KhoonSun47"},"content":"        return new PostalCode(trimmedPostalCode);","lastModifiedDate":"2024-03-15"},{"lineNumber":222,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":223,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":224,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":225,"author":{"gitId":"felixchanyy"},"content":"     * Parses a {@code String budget} into an {@code Budget}","lastModifiedDate":"2024-03-29"},{"lineNumber":226,"author":{"gitId":"felixchanyy"},"content":"     * Loading and trailing whitespaces will be trimmed","lastModifiedDate":"2024-03-29"},{"lineNumber":227,"author":{"gitId":"felixchanyy"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":228,"author":{"gitId":"felixchanyy"},"content":"     * @throws ParseException if the given {@code budget} is invalid","lastModifiedDate":"2024-03-29"},{"lineNumber":229,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":230,"author":{"gitId":"felixchanyy"},"content":"    public static Budget parseBudget(String budget) throws ParseException {","lastModifiedDate":"2024-03-29"},{"lineNumber":231,"author":{"gitId":"felixchanyy"},"content":"        requireNonNull(budget);","lastModifiedDate":"2024-03-29"},{"lineNumber":232,"author":{"gitId":"felixchanyy"},"content":"        String trimmedBudget \u003d budget.trim();","lastModifiedDate":"2024-03-29"},{"lineNumber":233,"author":{"gitId":"felixchanyy"},"content":"        if (!Budget.isValidBudget(trimmedBudget)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":234,"author":{"gitId":"felixchanyy"},"content":"            throw new ParseException(Budget.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-29"},{"lineNumber":235,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":236,"author":{"gitId":"felixchanyy"},"content":"        return new Budget(trimmedBudget);","lastModifiedDate":"2024-03-29"},{"lineNumber":237,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":238,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":239,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":240,"author":{"gitId":"felixchanyy"},"content":"     * Parses a {@code String price} into an {@code Price}.","lastModifiedDate":"2024-04-01"},{"lineNumber":241,"author":{"gitId":"felixchanyy"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-04-01"},{"lineNumber":242,"author":{"gitId":"felixchanyy"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":243,"author":{"gitId":"felixchanyy"},"content":"     * @throws ParseException if the given {@code price} is invalid.","lastModifiedDate":"2024-04-01"},{"lineNumber":244,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":245,"author":{"gitId":"felixchanyy"},"content":"    public static Price parsePrice(String price) throws ParseException {","lastModifiedDate":"2024-04-01"},{"lineNumber":246,"author":{"gitId":"felixchanyy"},"content":"        requireNonNull(price);","lastModifiedDate":"2024-04-01"},{"lineNumber":247,"author":{"gitId":"felixchanyy"},"content":"        String trimmedPrice \u003d price.trim();","lastModifiedDate":"2024-04-01"},{"lineNumber":248,"author":{"gitId":"felixchanyy"},"content":"        if (!Price.isValidPrice(trimmedPrice)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":249,"author":{"gitId":"felixchanyy"},"content":"            throw new ParseException(Price.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-01"},{"lineNumber":250,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":251,"author":{"gitId":"felixchanyy"},"content":"        return new Price(trimmedPrice);","lastModifiedDate":"2024-04-01"},{"lineNumber":252,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"redcolorbicycle":12,"felixchanyy":40,"KhoonSun47":34,"-":123,"lokidoki102":44}},{"path":"src/main/java/seedu/address/model/house/Block.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":" * Represents a House\u0027s block number.","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidBlock(String)}","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"public class Block {","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"            \"Block numbers should only contain numbers, with or without a letter as the end. \"","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"                    + \"There can only be at most 3 digits long.\";","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\d{1,3}[a-zA-Z]?$\";","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"    public static final String ZERO_REGEX \u003d \"^0+$\";","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"    public static final String ZERO_AND_ALPHABET_REGEX \u003d \"^0*[a-zA-Z]$\";","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"    public final String value;","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"     * Constructs a {@code Block}.","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"     * @param block A valid block number.","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"    public Block(String block) {","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"        requireNonNull(block);","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"        checkArgument(isValidBlock(block), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"        value \u003d block;","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"     * Returns true if a given string is a valid block number.","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"    public static boolean isValidBlock(String test) {","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"redcolorbicycle"},"content":"        if (test.equals(\"N/A\")) {","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"redcolorbicycle"},"content":"            return true;","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 !test.matches(ZERO_REGEX) \u0026\u0026 !test.matches(ZERO_AND_ALPHABET_REGEX);","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"    public String toString() {","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"        return value;","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"            return true;","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"        if (!(other instanceof Block)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"            return false;","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"lokidoki102"},"content":"        Block otherBlock \u003d (Block) other;","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"lokidoki102"},"content":"        return value.equals(otherBlock.value);","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"lokidoki102"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"lokidoki102"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"redcolorbicycle":3,"lokidoki102":61}},{"path":"src/main/java/seedu/address/model/house/Condominium.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":" * Represents a Condominium","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"public class Condominium implements House {","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"    public final PostalCode postalCode;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"    public final Street street;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"    public final UnitNumber unitNumber;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"    public final Block block;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"    public final Level level;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"    public final Price price;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"redcolorbicycle"},"content":"     * Constructs a Condominium.","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"     * @param unitNumber The unit number of the house.","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"redcolorbicycle"},"content":"     * @param postalCode The postal code of the house.","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"     * @param street     The street of the house.","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"redcolorbicycle"},"content":"     * @param block      The block of the house.","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"redcolorbicycle"},"content":"     * @param level      The level of the house.","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"felixchanyy"},"content":"     * @param price      The price of the house.","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"felixchanyy"},"content":"    public Condominium(Level level, PostalCode postalCode, Street street, UnitNumber unitNumber, Block block,","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"felixchanyy"},"content":"                       Price price) {","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"redcolorbicycle"},"content":"        this.postalCode \u003d postalCode;","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"redcolorbicycle"},"content":"        this.street \u003d street;","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"redcolorbicycle"},"content":"        this.unitNumber \u003d unitNumber;","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"redcolorbicycle"},"content":"        this.block \u003d block;","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"redcolorbicycle"},"content":"        this.level \u003d level;","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"felixchanyy"},"content":"        this.price \u003d price;","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"redcolorbicycle"},"content":"     * Constructs a Condominium with no block","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"redcolorbicycle"},"content":"     * @param unitNumber The unit number of the house.","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"redcolorbicycle"},"content":"     * @param postalCode The postal code of the house.","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"redcolorbicycle"},"content":"     * @param street     The street of the house.","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"redcolorbicycle"},"content":"     * @param level      The level of the house.","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"felixchanyy"},"content":"     * @param price      The price of the house.","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"felixchanyy"},"content":"    public Condominium(Level level, PostalCode postalCode, Street street, UnitNumber unitNumber, Price price) {","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"redcolorbicycle"},"content":"        this.postalCode \u003d postalCode;","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"redcolorbicycle"},"content":"        this.street \u003d street;","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"redcolorbicycle"},"content":"        this.unitNumber \u003d unitNumber;","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"redcolorbicycle"},"content":"        this.block \u003d new Block(\"N/A\");","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"redcolorbicycle"},"content":"        this.level \u003d level;","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"felixchanyy"},"content":"        this.price \u003d price;","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"redcolorbicycle"},"content":"     * Retrieves the unit number of the Condominium.","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"redcolorbicycle"},"content":"     * @return The unit number of the Condominium.","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"redcolorbicycle"},"content":"    public UnitNumber getUnitNumber() {","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"redcolorbicycle"},"content":"        return this.unitNumber;","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"redcolorbicycle"},"content":"     * Retrieves the postal code of the Condominium.","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"redcolorbicycle"},"content":"     * @return The postal code of the Condominium.","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"redcolorbicycle"},"content":"    public PostalCode getPostalCode() {","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"redcolorbicycle"},"content":"        return this.postalCode;","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"redcolorbicycle"},"content":"     * Retrieves the street of the Condominium.","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"redcolorbicycle"},"content":"     * @return The street of the Condominium.","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"redcolorbicycle"},"content":"    public Street getStreet() {","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"redcolorbicycle"},"content":"        return this.street;","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"redcolorbicycle"},"content":"     * Retrieves the block of the Condominium.","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"redcolorbicycle"},"content":"     * @return The block of the Condominium.","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"redcolorbicycle"},"content":"    public Block getBlock() {","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"redcolorbicycle"},"content":"        return this.block;","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"redcolorbicycle"},"content":"     * Retrieves the level of the Condominium.","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"redcolorbicycle"},"content":"     * @return The level of the Condominium.","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"redcolorbicycle"},"content":"    public Level getLevel() {","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"redcolorbicycle"},"content":"        return this.level;","lastModifiedDate":"2024-03-30"},{"lineNumber":102,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":103,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":104,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":105,"author":{"gitId":"felixchanyy"},"content":"     * Retrieves the price of the Condominium.","lastModifiedDate":"2024-04-01"},{"lineNumber":106,"author":{"gitId":"felixchanyy"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":107,"author":{"gitId":"felixchanyy"},"content":"     * @return The price of the Condominium.","lastModifiedDate":"2024-04-01"},{"lineNumber":108,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":109,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":110,"author":{"gitId":"felixchanyy"},"content":"    public Price getPrice() {","lastModifiedDate":"2024-04-01"},{"lineNumber":111,"author":{"gitId":"felixchanyy"},"content":"        return price;","lastModifiedDate":"2024-04-01"},{"lineNumber":112,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":113,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":114,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":115,"author":{"gitId":"redcolorbicycle"},"content":"     * Checks if this house is equal to another object.","lastModifiedDate":"2024-03-30"},{"lineNumber":116,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":117,"author":{"gitId":"redcolorbicycle"},"content":"     * @param other The object to compare to.","lastModifiedDate":"2024-03-30"},{"lineNumber":118,"author":{"gitId":"redcolorbicycle"},"content":"     * @return True if the objects are equal, false otherwise.","lastModifiedDate":"2024-03-30"},{"lineNumber":119,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":120,"author":{"gitId":"redcolorbicycle"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-30"},{"lineNumber":121,"author":{"gitId":"redcolorbicycle"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-30"},{"lineNumber":122,"author":{"gitId":"redcolorbicycle"},"content":"            return true;","lastModifiedDate":"2024-03-30"},{"lineNumber":123,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":124,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":125,"author":{"gitId":"redcolorbicycle"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-30"},{"lineNumber":126,"author":{"gitId":"redcolorbicycle"},"content":"        if (!(other instanceof Condominium)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":127,"author":{"gitId":"redcolorbicycle"},"content":"            return false;","lastModifiedDate":"2024-03-30"},{"lineNumber":128,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":129,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":130,"author":{"gitId":"redcolorbicycle"},"content":"        House otherCondominium \u003d (House) other;","lastModifiedDate":"2024-03-31"},{"lineNumber":131,"author":{"gitId":"redcolorbicycle"},"content":"        return this.toString().equals(otherCondominium.toString());","lastModifiedDate":"2024-03-31"},{"lineNumber":132,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":133,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":134,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":135,"author":{"gitId":"redcolorbicycle"},"content":"     * Returns a string representation of the hdb.","lastModifiedDate":"2024-03-30"},{"lineNumber":136,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":137,"author":{"gitId":"redcolorbicycle"},"content":"     * @return A string representation of the hdb.","lastModifiedDate":"2024-03-30"},{"lineNumber":138,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":139,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":140,"author":{"gitId":"redcolorbicycle"},"content":"    public String toString() {","lastModifiedDate":"2024-03-30"},{"lineNumber":141,"author":{"gitId":"redcolorbicycle"},"content":"        ToStringBuilder builder \u003d new ToStringBuilder(this);","lastModifiedDate":"2024-03-30"},{"lineNumber":142,"author":{"gitId":"redcolorbicycle"},"content":"        // For now, it just appends the super class\u0027s toString method.","lastModifiedDate":"2024-03-30"},{"lineNumber":143,"author":{"gitId":"felixchanyy"},"content":"        return \"Condominium: \" + builder.toString() + \", \" + new ToStringBuilder(this)","lastModifiedDate":"2024-04-01"},{"lineNumber":144,"author":{"gitId":"redcolorbicycle"},"content":"                .add(\"Street\", street)","lastModifiedDate":"2024-03-30"},{"lineNumber":145,"author":{"gitId":"redcolorbicycle"},"content":"                .add(\"Block\", block)","lastModifiedDate":"2024-03-30"},{"lineNumber":146,"author":{"gitId":"redcolorbicycle"},"content":"                .add(\"Level\", level)","lastModifiedDate":"2024-03-30"},{"lineNumber":147,"author":{"gitId":"redcolorbicycle"},"content":"                .add(\"Unit Number\", unitNumber)","lastModifiedDate":"2024-03-30"},{"lineNumber":148,"author":{"gitId":"redcolorbicycle"},"content":"                .add(\"Postal Code\", postalCode)","lastModifiedDate":"2024-03-30"},{"lineNumber":149,"author":{"gitId":"felixchanyy"},"content":"                .add(\"Price\", price)","lastModifiedDate":"2024-04-01"},{"lineNumber":150,"author":{"gitId":"redcolorbicycle"},"content":"                .toString();","lastModifiedDate":"2024-03-30"},{"lineNumber":151,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":152,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-03-30"},{"lineNumber":153,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":154,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"redcolorbicycle":134,"felixchanyy":20}},{"path":"src/main/java/seedu/address/model/house/Hdb.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":" * Represents a HDB.","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"public class Hdb implements House {","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"    public final PostalCode postalCode;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"    public final Street street;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"    public final UnitNumber unitNumber;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"    public final Block block;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"    public final Level level;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"    public final Price price;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"redcolorbicycle"},"content":"     * Constructs a HDB.","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"     * @param unitNumber The unit number of the house.","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"redcolorbicycle"},"content":"     * @param postalCode The postal code of the house.","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"     * @param street     The street of the house.","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"redcolorbicycle"},"content":"     * @param block      The block of the house.","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"redcolorbicycle"},"content":"     * @param level      The level of the house.","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"felixchanyy"},"content":"     * @param price      The price of the house.","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"felixchanyy"},"content":"    public Hdb(Level level, PostalCode postalCode, Street street, UnitNumber unitNumber, Block block, Price price) {","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"redcolorbicycle"},"content":"        this.postalCode \u003d postalCode;","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"redcolorbicycle"},"content":"        this.street \u003d street;","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"redcolorbicycle"},"content":"        this.unitNumber \u003d unitNumber;","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"redcolorbicycle"},"content":"        this.block \u003d block;","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"redcolorbicycle"},"content":"        this.level \u003d level;","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"felixchanyy"},"content":"        this.price \u003d price;","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"redcolorbicycle"},"content":"     * Retrieves the unit number of the HDB.","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"redcolorbicycle"},"content":"     * @return The unit number of the HDB.","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"redcolorbicycle"},"content":"    public UnitNumber getUnitNumber() {","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"redcolorbicycle"},"content":"        return this.unitNumber;","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"redcolorbicycle"},"content":"     * Retrieves the postal code of the HDB.","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"redcolorbicycle"},"content":"     * @return The postal code of the HDB.","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"redcolorbicycle"},"content":"    public PostalCode getPostalCode() {","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"redcolorbicycle"},"content":"        return this.postalCode;","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"redcolorbicycle"},"content":"     * Retrieves the street of the HDB.","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"redcolorbicycle"},"content":"     * @return The street of the HDB.","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"redcolorbicycle"},"content":"    public Street getStreet() {","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"redcolorbicycle"},"content":"        return this.street;","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"redcolorbicycle"},"content":"     * Retrieves the block of the HDB.","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"redcolorbicycle"},"content":"     * @return The block of the HDB.","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"redcolorbicycle"},"content":"    public Block getBlock() {","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"redcolorbicycle"},"content":"        return this.block;","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"redcolorbicycle"},"content":"     * Retrieves the level of the HDB.","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"redcolorbicycle"},"content":"     * @return The level of the HDB.","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"redcolorbicycle"},"content":"    public Level getLevel() {","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"redcolorbicycle"},"content":"        return this.level;","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"felixchanyy"},"content":"     * Retrieves the price of the HDB.","lastModifiedDate":"2024-04-01"},{"lineNumber":87,"author":{"gitId":"felixchanyy"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":88,"author":{"gitId":"felixchanyy"},"content":"     * @return The price of the HDB.","lastModifiedDate":"2024-04-01"},{"lineNumber":89,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":90,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":91,"author":{"gitId":"felixchanyy"},"content":"    public Price getPrice() {","lastModifiedDate":"2024-04-01"},{"lineNumber":92,"author":{"gitId":"felixchanyy"},"content":"        return price;","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":94,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":95,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"redcolorbicycle"},"content":"     * Checks if this house is equal to another object.","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"redcolorbicycle"},"content":"     * @param other The object to compare to.","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"redcolorbicycle"},"content":"     * @return True if the objects are equal, false otherwise.","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"redcolorbicycle"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-30"},{"lineNumber":102,"author":{"gitId":"redcolorbicycle"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-30"},{"lineNumber":103,"author":{"gitId":"redcolorbicycle"},"content":"            return true;","lastModifiedDate":"2024-03-30"},{"lineNumber":104,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":106,"author":{"gitId":"redcolorbicycle"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-30"},{"lineNumber":107,"author":{"gitId":"redcolorbicycle"},"content":"        if (!(other instanceof Hdb)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":108,"author":{"gitId":"redcolorbicycle"},"content":"            return false;","lastModifiedDate":"2024-03-30"},{"lineNumber":109,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":110,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":111,"author":{"gitId":"redcolorbicycle"},"content":"        House otherHdb \u003d (House) other;","lastModifiedDate":"2024-03-31"},{"lineNumber":112,"author":{"gitId":"redcolorbicycle"},"content":"        return this.toString().equals(otherHdb.toString());","lastModifiedDate":"2024-03-31"},{"lineNumber":113,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":114,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":115,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":116,"author":{"gitId":"redcolorbicycle"},"content":"     * Returns a string representation of the hdb.","lastModifiedDate":"2024-03-30"},{"lineNumber":117,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":118,"author":{"gitId":"redcolorbicycle"},"content":"     * @return A string representation of the hdb.","lastModifiedDate":"2024-03-30"},{"lineNumber":119,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":120,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":121,"author":{"gitId":"redcolorbicycle"},"content":"    public String toString() {","lastModifiedDate":"2024-03-30"},{"lineNumber":122,"author":{"gitId":"redcolorbicycle"},"content":"        ToStringBuilder builder \u003d new ToStringBuilder(this);","lastModifiedDate":"2024-03-30"},{"lineNumber":123,"author":{"gitId":"redcolorbicycle"},"content":"        // For now, it just appends the super class\u0027s toString method.","lastModifiedDate":"2024-03-30"},{"lineNumber":124,"author":{"gitId":"redcolorbicycle"},"content":"        return \"Hdb: \" + builder.toString() + \", \" + new ToStringBuilder(this)","lastModifiedDate":"2024-03-30"},{"lineNumber":125,"author":{"gitId":"redcolorbicycle"},"content":"                .add(\"Street\", street)","lastModifiedDate":"2024-03-30"},{"lineNumber":126,"author":{"gitId":"redcolorbicycle"},"content":"                .add(\"Block\", block)","lastModifiedDate":"2024-03-30"},{"lineNumber":127,"author":{"gitId":"redcolorbicycle"},"content":"                .add(\"Level\", level)","lastModifiedDate":"2024-03-30"},{"lineNumber":128,"author":{"gitId":"redcolorbicycle"},"content":"                .add(\"Unit Number\", unitNumber)","lastModifiedDate":"2024-03-30"},{"lineNumber":129,"author":{"gitId":"redcolorbicycle"},"content":"                .add(\"Postal Code\", postalCode)","lastModifiedDate":"2024-03-30"},{"lineNumber":130,"author":{"gitId":"felixchanyy"},"content":"                .add(\"Price\", price)","lastModifiedDate":"2024-04-01"},{"lineNumber":131,"author":{"gitId":"redcolorbicycle"},"content":"                .toString();","lastModifiedDate":"2024-03-30"},{"lineNumber":132,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":133,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-03-30"},{"lineNumber":134,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":135,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"redcolorbicycle":120,"felixchanyy":15}},{"path":"src/main/java/seedu/address/model/house/House.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":" * Represents a House.","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"public interface House {","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Housing types can only be Hdb, Condominium or Landed.\";","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"    public static final String[] VALIDATION_REGEX \u003d {\"Hdb\", \"Condominium\", \"Landed\"};","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"     * Retrieves the unit number of the house.","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"     * @return The unit number of the house.","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"    UnitNumber getUnitNumber();","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"redcolorbicycle"},"content":"     * Retrieves the postal code of the house.","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"     * @return The postal code of the house.","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"    PostalCode getPostalCode();","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"redcolorbicycle"},"content":"     * Retrieves the street of the house.","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"redcolorbicycle"},"content":"     * @return The street of the house.","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"redcolorbicycle"},"content":"    Street getStreet();","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":"     * Retrieves the price of the house.","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"felixchanyy"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"felixchanyy"},"content":"     * @return The price of the house.","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"felixchanyy"},"content":"    Price getPrice();","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"redcolorbicycle"},"content":"     * Checks if the given name is a valid housing type.","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"redcolorbicycle"},"content":"     * @param name The name to check.","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"redcolorbicycle"},"content":"     * @return True if the name is a valid housing type, false otherwise.","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"redcolorbicycle"},"content":"    public static boolean isValidName(String name) {","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"redcolorbicycle"},"content":"        for (String element : VALIDATION_REGEX) {","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"redcolorbicycle"},"content":"            if (element.equals(name)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"redcolorbicycle"},"content":"                return true;","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"redcolorbicycle"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"redcolorbicycle"},"content":"        return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"redcolorbicycle"},"content":"     * Checks if this house is equal to another object.","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"redcolorbicycle"},"content":"     * @param other The object to compare to.","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"redcolorbicycle"},"content":"     * @return True if the objects are equal, false otherwise.","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"redcolorbicycle"},"content":"    public boolean equals(Object other);","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"redcolorbicycle"},"content":"     * Returns a string representation of the house.","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"redcolorbicycle"},"content":"     * @return A string representation of the house.","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"redcolorbicycle"},"content":"    public String toString();","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"redcolorbicycle":60,"KhoonSun47":2,"felixchanyy":7}},{"path":"src/main/java/seedu/address/model/house/HousingType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":" * Represents a House\u0027s housing type.","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidHousingType(String)}","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"public class HousingType {","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"            \"HousingType should only be Landed, Hdb or Condominium\";","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"redcolorbicycle"},"content":"    public static final ArrayList\u003cString\u003e VALIDATION_REGEX \u003d new","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"redcolorbicycle"},"content":"            ArrayList\u003c\u003e(Arrays.asList(\"condominium\", \"hdb\", \"landed\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"redcolorbicycle"},"content":"    public final String value;","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"redcolorbicycle"},"content":"     * Constructs a {@code HousingType}.","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":"     * @param housingType A valid housing type.","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"redcolorbicycle"},"content":"    public HousingType(String housingType) {","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"redcolorbicycle"},"content":"        requireNonNull(housingType);","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"        checkArgument(isValidHousingType(housingType), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"redcolorbicycle"},"content":"        value \u003d housingType;","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"redcolorbicycle"},"content":"     * Returns true if a given string is a valid housing type.","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"    public static boolean isValidHousingType(String test) {","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"redcolorbicycle"},"content":"        return VALIDATION_REGEX.contains(test.toLowerCase());","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"redcolorbicycle"},"content":"    public String toString() {","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"redcolorbicycle"},"content":"        return value;","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"redcolorbicycle"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"redcolorbicycle"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"redcolorbicycle"},"content":"            return true;","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"redcolorbicycle"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"redcolorbicycle"},"content":"        if (!(other instanceof HousingType)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"redcolorbicycle"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"redcolorbicycle"},"content":"        HousingType otherHousingType \u003d (HousingType) other;","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"redcolorbicycle"},"content":"        return value.equals(otherHousingType.value);","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"redcolorbicycle"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"redcolorbicycle"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"redcolorbicycle":64,"KhoonSun47":3}},{"path":"src/main/java/seedu/address/model/house/Landed.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":" * Represents a landed house.","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"public class Landed implements House {","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"    public final PostalCode postalCode;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"    public final Street street;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"    public final UnitNumber unitNumber;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":"    public final Price price;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"     * Constructs a Landed house.","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"redcolorbicycle"},"content":"     * @param unitNumber The unit number of the house.","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"redcolorbicycle"},"content":"     * @param postalCode The postal code of the house.","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"     * @param street     The street of the house.","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"felixchanyy"},"content":"     * @param price      The price of the house.","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"felixchanyy"},"content":"    public Landed(UnitNumber unitNumber, PostalCode postalCode, Street street, Price price) {","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"redcolorbicycle"},"content":"        this.postalCode \u003d postalCode;","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"redcolorbicycle"},"content":"        this.street \u003d street;","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":"        this.unitNumber \u003d unitNumber;","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"felixchanyy"},"content":"        this.price \u003d price;","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"redcolorbicycle"},"content":"     * Retrieves the unit number of the landed house.","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"redcolorbicycle"},"content":"     * @return The unit number of the landed house.","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"redcolorbicycle"},"content":"    public UnitNumber getUnitNumber() {","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"redcolorbicycle"},"content":"        return this.unitNumber;","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"redcolorbicycle"},"content":"     * Retrieves the postal code of the landed house.","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"redcolorbicycle"},"content":"     * @return The postal code of the landed house.","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"redcolorbicycle"},"content":"    public PostalCode getPostalCode() {","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"redcolorbicycle"},"content":"        return this.postalCode;","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"redcolorbicycle"},"content":"     * Retrieves the street of the landed house.","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"redcolorbicycle"},"content":"     * @return The street of the landed house.","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"redcolorbicycle"},"content":"    public Street getStreet() {","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"redcolorbicycle"},"content":"        return this.street;","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"felixchanyy"},"content":"     * Retrieves the price of the landed house.","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"felixchanyy"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"felixchanyy"},"content":"     * @return The price of the landed house.","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"felixchanyy"},"content":"    public Price getPrice() {","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"felixchanyy"},"content":"        return price;","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"redcolorbicycle"},"content":"     * Checks if this house is equal to another object.","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"redcolorbicycle"},"content":"     * @param other The object to compare to.","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"redcolorbicycle"},"content":"     * @return True if the objects are equal, false otherwise.","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"redcolorbicycle"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"redcolorbicycle"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"redcolorbicycle"},"content":"            return true;","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"redcolorbicycle"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"redcolorbicycle"},"content":"        if (!(other instanceof Landed)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"redcolorbicycle"},"content":"            return false;","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"redcolorbicycle"},"content":"        House otherLanded \u003d (House) other;","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"redcolorbicycle"},"content":"        return this.toString().equals(otherLanded.toString());","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"redcolorbicycle"},"content":"     * Returns a string representation of the landed house.","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"redcolorbicycle"},"content":"     * @return A string representation of the landed house.","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"redcolorbicycle"},"content":"    public String toString() {","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"KhoonSun47"},"content":"        ToStringBuilder builder \u003d new ToStringBuilder(this);","lastModifiedDate":"2024-03-27"},{"lineNumber":98,"author":{"gitId":"KhoonSun47"},"content":"        // For now, it just appends the super class\u0027s toString method.","lastModifiedDate":"2024-03-27"},{"lineNumber":99,"author":{"gitId":"redcolorbicycle"},"content":"        return \"Landed House: \" + builder.toString() + \", \" + new ToStringBuilder(this)","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"redcolorbicycle"},"content":"                .add(\"Unit Number\", unitNumber)","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"redcolorbicycle"},"content":"                .add(\"Street\", street)","lastModifiedDate":"2024-03-30"},{"lineNumber":102,"author":{"gitId":"redcolorbicycle"},"content":"                .add(\"Postal Code\", postalCode)","lastModifiedDate":"2024-03-30"},{"lineNumber":103,"author":{"gitId":"felixchanyy"},"content":"                .add(\"Price\", price)","lastModifiedDate":"2024-04-01"},{"lineNumber":104,"author":{"gitId":"redcolorbicycle"},"content":"                .toString();","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":108,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"redcolorbicycle":90,"KhoonSun47":4,"felixchanyy":14}},{"path":"src/main/java/seedu/address/model/house/Level.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":" * Represents a House\u0027s level.","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidLevel(String)}","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"public class Level {","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"            \"Level should only contain numbers, and it should only be at most 2 digits long\";","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{1,2}\";","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"    public static final String ZERO_REGEX \u003d \"^0+$\";","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"    public final String value;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"     * Constructs a {@code Level}.","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"     * @param level A valid level.","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"    public Level(String level) {","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"        requireNonNull(level);","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"        checkArgument(isValidLevel(level), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"        value \u003d level;","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"     * Returns true if a given string is a valid level.","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"    public static boolean isValidLevel(String test) {","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 !test.matches(ZERO_REGEX);","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"    public String toString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"        return value;","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"            return true;","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"        if (!(other instanceof Level)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"        Level otherLevel \u003d (Level) other;","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"        return value.equals(otherLevel.value);","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"lokidoki102"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"lokidoki102":63}},{"path":"src/main/java/seedu/address/model/house/PostalCode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":" * Represents a House\u0027s postal code in the address book.","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPostalCode(String)}","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"public class PostalCode {","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"            \"The postal code should only contain numbers, and it should be only 6 digits long\";","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{6}\";","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"    public final String value;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"     * Constructs a {@code PostalCode}.","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"     * @param postalCode A valid postal code.","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"    public PostalCode(String postalCode) {","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"        requireNonNull(postalCode);","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"        checkArgument(isValidPostalCode(postalCode), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"        value \u003d postalCode;","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"     * Returns true if a given string is a valid postal code.","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"    public static boolean isValidPostalCode(String test) {","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"    public String toString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"        return value;","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"            return true;","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"        if (!(other instanceof PostalCode)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"        PostalCode otherPostalCode \u003d (PostalCode) other;","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"        return value.equals(otherPostalCode.value);","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"KhoonSun47":59}},{"path":"src/main/java/seedu/address/model/house/Price.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"felixchanyy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"felixchanyy"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":" * Represents a House\u0027s Price amount.","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"felixchanyy"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPrice(String)}","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"felixchanyy"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"felixchanyy"},"content":"public class Price {","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Price should be a positive number.\";","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"felixchanyy"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d+(\\\\.\\\\d+)?\";","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"    public final String value;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"     * Constructs a {@code Price}.","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"     * @param price A valid price amount.","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"    public Price(String price) {","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"felixchanyy"},"content":"        requireNonNull(price);","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"felixchanyy"},"content":"        checkArgument(isValidPrice(price), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"felixchanyy"},"content":"        value \u003d price;","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"felixchanyy"},"content":"     * Returns true if a given String is a valid price amount.","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"felixchanyy"},"content":"    public static boolean isValidPrice(String test) {","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"felixchanyy"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 Double.parseDouble(test) \u003e\u003d 0;","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"felixchanyy"},"content":"    public String toString() {","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"felixchanyy"},"content":"        return value;","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"felixchanyy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"felixchanyy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"felixchanyy"},"content":"            return true;","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"felixchanyy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"felixchanyy"},"content":"        if (!(other instanceof Price)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"felixchanyy"},"content":"            return false;","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"felixchanyy"},"content":"        Price otherPrice \u003d (Price) other;","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"felixchanyy"},"content":"        return value.equals(otherPrice.value);","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"felixchanyy"},"content":"    public int hashCode() {","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"felixchanyy"},"content":"        return value.hashCode();","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"felixchanyy"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"felixchanyy":57}},{"path":"src/main/java/seedu/address/model/house/Street.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":" * Represents a House\u0027s street.","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidStreet(String)}","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"public class Street {","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"            \"Street should only contain alphanumeric characters and hyphens.\";","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(?\u003d.*[a-zA-Z0-9])[a-zA-Z0-9\\\\s-]+$\";","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"    public final String value;","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"     * Constructs a {@code Street}.","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"     * @param street A valid street.","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"    public Street(String street) {","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"        requireNonNull(street);","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"        checkArgument(isValidStreet(street), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"        value \u003d street;","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"     * Returns true if a given string is a valid street.","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"    public static boolean isValidStreet(String test) {","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"    public String toString() {","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"        return value;","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"            return true;","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"        if (!(other instanceof Street)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"            return false;","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"        Street otherStreet \u003d (Street) other;","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"        return value.equals(otherStreet.value);","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"lokidoki102"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"lokidoki102"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"lokidoki102":60}},{"path":"src/main/java/seedu/address/model/house/UnitNumber.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":" * Represents a House\u0027s unit number in the address book.","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidUnitNumber(String)}","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"public class UnitNumber {","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"            \"The unit number should only contain numbers, it should be at least 1 digit \"","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"                    + \"and at most 3 digits long, and cannot be \u00270\u0027, \u002700\u0027 or \u0027000\u0027.\";","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{1,3}\";","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"    public static final String ZERO_REGEX \u003d \"^0+$\";","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"    public final String value;","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"     * Constructs a {@code UnitNumber}.","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"     * @param unitNumber A valid unit number.","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"    public UnitNumber(String unitNumber) {","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"        requireNonNull(unitNumber);","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"        checkArgument(isValidUnitNumber(unitNumber), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"        value \u003d unitNumber;","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"     * Returns true if a given string is a valid unit number.","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"     * @param test The string to test.","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"     * @return true if the test matches the VALIDATION_REGEX and is not \"0\".","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"    public static boolean isValidUnitNumber(String test) {","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 !test.matches(ZERO_REGEX);","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"    public String toString() {","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"        return value;","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"            return true;","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"        if (!(other instanceof UnitNumber)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"            return false;","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"        UnitNumber otherUnitNumber \u003d (UnitNumber) other;","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"        return value.equals(otherUnitNumber.value);","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"KhoonSun47":64}},{"path":"src/main/java/seedu/address/model/person/Budget.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"felixchanyy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"felixchanyy"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":" * Represents a Buyer\u0027s budget in the address book.","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"felixchanyy"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidBudget(String)}","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"felixchanyy"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"felixchanyy"},"content":"public class Budget {","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"felixchanyy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Budget should be a positive number.\";","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d+(\\\\.\\\\d+)?\";","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":"    public final String value;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"     * Constructs a {@code Budget}.","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":"     * @param budget A valid budget amount.","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"felixchanyy"},"content":"    public Budget(String budget) {","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"felixchanyy"},"content":"        requireNonNull(budget);","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"felixchanyy"},"content":"        checkArgument(isValidBudget(budget), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"felixchanyy"},"content":"        value \u003d budget;","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"felixchanyy"},"content":"     * Returns true if a given string is a valid budget amount.","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"felixchanyy"},"content":"    public static boolean isValidBudget(String test) {","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"felixchanyy"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 Double.parseDouble(test) \u003e\u003d 0;","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"felixchanyy"},"content":"    public String toString() {","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"felixchanyy"},"content":"        return value;","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"felixchanyy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"felixchanyy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"felixchanyy"},"content":"            return true;","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"felixchanyy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"felixchanyy"},"content":"        if (!(other instanceof Budget)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"felixchanyy"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"felixchanyy"},"content":"        Budget otherBudget \u003d (Budget) other;","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"felixchanyy"},"content":"        return value.equals(otherBudget.value);","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"felixchanyy"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"felixchanyy"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"felixchanyy"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"felixchanyy":58}},{"path":"src/main/java/seedu/address/model/person/Buyer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"felixchanyy"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.HousingType;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"felixchanyy"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":" * Represents a buyer in the address book.","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"felixchanyy"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"public class Buyer extends Person {","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"    private final Budget budget;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"    private final HousingType preferredHousingType;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"redcolorbicycle"},"content":"     * Constructs a new Buyer instance without specifying a house. Default constructor.","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"felixchanyy"},"content":"     * @param name        The name of the buyer.","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"felixchanyy"},"content":"     * @param phone       The phone number of the buyer.","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"felixchanyy"},"content":"     * @param email       The email address of the buyer.","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"     * @param preferredHousingType The type of housing the buyer wants.","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"felixchanyy"},"content":"     * @param tags        The tags associated with the buyer.","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"felixchanyy"},"content":"     * @param budget      The budget of the buyer.","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"    public Buyer(Name name, Phone phone, Email email, Budget budget, HousingType preferredHousingType, Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"        super(name, phone, email, tags);","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"        this.preferredHousingType \u003d preferredHousingType;","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"felixchanyy"},"content":"        this.budget \u003d budget;","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"felixchanyy"},"content":"    public Budget getBudget() {","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"felixchanyy"},"content":"        return budget;","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"    public HousingType getPreferredHousingType() {","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"        return preferredHousingType;","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"felixchanyy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"felixchanyy"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"felixchanyy"},"content":"            return true;","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"felixchanyy"},"content":"        if (!(other instanceof Buyer)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"felixchanyy"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"felixchanyy"},"content":"        if (!super.equals(other)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"felixchanyy"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"felixchanyy"},"content":"        Buyer buyer \u003d (Buyer) other;","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"        return Objects.equals(budget, buyer.budget)","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"                \u0026\u0026 Objects.equals(preferredHousingType, buyer.preferredHousingType);","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"felixchanyy"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"        return Objects.hash(super.hashCode(), budget, preferredHousingType);","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"felixchanyy"},"content":"    public String toString() {","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"felixchanyy"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"felixchanyy"},"content":"                .add(\"name\", getName())","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"felixchanyy"},"content":"                .add(\"phone\", getPhone())","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"felixchanyy"},"content":"                .add(\"email\", getEmail())","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"KhoonSun47"},"content":"                .add(\"housingType\", preferredHousingType)","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"felixchanyy"},"content":"                .add(\"budget\", budget)","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"felixchanyy"},"content":"                .add(\"tags\", getTags())","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"felixchanyy"},"content":"                .toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"felixchanyy"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"redcolorbicycle":3,"felixchanyy":61,"KhoonSun47":13}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"    public Person(Name name, Phone phone, Email email, Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"        requireAllNonNull(name, phone, email, tags);","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"KhoonSun47"},"content":"        return Objects.hash(name, phone, email, tags);","lastModifiedDate":"2024-04-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KhoonSun47":3,"-":103}},{"path":"src/main/java/seedu/address/model/person/Seller.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.House;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"felixchanyy"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"felixchanyy"},"content":" * Represents a seller in the address book.","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"felixchanyy"},"content":"public class Seller extends Person {","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"    private final ArrayList\u003cHouse\u003e houses;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"     * Constructs a new Seller instance.","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"     * @param name        The name of the seller.","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":"     * @param phone       The phone number of the seller.","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"     * @param email       The email address of the seller.","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"     * @param houses      The houses the seller has (modified to accept a list of houses)","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"felixchanyy"},"content":"     * @param tags        The tags associated with the seller.","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"    public Seller(Name name, Phone phone, Email email, ArrayList\u003cHouse\u003e houses, Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"        super(name, phone, email, tags);","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"        this.houses \u003d houses;","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"     * Adds a new house to the seller\u0027s list of houses. This will only be implemented when there is a add house command","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"     * @param house The new house to add.","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"    public void addHouse(House house) {","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"        this.houses.add(house);","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"     * Returns the list of houses associated with this seller.","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"     * @return An ArrayList containing House objects.","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"    public ArrayList\u003cHouse\u003e getHouses() {","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"        return new ArrayList\u003c\u003e(houses);","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"redcolorbicycle":6,"felixchanyy":20,"KhoonSun47":18}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.Block;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.Condominium;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.Hdb;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.House;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.HousingType;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.Level;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.PostalCode;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.house.Price;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.Street;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.UnitNumber;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.person.Budget;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Buyer;","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Seller;","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"    public static Buyer[] getSampleBuyers() {","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"        return new Buyer[]{","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"            new Buyer(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"                        new Email(\"alexyeoh@example.com\"), new Budget(\"100000\"),","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"                        new HousingType(\"Hdb\"), getTagSet(\"friends\")),","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"            new Buyer(new Name(\"Bernice Yu\"), new Phone(\"99272758\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"                        new Email(\"berniceyu@example.com\"), new Budget(\"200000\"),","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"                        new HousingType(\"Condominium\"), getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"            new Buyer(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"                        new Email(\"charlotte@example.com\"), new Budget(\"300000\"),","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"                        new HousingType(\"Hdb\"), getTagSet(\"neighbours\")),","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"        };","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"    public static Seller[] getSampleSellers() {","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"        ArrayList\u003cHouse\u003e davidLiHouses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"redcolorbicycle"},"content":"        davidLiHouses.add(new Hdb(new Level(\"3\"), new PostalCode(\"098703\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"felixchanyy"},"content":"                new Street(\"Ang Mo Kio Avenue 1\"), new UnitNumber(\"02\"), new Block(\"51\"), new Price(\"1111111\")));","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"        ArrayList\u003cHouse\u003e irfanHouses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"redcolorbicycle"},"content":"        irfanHouses.add(new Condominium(new Level(\"4\"), new PostalCode(\"098713\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"felixchanyy"},"content":"                new Street(\"Ang Mo Kio Avenue 2\"), new UnitNumber(\"03\"), new Block(\"52\"), new Price(\"2222222\")));","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"        ArrayList\u003cHouse\u003e royHouses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"redcolorbicycle"},"content":"        royHouses.add(new Hdb(new Level(\"5\"), new PostalCode(\"098723\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"felixchanyy"},"content":"                new Street(\"Ang Mo Kio Avenue 3\"), new UnitNumber(\"04\"), new Block(\"53\"), new Price(\"3333333\")));","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"redcolorbicycle"},"content":"        royHouses.add(new Hdb(new Level(\"6\"), new PostalCode(\"098724\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"felixchanyy"},"content":"                new Street(\"Toa Payoh Avenue 4\"), new UnitNumber(\"05\"), new Block(\"54\"), new Price(\"4444444\")));","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"        return new Seller[]{","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"            new Seller(new Name(\"David Li\"), new Phone(\"91031282\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"                        new Email(\"lidavid@example.com\"), davidLiHouses,","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                        getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"            new Seller(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"                        new Email(\"irfan@example.com\"), irfanHouses,","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                        getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"            new Seller(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"                        new Email(\"royb@example.com\"), royHouses,","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                        getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":74,"author":{"gitId":"KhoonSun47"},"content":"        for (Buyer sampleBuyer : getSampleBuyers()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"KhoonSun47"},"content":"            sampleAb.addPerson(sampleBuyer);","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"KhoonSun47"},"content":"        for (Seller sampleSeller : getSampleSellers()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"KhoonSun47"},"content":"            sampleAb.addPerson(sampleSeller);","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"redcolorbicycle":7,"KhoonSun47":40,"felixchanyy":6,"-":39}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedBuyer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zengzihui"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"zengzihui"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"zengzihui"},"content":"import java.util.List;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"zengzihui"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"zengzihui"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"zengzihui"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.HousingType;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.person.Budget;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.person.Buyer;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"zengzihui"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"zengzihui"},"content":" * Jackson-friendly version of {@link Buyer}.","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"zengzihui"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"zengzihui"},"content":"public class JsonAdaptedBuyer extends JsonAdaptedPerson {","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"    private final String budget;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"    private final String preferredHousingType;","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"zengzihui"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"     * Constructs a {@code JsonAdaptedBuyer}, extends from JsonAdaptedPerson","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"zengzihui"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"zengzihui"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"zengzihui"},"content":"    public JsonAdaptedBuyer(@JsonProperty(\"name\") String name,","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"zengzihui"},"content":"                             @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"zengzihui"},"content":"                             @JsonProperty(\"email\") String email,","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"                             @JsonProperty(\"preferredHousingType\") String preferredHousingType,","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"felixchanyy"},"content":"                             @JsonProperty(\"budget\") String budget,","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"zengzihui"},"content":"                             @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"        super(name, phone, email, tags);","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"felixchanyy"},"content":"        this.budget \u003d budget;","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"        this.preferredHousingType \u003d preferredHousingType;","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"zengzihui"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"zengzihui"},"content":"     * Converts a given {@code JsonAdaptedBuyer} into this class for Jackson use.","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"zengzihui"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"zengzihui"},"content":"    public JsonAdaptedBuyer(Buyer source) {","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"zengzihui"},"content":"        super(source);","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"felixchanyy"},"content":"        budget \u003d source.getBudget().value;","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"        preferredHousingType \u003d source.getPreferredHousingType().value;","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"zengzihui"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"     * Converts this Jackson-friendly adapted buyer object into the model\u0027s {@code Buyer} object.","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"zengzihui"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"zengzihui"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"zengzihui"},"content":"    public Buyer toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"felixchanyy"},"content":"        if (budget \u003d\u003d null) {","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"felixchanyy"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Budget.class.getSimpleName()));","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"felixchanyy"},"content":"        if (!Budget.isValidBudget(budget)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"felixchanyy"},"content":"            throw new IllegalValueException(Budget.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"felixchanyy"},"content":"        final Budget modelBudget \u003d new Budget(budget);","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"        if (preferredHousingType \u003d\u003d null) {","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"                    HousingType.class.getSimpleName()));","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"        if (!HousingType.isValidHousingType(preferredHousingType)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"            throw new IllegalValueException(HousingType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"        final HousingType modelHousingType \u003d new HousingType(preferredHousingType);","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"zengzihui"},"content":"        Person person \u003d super.toModelType();","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"zengzihui"},"content":"        return new Buyer(person.getName(), person.getPhone(), person.getEmail(),","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"KhoonSun47"},"content":"                modelBudget, modelHousingType, new HashSet\u003c\u003e(person.getTags()));","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"zengzihui"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"zengzihui":41,"KhoonSun47":18,"felixchanyy":15}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedHouse.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.Block;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.Condominium;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.Hdb;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.House;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.Landed;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.Level;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.PostalCode;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.house.Price;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.Street;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.UnitNumber;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":" * Jackson-friendly version of {@link House}.","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"public class JsonAdaptedHouse {","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"House\u0027s %s field is missing!\";","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"    private final String housingType;","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"    private final String block;","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"    private final String level;","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"    private final String postalCode;","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"    private final String street;","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"    private final String unitNumber;","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"felixchanyy"},"content":"    private final String price;","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"     * Constructs a {@code JsonAdaptedHouse} with the given house details.","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"    public JsonAdaptedHouse(@JsonProperty(\"housingType\") String housingType,","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"                            @JsonProperty(\"block\") String block,","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"                            @JsonProperty(\"level\") String level,","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"                            @JsonProperty(\"postalCode\") String postalCode,","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"                            @JsonProperty(\"street\") String street,","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"felixchanyy"},"content":"                            @JsonProperty(\"unitNumber\") String unitNumber,","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"felixchanyy"},"content":"                            @JsonProperty(\"price\") String price) {","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"        this.housingType \u003d housingType;","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"        this.block \u003d block;","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"        this.level \u003d level;","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"        this.postalCode \u003d postalCode;","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"        this.street \u003d street;","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"        this.unitNumber \u003d unitNumber;","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"felixchanyy"},"content":"        this.price \u003d price;","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"     * Converts a given {@code House} into this class for Jackson use.","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"    public JsonAdaptedHouse(House source) {","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"redcolorbicycle"},"content":"        if (source instanceof Condominium) {","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"redcolorbicycle"},"content":"            Condominium condominium \u003d (Condominium) source;","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"redcolorbicycle"},"content":"            this.block \u003d condominium.getBlock() \u003d\u003d null ? null : condominium.getBlock().value;","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"redcolorbicycle"},"content":"            this.level \u003d condominium.getLevel() \u003d\u003d null ? null : condominium.getLevel().value;","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"            this.housingType \u003d \"Condominium\";","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"redcolorbicycle"},"content":"        } else if (source instanceof Hdb) {","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"redcolorbicycle"},"content":"            Hdb hdb \u003d (Hdb) source;","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"redcolorbicycle"},"content":"            this.block \u003d hdb.getBlock() \u003d\u003d null ? null : hdb.getBlock().value;","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"redcolorbicycle"},"content":"            this.level \u003d hdb.getLevel() \u003d\u003d null ? null : hdb.getLevel().value;","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"            this.housingType \u003d \"Hdb\";","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"        } else {","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"            this.block \u003d null;","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"            this.level \u003d null;","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"            this.housingType \u003d \"Landed\";","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"        this.postalCode \u003d source.getPostalCode().value;","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"KhoonSun47"},"content":"        this.street \u003d source.getStreet().value;","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"KhoonSun47"},"content":"        this.unitNumber \u003d source.getUnitNumber().value;","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"felixchanyy"},"content":"        this.price \u003d source.getPrice().value;","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"KhoonSun47"},"content":"     * Converts this Jackson-friendly adapted house object into the model\u0027s {@code House} object.","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"KhoonSun47"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted house.","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"KhoonSun47"},"content":"    public House toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"KhoonSun47"},"content":"        if (postalCode \u003d\u003d null) {","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"KhoonSun47"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"KhoonSun47"},"content":"                    PostalCode.class.getSimpleName()));","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"KhoonSun47"},"content":"        if (!PostalCode.isValidPostalCode(postalCode)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"KhoonSun47"},"content":"            throw new IllegalValueException(PostalCode.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"KhoonSun47"},"content":"        final PostalCode modelPostalCode \u003d new PostalCode(postalCode);","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"KhoonSun47"},"content":"        if (street \u003d\u003d null) {","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"KhoonSun47"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Street.class.getSimpleName()));","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"KhoonSun47"},"content":"        if (!Street.isValidStreet(street)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"KhoonSun47"},"content":"            throw new IllegalValueException(Street.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-27"},{"lineNumber":96,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"KhoonSun47"},"content":"        final Street modelStreet \u003d new Street(street);","lastModifiedDate":"2024-03-27"},{"lineNumber":98,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":99,"author":{"gitId":"KhoonSun47"},"content":"        if (unitNumber \u003d\u003d null) {","lastModifiedDate":"2024-03-27"},{"lineNumber":100,"author":{"gitId":"KhoonSun47"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-27"},{"lineNumber":101,"author":{"gitId":"KhoonSun47"},"content":"                    UnitNumber.class.getSimpleName()));","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":103,"author":{"gitId":"KhoonSun47"},"content":"        if (!UnitNumber.isValidUnitNumber(unitNumber)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"KhoonSun47"},"content":"            throw new IllegalValueException(UnitNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-27"},{"lineNumber":105,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"KhoonSun47"},"content":"        final UnitNumber modelUnitNumber \u003d new UnitNumber(unitNumber);","lastModifiedDate":"2024-03-27"},{"lineNumber":107,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":108,"author":{"gitId":"felixchanyy"},"content":"        if (price \u003d\u003d null) {","lastModifiedDate":"2024-04-01"},{"lineNumber":109,"author":{"gitId":"felixchanyy"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2024-04-01"},{"lineNumber":110,"author":{"gitId":"felixchanyy"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Price.class.getSimpleName()));","lastModifiedDate":"2024-04-01"},{"lineNumber":111,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":112,"author":{"gitId":"felixchanyy"},"content":"        if (!Price.isValidPrice(price)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":113,"author":{"gitId":"felixchanyy"},"content":"            throw new IllegalValueException(Price.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-01"},{"lineNumber":114,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":115,"author":{"gitId":"felixchanyy"},"content":"        final Price modelPrice \u003d new Price(price);","lastModifiedDate":"2024-04-01"},{"lineNumber":116,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":117,"author":{"gitId":"KhoonSun47"},"content":"        if (\"Condominium\".equals(housingType)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":118,"author":{"gitId":"KhoonSun47"},"content":"            Block modelBlock \u003d block !\u003d null ? new Block(block) : null;","lastModifiedDate":"2024-03-21"},{"lineNumber":119,"author":{"gitId":"KhoonSun47"},"content":"            Level modelLevel \u003d level !\u003d null ? new Level(level) : null;","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"KhoonSun47"},"content":"            if (modelBlock !\u003d null) {","lastModifiedDate":"2024-03-21"},{"lineNumber":121,"author":{"gitId":"felixchanyy"},"content":"                return new Condominium(modelLevel, modelPostalCode, modelStreet, modelUnitNumber, modelBlock,","lastModifiedDate":"2024-04-01"},{"lineNumber":122,"author":{"gitId":"felixchanyy"},"content":"                        modelPrice);","lastModifiedDate":"2024-04-01"},{"lineNumber":123,"author":{"gitId":"KhoonSun47"},"content":"            } else {","lastModifiedDate":"2024-03-21"},{"lineNumber":124,"author":{"gitId":"felixchanyy"},"content":"                return new Condominium(modelLevel, modelPostalCode, modelStreet, modelUnitNumber, modelPrice);","lastModifiedDate":"2024-04-01"},{"lineNumber":125,"author":{"gitId":"KhoonSun47"},"content":"            }","lastModifiedDate":"2024-03-21"},{"lineNumber":126,"author":{"gitId":"KhoonSun47"},"content":"        } else if (\"hdb\".equalsIgnoreCase(housingType)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":127,"author":{"gitId":"redcolorbicycle"},"content":"            Block modelBlock \u003d block !\u003d null ? new Block(block) : null;","lastModifiedDate":"2024-03-30"},{"lineNumber":128,"author":{"gitId":"redcolorbicycle"},"content":"            Level modelLevel \u003d level !\u003d null ? new Level(level) : null;","lastModifiedDate":"2024-03-30"},{"lineNumber":129,"author":{"gitId":"felixchanyy"},"content":"            return new Hdb(modelLevel, modelPostalCode, modelStreet, modelUnitNumber, modelBlock, modelPrice);","lastModifiedDate":"2024-04-01"},{"lineNumber":130,"author":{"gitId":"KhoonSun47"},"content":"        } else if (\"Landed\".equals(housingType)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":131,"author":{"gitId":"felixchanyy"},"content":"            return new Landed(modelUnitNumber, modelPostalCode, modelStreet, modelPrice);","lastModifiedDate":"2024-04-01"},{"lineNumber":132,"author":{"gitId":"KhoonSun47"},"content":"        } else {","lastModifiedDate":"2024-03-21"},{"lineNumber":133,"author":{"gitId":"KhoonSun47"},"content":"            throw new IllegalValueException(\"Unknown House Type\");","lastModifiedDate":"2024-03-27"},{"lineNumber":134,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":135,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":136,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"redcolorbicycle":12,"KhoonSun47":104,"felixchanyy":20}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name,","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"                             @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"                             @JsonProperty(\"email\") String email,","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"KhoonSun47"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelTags);","lastModifiedDate":"2024-04-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"KhoonSun47":4,"-":92}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedSeller.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"import java.util.List;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.House;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Seller;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":" * Jackson-friendly version of {@link Seller}.","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"public class JsonAdaptedSeller extends JsonAdaptedPerson {","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"    private final List\u003cJsonAdaptedHouse\u003e houses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"     * Constructs a {@code JsonAdaptedSeller}, extends from JsonAdaptedPerson.","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"    public JsonAdaptedSeller(@JsonProperty(\"name\") String name,","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"                             @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"                             @JsonProperty(\"email\") String email,","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"                             @JsonProperty(\"houses\") List\u003cJsonAdaptedHouse\u003e houses,","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"                             @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"        super(name, phone, email, tags);","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"        if (houses !\u003d null) {","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"            this.houses.addAll(houses);","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"     * Converts a given {@code JsonAdaptedSeller} into this class for Jackson use.","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"    public JsonAdaptedSeller(Seller source) {","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"        super(source);","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"        houses.addAll(source.getHouses().stream()","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"                .map(JsonAdaptedHouse::new)","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"     * Converts this Jackson-friendly adapted seller object into the model\u0027s {@code Seller} object.","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"    public Seller toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"        Person person \u003d super.toModelType();","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"        final ArrayList\u003cHouse\u003e sellerHouses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"        for (JsonAdaptedHouse house : houses) {","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"            try {","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"                sellerHouses.add(house.toModelType());","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"            } catch (IllegalValueException ive) {","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"                throw ive;","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"                throw new IllegalValueException(\"Error when converting houses: \" + e.getMessage());","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"            }","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"        return new Seller(person.getName(), person.getPhone(),","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"                person.getEmail(), sellerHouses, new HashSet\u003c\u003e(person.getTags()));","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"KhoonSun47":68}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Buyer;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Seller;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"    private final List\u003cJsonAdaptedSeller\u003e sellers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"    private final List\u003cJsonAdaptedBuyer\u003e buyers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"buyers\") List\u003cJsonAdaptedBuyer\u003e buyers,","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"                @JsonProperty(\"sellers\") List\u003cJsonAdaptedSeller\u003e sellers) {","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"        if (buyers !\u003d null) {","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"            this.buyers.addAll(buyers);","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"        if (sellers !\u003d null) {","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"            this.sellers.addAll(sellers);","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"        source.getPersonList().stream()","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"                .filter(Seller.class::isInstance)","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"                .map(Seller.class::cast)","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"                .map(JsonAdaptedSeller::new)","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"                .forEach(sellers::add);","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"        source.getPersonList().stream()","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"                .filter(Buyer.class::isInstance)","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"                .map(Buyer.class::cast)","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"                .map(JsonAdaptedBuyer::new)","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"                .forEach(buyers::add);","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"        List\u003cPerson\u003e combinedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"        for (JsonAdaptedSeller jsonAdaptedSeller : sellers) {","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"            Seller seller \u003d jsonAdaptedSeller.toModelType();","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"KhoonSun47"},"content":"            combinedList.add(seller);","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"KhoonSun47"},"content":"        for (JsonAdaptedBuyer jsonAdaptedBuyer : buyers) {","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"KhoonSun47"},"content":"            Buyer buyer \u003d jsonAdaptedBuyer.toModelType();","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"KhoonSun47"},"content":"            combinedList.add(buyer);","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"KhoonSun47"},"content":"        // Sort the combined list by name in alphabetical order","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"KhoonSun47"},"content":"        combinedList.sort(Comparator.comparing(person -\u003e person.getName().fullName));","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"KhoonSun47"},"content":"        // Add sorted persons to the address book","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"KhoonSun47"},"content":"        for (Person person : combinedList) {","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"KhoonSun47":41,"-":51}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.Block;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.Condominium;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.Hdb;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.Level;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.person.Buyer;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Seller;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"    private Label preferredHousingType;","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"felixchanyy"},"content":"    private Label budget;","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"    private Label postalCode;","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"    @FXML","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"    @FXML","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"    private VBox housesContainer;","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"     * Creates a {@code PersonCard} with the given {@code Person} and index to display.","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"        // Check if person is a Seller and display houses (For now, we assume only have seller have house)","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"        if (person instanceof Seller) {","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"felixchanyy"},"content":"            // Show no budget","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"felixchanyy"},"content":"            budget.setVisible(false);","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"            preferredHousingType.setVisible(false);","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"            Seller seller \u003d (Seller) person;","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"            if (seller.getHouses() !\u003d null) {","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"                seller.getHouses().forEach(house -\u003e {","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"KhoonSun47"},"content":"                    // Create a VBox to hold the house details with spacing between elements","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"KhoonSun47"},"content":"                    VBox houseDetails \u003d new VBox(4);","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"KhoonSun47"},"content":"                    houseDetails.getChildren().add(new Label(\"Postal Code: \" + house.getPostalCode().value));","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"KhoonSun47"},"content":"                    houseDetails.getChildren().add(new Label(\"Street: \" + house.getStreet().value));","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"KhoonSun47"},"content":"                    houseDetails.getChildren().add(new Label(\"Unit Number: \" + house.getUnitNumber().value));","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"redcolorbicycle"},"content":"                    // If the house is HDB, check for block and level","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"redcolorbicycle"},"content":"                    if (house instanceof Hdb) {","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"redcolorbicycle"},"content":"                        Block block \u003d ((Hdb) house).getBlock();","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"redcolorbicycle"},"content":"                        Level level \u003d ((Hdb) house).getLevel();","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"redcolorbicycle"},"content":"                        houseDetails.getChildren().add(new Label(\"Block: \" + (block !\u003d null ? block.value : \"N/A\")));","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"redcolorbicycle"},"content":"                        houseDetails.getChildren().add(new Label(\"Level: \" + (level !\u003d null ? level.value : \"N/A\")));","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"redcolorbicycle"},"content":"                    } else if (house instanceof Condominium) {","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"redcolorbicycle"},"content":"                        Block block \u003d ((Condominium) house).getBlock();","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"redcolorbicycle"},"content":"                        Level level \u003d ((Condominium) house).getLevel();","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"KhoonSun47"},"content":"                        houseDetails.getChildren().add(new Label(\"Block: \" + (block !\u003d null ? block.value : \"N/A\")));","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"KhoonSun47"},"content":"                        houseDetails.getChildren().add(new Label(\"Level: \" + (level !\u003d null ? level.value : \"N/A\")));","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"KhoonSun47"},"content":"                    }","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"felixchanyy"},"content":"                    // Add price to house","lastModifiedDate":"2024-04-01"},{"lineNumber":91,"author":{"gitId":"felixchanyy"},"content":"                    houseDetails.getChildren().add(new Label(\"Price: $\" + house.getPrice().toString()));","lastModifiedDate":"2024-04-01"},{"lineNumber":92,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"KhoonSun47"},"content":"                    // Add the house details to the houses container","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"KhoonSun47"},"content":"                    housesContainer.getChildren().add(houseDetails);","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":96,"author":{"gitId":"KhoonSun47"},"content":"                    // Add spacing after each house\u0027s VBox, but not after the last one","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"KhoonSun47"},"content":"                    if (seller.getHouses().indexOf(house) \u003c seller.getHouses().size() - 1) {","lastModifiedDate":"2024-03-27"},{"lineNumber":98,"author":{"gitId":"KhoonSun47"},"content":"                        housesContainer.getChildren().add(new Region() {","lastModifiedDate":"2024-03-27"},{"lineNumber":99,"author":{"gitId":"KhoonSun47"},"content":"                            {","lastModifiedDate":"2024-03-27"},{"lineNumber":100,"author":{"gitId":"KhoonSun47"},"content":"                                setPrefHeight(20);","lastModifiedDate":"2024-03-27"},{"lineNumber":101,"author":{"gitId":"KhoonSun47"},"content":"                            }","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"KhoonSun47"},"content":"                        });","lastModifiedDate":"2024-03-27"},{"lineNumber":103,"author":{"gitId":"KhoonSun47"},"content":"                    }","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"KhoonSun47"},"content":"                });","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"KhoonSun47"},"content":"            }","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"KhoonSun47"},"content":"        } else {","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"KhoonSun47"},"content":"            // We assumed that buyer does not have a house for now","lastModifiedDate":"2024-03-27"},{"lineNumber":108,"author":{"gitId":"KhoonSun47"},"content":"            housesContainer.setVisible(false);","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"felixchanyy"},"content":"            Buyer buyer \u003d (Buyer) person;","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"felixchanyy"},"content":"            budget.setText(\"$\" + buyer.getBudget().toString());","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"KhoonSun47"},"content":"            preferredHousingType.setText(\"Preferred Housing Type: \" + buyer.getPreferredHousingType().toString());","lastModifiedDate":"2024-04-01"},{"lineNumber":112,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"redcolorbicycle":11,"KhoonSun47":45,"felixchanyy":9,"-":49}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e \u003c!-- New Column for person --\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e \u003c!-- New Column for houses --\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\"/\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cFlowPane fx:id\u003d\"tags\"/\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\"/\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\"/\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"felixchanyy"},"content":"            \u003cLabel fx:id\u003d\"budget\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$budget\"/\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"            \u003cLabel fx:id\u003d\"preferredHousingType\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$preferredHousingType\"/\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"        \u003c!-- New VBox for displaying houses --\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"        \u003cVBox fx:id\u003d\"housesContainer\" alignment\u003d\"TOP_LEFT\" GridPane.columnIndex\u003d\"1\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\"/\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KhoonSun47":9,"felixchanyy":1,"-":34}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BLOCK_DESC_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.logic.commands.CommandTestUtil.HOUSING_TYPE_DESC_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LEVEL_DESC_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POSTAL_CODE_DESC_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PRICE_DESC_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STREET_DESC_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.commands.CommandTestUtil.UNIT_NUMBER_DESC_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.TypicalPersons.AMY_SELLER;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.logic.commands.AddSellerCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Seller;","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.testutil.SellerBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"KhoonSun47"},"content":"        assertCommandFailureForExceptionFromStorageForSeller(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":85,"author":{"gitId":"KhoonSun47"},"content":"        assertCommandFailureForExceptionFromStorageForSeller(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"KhoonSun47"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component","lastModifiedDate":"2024-03-21"},{"lineNumber":149,"author":{"gitId":"KhoonSun47"},"content":"     * when taking in a Seller.","lastModifiedDate":"2024-03-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"KhoonSun47"},"content":"    private void assertCommandFailureForExceptionFromStorageForSeller(IOException e, String expectedMessage) {","lastModifiedDate":"2024-03-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"KhoonSun47"},"content":"        String addSellerCommand \u003d AddSellerCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2024-03-21"},{"lineNumber":174,"author":{"gitId":"zengzihui"},"content":"                + EMAIL_DESC_AMY + HOUSING_TYPE_DESC_AMY","lastModifiedDate":"2024-03-21"},{"lineNumber":175,"author":{"gitId":"felixchanyy"},"content":"                + STREET_DESC_AMY + BLOCK_DESC_AMY + LEVEL_DESC_AMY + UNIT_NUMBER_DESC_AMY + POSTAL_CODE_DESC_AMY","lastModifiedDate":"2024-04-01"},{"lineNumber":176,"author":{"gitId":"felixchanyy"},"content":"                + PRICE_DESC_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":177,"author":{"gitId":"KhoonSun47"},"content":"        Seller expectedSeller \u003d new SellerBuilder(AMY_SELLER).withTags().build();","lastModifiedDate":"2024-04-01"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":179,"author":{"gitId":"KhoonSun47"},"content":"        expectedModel.addPerson(expectedSeller);","lastModifiedDate":"2024-04-01"},{"lineNumber":180,"author":{"gitId":"KhoonSun47"},"content":"        assertCommandFailure(addSellerCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"zengzihui":2,"KhoonSun47":18,"felixchanyy":3,"-":159}},{"path":"src/test/java/seedu/address/logic/commands/AddBuyerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.testutil.TypicalPersons.ALI_BUYER;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"zengzihui"},"content":"import seedu.address.testutil.BuyerBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"zengzihui"},"content":"public class AddBuyerCommandTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"zengzihui"},"content":"    public void constructor_nullBuyer_throwsNullPointerException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"zengzihui"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddBuyerCommand(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"zengzihui"},"content":"    public void execute_buyerAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"zengzihui"},"content":"        ModelStubAcceptingBuyerAdded modelStub \u003d new ModelStubAcceptingBuyerAdded();","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"zengzihui"},"content":"        Person validBuyer \u003d new BuyerBuilder().build();","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"zengzihui"},"content":"        CommandResult commandResult \u003d new AddBuyerCommand(validBuyer).execute(modelStub);","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"zengzihui"},"content":"        assertEquals(String.format(AddBuyerCommand.MESSAGE_SUCCESS, Messages.format(validBuyer)),","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"zengzihui"},"content":"        assertEquals(Arrays.asList(validBuyer), modelStub.buyersAdded);","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"    public void execute_duplicateBuyer_throwsCommandException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"zengzihui"},"content":"        Person validPerson \u003d new BuyerBuilder().build();","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"zengzihui"},"content":"        AddBuyerCommand addBuyerCommand \u003d new AddBuyerCommand(validPerson);","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"zengzihui"},"content":"        ModelStub modelStub \u003d new ModelStubWithBuyer(validPerson);","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"                AddBuyerCommand.MESSAGE_DUPLICATE_BUYER, () -\u003e addBuyerCommand.execute(modelStub));","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"zengzihui"},"content":"        Person ali \u003d new BuyerBuilder().withName(\"Ali\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"zengzihui"},"content":"        Person bob \u003d new BuyerBuilder().withName(\"Bob\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"zengzihui"},"content":"        AddBuyerCommand addAliceCommand \u003d new AddBuyerCommand(ali);","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"zengzihui"},"content":"        AddBuyerCommand addBobCommand \u003d new AddBuyerCommand(bob);","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"zengzihui"},"content":"        AddBuyerCommand addAliceCommandCopy \u003d new AddBuyerCommand(ali);","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"felixchanyy"},"content":"        AddBuyerCommand addBuyerCommand \u003d new AddBuyerCommand(ALI_BUYER);","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"felixchanyy"},"content":"        String expected \u003d AddBuyerCommand.class.getCanonicalName() + \"{buyerToAdd\u003d\" + ALI_BUYER + \"}\";","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"zengzihui"},"content":"        assertEquals(expected, addBuyerCommand.toString());","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2024-03-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2024-03-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2024-03-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2024-03-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2024-03-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2024-03-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2024-03-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2024-03-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2024-03-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2024-03-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2024-03-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":162,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2024-03-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":166,"author":{"gitId":"zengzihui"},"content":"    private class ModelStubWithBuyer extends ModelStub {","lastModifiedDate":"2024-03-21"},{"lineNumber":167,"author":{"gitId":"zengzihui"},"content":"        private final Person buyer;","lastModifiedDate":"2024-03-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":169,"author":{"gitId":"zengzihui"},"content":"        ModelStubWithBuyer(Person person) {","lastModifiedDate":"2024-03-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-03-21"},{"lineNumber":171,"author":{"gitId":"zengzihui"},"content":"            this.buyer \u003d person;","lastModifiedDate":"2024-03-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2024-03-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-03-21"},{"lineNumber":177,"author":{"gitId":"zengzihui"},"content":"            return this.buyer.isSamePerson(person);","lastModifiedDate":"2024-03-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":181,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":183,"author":{"gitId":"zengzihui"},"content":"     * A Model stub that always accept the buyer being added.","lastModifiedDate":"2024-03-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":185,"author":{"gitId":"zengzihui"},"content":"    private class ModelStubAcceptingBuyerAdded extends ModelStub {","lastModifiedDate":"2024-03-21"},{"lineNumber":186,"author":{"gitId":"zengzihui"},"content":"        final ArrayList\u003cPerson\u003e buyersAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2024-03-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-03-21"},{"lineNumber":191,"author":{"gitId":"zengzihui"},"content":"            return buyersAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2024-03-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2024-03-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-03-21"},{"lineNumber":197,"author":{"gitId":"zengzihui"},"content":"            buyersAdded.add(person);","lastModifiedDate":"2024-03-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2024-03-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2024-03-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"zengzihui":31,"felixchanyy":3,"KhoonSun47":3,"-":168}},{"path":"src/test/java/seedu/address/logic/commands/AddSellerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE_SELLER;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Seller;","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.testutil.SellerBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"class AddSellerCommandTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"    public void constructor_nullSeller_throwsNullPointerException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddSellerCommand(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"    //    Not sure where it went wrong, formatting got issue, but the values are correct","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"    //    org.opentest4j.AssertionFailedError:","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"    //    expected: \u003cNew seller added\u003d seedu.address.model.person.Seller{name\u003dAmy Bee, phone\u003d85355255,","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"    //    email\u003damy@gmail.com,","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"    //    housingType\u003dHDB, tags\u003d[]}\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"    //    but was: \u003cNew seller added\u003d Amy Bee; Phone\u003d 85355255; Email\u003d amy@gmail.com; Housing Type\u003d HDB; Tags\u003d \u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"    //    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"    //    public void execute_sellerAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"    //        ModelStubAcceptingSellerAdded modelStub \u003d new ModelStubAcceptingSellerAdded();","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"    //        Seller validSeller \u003d new SellerBuilder().build();","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"    //","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"    //        CommandResult commandResult \u003d new AddSellerCommand(validSeller).execute(modelStub);","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"    //","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"    //        assertEquals(String.format(AddSellerCommand.MESSAGE_SUCCESS, validSeller),","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"    //                commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"    //        assertEquals(Arrays.asList(validSeller), modelStub.sellersAdded);","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"    //    }","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"    public void execute_duplicateSeller_throwsCommandException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"        Seller validSeller \u003d new SellerBuilder().build();","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"        AddSellerCommand addSellerCommand \u003d new AddSellerCommand(validSeller);","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"        ModelStub modelStub \u003d new ModelStubWithSeller(validSeller);","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"                AddSellerCommand.MESSAGE_DUPLICATE_SELLER, () -\u003e addSellerCommand.execute(modelStub));","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"        Seller alice \u003d new SellerBuilder().withName(\"Alice\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"        Seller bob \u003d new SellerBuilder().withName(\"Bob\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"        AddSellerCommand addAliceCommand \u003d new AddSellerCommand(alice);","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"        AddSellerCommand addBobCommand \u003d new AddSellerCommand(bob);","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"KhoonSun47"},"content":"        AddSellerCommand addAliceCommandCopy \u003d new AddSellerCommand(alice);","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"KhoonSun47"},"content":"        AddSellerCommand addCommand \u003d new AddSellerCommand(ALICE_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"KhoonSun47"},"content":"        String expected \u003d AddSellerCommand.class.getCanonicalName() + \"{sellerToAdd\u003d\" + ALICE_SELLER + \"}\";","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"KhoonSun47"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2024-03-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"KhoonSun47"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2024-03-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"KhoonSun47"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2024-03-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"KhoonSun47"},"content":"     * A Model stub that contains a single seller.","lastModifiedDate":"2024-03-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"KhoonSun47"},"content":"    private class ModelStubWithSeller extends ModelStub {","lastModifiedDate":"2024-03-21"},{"lineNumber":172,"author":{"gitId":"KhoonSun47"},"content":"        private final Person seller;","lastModifiedDate":"2024-03-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":174,"author":{"gitId":"KhoonSun47"},"content":"        ModelStubWithSeller(Person seller) {","lastModifiedDate":"2024-03-27"},{"lineNumber":175,"author":{"gitId":"KhoonSun47"},"content":"            requireNonNull(seller);","lastModifiedDate":"2024-03-21"},{"lineNumber":176,"author":{"gitId":"KhoonSun47"},"content":"            this.seller \u003d seller;","lastModifiedDate":"2024-03-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"KhoonSun47"},"content":"        public boolean hasPerson(Person seller) {","lastModifiedDate":"2024-03-21"},{"lineNumber":181,"author":{"gitId":"KhoonSun47"},"content":"            requireNonNull(seller);","lastModifiedDate":"2024-03-21"},{"lineNumber":182,"author":{"gitId":"KhoonSun47"},"content":"            return this.seller.isSamePerson(seller);","lastModifiedDate":"2024-03-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"KhoonSun47"},"content":"     * A Model stub that always accept the seller being added.","lastModifiedDate":"2024-03-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"KhoonSun47"},"content":"    private class ModelStubAcceptingSellerAdded extends ModelStub {","lastModifiedDate":"2024-03-21"},{"lineNumber":190,"author":{"gitId":"KhoonSun47"},"content":"        final ArrayList\u003cPerson\u003e sellersAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"KhoonSun47"},"content":"        public boolean hasPerson(Person seller) {","lastModifiedDate":"2024-03-21"},{"lineNumber":194,"author":{"gitId":"KhoonSun47"},"content":"            requireNonNull(seller);","lastModifiedDate":"2024-03-21"},{"lineNumber":195,"author":{"gitId":"KhoonSun47"},"content":"            return sellersAdded.stream().anyMatch(seller::isSamePerson);","lastModifiedDate":"2024-03-27"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"KhoonSun47"},"content":"        public void addPerson(Person seller) {","lastModifiedDate":"2024-03-21"},{"lineNumber":199,"author":{"gitId":"KhoonSun47"},"content":"            requireNonNull(seller);","lastModifiedDate":"2024-03-21"},{"lineNumber":200,"author":{"gitId":"KhoonSun47"},"content":"            sellersAdded.add(seller);","lastModifiedDate":"2024-03-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"zengzihui":1,"KhoonSun47":57,"-":150}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BLOCK;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BUDGET;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOUSING_TYPE;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LEVEL;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSTALCODE;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STREET;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UNITNUMBER;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.testutil.EditBuyerDescriptorBuilder;","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"redcolorbicycle"},"content":"    public static final String VALID_NAME_KHOONSUN \u003d \"Yek KhoonSun\";","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"zengzihui"},"content":"    public static final String VALID_NAME_BEN \u003d \"Ben Ten\";","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"felixchanyy"},"content":"    public static final String VALID_PHONE_BEN \u003d \"33333333\";","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"redcolorbicycle"},"content":"    public static final String VALID_PHONE_KHOONSUN \u003d \"44444444\";","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"felixchanyy"},"content":"    public static final String VALID_EMAIL_BEN \u003d \"ben@example.com\";","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"redcolorbicycle"},"content":"    public static final String VALID_EMAIL_KHOONSUN \u003d \"khoonsun@example.com\";","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"redcolorbicycle"},"content":"    public static final String VALID_HOUSING_TYPE_AMY \u003d \"Hdb\";","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"zengzihui"},"content":"    public static final String VALID_HOUSING_TYPE_BOB \u003d \"Condominium\";","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"felixchanyy"},"content":"    public static final String VALID_HOUSING_TYPE_BEN \u003d \"Condominium\";","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"redcolorbicycle"},"content":"    public static final String VALID_HOUSING_TYPE_KHOONSUN \u003d \"Landed\";","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"felixchanyy"},"content":"    public static final String VALID_BUDGET_AMY \u003d \"999000\";","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"felixchanyy"},"content":"    public static final String VALID_BUDGET_BOB \u003d \"1000000\";","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"felixchanyy"},"content":"    public static final String VALID_BUDGET_BEN \u003d \"123000\";","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"    public static final String VALID_BLOCK_AMY \u003d \"99B\";","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"    public static final String VALID_BLOCK_BOB \u003d \"99A\";","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"    public static final String VALID_LEVEL_AMY \u003d \"10\";","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"    public static final String VALID_LEVEL_BOB \u003d \"11\";","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"    public static final String VALID_POSTAL_CODE_AMY \u003d \"654321\";","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"    public static final String VALID_POSTAL_CODE_BOB \u003d \"654321\";","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"    public static final String VALID_STREET_AMY \u003d \"Orchard Road\";","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"    public static final String VALID_STREET_BOB \u003d \"Toa Payoh Road\";","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"    public static final String VALID_UNIT_NUMBER_AMY \u003d \"38\";","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"    public static final String VALID_UNIT_NUMBER_BOB \u003d \"38\";","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"felixchanyy"},"content":"    public static final String VALID_PRICE_AMY \u003d \"3000000\";","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"felixchanyy"},"content":"    public static final String VALID_PRICE_BOB \u003d \"4000000\";","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"zengzihui"},"content":"    public static final String HOUSING_TYPE_DESC_AMY \u003d \" \" + PREFIX_HOUSING_TYPE + VALID_HOUSING_TYPE_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"zengzihui"},"content":"    public static final String HOUSING_TYPE_DESC_BOB \u003d \" \" + PREFIX_HOUSING_TYPE + VALID_HOUSING_TYPE_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"KhoonSun47"},"content":"    public static final String BLOCK_DESC_AMY \u003d \" \" + PREFIX_BLOCK + VALID_BLOCK_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"KhoonSun47"},"content":"    public static final String BLOCK_DESC_BOB \u003d \" \" + PREFIX_BLOCK + VALID_BLOCK_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"KhoonSun47"},"content":"    public static final String LEVEL_DESC_AMY \u003d \" \" + PREFIX_LEVEL + VALID_LEVEL_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"KhoonSun47"},"content":"    public static final String LEVEL_DESC_BOB \u003d \" \" + PREFIX_LEVEL + VALID_LEVEL_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"KhoonSun47"},"content":"    public static final String POSTAL_CODE_DESC_AMY \u003d \" \" + PREFIX_POSTALCODE + VALID_POSTAL_CODE_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"KhoonSun47"},"content":"    public static final String POSTAL_CODE_DESC_BOB \u003d \" \" + PREFIX_POSTALCODE + VALID_POSTAL_CODE_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"KhoonSun47"},"content":"    public static final String STREET_DESC_AMY \u003d \" \" + PREFIX_STREET + VALID_STREET_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"KhoonSun47"},"content":"    public static final String STREET_DESC_BOB \u003d \" \" + PREFIX_STREET + VALID_STREET_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"KhoonSun47"},"content":"    public static final String UNIT_NUMBER_DESC_AMY \u003d \" \" + PREFIX_UNITNUMBER + VALID_UNIT_NUMBER_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"KhoonSun47"},"content":"    public static final String UNIT_NUMBER_DESC_BOB \u003d \" \" + PREFIX_UNITNUMBER + VALID_UNIT_NUMBER_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"felixchanyy"},"content":"    public static final String PRICE_DESC_AMY \u003d \" \" + PREFIX_PRICE + VALID_PRICE_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":94,"author":{"gitId":"felixchanyy"},"content":"    public static final String PRICE_DESC_BOB \u003d \" \" + PREFIX_PRICE + VALID_PRICE_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":99,"author":{"gitId":"zengzihui"},"content":"    public static final String INVALID_HOUSING_TYPE_DESC \u003d \" \" + PREFIX_HOUSING_TYPE;","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"felixchanyy"},"content":"    public static final String INVALID_BUDGET_DESC \u003d \" \" + PREFIX_BUDGET; // \"\" not allowed in budget","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"felixchanyy"},"content":"    public static final String INVALID_PRICE_DESC \u003d \" \" + PREFIX_PRICE; // \"\" not allowed in price","lastModifiedDate":"2024-04-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":110,"author":{"gitId":"lokidoki102"},"content":"    public static final EditBuyerCommand.EditBuyerDescriptor DESC_BUYER_AMY;","lastModifiedDate":"2024-03-28"},{"lineNumber":111,"author":{"gitId":"lokidoki102"},"content":"    public static final EditBuyerCommand.EditBuyerDescriptor DESC_BUYER_BOB;","lastModifiedDate":"2024-03-28"},{"lineNumber":112,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":113,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":116,"author":{"gitId":"zengzihui"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withHousingType(VALID_HOUSING_TYPE_AMY)","lastModifiedDate":"2024-03-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":119,"author":{"gitId":"lokidoki102"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withHousingType(VALID_HOUSING_TYPE_BOB)","lastModifiedDate":"2024-03-28"},{"lineNumber":120,"author":{"gitId":"lokidoki102"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-03-28"},{"lineNumber":121,"author":{"gitId":"lokidoki102"},"content":"        DESC_BUYER_AMY \u003d new EditBuyerDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2024-03-28"},{"lineNumber":122,"author":{"gitId":"lokidoki102"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withHousingType(VALID_HOUSING_TYPE_AMY)","lastModifiedDate":"2024-03-28"},{"lineNumber":123,"author":{"gitId":"lokidoki102"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-03-28"},{"lineNumber":124,"author":{"gitId":"lokidoki102"},"content":"        DESC_BUYER_BOB \u003d new EditBuyerDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2024-03-28"},{"lineNumber":125,"author":{"gitId":"zengzihui"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withHousingType(VALID_HOUSING_TYPE_BOB)","lastModifiedDate":"2024-03-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"redcolorbicycle":8,"zengzihui":8,"KhoonSun47":25,"felixchanyy":14,"-":119,"lokidoki102":11}},{"path":"src/test/java/seedu/address/logic/commands/EditBuyerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BUYER_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BUYER_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.logic.commands.EditBuyerCommand.EditBuyerDescriptor;","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.person.Buyer;","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.testutil.BuyerBuilder;","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.testutil.EditBuyerDescriptorBuilder;","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditBuyerCommand.","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"public class EditBuyerCommandTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"    private final Index indexLastBuyer \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"    private final Index indexSecondLastBuyer \u003d Index.fromOneBased(model.getFilteredPersonList().size() - 1);","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"        Buyer editedBuyer \u003d new BuyerBuilder().build();","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerDescriptor descriptor \u003d new EditBuyerDescriptorBuilder(editedBuyer).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerCommand editBuyerCommand \u003d new EditBuyerCommand(indexLastBuyer, descriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"        String expectedMessage \u003d String.format(EditBuyerCommand.MESSAGE_EDIT_BUYER_SUCCESS,","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"                Messages.format(editedBuyer));","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(indexLastBuyer.getZeroBased()), editedBuyer);","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"        assertCommandSuccess(editBuyerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"lokidoki102"},"content":"    public void execute_notBuyerType_failure() {","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"lokidoki102"},"content":"        Buyer editedBuyer \u003d new BuyerBuilder().build();","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerDescriptor descriptor \u003d new EditBuyerDescriptorBuilder(editedBuyer).build();","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerCommand editBuyerCommand \u003d new EditBuyerCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"lokidoki102"},"content":"        String expectedMessage \u003d String.format(EditBuyerCommand.MESSAGE_WRONG_TYPE,","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"lokidoki102"},"content":"                Messages.format(editedBuyer));","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"lokidoki102"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"lokidoki102"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(indexLastBuyer.getZeroBased()), editedBuyer);","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"lokidoki102"},"content":"        assertCommandFailure(editBuyerCommand, model, expectedMessage);","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"lokidoki102"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"lokidoki102"},"content":"        Index indexLastBuyer \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"lokidoki102"},"content":"        // In this dummy model, buyers are guaranteed to be at the end of the list.","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"lokidoki102"},"content":"        Buyer lastBuyer \u003d (Buyer) model.getFilteredPersonList().get(indexLastBuyer.getZeroBased());","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"lokidoki102"},"content":"        BuyerBuilder buyerInList \u003d new BuyerBuilder(lastBuyer);","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"lokidoki102"},"content":"        Buyer editedBuyer \u003d buyerInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"lokidoki102"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerDescriptor descriptor \u003d new EditBuyerDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"lokidoki102"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerCommand editBuyerCommand \u003d new EditBuyerCommand(indexLastBuyer, descriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"lokidoki102"},"content":"        String expectedMessage \u003d String.format(EditBuyerCommand.MESSAGE_EDIT_BUYER_SUCCESS,","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"lokidoki102"},"content":"                Messages.format(editedBuyer));","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"lokidoki102"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"lokidoki102"},"content":"        expectedModel.setPerson(lastBuyer, editedBuyer);","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"lokidoki102"},"content":"        assertCommandSuccess(editBuyerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"lokidoki102"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerCommand editBuyerCommand \u003d new EditBuyerCommand(indexLastBuyer, new EditBuyerDescriptor());","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"lokidoki102"},"content":"        Buyer editedBuyer \u003d (Buyer) model.getFilteredPersonList().get(indexLastBuyer.getZeroBased());","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"lokidoki102"},"content":"        String expectedMessage \u003d String.format(EditBuyerCommand.MESSAGE_EDIT_BUYER_SUCCESS,","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"lokidoki102"},"content":"                Messages.format(editedBuyer));","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"lokidoki102"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"lokidoki102"},"content":"        assertCommandSuccess(editBuyerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"lokidoki102"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"lokidoki102"},"content":"        showPersonAtIndex(model, indexLastBuyer);","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"lokidoki102"},"content":"        Buyer buyerInFilteredList \u003d (Buyer) model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"lokidoki102"},"content":"        Buyer editedBuyer \u003d new BuyerBuilder(buyerInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerCommand editBuyerCommand \u003d new EditBuyerCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"lokidoki102"},"content":"                new EditBuyerDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2024-03-29"},{"lineNumber":113,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"lokidoki102"},"content":"        String expectedMessage \u003d String.format(EditBuyerCommand.MESSAGE_EDIT_BUYER_SUCCESS,","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"lokidoki102"},"content":"                Messages.format(editedBuyer));","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"lokidoki102"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"lokidoki102"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedBuyer);","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":120,"author":{"gitId":"lokidoki102"},"content":"        assertCommandSuccess(editBuyerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-29"},{"lineNumber":121,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":122,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":123,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":124,"author":{"gitId":"lokidoki102"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2024-03-29"},{"lineNumber":125,"author":{"gitId":"lokidoki102"},"content":"        Buyer lastBuyer \u003d (Buyer) model.getFilteredPersonList().get(indexLastBuyer.getZeroBased());","lastModifiedDate":"2024-03-29"},{"lineNumber":126,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerDescriptor descriptor \u003d new EditBuyerDescriptorBuilder(lastBuyer).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":127,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerCommand editBuyerCommand \u003d new EditBuyerCommand(indexSecondLastBuyer, descriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":128,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":129,"author":{"gitId":"lokidoki102"},"content":"        assertCommandFailure(editBuyerCommand, model, EditBuyerCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-29"},{"lineNumber":130,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":131,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":132,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":133,"author":{"gitId":"lokidoki102"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2024-03-29"},{"lineNumber":134,"author":{"gitId":"lokidoki102"},"content":"        showPersonAtIndex(model, indexLastBuyer);","lastModifiedDate":"2024-03-29"},{"lineNumber":135,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":136,"author":{"gitId":"lokidoki102"},"content":"        // edit buyer in filtered list into a duplicate in address book","lastModifiedDate":"2024-03-29"},{"lineNumber":137,"author":{"gitId":"lokidoki102"},"content":"        Buyer buyerInList \u003d (Buyer) model.getAddressBook().getPersonList().get(indexSecondLastBuyer.getZeroBased());","lastModifiedDate":"2024-03-29"},{"lineNumber":138,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerCommand editBuyerCommand \u003d new EditBuyerCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-29"},{"lineNumber":139,"author":{"gitId":"lokidoki102"},"content":"                new EditBuyerDescriptorBuilder(buyerInList).build());","lastModifiedDate":"2024-03-29"},{"lineNumber":140,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":141,"author":{"gitId":"lokidoki102"},"content":"        assertCommandFailure(editBuyerCommand, model, EditBuyerCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-29"},{"lineNumber":142,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":143,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":144,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":145,"author":{"gitId":"lokidoki102"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2024-03-29"},{"lineNumber":146,"author":{"gitId":"lokidoki102"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-03-29"},{"lineNumber":147,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerDescriptor descriptor \u003d new EditBuyerDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":148,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerCommand editBuyerCommand \u003d new EditBuyerCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":149,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":150,"author":{"gitId":"lokidoki102"},"content":"        assertCommandFailure(editBuyerCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-29"},{"lineNumber":151,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":152,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":153,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":154,"author":{"gitId":"lokidoki102"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2024-03-29"},{"lineNumber":155,"author":{"gitId":"lokidoki102"},"content":"     * but smaller than size of address book","lastModifiedDate":"2024-03-29"},{"lineNumber":156,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":157,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":158,"author":{"gitId":"lokidoki102"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2024-03-29"},{"lineNumber":159,"author":{"gitId":"lokidoki102"},"content":"        showPersonAtIndex(model, indexLastBuyer);","lastModifiedDate":"2024-03-29"},{"lineNumber":160,"author":{"gitId":"lokidoki102"},"content":"        Index outOfBoundIndex \u003d indexSecondLastBuyer;","lastModifiedDate":"2024-03-29"},{"lineNumber":161,"author":{"gitId":"lokidoki102"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-03-29"},{"lineNumber":162,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-03-29"},{"lineNumber":163,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":164,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerCommand editBuyerCommand \u003d new EditBuyerCommand(outOfBoundIndex,","lastModifiedDate":"2024-03-29"},{"lineNumber":165,"author":{"gitId":"lokidoki102"},"content":"                new EditBuyerDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2024-03-29"},{"lineNumber":166,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":167,"author":{"gitId":"lokidoki102"},"content":"        assertCommandFailure(editBuyerCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-29"},{"lineNumber":168,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":169,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":170,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":171,"author":{"gitId":"lokidoki102"},"content":"    public void equals() {","lastModifiedDate":"2024-03-29"},{"lineNumber":172,"author":{"gitId":"lokidoki102"},"content":"        final EditBuyerCommand standardCommand \u003d new EditBuyerCommand(indexLastBuyer, DESC_BUYER_AMY);","lastModifiedDate":"2024-03-29"},{"lineNumber":173,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":174,"author":{"gitId":"lokidoki102"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-29"},{"lineNumber":175,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerDescriptor copyDescriptor \u003d new EditBuyerDescriptor(DESC_BUYER_AMY);","lastModifiedDate":"2024-03-29"},{"lineNumber":176,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerCommand commandWithSameValues \u003d new EditBuyerCommand(indexLastBuyer, copyDescriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":177,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2024-03-29"},{"lineNumber":178,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":179,"author":{"gitId":"lokidoki102"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-29"},{"lineNumber":180,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2024-03-29"},{"lineNumber":181,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":182,"author":{"gitId":"lokidoki102"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-29"},{"lineNumber":183,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2024-03-29"},{"lineNumber":184,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":185,"author":{"gitId":"lokidoki102"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-29"},{"lineNumber":186,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2024-03-29"},{"lineNumber":187,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":188,"author":{"gitId":"lokidoki102"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2024-03-29"},{"lineNumber":189,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(standardCommand.equals(new EditBuyerCommand(indexSecondLastBuyer, DESC_BUYER_AMY)));","lastModifiedDate":"2024-03-29"},{"lineNumber":190,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":191,"author":{"gitId":"lokidoki102"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2024-03-29"},{"lineNumber":192,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(standardCommand.equals(new EditBuyerCommand(indexLastBuyer, DESC_BUYER_BOB)));","lastModifiedDate":"2024-03-29"},{"lineNumber":193,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":194,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":195,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":196,"author":{"gitId":"lokidoki102"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-29"},{"lineNumber":197,"author":{"gitId":"lokidoki102"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-29"},{"lineNumber":198,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerDescriptor editBuyerDescriptor \u003d new EditBuyerDescriptor();","lastModifiedDate":"2024-03-29"},{"lineNumber":199,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerCommand editBuyerCommand \u003d new EditBuyerCommand(index, editBuyerDescriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":200,"author":{"gitId":"lokidoki102"},"content":"        String expected \u003d EditBuyerCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editBuyerDescriptor\u003d\"","lastModifiedDate":"2024-03-29"},{"lineNumber":201,"author":{"gitId":"lokidoki102"},"content":"                + editBuyerDescriptor + \"}\";","lastModifiedDate":"2024-03-29"},{"lineNumber":202,"author":{"gitId":"lokidoki102"},"content":"        assertEquals(expected, editBuyerCommand.toString());","lastModifiedDate":"2024-03-29"},{"lineNumber":203,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":204,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":205,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"lokidoki102":205}},{"path":"src/test/java/seedu/address/logic/commands/EditBuyerDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BUYER_AMY;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BUYER_BOB;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HOUSING_TYPE_BOB;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.logic.commands.EditBuyerCommand.EditBuyerDescriptor;","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.testutil.EditBuyerDescriptorBuilder;","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"public class EditBuyerDescriptorTest {","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"    public void equals() {","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerDescriptor descriptorWithSameValues \u003d new EditBuyerDescriptor(DESC_BUYER_AMY);","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(DESC_BUYER_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(DESC_BUYER_AMY.equals(DESC_BUYER_AMY));","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(DESC_BUYER_AMY.equals(null));","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(DESC_BUYER_AMY.equals(5));","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(DESC_BUYER_AMY.equals(DESC_BUYER_BOB));","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerDescriptor editedAmy \u003d new EditBuyerDescriptorBuilder(DESC_BUYER_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(DESC_BUYER_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"        editedAmy \u003d new EditBuyerDescriptorBuilder(DESC_BUYER_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(DESC_BUYER_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"        editedAmy \u003d new EditBuyerDescriptorBuilder(DESC_BUYER_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(DESC_BUYER_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"        editedAmy \u003d new EditBuyerDescriptorBuilder(DESC_BUYER_AMY).withHousingType(VALID_HOUSING_TYPE_BOB).build();","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(DESC_BUYER_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"lokidoki102"},"content":"        editedAmy \u003d new EditBuyerDescriptorBuilder(DESC_BUYER_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(DESC_BUYER_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"lokidoki102"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerDescriptor editBuyerDescriptor \u003d new EditBuyerDescriptor();","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"lokidoki102"},"content":"        String expected \u003d EditBuyerDescriptor.class.getCanonicalName()","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"lokidoki102"},"content":"                + \"{name\u003d\" + editBuyerDescriptor.getName().orElse(null)","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"lokidoki102"},"content":"                + \", phone\u003d\" + editBuyerDescriptor.getPhone().orElse(null)","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"lokidoki102"},"content":"                + \", email\u003d\" + editBuyerDescriptor.getEmail().orElse(null)","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"lokidoki102"},"content":"                + \", housingType\u003d\" + editBuyerDescriptor.getHousingType().orElse(null)","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"lokidoki102"},"content":"                + \", budget\u003d\" + editBuyerDescriptor.getBudget().orElse(null)","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"lokidoki102"},"content":"                + \", tags\u003d\" + editBuyerDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"lokidoki102"},"content":"        assertEquals(expected, editBuyerDescriptor.toString());","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"lokidoki102":72}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"// This whole test has been commented out because edit is not working properly yet, will only","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"// do in the next iterations","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"//import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"//import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"//import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"//import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"///**","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"// * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"// */","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"//public class EditCommandTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"//    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"//    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"//    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"//        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"//        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"//        Messages.format(editedPerson));","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"//        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"//        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"//        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"//    }","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"//    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"//    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"//        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"//        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"//        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"//        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"//                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"//                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"//        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"//        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"//        Messages.format(editedPerson));","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"KhoonSun47"},"content":"//        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"KhoonSun47"},"content":"//        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"KhoonSun47"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"KhoonSun47"},"content":"//        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"KhoonSun47"},"content":"//    }","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"KhoonSun47"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"KhoonSun47"},"content":"//    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"KhoonSun47"},"content":"//    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"KhoonSun47"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"KhoonSun47"},"content":"//        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"KhoonSun47"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"KhoonSun47"},"content":"//        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"KhoonSun47"},"content":"//        Messages.format(editedPerson));","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"KhoonSun47"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"KhoonSun47"},"content":"//        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"KhoonSun47"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"KhoonSun47"},"content":"//        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"KhoonSun47"},"content":"//    }","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"KhoonSun47"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"KhoonSun47"},"content":"//    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"KhoonSun47"},"content":"//    public void execute_filteredList_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"KhoonSun47"},"content":"//        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"KhoonSun47"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"KhoonSun47"},"content":"//        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"KhoonSun47"},"content":"//        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"KhoonSun47"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"KhoonSun47"},"content":"//                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"KhoonSun47"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"KhoonSun47"},"content":"//        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"KhoonSun47"},"content":"//        Messages.format(editedPerson));","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"KhoonSun47"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"KhoonSun47"},"content":"//        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"KhoonSun47"},"content":"//        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"KhoonSun47"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"KhoonSun47"},"content":"//        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"KhoonSun47"},"content":"//    }","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"KhoonSun47"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":108,"author":{"gitId":"KhoonSun47"},"content":"//    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"KhoonSun47"},"content":"//    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"KhoonSun47"},"content":"//        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"KhoonSun47"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":112,"author":{"gitId":"KhoonSun47"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":113,"author":{"gitId":"KhoonSun47"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":114,"author":{"gitId":"KhoonSun47"},"content":"//        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"KhoonSun47"},"content":"//    }","lastModifiedDate":"2024-03-21"},{"lineNumber":116,"author":{"gitId":"KhoonSun47"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":117,"author":{"gitId":"KhoonSun47"},"content":"//    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":118,"author":{"gitId":"KhoonSun47"},"content":"//    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2024-03-21"},{"lineNumber":119,"author":{"gitId":"KhoonSun47"},"content":"//        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"KhoonSun47"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":121,"author":{"gitId":"KhoonSun47"},"content":"//        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2024-03-21"},{"lineNumber":122,"author":{"gitId":"KhoonSun47"},"content":"//        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2024-03-21"},{"lineNumber":123,"author":{"gitId":"KhoonSun47"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-21"},{"lineNumber":124,"author":{"gitId":"KhoonSun47"},"content":"//                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2024-03-21"},{"lineNumber":125,"author":{"gitId":"KhoonSun47"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":126,"author":{"gitId":"KhoonSun47"},"content":"//        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-21"},{"lineNumber":127,"author":{"gitId":"KhoonSun47"},"content":"//    }","lastModifiedDate":"2024-03-21"},{"lineNumber":128,"author":{"gitId":"KhoonSun47"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":129,"author":{"gitId":"KhoonSun47"},"content":"//    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":130,"author":{"gitId":"KhoonSun47"},"content":"//    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2024-03-21"},{"lineNumber":131,"author":{"gitId":"KhoonSun47"},"content":"//        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-03-21"},{"lineNumber":132,"author":{"gitId":"KhoonSun47"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":133,"author":{"gitId":"KhoonSun47"},"content":"//        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":134,"author":{"gitId":"KhoonSun47"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":135,"author":{"gitId":"KhoonSun47"},"content":"//        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-21"},{"lineNumber":136,"author":{"gitId":"KhoonSun47"},"content":"//    }","lastModifiedDate":"2024-03-21"},{"lineNumber":137,"author":{"gitId":"KhoonSun47"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":138,"author":{"gitId":"KhoonSun47"},"content":"//    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":139,"author":{"gitId":"KhoonSun47"},"content":"//     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2024-03-21"},{"lineNumber":140,"author":{"gitId":"KhoonSun47"},"content":"//     * but smaller than size of address book","lastModifiedDate":"2024-03-21"},{"lineNumber":141,"author":{"gitId":"KhoonSun47"},"content":"//     */","lastModifiedDate":"2024-03-21"},{"lineNumber":142,"author":{"gitId":"KhoonSun47"},"content":"//    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":143,"author":{"gitId":"KhoonSun47"},"content":"//    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2024-03-21"},{"lineNumber":144,"author":{"gitId":"KhoonSun47"},"content":"//        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-21"},{"lineNumber":145,"author":{"gitId":"KhoonSun47"},"content":"//        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-21"},{"lineNumber":146,"author":{"gitId":"KhoonSun47"},"content":"//        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-03-21"},{"lineNumber":147,"author":{"gitId":"KhoonSun47"},"content":"//        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-03-21"},{"lineNumber":148,"author":{"gitId":"KhoonSun47"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":149,"author":{"gitId":"KhoonSun47"},"content":"//        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2024-03-21"},{"lineNumber":150,"author":{"gitId":"KhoonSun47"},"content":"//                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2024-03-21"},{"lineNumber":151,"author":{"gitId":"KhoonSun47"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":152,"author":{"gitId":"KhoonSun47"},"content":"//        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-21"},{"lineNumber":153,"author":{"gitId":"KhoonSun47"},"content":"//    }","lastModifiedDate":"2024-03-21"},{"lineNumber":154,"author":{"gitId":"KhoonSun47"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":155,"author":{"gitId":"KhoonSun47"},"content":"//    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":156,"author":{"gitId":"KhoonSun47"},"content":"//    public void equals() {","lastModifiedDate":"2024-03-21"},{"lineNumber":157,"author":{"gitId":"KhoonSun47"},"content":"//        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2024-03-21"},{"lineNumber":158,"author":{"gitId":"KhoonSun47"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":159,"author":{"gitId":"KhoonSun47"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":160,"author":{"gitId":"KhoonSun47"},"content":"//        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2024-03-21"},{"lineNumber":161,"author":{"gitId":"KhoonSun47"},"content":"//        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":162,"author":{"gitId":"KhoonSun47"},"content":"//        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2024-03-21"},{"lineNumber":163,"author":{"gitId":"KhoonSun47"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":164,"author":{"gitId":"KhoonSun47"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":165,"author":{"gitId":"KhoonSun47"},"content":"//        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2024-03-21"},{"lineNumber":166,"author":{"gitId":"KhoonSun47"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":167,"author":{"gitId":"KhoonSun47"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":168,"author":{"gitId":"KhoonSun47"},"content":"//        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":169,"author":{"gitId":"KhoonSun47"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":170,"author":{"gitId":"KhoonSun47"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":171,"author":{"gitId":"KhoonSun47"},"content":"//        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2024-03-21"},{"lineNumber":172,"author":{"gitId":"KhoonSun47"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":173,"author":{"gitId":"KhoonSun47"},"content":"//        // different index -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":174,"author":{"gitId":"KhoonSun47"},"content":"//        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2024-03-21"},{"lineNumber":175,"author":{"gitId":"KhoonSun47"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":176,"author":{"gitId":"KhoonSun47"},"content":"//        // different descriptor -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":177,"author":{"gitId":"KhoonSun47"},"content":"//        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2024-03-21"},{"lineNumber":178,"author":{"gitId":"KhoonSun47"},"content":"//    }","lastModifiedDate":"2024-03-21"},{"lineNumber":179,"author":{"gitId":"KhoonSun47"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":180,"author":{"gitId":"KhoonSun47"},"content":"//    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":181,"author":{"gitId":"KhoonSun47"},"content":"//    public void toStringMethod() {","lastModifiedDate":"2024-03-21"},{"lineNumber":182,"author":{"gitId":"KhoonSun47"},"content":"//        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-21"},{"lineNumber":183,"author":{"gitId":"KhoonSun47"},"content":"//        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2024-03-21"},{"lineNumber":184,"author":{"gitId":"KhoonSun47"},"content":"//        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":185,"author":{"gitId":"KhoonSun47"},"content":"//        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2024-03-21"},{"lineNumber":186,"author":{"gitId":"KhoonSun47"},"content":"//                + editPersonDescriptor + \"}\";","lastModifiedDate":"2024-03-21"},{"lineNumber":187,"author":{"gitId":"KhoonSun47"},"content":"//        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2024-03-21"},{"lineNumber":188,"author":{"gitId":"KhoonSun47"},"content":"//    }","lastModifiedDate":"2024-03-21"},{"lineNumber":189,"author":{"gitId":"KhoonSun47"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":190,"author":{"gitId":"KhoonSun47"},"content":"//}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"KhoonSun47":190}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HOUSING_TYPE_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"zengzihui"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withHousingType(VALID_HOUSING_TYPE_BOB).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"redcolorbicycle"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", housingType\u003d\"","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"redcolorbicycle"},"content":"                + editPersonDescriptor.getHousingType().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"redcolorbicycle":2,"zengzihui":2,"-":67}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.TypicalPersons.CARL_SELLER;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE_SELLER;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA_SELLER;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"KhoonSun47"},"content":"        assertEquals(Arrays.asList(CARL_SELLER, ELLE_SELLER, FIONA_SELLER), model.getFilteredPersonList());","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"KhoonSun47":4,"-":87}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.logic.commands.AddBuyerCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.logic.commands.EditBuyerCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.logic.commands.EditBuyerCommand.EditBuyerDescriptor;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.person.Buyer;","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.testutil.BuyerBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.testutil.EditBuyerDescriptorBuilder;","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.testutil.SellerBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"    public void parseCommand_addBuyer() throws Exception {","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"felixchanyy"},"content":"        Buyer buyer \u003d new BuyerBuilder().build();","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"        AddBuyerCommand command \u003d (AddBuyerCommand) parser.parseCommand(PersonUtil.getAddBuyerCommand(buyer));","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"        assertEquals(new AddBuyerCommand(buyer), command);","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"        Person person \u003d new SellerBuilder().build();","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"lokidoki102"},"content":"    public void parseCommand_editBuyer() throws Exception {","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"lokidoki102"},"content":"        Buyer buyer \u003d new BuyerBuilder().build();","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerDescriptor descriptor \u003d new EditBuyerDescriptorBuilder(buyer).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerCommand command \u003d (EditBuyerCommand) parser.parseCommand(EditBuyerCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"lokidoki102"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditBuyerDescriptorDetails(descriptor));","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"lokidoki102"},"content":"        assertEquals(new EditBuyerCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"KhoonSun47":7,"felixchanyy":1,"-":94,"lokidoki102":13}},{"path":"src/test/java/seedu/address/logic/parser/EditBuyerCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.HOUSING_TYPE_DESC_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.HOUSING_TYPE_DESC_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_HOUSING_TYPE_DESC;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HOUSING_TYPE_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOUSING_TYPE;","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.logic.commands.EditBuyerCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.logic.commands.EditBuyerCommand.EditBuyerDescriptor;","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.house.House;","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.testutil.EditBuyerDescriptorBuilder;","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"public class EditBuyerCommandParserTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditBuyerCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"    private EditBuyerCommandParser parser \u003d new EditBuyerCommandParser();","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"lokidoki102"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"lokidoki102"},"content":"        // no index specified","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"lokidoki102"},"content":"        // no field specified","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"lokidoki102"},"content":"        assertParseFailure(parser, \"1\", EditBuyerCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"lokidoki102"},"content":"        // no index and no field specified","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"lokidoki102"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"lokidoki102"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"lokidoki102"},"content":"        // negative index","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"lokidoki102"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"lokidoki102"},"content":"        // zero index","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"lokidoki102"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"lokidoki102"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"lokidoki102"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"lokidoki102"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"lokidoki102"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"lokidoki102"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"lokidoki102"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"lokidoki102"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"lokidoki102"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"lokidoki102"},"content":"        assertParseFailure(parser, \"1\" + INVALID_HOUSING_TYPE_DESC, House.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"lokidoki102"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"lokidoki102"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"lokidoki102"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"lokidoki102"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"lokidoki102"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"lokidoki102"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"lokidoki102"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"lokidoki102"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"lokidoki102"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"lokidoki102"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_HOUSING_TYPE_AMY","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"lokidoki102"},"content":"                        + VALID_PHONE_AMY,","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"lokidoki102"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"lokidoki102"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"lokidoki102"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"lokidoki102"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"lokidoki102"},"content":"                + EMAIL_DESC_AMY + HOUSING_TYPE_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerDescriptor descriptor \u003d new EditBuyerDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2024-03-29"},{"lineNumber":113,"author":{"gitId":"lokidoki102"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withHousingType(VALID_HOUSING_TYPE_AMY)","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"lokidoki102"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerCommand expectedCommand \u003d new EditBuyerCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"lokidoki102"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":120,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":121,"author":{"gitId":"lokidoki102"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":122,"author":{"gitId":"lokidoki102"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-29"},{"lineNumber":123,"author":{"gitId":"lokidoki102"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":124,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":125,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerDescriptor descriptor \u003d new EditBuyerDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-29"},{"lineNumber":126,"author":{"gitId":"lokidoki102"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":127,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerCommand expectedCommand \u003d new EditBuyerCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":128,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":129,"author":{"gitId":"lokidoki102"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":130,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":131,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":132,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":133,"author":{"gitId":"lokidoki102"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":134,"author":{"gitId":"lokidoki102"},"content":"        // name","lastModifiedDate":"2024-03-29"},{"lineNumber":135,"author":{"gitId":"lokidoki102"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2024-03-29"},{"lineNumber":136,"author":{"gitId":"lokidoki102"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":137,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerDescriptor descriptor \u003d new EditBuyerDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":138,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerCommand expectedCommand \u003d new EditBuyerCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":139,"author":{"gitId":"lokidoki102"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":140,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":141,"author":{"gitId":"lokidoki102"},"content":"        // phone","lastModifiedDate":"2024-03-29"},{"lineNumber":142,"author":{"gitId":"lokidoki102"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":143,"author":{"gitId":"lokidoki102"},"content":"        descriptor \u003d new EditBuyerDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":144,"author":{"gitId":"lokidoki102"},"content":"        expectedCommand \u003d new EditBuyerCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":145,"author":{"gitId":"lokidoki102"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":146,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":147,"author":{"gitId":"lokidoki102"},"content":"        // email","lastModifiedDate":"2024-03-29"},{"lineNumber":148,"author":{"gitId":"lokidoki102"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":149,"author":{"gitId":"lokidoki102"},"content":"        descriptor \u003d new EditBuyerDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":150,"author":{"gitId":"lokidoki102"},"content":"        expectedCommand \u003d new EditBuyerCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":151,"author":{"gitId":"lokidoki102"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":152,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":153,"author":{"gitId":"lokidoki102"},"content":"        // housingType","lastModifiedDate":"2024-03-29"},{"lineNumber":154,"author":{"gitId":"lokidoki102"},"content":"        userInput \u003d targetIndex.getOneBased() + HOUSING_TYPE_DESC_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":155,"author":{"gitId":"lokidoki102"},"content":"        descriptor \u003d new EditBuyerDescriptorBuilder().withHousingType(VALID_HOUSING_TYPE_AMY).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":156,"author":{"gitId":"lokidoki102"},"content":"        expectedCommand \u003d new EditBuyerCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":157,"author":{"gitId":"lokidoki102"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":158,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":159,"author":{"gitId":"lokidoki102"},"content":"        // tags","lastModifiedDate":"2024-03-29"},{"lineNumber":160,"author":{"gitId":"lokidoki102"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-29"},{"lineNumber":161,"author":{"gitId":"lokidoki102"},"content":"        descriptor \u003d new EditBuyerDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":162,"author":{"gitId":"lokidoki102"},"content":"        expectedCommand \u003d new EditBuyerCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":163,"author":{"gitId":"lokidoki102"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":164,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":165,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":166,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":167,"author":{"gitId":"lokidoki102"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2024-03-29"},{"lineNumber":168,"author":{"gitId":"lokidoki102"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2024-03-29"},{"lineNumber":169,"author":{"gitId":"lokidoki102"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2024-03-29"},{"lineNumber":170,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":171,"author":{"gitId":"lokidoki102"},"content":"        // valid followed by invalid","lastModifiedDate":"2024-03-29"},{"lineNumber":172,"author":{"gitId":"lokidoki102"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-29"},{"lineNumber":173,"author":{"gitId":"lokidoki102"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":174,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":175,"author":{"gitId":"lokidoki102"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-29"},{"lineNumber":176,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":177,"author":{"gitId":"lokidoki102"},"content":"        // invalid followed by valid","lastModifiedDate":"2024-03-29"},{"lineNumber":178,"author":{"gitId":"lokidoki102"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-29"},{"lineNumber":179,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":180,"author":{"gitId":"lokidoki102"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-29"},{"lineNumber":181,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":182,"author":{"gitId":"lokidoki102"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2024-03-29"},{"lineNumber":183,"author":{"gitId":"lokidoki102"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + HOUSING_TYPE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-03-29"},{"lineNumber":184,"author":{"gitId":"lokidoki102"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + HOUSING_TYPE_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2024-03-29"},{"lineNumber":185,"author":{"gitId":"lokidoki102"},"content":"                + PHONE_DESC_BOB + HOUSING_TYPE_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2024-03-29"},{"lineNumber":186,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":187,"author":{"gitId":"lokidoki102"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2024-03-29"},{"lineNumber":188,"author":{"gitId":"lokidoki102"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_HOUSING_TYPE));","lastModifiedDate":"2024-03-29"},{"lineNumber":189,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":190,"author":{"gitId":"lokidoki102"},"content":"        // multiple invalid values","lastModifiedDate":"2024-03-29"},{"lineNumber":191,"author":{"gitId":"lokidoki102"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_HOUSING_TYPE_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2024-03-29"},{"lineNumber":192,"author":{"gitId":"lokidoki102"},"content":"                + INVALID_PHONE_DESC + INVALID_HOUSING_TYPE_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-29"},{"lineNumber":193,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":194,"author":{"gitId":"lokidoki102"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2024-03-29"},{"lineNumber":195,"author":{"gitId":"lokidoki102"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_HOUSING_TYPE));","lastModifiedDate":"2024-03-29"},{"lineNumber":196,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":197,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":198,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":199,"author":{"gitId":"lokidoki102"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":200,"author":{"gitId":"lokidoki102"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2024-03-29"},{"lineNumber":201,"author":{"gitId":"lokidoki102"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2024-03-29"},{"lineNumber":202,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":203,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerDescriptor descriptor \u003d new EditBuyerDescriptorBuilder().withTags().build();","lastModifiedDate":"2024-03-29"},{"lineNumber":204,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerCommand expectedCommand \u003d new EditBuyerCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":205,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":206,"author":{"gitId":"lokidoki102"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":207,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":208,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"lokidoki102":208}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.logic.commands.CommandTestUtil.HOUSING_TYPE_DESC_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.logic.commands.CommandTestUtil.HOUSING_TYPE_DESC_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_HOUSING_TYPE_DESC;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HOUSING_TYPE_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOUSING_TYPE;","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.House;","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"zengzihui"},"content":"        assertParseFailure(parser, \"1\" + INVALID_HOUSING_TYPE_DESC, House.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"zengzihui"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_HOUSING_TYPE_AMY","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"redcolorbicycle"},"content":"                        + VALID_PHONE_AMY,","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":111,"author":{"gitId":"zengzihui"},"content":"                + EMAIL_DESC_AMY + HOUSING_TYPE_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"zengzihui"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withHousingType(VALID_HOUSING_TYPE_AMY)","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"redcolorbicycle"},"content":"        // supposed to be housingtype, commented out","lastModifiedDate":"2024-03-19"},{"lineNumber":155,"author":{"gitId":"redcolorbicycle"},"content":"        //userInput \u003d targetIndex.getOneBased() + HOUSINGTYPE_DESC_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":156,"author":{"gitId":"redcolorbicycle"},"content":"        //descriptor \u003d new EditPersonDescriptorBuilder().withHousingType(VALID_HOUSINGTYPE_AMY).build();","lastModifiedDate":"2024-03-19"},{"lineNumber":157,"author":{"gitId":"redcolorbicycle"},"content":"        //expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-19"},{"lineNumber":158,"author":{"gitId":"redcolorbicycle"},"content":"        //assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":184,"author":{"gitId":"zengzihui"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + HOUSING_TYPE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-03-21"},{"lineNumber":185,"author":{"gitId":"zengzihui"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + HOUSING_TYPE_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2024-03-21"},{"lineNumber":186,"author":{"gitId":"zengzihui"},"content":"                + PHONE_DESC_BOB + HOUSING_TYPE_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2024-03-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":189,"author":{"gitId":"zengzihui"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_HOUSING_TYPE));","lastModifiedDate":"2024-03-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":192,"author":{"gitId":"zengzihui"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_HOUSING_TYPE_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2024-03-21"},{"lineNumber":193,"author":{"gitId":"zengzihui"},"content":"                + INVALID_PHONE_DESC + INVALID_HOUSING_TYPE_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":196,"author":{"gitId":"zengzihui"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_HOUSING_TYPE));","lastModifiedDate":"2024-03-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"redcolorbicycle":7,"zengzihui":16,"-":186}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.house.Block;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.house.Level;","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.PostalCode;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.house.Street;","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.house.UnitNumber;","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"    private static final String INVALID_STREET \u003d \"t3$t!ng\";","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"    private static final String INVALID_LEVEL \u003d \"aa\";","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"    private static final String INVALID_UNIT_NUMBER \u003d \"1234\";","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"    private static final String INVALID_BLOCK \u003d \"12a34\";","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"    private static final String INVALID_POSTAL_CODE \u003d \"5678990\";","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"    private static final String VALID_POSTAL_CODE \u003d \"654321\";","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"    private static final String VALID_STREET \u003d \"292A East Coast Rd\";","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"    private static final String VALID_LEVEL \u003d \"10\";","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"    private static final String VALID_UNIT_NUMBER \u003d \"123\";","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"    private static final String VALID_BLOCK \u003d \"205A\";","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":145,"author":{"gitId":"KhoonSun47"},"content":"    public void parsePostalCode_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":146,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePostalCode((String) null));","lastModifiedDate":"2024-03-12"},{"lineNumber":147,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":148,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":149,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":150,"author":{"gitId":"KhoonSun47"},"content":"    public void parsePostalCode_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":151,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePostalCode(INVALID_POSTAL_CODE));","lastModifiedDate":"2024-03-21"},{"lineNumber":152,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":153,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":154,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":155,"author":{"gitId":"KhoonSun47"},"content":"    public void parsePostalCode_validValueWithoutWhitespace_returnsPostalCode() throws Exception {","lastModifiedDate":"2024-03-12"},{"lineNumber":156,"author":{"gitId":"KhoonSun47"},"content":"        PostalCode expectedPostalCode \u003d new PostalCode(VALID_POSTAL_CODE);","lastModifiedDate":"2024-03-21"},{"lineNumber":157,"author":{"gitId":"KhoonSun47"},"content":"        assertEquals(expectedPostalCode, ParserUtil.parsePostalCode(VALID_POSTAL_CODE));","lastModifiedDate":"2024-03-21"},{"lineNumber":158,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":159,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":160,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":161,"author":{"gitId":"KhoonSun47"},"content":"    public void parsePostalCode_validValueWithWhitespace_returnsTrimmedPostalCode() throws Exception {","lastModifiedDate":"2024-03-15"},{"lineNumber":162,"author":{"gitId":"KhoonSun47"},"content":"        String postalCodeWithWhitespace \u003d WHITESPACE + VALID_POSTAL_CODE + WHITESPACE;","lastModifiedDate":"2024-03-21"},{"lineNumber":163,"author":{"gitId":"KhoonSun47"},"content":"        PostalCode expectedPostalCode \u003d new PostalCode(VALID_POSTAL_CODE);","lastModifiedDate":"2024-03-21"},{"lineNumber":164,"author":{"gitId":"KhoonSun47"},"content":"        assertEquals(expectedPostalCode, ParserUtil.parsePostalCode(postalCodeWithWhitespace));","lastModifiedDate":"2024-03-15"},{"lineNumber":165,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":166,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":212,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":213,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":214,"author":{"gitId":"lokidoki102"},"content":"    public void parseStreet_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":215,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseStreet((String) null));","lastModifiedDate":"2024-03-14"},{"lineNumber":216,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":217,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":218,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":219,"author":{"gitId":"lokidoki102"},"content":"    public void parseStreet_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":220,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseStreet(INVALID_STREET));","lastModifiedDate":"2024-03-14"},{"lineNumber":221,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":222,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":223,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":224,"author":{"gitId":"lokidoki102"},"content":"    public void parseStreet_validValueWithoutWhitespace_returnsStreet() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":225,"author":{"gitId":"lokidoki102"},"content":"        Street expectedStreet \u003d new Street(VALID_STREET);","lastModifiedDate":"2024-03-14"},{"lineNumber":226,"author":{"gitId":"lokidoki102"},"content":"        assertEquals(expectedStreet, ParserUtil.parseStreet(VALID_STREET));","lastModifiedDate":"2024-03-14"},{"lineNumber":227,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":228,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":229,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":230,"author":{"gitId":"lokidoki102"},"content":"    public void parseStreet_validValueWithWhitespace_returnsTrimmedStreet() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":231,"author":{"gitId":"lokidoki102"},"content":"        String streetWithWhitespace \u003d WHITESPACE + VALID_STREET + WHITESPACE;","lastModifiedDate":"2024-03-14"},{"lineNumber":232,"author":{"gitId":"lokidoki102"},"content":"        Street expectedStreet \u003d new Street(VALID_STREET);","lastModifiedDate":"2024-03-14"},{"lineNumber":233,"author":{"gitId":"lokidoki102"},"content":"        assertEquals(expectedStreet, ParserUtil.parseStreet(streetWithWhitespace));","lastModifiedDate":"2024-03-14"},{"lineNumber":234,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":235,"author":{"gitId":"lokidoki102"},"content":"    public void parseLevel_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":236,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseLevel((String) null));","lastModifiedDate":"2024-03-14"},{"lineNumber":237,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":238,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":239,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":240,"author":{"gitId":"lokidoki102"},"content":"    public void parseLevel_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":241,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseLevel(INVALID_LEVEL));","lastModifiedDate":"2024-03-14"},{"lineNumber":242,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":243,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":244,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":245,"author":{"gitId":"lokidoki102"},"content":"    public void parseLevel_validValueWithoutWhitespace_returnsLevel() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":246,"author":{"gitId":"lokidoki102"},"content":"        Level expectedLevel \u003d new Level(VALID_LEVEL);","lastModifiedDate":"2024-03-14"},{"lineNumber":247,"author":{"gitId":"lokidoki102"},"content":"        assertEquals(expectedLevel, ParserUtil.parseLevel(VALID_LEVEL));","lastModifiedDate":"2024-03-14"},{"lineNumber":248,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":249,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":250,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":251,"author":{"gitId":"lokidoki102"},"content":"    public void parseLevel_validValueWithWhitespace_returnsTrimmedLevel() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":252,"author":{"gitId":"lokidoki102"},"content":"        String levelWithWhitespace \u003d WHITESPACE + VALID_LEVEL + WHITESPACE;","lastModifiedDate":"2024-03-14"},{"lineNumber":253,"author":{"gitId":"lokidoki102"},"content":"        Level expectedLevel \u003d new Level(VALID_LEVEL);","lastModifiedDate":"2024-03-14"},{"lineNumber":254,"author":{"gitId":"lokidoki102"},"content":"        assertEquals(expectedLevel, ParserUtil.parseLevel(levelWithWhitespace));","lastModifiedDate":"2024-03-14"},{"lineNumber":255,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":256,"author":{"gitId":"KhoonSun47"},"content":"    public void parseUnitNumber_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":257,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseUnitNumber((String) null));","lastModifiedDate":"2024-03-14"},{"lineNumber":258,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":259,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":260,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":261,"author":{"gitId":"KhoonSun47"},"content":"    public void parseUnitNumber_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":262,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseUnitNumber(INVALID_UNIT_NUMBER));","lastModifiedDate":"2024-03-14"},{"lineNumber":263,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":264,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":265,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":266,"author":{"gitId":"KhoonSun47"},"content":"    public void parseUnitNumber_validValueWithoutWhitespace_returnsUnitNumber() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":267,"author":{"gitId":"KhoonSun47"},"content":"        UnitNumber expectedUnitNumber \u003d new UnitNumber(VALID_UNIT_NUMBER);","lastModifiedDate":"2024-03-14"},{"lineNumber":268,"author":{"gitId":"KhoonSun47"},"content":"        assertEquals(expectedUnitNumber, ParserUtil.parseUnitNumber(VALID_UNIT_NUMBER));","lastModifiedDate":"2024-03-14"},{"lineNumber":269,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":270,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":271,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":272,"author":{"gitId":"KhoonSun47"},"content":"    public void parseUnitNumber_validValueWithWhitespace_returnsTrimmedUnitNumber() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":273,"author":{"gitId":"KhoonSun47"},"content":"        String unitNumberWithWhitespace \u003d WHITESPACE + VALID_UNIT_NUMBER + WHITESPACE;","lastModifiedDate":"2024-03-14"},{"lineNumber":274,"author":{"gitId":"KhoonSun47"},"content":"        UnitNumber expectedUnitNumber \u003d new UnitNumber(VALID_UNIT_NUMBER);","lastModifiedDate":"2024-03-14"},{"lineNumber":275,"author":{"gitId":"KhoonSun47"},"content":"        assertEquals(expectedUnitNumber, ParserUtil.parseUnitNumber(unitNumberWithWhitespace));","lastModifiedDate":"2024-03-14"},{"lineNumber":276,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":277,"author":{"gitId":"lokidoki102"},"content":"    public void parseBlock_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":278,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseBlock((String) null));","lastModifiedDate":"2024-03-14"},{"lineNumber":279,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":280,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":281,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":282,"author":{"gitId":"lokidoki102"},"content":"    public void parseBlock_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":283,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseBlock(INVALID_BLOCK));","lastModifiedDate":"2024-03-14"},{"lineNumber":284,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":285,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":286,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":287,"author":{"gitId":"lokidoki102"},"content":"    public void parseBlock_validValueWithoutWhitespace_returnsBlock() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":288,"author":{"gitId":"lokidoki102"},"content":"        Block expectedBlock \u003d new Block(VALID_BLOCK);","lastModifiedDate":"2024-03-14"},{"lineNumber":289,"author":{"gitId":"lokidoki102"},"content":"        assertEquals(expectedBlock, ParserUtil.parseBlock(VALID_BLOCK));","lastModifiedDate":"2024-03-14"},{"lineNumber":290,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":291,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":292,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":293,"author":{"gitId":"lokidoki102"},"content":"    public void parseBlock_validValueWithWhitespace_returnsTrimmedBlock() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":294,"author":{"gitId":"lokidoki102"},"content":"        String blockWithWhitespace \u003d WHITESPACE + VALID_BLOCK + WHITESPACE;","lastModifiedDate":"2024-03-14"},{"lineNumber":295,"author":{"gitId":"lokidoki102"},"content":"        Block expectedBlock \u003d new Block(VALID_BLOCK);","lastModifiedDate":"2024-03-14"},{"lineNumber":296,"author":{"gitId":"lokidoki102"},"content":"        assertEquals(expectedBlock, ParserUtil.parseBlock(blockWithWhitespace));","lastModifiedDate":"2024-03-14"},{"lineNumber":297,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"felixchanyy":3,"KhoonSun47":49,"-":174,"lokidoki102":72}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE_SELLER;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.testutil.SellerBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"zengzihui"},"content":"        // TODO: add buyer","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"        Person editedAlice \u003d new SellerBuilder(ALICE_SELLER)","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"                .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE_SELLER, editedAlice);","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(addressBook.hasPerson(ALICE_SELLER));","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"        addressBook.addPerson(ALICE_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(addressBook.hasPerson(ALICE_SELLER));","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"zengzihui"},"content":"        // TODO: add buyer","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"KhoonSun47"},"content":"        addressBook.addPerson(ALICE_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"KhoonSun47"},"content":"        Person editedAlice \u003d new SellerBuilder(ALICE_SELLER)","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"KhoonSun47"},"content":"                .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"zengzihui":2,"KhoonSun47":11,"-":98}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE_SELLER;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON_SELLER;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(modelManager.hasPerson(ALICE_SELLER));","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"KhoonSun47"},"content":"        modelManager.addPerson(ALICE_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(modelManager.hasPerson(ALICE_SELLER));","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"KhoonSun47"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE_SELLER).withPerson(BENSON_SELLER).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"KhoonSun47"},"content":"        String[] keywords \u003d ALICE_SELLER.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"KhoonSun47":7,"-":124}},{"path":"src/test/java/seedu/address/model/house/BlockTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"public class BlockTest {","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Block(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"    public void constructor_invalidBlock_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"        String invalidBlock \u003d \"\";","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Block(invalidBlock));","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"    public void isValidBlock() {","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"        // null block number","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(NullPointerException.class, () -\u003e Block.isValidBlock(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"        // invalid block numbers","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Block.isValidBlock(\"0\")); // 1 zero only","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Block.isValidBlock(\"00\")); // 2 zeroes only","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Block.isValidBlock(\"000\")); // 3 zeroes only","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Block.isValidBlock(\"0A\")); // 1 zero + alphabet","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Block.isValidBlock(\"00A\")); // 2 zeroes + alphabet","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Block.isValidBlock(\"000A\")); // 3 zeroes + alphabet","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Block.isValidBlock(\"\")); // empty string","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Block.isValidBlock(\" \")); // spaces only","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Block.isValidBlock(\"A\")); // letter only","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Block.isValidBlock(\"blocknumber\")); // non-numeric","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Block.isValidBlock(\"10A9\")); // alphabet within digits","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Block.isValidBlock(\"A109\")); // alphabet at the start","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Block.isValidBlock(\"14 1\")); // spaces within digits","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Block.isValidBlock(\"9999\")); // more than 3 digits","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"        // valid phone numbers","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(Block.isValidBlock(\"777\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(Block.isValidBlock(\"777A\")); // block number with alphabet at the end","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(Block.isValidBlock(\"1A\")); // short block number with alphabet at the end","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(Block.isValidBlock(\"1\")); // short block number","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"    public void equals() {","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"        Block block \u003d new Block(\"234A\");","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(block.equals(new Block(\"234A\")));","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"lokidoki102"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(block.equals(block));","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"lokidoki102"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(block.equals(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"lokidoki102"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(block.equals(5.0f));","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"lokidoki102"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(block.equals(new Block(\"995\")));","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"lokidoki102":69}},{"path":"src/test/java/seedu/address/model/house/LevelTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"public class LevelTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Level(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"    public void constructor_invalidLevel_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"        String invalidLevel \u003d \"\";","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Level(invalidLevel));","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"    public void isValidLevel() {","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"        // null level","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(NullPointerException.class, () -\u003e Level.isValidLevel(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"        // blank levels","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Level.isValidLevel(\"\")); // empty string","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Level.isValidLevel(\" \")); // spaces only","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"        // invalid levels","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Level.isValidLevel(\"0\")); // 1 zero only","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Level.isValidLevel(\"00\")); // 2 zeroes only","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Level.isValidLevel(\"a\")); // non-digit only","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Level.isValidLevel(\"aa\")); // non-digit only","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Level.isValidLevel(\"###\")); // non-digit only","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Level.isValidLevel(\"!@#\")); // non-digit only","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Level.isValidLevel(\"a1\")); // digit + non-digit","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Level.isValidLevel(\"1a\")); // non-digit + digit","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Level.isValidLevel(\"111\")); // number of digits \u003e 2","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Level.isValidLevel(\"44aa\")); // number of digits \u003e\u003d 2 with letters","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Level.isValidLevel(\"44aaaaa\")); // number of digits \u003e\u003d 2 with letters","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"        // valid levels","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(Level.isValidLevel(\"1\")); // one digit","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(Level.isValidLevel(\"11\")); // two digits","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(Level.isValidLevel(\"01\")); // two digits","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"    public void equals() {","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"        Level level \u003d new Level(\"99\");","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(level.equals(new Level(\"99\")));","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"lokidoki102"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(level.equals(level));","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"lokidoki102"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(level.equals(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"lokidoki102"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(level.equals(5.0f));","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"lokidoki102"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(level.equals(new Level(\"11\")));","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"lokidoki102":69}},{"path":"src/test/java/seedu/address/model/house/PostalCodeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"public class PostalCodeTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(NullPointerException.class, () -\u003e new PostalCode(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"    public void constructor_invalidPostalCode_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"        String invalidPostalCode \u003d \"12345\"; // Not 6 digits","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new PostalCode(invalidPostalCode));","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"    public void isValidPostalCode() {","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"        // null postal code","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(NullPointerException.class, () -\u003e PostalCode.isValidPostalCode(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"        // invalid postal codes","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(PostalCode.isValidPostalCode(\"\")); // empty string","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(PostalCode.isValidPostalCode(\" \")); // spaces only","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(PostalCode.isValidPostalCode(\"12345\")); // less than 6 numbers","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(PostalCode.isValidPostalCode(\"postal\")); // non-numeric","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(PostalCode.isValidPostalCode(\"1234p6\")); // alphabets within digits","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(PostalCode.isValidPostalCode(\"123 456\")); // spaces within digits","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"        // valid postal codes","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(PostalCode.isValidPostalCode(\"123456\")); // exactly 6 numbers","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"    public void equals() {","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"        PostalCode postalCode \u003d new PostalCode(\"654321\");","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(postalCode.equals(new PostalCode(\"654321\")));","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(postalCode.equals(postalCode));","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(postalCode.equals(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(postalCode.equals(5.0f));","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(postalCode.equals(new PostalCode(\"123456\")));","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"KhoonSun47":58}},{"path":"src/test/java/seedu/address/model/house/StreetTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"public class StreetTest {","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Street(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"    public void constructor_invalidBlock_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"        String invalidStreet \u003d \"\";","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Street(invalidStreet));","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"    public void isValidStreet() {","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"        // null street","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(NullPointerException.class, () -\u003e Street.isValidStreet(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"        // invalid street","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Street.isValidStreet(\"\")); // empty string","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Street.isValidStreet(\" \")); // spaces only","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Street.isValidStreet(\"-\")); // hyphen only","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Street.isValidStreet(\"@!^\u0026*%\u0026^\")); // non-alphanumeric","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Street.isValidStreet(\"qwe!@#ert$%\")); // non-alphanumeric + alphabets","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Street.isValidStreet(\"!@#123\")); // non-alphanumeric + numbers","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Street.isValidStreet(\"t3$t!ng\")); // non-alphanumeric + alphanumerics","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"        // valid street","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(Street.isValidStreet(\"292A East Coast Rd\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(Street.isValidStreet(\"350 Orchard Rd Sshaw House 13-01\")); // with dash","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(Street.isValidStreet(\"46 PANDAN LOOP BLK 3 PANDAN LIGHT IND PARK\")); // all caps","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"    public void equals() {","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"        Street street \u003d new Street(\"15 Kaki Bukit View 01-00\");","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(street.equals(new Street(\"15 Kaki Bukit View 01-00\")));","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(street.equals(street));","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(street.equals(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(street.equals(5.0f));","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"lokidoki102"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(street.equals(new Street(\"3 Sungei Kadut Street 6 Sungei Kadut Industrial Estate\")));","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"lokidoki102":60}},{"path":"src/test/java/seedu/address/model/house/UnitNumberTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"public class UnitNumberTest {","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(NullPointerException.class, () -\u003e new UnitNumber(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"    public void constructor_invalidUnitNumber_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"        String invalidUnitNumber \u003d \"abcd\";","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new UnitNumber(invalidUnitNumber));","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"    public void isValidUnitNumber() {","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"        // null unit number","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(NullPointerException.class, () -\u003e UnitNumber.isValidUnitNumber(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"        // invalid unit numbers","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(UnitNumber.isValidUnitNumber(\"0\")); // \u00270\u0027 is invalid","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(UnitNumber.isValidUnitNumber(\"00\")); // \u002700\u0027 is invalid","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(UnitNumber.isValidUnitNumber(\"000\")); // \u0027000\u0027 is invalid","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(UnitNumber.isValidUnitNumber(\"\")); // empty string","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(UnitNumber.isValidUnitNumber(\" \")); // spaces only","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(UnitNumber.isValidUnitNumber(\"1234\")); // more than 3 digits","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(UnitNumber.isValidUnitNumber(\"ab\")); // non-numeric","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(UnitNumber.isValidUnitNumber(\"1a2\")); // alphabets within digits","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"        // valid unit numbers","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(UnitNumber.isValidUnitNumber(\"1\")); // minimum valid number","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(UnitNumber.isValidUnitNumber(\"01\")); // leading 0 is allowed","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(UnitNumber.isValidUnitNumber(\"10\")); // 2 digits","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(UnitNumber.isValidUnitNumber(\"001\")); // 3 digits","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(UnitNumber.isValidUnitNumber(\"999\")); // maximum valid number","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"    public void equals() {","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"        UnitNumber unitNumber \u003d new UnitNumber(\"12\");","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(unitNumber.equals(new UnitNumber(\"12\")));","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(unitNumber.equals(unitNumber));","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(unitNumber.equals(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(unitNumber.equals(5.0f));","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"        // different unit number -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(unitNumber.equals(new UnitNumber(\"34\")));","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"KhoonSun47":64}},{"path":"src/test/java/seedu/address/model/person/BuyerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"zengzihui"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"zengzihui"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"zengzihui"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"zengzihui"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HOUSING_TYPE_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BEN;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.testutil.TypicalPersons.ALI_BUYER;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.testutil.TypicalPersons.BEN_BUYER;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"zengzihui"},"content":"import seedu.address.testutil.BuyerBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"felixchanyy"},"content":"public class BuyerTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"zengzihui"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"zengzihui"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"        Buyer buyer \u003d new BuyerBuilder().build();","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"zengzihui"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e buyer.getTags().remove(0));","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"zengzihui"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"zengzihui"},"content":"    public void isSamePerson() {","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"zengzihui"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"felixchanyy"},"content":"        assertTrue(ALI_BUYER.isSamePerson(ALI_BUYER));","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"zengzihui"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"felixchanyy"},"content":"        assertFalse(ALI_BUYER.isSamePerson(null));","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"zengzihui"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"felixchanyy"},"content":"        Person editedAli \u003d new BuyerBuilder(ALI_BUYER).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"zengzihui"},"content":"                .withHousingType(VALID_HOUSING_TYPE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"felixchanyy"},"content":"        assertTrue(ALI_BUYER.isSamePerson(editedAli));","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"zengzihui"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"felixchanyy"},"content":"        editedAli \u003d new BuyerBuilder(ALI_BUYER).withName(VALID_NAME_BEN).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"felixchanyy"},"content":"        assertFalse(ALI_BUYER.isSamePerson(editedAli));","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"zengzihui"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"felixchanyy"},"content":"        Person editedBen \u003d new BuyerBuilder(BEN_BUYER).withName(VALID_NAME_BEN.toLowerCase()).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"felixchanyy"},"content":"        assertFalse(BEN_BUYER.isSamePerson(editedBen));","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"zengzihui"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"zengzihui"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BEN + \" \";","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"felixchanyy"},"content":"        editedBen \u003d new BuyerBuilder(BEN_BUYER).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"felixchanyy"},"content":"        assertFalse(BEN_BUYER.isSamePerson(editedBen));","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"felixchanyy"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"felixchanyy"},"content":"    public void equals() {","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"felixchanyy"},"content":"        Person buyerAliCopy \u003d new BuyerBuilder(ALI_BUYER).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"felixchanyy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"felixchanyy"},"content":"        assertTrue(ALI_BUYER.equals(buyerAliCopy));","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"zengzihui"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"felixchanyy"},"content":"        assertTrue(ALI_BUYER.equals(ALI_BUYER));","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"felixchanyy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"felixchanyy"},"content":"        assertFalse(ALI_BUYER.equals(null));","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"felixchanyy"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"felixchanyy"},"content":"        assertFalse(ALI_BUYER.equals(5));","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"felixchanyy"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"felixchanyy"},"content":"        assertFalse(ALI_BUYER.equals(BOB));","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"zengzihui"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"felixchanyy"},"content":"        Person editedAli \u003d new BuyerBuilder(ALI_BUYER).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"felixchanyy"},"content":"        assertFalse(ALI_BUYER.equals(editedAli));","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"zengzihui"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"felixchanyy"},"content":"        editedAli \u003d new BuyerBuilder(ALI_BUYER).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"felixchanyy"},"content":"        assertFalse(ALI_BUYER.equals(editedAli));","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"zengzihui"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"felixchanyy"},"content":"        editedAli \u003d new BuyerBuilder(ALI_BUYER).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"felixchanyy"},"content":"        assertFalse(ALI_BUYER.equals(editedAli));","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"zengzihui"},"content":"        // different housingtype -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"felixchanyy"},"content":"        editedAli \u003d new BuyerBuilder(ALI_BUYER).withHousingType(VALID_HOUSING_TYPE_BOB).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"felixchanyy"},"content":"        assertFalse(ALI_BUYER.equals(editedAli));","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"zengzihui"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"felixchanyy"},"content":"        editedAli \u003d new BuyerBuilder(ALI_BUYER).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"felixchanyy"},"content":"        assertFalse(ALI_BUYER.equals(editedAli));","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"zengzihui"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"zengzihui"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"felixchanyy"},"content":"        String expected \u003d Buyer.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"felixchanyy"},"content":"                + ALI_BUYER.getName() + \", phone\u003d\" + ALI_BUYER.getPhone()","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"KhoonSun47"},"content":"                + \", email\u003d\" + ALI_BUYER.getEmail() + \", housingType\u003d\" + ALI_BUYER.getPreferredHousingType()","lastModifiedDate":"2024-04-01"},{"lineNumber":102,"author":{"gitId":"felixchanyy"},"content":"                + \", budget\u003d\" + ALI_BUYER.getBudget()","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"felixchanyy"},"content":"                + \", tags\u003d\" + ALI_BUYER.getTags() + \"}\";","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"felixchanyy"},"content":"        assertEquals(expected, ALI_BUYER.toString());","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"felixchanyy"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"zengzihui":53,"felixchanyy":51,"KhoonSun47":2}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.testutil.SellerBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(predicate.test(new SellerBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(predicate.test(new SellerBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(predicate.test(new SellerBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(predicate.test(new SellerBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(predicate.test(new SellerBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(predicate.test(new SellerBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(predicate.test(new SellerBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"KhoonSun47"},"content":"                .withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2024-04-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"KhoonSun47":9,"-":76}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HOUSING_TYPE_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"zengzihui"},"content":"                .withHousingType(VALID_HOUSING_TYPE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"KhoonSun47"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", tags\u003d\" + ALICE.getTags() + \"}\";","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"zengzihui":2,"KhoonSun47":1,"-":92}},{"path":"src/test/java/seedu/address/model/person/SellerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"felixchanyy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_KHOONSUN;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.TypicalHouses.HOUSE2;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.TypicalHouses.HOUSE3;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE_SELLER;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.TypicalPersons.BOB_SELLER;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.testutil.TypicalPersons.KHOONSUN_SELLER;","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"felixchanyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.House;","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.testutil.SellerBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"felixchanyy"},"content":"public class SellerTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"        Seller seller \u003d new SellerBuilder().build();","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e seller.getTags().remove(0));","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"    public void isSameSeller() {","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(ALICE_SELLER.isSamePerson(ALICE_SELLER));","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(ALICE_SELLER.isSamePerson(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"        Person editedAlice \u003d new SellerBuilder(ALICE_SELLER).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(ALICE_SELLER.isSamePerson(editedAlice));","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"        editedAlice \u003d new SellerBuilder(ALICE_SELLER).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(ALICE_SELLER.isSamePerson(editedAlice));","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"        Person editedBob \u003d new SellerBuilder(BOB_SELLER).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(BOB_SELLER.isSamePerson(editedBob));","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"redcolorbicycle"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_KHOONSUN + \" \";","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"redcolorbicycle"},"content":"        editedBob \u003d new SellerBuilder(KHOONSUN_SELLER).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"redcolorbicycle"},"content":"        assertFalse(KHOONSUN_SELLER.isSamePerson(editedBob));","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"felixchanyy"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"felixchanyy"},"content":"    public void equals() {","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"        // Initialize with houses for ALICE and BOB","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"        ArrayList\u003cHouse\u003e aliceHouses \u003d new ArrayList\u003c\u003e(Arrays.asList(HOUSE3));","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"        ArrayList\u003cHouse\u003e bobHouses \u003d new ArrayList\u003c\u003e(Arrays.asList(HOUSE2));","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"        // Create new Seller instances with houses","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"        Seller sellerAlice \u003d new Seller(ALICE_SELLER.getName(), ALICE_SELLER.getPhone(), ALICE_SELLER.getEmail(),","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"                aliceHouses, ALICE_SELLER.getTags());","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"        Seller sellerBob \u003d new Seller(BOB_SELLER.getName(), BOB_SELLER.getPhone(), BOB_SELLER.getEmail(),","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"KhoonSun47"},"content":"                bobHouses, BOB_SELLER.getTags());","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"felixchanyy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"felixchanyy"},"content":"        assertTrue(sellerAlice.equals(sellerAlice));","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"felixchanyy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"felixchanyy"},"content":"        assertFalse(sellerAlice.equals(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"felixchanyy"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"felixchanyy"},"content":"        assertFalse(sellerAlice.equals(5));","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"KhoonSun47"},"content":"        // different seller -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"felixchanyy"},"content":"        assertFalse(sellerAlice.equals(sellerBob));","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"KhoonSun47"},"content":"        // Same details, different houses -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"KhoonSun47"},"content":"        Seller sellerAliceCloneWithDifferentHouses \u003d new Seller(ALICE_SELLER.getName(), ALICE_SELLER.getPhone(),","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"KhoonSun47"},"content":"                ALICE_SELLER.getEmail(), bobHouses, ALICE_SELLER.getTags());","lastModifiedDate":"2024-04-01"},{"lineNumber":88,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(sellerAlice.getHouses().get(0).toString()","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"KhoonSun47"},"content":"                .equals(sellerAliceCloneWithDifferentHouses.getHouses().get(0).toString()));","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"KhoonSun47"},"content":"        // Same details, same houses -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"KhoonSun47"},"content":"        Seller sellerAliceClone \u003d new Seller(ALICE_SELLER.getName(), ALICE_SELLER.getPhone(), ALICE_SELLER.getEmail(),","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"KhoonSun47"},"content":"                aliceHouses, ALICE_SELLER.getTags());","lastModifiedDate":"2024-04-01"},{"lineNumber":94,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(sellerAlice.getHouses().get(0).toString().equals(sellerAliceClone.getHouses().get(0).toString()));","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"KhoonSun47"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"KhoonSun47"},"content":"        String expected \u003d Seller.class.getCanonicalName()","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"KhoonSun47"},"content":"                + \"{name\u003d\" + ALICE_SELLER.getName() + \", phone\u003d\" + ALICE_SELLER.getPhone()","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"KhoonSun47"},"content":"                + \", email\u003d\" + ALICE_SELLER.getEmail()","lastModifiedDate":"2024-04-01"},{"lineNumber":102,"author":{"gitId":"KhoonSun47"},"content":"                + \", tags\u003d\" + ALICE_SELLER.getTags() + \"}\";","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"KhoonSun47"},"content":"        assertEquals(expected, ALICE_SELLER.toString());","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"felixchanyy"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"redcolorbicycle":6,"felixchanyy":24,"KhoonSun47":75}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE_SELLER;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.TypicalPersons.BOB_SELLER;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.testutil.SellerBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(uniquePersonList.contains(ALICE_SELLER));","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"        uniquePersonList.add(ALICE_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(uniquePersonList.contains(ALICE_SELLER));","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"zengzihui"},"content":"        // TODO: For v1.3, add in Buyer","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"        uniquePersonList.add(ALICE_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"        Person editedAlice \u003d new SellerBuilder(ALICE_SELLER).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"        uniquePersonList.add(ALICE_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE_SELLER));","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE_SELLER));","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE_SELLER, null));","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE_SELLER, ALICE_SELLER));","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"KhoonSun47"},"content":"        uniquePersonList.add(ALICE_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"KhoonSun47"},"content":"        uniquePersonList.setPerson(ALICE_SELLER, ALICE_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"KhoonSun47"},"content":"        expectedUniquePersonList.add(ALICE_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"zengzihui"},"content":"        // TODO: do for buyer as well","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"KhoonSun47"},"content":"        uniquePersonList.add(ALICE_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"KhoonSun47"},"content":"        Person editedAlice \u003d new SellerBuilder(ALICE_SELLER).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"KhoonSun47"},"content":"        uniquePersonList.setPerson(ALICE_SELLER, editedAlice);","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"KhoonSun47"},"content":"        uniquePersonList.add(ALICE_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"KhoonSun47"},"content":"        uniquePersonList.setPerson(ALICE_SELLER, BOB_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"KhoonSun47"},"content":"        expectedUniquePersonList.add(BOB_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"KhoonSun47"},"content":"        uniquePersonList.add(ALICE_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"KhoonSun47"},"content":"        uniquePersonList.add(BOB_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE_SELLER, BOB_SELLER));","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE_SELLER));","lastModifiedDate":"2024-03-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"KhoonSun47"},"content":"        uniquePersonList.add(ALICE_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":126,"author":{"gitId":"KhoonSun47"},"content":"        uniquePersonList.remove(ALICE_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"KhoonSun47"},"content":"        uniquePersonList.add(ALICE_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"KhoonSun47"},"content":"        expectedUniquePersonList.add(BOB_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"KhoonSun47"},"content":"        uniquePersonList.add(ALICE_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":153,"author":{"gitId":"KhoonSun47"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"KhoonSun47"},"content":"        expectedUniquePersonList.add(BOB_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"KhoonSun47"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE_SELLER, ALICE_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"zengzihui":2,"KhoonSun47":34,"-":140}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedBuyerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.storage.JsonAdaptedBuyer.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE_BUYER;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"import java.util.List;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.HousingType;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.person.Budget;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"public class JsonAdaptedBuyerTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"    private static final String INVALID_HOUSING_TYPE \u003d \"AAA\";","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"felixchanyy"},"content":"    private static final String INVALID_BUDGET \u003d \" \";","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"    private static final String VALID_NAME \u003d ALICE_BUYER.getName().toString();","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"    private static final String VALID_PHONE \u003d ALICE_BUYER.getPhone().toString();","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"    private static final String VALID_EMAIL \u003d ALICE_BUYER.getEmail().toString();","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"    private static final String VALID_HOUSING_TYPE \u003d ALICE_BUYER.getPreferredHousingType().toString();","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":"    private static final String VALID_BUDGET \u003d ALICE_BUYER.getBudget().toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d ALICE_BUYER.getTags().stream()","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_validBuyerDetails_returnsBuyer() throws Exception {","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedBuyer buyer \u003d new JsonAdaptedBuyer(ALICE_BUYER);","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"        assertEquals(ALICE_BUYER, buyer.toModelType());","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedBuyer buyer \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"felixchanyy"},"content":"                new JsonAdaptedBuyer(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_HOUSING_TYPE,","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"felixchanyy"},"content":"                        VALID_BUDGET, VALID_TAGS);","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, buyer::toModelType);","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedBuyer buyer \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"felixchanyy"},"content":"                new JsonAdaptedBuyer(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_HOUSING_TYPE,","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"felixchanyy"},"content":"                        VALID_BUDGET, VALID_TAGS);","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, buyer::toModelType);","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedBuyer buyer \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"felixchanyy"},"content":"                new JsonAdaptedBuyer(VALID_NAME, null, VALID_EMAIL, VALID_HOUSING_TYPE,","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"felixchanyy"},"content":"                        VALID_BUDGET, VALID_TAGS);","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, buyer::toModelType);","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedBuyer buyer \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"felixchanyy"},"content":"                new JsonAdaptedBuyer(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_HOUSING_TYPE,","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"felixchanyy"},"content":"                        VALID_BUDGET, VALID_TAGS);","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, buyer::toModelType);","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedBuyer buyer \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"felixchanyy"},"content":"                new JsonAdaptedBuyer(VALID_NAME, VALID_PHONE, null, VALID_HOUSING_TYPE,","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"felixchanyy"},"content":"                        VALID_BUDGET, VALID_TAGS);","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, buyer::toModelType);","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_invalidHousingType_throwsIllegalValueException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedBuyer buyer \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"felixchanyy"},"content":"                new JsonAdaptedBuyer(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_HOUSING_TYPE,","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"felixchanyy"},"content":"                        VALID_BUDGET, VALID_TAGS);","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d HousingType.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-04-01"},{"lineNumber":96,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, buyer::toModelType);","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":98,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":99,"author":{"gitId":"felixchanyy"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"felixchanyy"},"content":"    public void toModelType_invalidBudget_throwsIllegalValueException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"felixchanyy"},"content":"        JsonAdaptedBuyer buyer \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"felixchanyy"},"content":"                new JsonAdaptedBuyer(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_HOUSING_TYPE,","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"felixchanyy"},"content":"                        INVALID_BUDGET, VALID_TAGS);","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"felixchanyy"},"content":"        String expectedMessage \u003d Budget.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"felixchanyy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, buyer::toModelType);","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"felixchanyy"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"felixchanyy"},"content":"    public void toModelType_nullBudget_throwsIllegalValueException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"felixchanyy"},"content":"        JsonAdaptedBuyer buyer \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"felixchanyy"},"content":"                new JsonAdaptedBuyer(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_HOUSING_TYPE,","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"felixchanyy"},"content":"                null, VALID_TAGS);","lastModifiedDate":"2024-03-29"},{"lineNumber":113,"author":{"gitId":"felixchanyy"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Budget.class.getSimpleName());","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"felixchanyy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, buyer::toModelType);","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":118,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":119,"author":{"gitId":"KhoonSun47"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2024-03-27"},{"lineNumber":120,"author":{"gitId":"KhoonSun47"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2024-03-27"},{"lineNumber":121,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedBuyer buyer \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":122,"author":{"gitId":"felixchanyy"},"content":"                new JsonAdaptedBuyer(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_HOUSING_TYPE,","lastModifiedDate":"2024-03-29"},{"lineNumber":123,"author":{"gitId":"felixchanyy"},"content":"                        VALID_BUDGET, invalidTags);","lastModifiedDate":"2024-03-29"},{"lineNumber":124,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, buyer::toModelType);","lastModifiedDate":"2024-03-27"},{"lineNumber":125,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":126,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-03-27"},{"lineNumber":127,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"KhoonSun47":92,"felixchanyy":35}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedHouseTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.storage.JsonAdaptedHouse.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.Block;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.Condominium;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.Hdb;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.Landed;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.Level;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.PostalCode;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.house.Price;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.Street;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.UnitNumber;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"public class JsonAdaptedHouseTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"    private static final String INVALID_POSTAL_CODE \u003d \"Postal\";","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"    private static final String INVALID_STREET \u003d \"\";","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"    private static final String INVALID_UNIT_NUMBER \u003d \"Unit 23\";","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"felixchanyy"},"content":"    private static final String INVALID_PRICE \u003d \"-1\";","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"redcolorbicycle"},"content":"    private static final String VALID_TYPE_CONDOMINIUM \u003d \"Condominium\";","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"redcolorbicycle"},"content":"    private static final String VALID_TYPE_HDB \u003d \"Hdb\";","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"    private static final String VALID_TYPE_LANDED \u003d \"Landed\";","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"    private static final String VALID_BLOCK \u003d \"10A\";","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"    private static final String VALID_LEVEL \u003d \"15\";","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"    private static final String VALID_POSTAL_CODE \u003d \"654321\";","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"    private static final String VALID_STREET \u003d \"Orchid Street\";","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"    private static final String VALID_UNIT_NUMBER \u003d \"150\";","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":"    private static final String VALID_PRICE \u003d \"1500000\";","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"redcolorbicycle"},"content":"    public void toModelType_validCondominiumDetails_returnsCondominium() throws Exception {","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"redcolorbicycle"},"content":"        JsonAdaptedHouse house \u003d new JsonAdaptedHouse(VALID_TYPE_CONDOMINIUM, VALID_BLOCK,","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"                VALID_LEVEL, VALID_POSTAL_CODE,","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"felixchanyy"},"content":"                VALID_STREET, VALID_UNIT_NUMBER, VALID_PRICE);","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"redcolorbicycle"},"content":"        Condominium expectedHouse \u003d new Condominium(new Level(VALID_LEVEL),","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"                new PostalCode(VALID_POSTAL_CODE),","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"felixchanyy"},"content":"                new Street(VALID_STREET), new UnitNumber(VALID_UNIT_NUMBER), new Block(VALID_BLOCK),","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"felixchanyy"},"content":"                new Price(VALID_PRICE));","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"redcolorbicycle"},"content":"        assertEquals(expectedHouse, house.toModelType());","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"redcolorbicycle"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"redcolorbicycle"},"content":"    public void toModelType_validHdbDetails_returnsHdb() throws Exception {","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"redcolorbicycle"},"content":"        JsonAdaptedHouse house \u003d new JsonAdaptedHouse(VALID_TYPE_HDB, VALID_BLOCK,","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"redcolorbicycle"},"content":"                VALID_LEVEL, VALID_POSTAL_CODE,","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"felixchanyy"},"content":"                VALID_STREET, VALID_UNIT_NUMBER, VALID_PRICE);","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"redcolorbicycle"},"content":"        Hdb expectedHouse \u003d new Hdb(new Level(VALID_LEVEL),","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"redcolorbicycle"},"content":"                new PostalCode(VALID_POSTAL_CODE),","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"felixchanyy"},"content":"                new Street(VALID_STREET), new UnitNumber(VALID_UNIT_NUMBER), new Block(VALID_BLOCK),","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"felixchanyy"},"content":"                new Price(VALID_PRICE));","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"        assertEquals(expectedHouse, house.toModelType());","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"redcolorbicycle"},"content":"    public void toModelType_validLandedDetails_returnsLanded() throws Exception {","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedHouse house \u003d new JsonAdaptedHouse(VALID_TYPE_LANDED, null, null,","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"felixchanyy"},"content":"                VALID_POSTAL_CODE, VALID_STREET, VALID_UNIT_NUMBER, VALID_PRICE);","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"        Landed expectedHouse \u003d new Landed(new UnitNumber(VALID_UNIT_NUMBER),","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"felixchanyy"},"content":"                new PostalCode(VALID_POSTAL_CODE), new Street(VALID_STREET), new Price(VALID_PRICE));","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"        assertEquals(expectedHouse, house.toModelType());","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_nullPostalCode_throwsIllegalValueException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"redcolorbicycle"},"content":"        JsonAdaptedHouse house \u003d new JsonAdaptedHouse(\"Hdb\", VALID_BLOCK, VALID_LEVEL,","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"felixchanyy"},"content":"                null, VALID_STREET, VALID_UNIT_NUMBER, VALID_PRICE);","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedHouse.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"KhoonSun47"},"content":"                PostalCode.class.getSimpleName());","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, house::toModelType, expectedMessage);","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_invalidPostalCode_throwsIllegalValueException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"redcolorbicycle"},"content":"        JsonAdaptedHouse house \u003d new JsonAdaptedHouse(\"Hdb\", VALID_BLOCK, VALID_LEVEL,","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"felixchanyy"},"content":"                INVALID_POSTAL_CODE, VALID_STREET, VALID_UNIT_NUMBER, VALID_PRICE);","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedHouse.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"KhoonSun47"},"content":"                PostalCode.class.getSimpleName());","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, house::toModelType, expectedMessage);","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_nullStreet_throwsIllegalValueException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"redcolorbicycle"},"content":"        JsonAdaptedHouse house \u003d new JsonAdaptedHouse(\"Hdb\", VALID_BLOCK, VALID_LEVEL,","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"felixchanyy"},"content":"                VALID_POSTAL_CODE, null, VALID_UNIT_NUMBER, VALID_PRICE);","lastModifiedDate":"2024-04-01"},{"lineNumber":90,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedHouse.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"KhoonSun47"},"content":"                Street.class.getSimpleName());","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, house::toModelType, expectedMessage);","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":96,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_invalidStreet_throwsIllegalValueException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"redcolorbicycle"},"content":"        JsonAdaptedHouse house \u003d new JsonAdaptedHouse(\"Hdb\", VALID_BLOCK, VALID_LEVEL,","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"felixchanyy"},"content":"                VALID_POSTAL_CODE, INVALID_STREET, VALID_UNIT_NUMBER, VALID_PRICE);","lastModifiedDate":"2024-04-01"},{"lineNumber":99,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedHouse.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-27"},{"lineNumber":100,"author":{"gitId":"KhoonSun47"},"content":"                Street.class.getSimpleName());","lastModifiedDate":"2024-03-27"},{"lineNumber":101,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, house::toModelType, expectedMessage);","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":103,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":105,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_nullUnitNumber_throwsIllegalValueException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"redcolorbicycle"},"content":"        JsonAdaptedHouse house \u003d new JsonAdaptedHouse(\"Hdb\", VALID_BLOCK, VALID_LEVEL,","lastModifiedDate":"2024-03-30"},{"lineNumber":107,"author":{"gitId":"felixchanyy"},"content":"                VALID_POSTAL_CODE, VALID_STREET, null, VALID_PRICE);","lastModifiedDate":"2024-04-01"},{"lineNumber":108,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedHouse.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-27"},{"lineNumber":109,"author":{"gitId":"KhoonSun47"},"content":"                UnitNumber.class.getSimpleName());","lastModifiedDate":"2024-03-27"},{"lineNumber":110,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, house::toModelType, expectedMessage);","lastModifiedDate":"2024-03-27"},{"lineNumber":111,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":112,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":113,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":114,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_invalidUnitNumber_throwsIllegalValueException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":115,"author":{"gitId":"redcolorbicycle"},"content":"        JsonAdaptedHouse house \u003d new JsonAdaptedHouse(\"Hdb\", VALID_BLOCK, VALID_LEVEL,","lastModifiedDate":"2024-03-30"},{"lineNumber":116,"author":{"gitId":"felixchanyy"},"content":"                VALID_POSTAL_CODE, VALID_STREET, INVALID_UNIT_NUMBER, VALID_PRICE);","lastModifiedDate":"2024-04-01"},{"lineNumber":117,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d UnitNumber.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-27"},{"lineNumber":118,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, house::toModelType, expectedMessage);","lastModifiedDate":"2024-03-27"},{"lineNumber":119,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":120,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":121,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":122,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_unknownType_throwsIllegalValueException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":123,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedHouse house \u003d new JsonAdaptedHouse(\"Treehouse\", VALID_BLOCK, VALID_LEVEL,","lastModifiedDate":"2024-03-27"},{"lineNumber":124,"author":{"gitId":"felixchanyy"},"content":"                VALID_POSTAL_CODE, VALID_STREET, VALID_UNIT_NUMBER, VALID_PRICE);","lastModifiedDate":"2024-04-01"},{"lineNumber":125,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d \"Unknown House Type\";","lastModifiedDate":"2024-03-27"},{"lineNumber":126,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, house::toModelType, expectedMessage);","lastModifiedDate":"2024-03-27"},{"lineNumber":127,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":128,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":129,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":130,"author":{"gitId":"redcolorbicycle"},"content":"    public void toModelType_condominiumNoBlockWithLevel_returnsCondominium() throws Exception {","lastModifiedDate":"2024-03-30"},{"lineNumber":131,"author":{"gitId":"redcolorbicycle"},"content":"        JsonAdaptedHouse house \u003d new JsonAdaptedHouse(VALID_TYPE_CONDOMINIUM, null, VALID_LEVEL,","lastModifiedDate":"2024-03-30"},{"lineNumber":132,"author":{"gitId":"felixchanyy"},"content":"                VALID_POSTAL_CODE, VALID_STREET, VALID_UNIT_NUMBER, VALID_PRICE);","lastModifiedDate":"2024-04-01"},{"lineNumber":133,"author":{"gitId":"redcolorbicycle"},"content":"        Condominium expectedHouse \u003d new Condominium(new Level(VALID_LEVEL), new PostalCode(VALID_POSTAL_CODE),","lastModifiedDate":"2024-03-30"},{"lineNumber":134,"author":{"gitId":"felixchanyy"},"content":"                new Street(VALID_STREET), new UnitNumber(VALID_UNIT_NUMBER), new Price(VALID_PRICE));","lastModifiedDate":"2024-04-01"},{"lineNumber":135,"author":{"gitId":"KhoonSun47"},"content":"        assertEquals(expectedHouse, house.toModelType());","lastModifiedDate":"2024-03-21"},{"lineNumber":136,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":137,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":138,"author":{"gitId":"felixchanyy"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":139,"author":{"gitId":"felixchanyy"},"content":"    public void toModelType_invalidPrice_throwsIllegalValueException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":140,"author":{"gitId":"felixchanyy"},"content":"        JsonAdaptedHouse house \u003d new JsonAdaptedHouse(VALID_TYPE_CONDOMINIUM, VALID_BLOCK,","lastModifiedDate":"2024-04-01"},{"lineNumber":141,"author":{"gitId":"felixchanyy"},"content":"                VALID_LEVEL, VALID_POSTAL_CODE,","lastModifiedDate":"2024-04-01"},{"lineNumber":142,"author":{"gitId":"felixchanyy"},"content":"                VALID_STREET, VALID_UNIT_NUMBER, INVALID_PRICE);","lastModifiedDate":"2024-04-01"},{"lineNumber":143,"author":{"gitId":"felixchanyy"},"content":"        String expectedMessage \u003d Price.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-04-01"},{"lineNumber":144,"author":{"gitId":"felixchanyy"},"content":"        assertThrows(IllegalValueException.class, house::toModelType, expectedMessage);","lastModifiedDate":"2024-04-01"},{"lineNumber":145,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":146,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":147,"author":{"gitId":"felixchanyy"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":148,"author":{"gitId":"felixchanyy"},"content":"    public void toModelType_nullPrice_throwsIllegalValueException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":149,"author":{"gitId":"felixchanyy"},"content":"        JsonAdaptedHouse house \u003d new JsonAdaptedHouse(VALID_TYPE_CONDOMINIUM, VALID_BLOCK,","lastModifiedDate":"2024-04-01"},{"lineNumber":150,"author":{"gitId":"felixchanyy"},"content":"                VALID_LEVEL, VALID_POSTAL_CODE,","lastModifiedDate":"2024-04-01"},{"lineNumber":151,"author":{"gitId":"felixchanyy"},"content":"                VALID_STREET, VALID_UNIT_NUMBER, null);","lastModifiedDate":"2024-04-01"},{"lineNumber":152,"author":{"gitId":"felixchanyy"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Price.class.getSimpleName());","lastModifiedDate":"2024-04-01"},{"lineNumber":153,"author":{"gitId":"felixchanyy"},"content":"        assertThrows(IllegalValueException.class, house::toModelType, expectedMessage);","lastModifiedDate":"2024-04-01"},{"lineNumber":154,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":155,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"redcolorbicycle":26,"KhoonSun47":90,"felixchanyy":39}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedSellerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.storage.JsonAdaptedSeller.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.TypicalPersons.BOB_SELLER;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"import java.util.List;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"public class JsonAdaptedSellerTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"    private static final String VALID_NAME \u003d BOB_SELLER.getName().toString();","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"    private static final String VALID_PHONE \u003d BOB_SELLER.getPhone().toString();","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"    private static final String VALID_EMAIL \u003d BOB_SELLER.getEmail().toString();","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"    private static final List\u003cJsonAdaptedHouse\u003e VALID_HOUSES \u003d BOB_SELLER.getHouses().stream()","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"            .map(JsonAdaptedHouse::new)","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BOB_SELLER.getTags().stream()","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_validSellerDetails_returnsSeller() throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedSeller seller \u003d new JsonAdaptedSeller(BOB_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"        assertEquals(BOB_SELLER, seller.toModelType());","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedSeller seller \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"                new JsonAdaptedSeller(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_HOUSES, VALID_TAGS);","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, seller::toModelType);","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedSeller seller \u003d new JsonAdaptedSeller(null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"                VALID_HOUSES, VALID_TAGS);","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, seller::toModelType);","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedSeller seller \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"                new JsonAdaptedSeller(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_HOUSES, VALID_TAGS);","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, seller::toModelType);","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedSeller seller \u003d new JsonAdaptedSeller(VALID_NAME, null, VALID_EMAIL, VALID_HOUSES, VALID_TAGS);","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, seller::toModelType);","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedSeller seller \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"KhoonSun47"},"content":"                new JsonAdaptedSeller(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_HOUSES, VALID_TAGS);","lastModifiedDate":"2024-04-01"},{"lineNumber":76,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, seller::toModelType);","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedSeller seller \u003d new JsonAdaptedSeller(VALID_NAME, VALID_PHONE, null, VALID_HOUSES, VALID_TAGS);","lastModifiedDate":"2024-04-01"},{"lineNumber":83,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, seller::toModelType);","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"KhoonSun47"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"KhoonSun47"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedSeller seller \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"KhoonSun47"},"content":"                new JsonAdaptedSeller(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_HOUSES, invalidTags);","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, seller::toModelType);","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_invalidHouses_throwsIllegalValueException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"KhoonSun47"},"content":"        List\u003cJsonAdaptedHouse\u003e invalidHouses \u003d new ArrayList\u003c\u003e(VALID_HOUSES);","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"redcolorbicycle"},"content":"        invalidHouses.add(new JsonAdaptedHouse(\"InvalidType\", \"InvalidBlock\", \"InvalidLevel\",","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"felixchanyy"},"content":"                \"123456\", \"Maple Street\", \"120A\", \"12300000\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":101,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedSeller seller \u003d new JsonAdaptedSeller(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-04-01"},{"lineNumber":102,"author":{"gitId":"KhoonSun47"},"content":"                invalidHouses, VALID_TAGS);","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, seller::toModelType);","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"redcolorbicycle":1,"KhoonSun47":103,"felixchanyy":1}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE_SELLER;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.testutil.TypicalPersons.ALI_BUYER;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.testutil.TypicalPersons.ZURI_BUYER;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.testutil.TypicalPersons.ZYRA_BUYER;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"lokidoki102"},"content":"        original.addPerson(ZURI_BUYER);","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"KhoonSun47"},"content":"        original.removePerson(ALICE_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"lokidoki102"},"content":"        original.addPerson(ALI_BUYER);","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"lokidoki102"},"content":"        original.removePerson(ALI_BUYER);","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"lokidoki102"},"content":"        original.addPerson(ZYRA_BUYER);","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"KhoonSun47":2,"-":104,"lokidoki102":7}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"import java.util.List;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_sortedByName_success() throws Exception {","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"        List\u003cPerson\u003e personList \u003d new ArrayList\u003c\u003e(addressBookFromFile.getPersonList());","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"        // Verify the list is sorted alphabetically by name","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"        for (int i \u003d 0; i \u003c personList.size() - 1; i++) {","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"            String currentName \u003d personList.get(i).getName().fullName;","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"            String nextName \u003d personList.get(i + 1).getName().fullName;","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"            assertTrue(currentName.compareToIgnoreCase(nextName) \u003c\u003d 0);","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"KhoonSun47":18,"-":47}},{"path":"src/test/java/seedu/address/testutil/BuyerBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zengzihui"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"zengzihui"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"zengzihui"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.HousingType;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.person.Budget;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.person.Buyer;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"zengzihui"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"zengzihui"},"content":" * A Utility class to help with building Buyer objects.","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"zengzihui"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"zengzihui"},"content":"public class BuyerBuilder {","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"zengzihui"},"content":"    public static final String DEFAULT_NAME \u003d \"James Lim\";","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"zengzihui"},"content":"    public static final String DEFAULT_PHONE \u003d \"93840172\";","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"zengzihui"},"content":"    public static final String DEFAULT_EMAIL \u003d \"james@gmail.com\";","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"felixchanyy"},"content":"    public static final String DEFAULT_BUDGET \u003d \"666000\";","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"redcolorbicycle"},"content":"    public static final String DEFAULT_HOUSING_TYPE \u003d \"Hdb\";","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"zengzihui"},"content":"    private Name name;","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"zengzihui"},"content":"    private Phone phone;","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"zengzihui"},"content":"    private Email email;","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"    private HousingType preferredHousingType;","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"felixchanyy"},"content":"    private Budget budget;","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"zengzihui"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"zengzihui"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"zengzihui"},"content":"     * Creates a {@code BuyerBuilder} with the default information.","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"zengzihui"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"zengzihui"},"content":"    public BuyerBuilder() {","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"zengzihui"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"zengzihui"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"zengzihui"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"        preferredHousingType \u003d new HousingType(DEFAULT_HOUSING_TYPE);","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"felixchanyy"},"content":"        budget \u003d new Budget(DEFAULT_BUDGET);","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"zengzihui"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"zengzihui"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"zengzihui"},"content":"     * Initializes the BuyerBuilder with the data of {@code personToCopy}","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"zengzihui"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"    public BuyerBuilder(Buyer personToCopy) {","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"zengzihui"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"zengzihui"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"zengzihui"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"        preferredHousingType \u003d personToCopy.getPreferredHousingType();","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"felixchanyy"},"content":"        budget \u003d personToCopy.getBudget();","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"zengzihui"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"zengzihui"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"     * Sets the {@code Name} of the {@code Buyer} that we are building.","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"zengzihui"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"zengzihui"},"content":"    public BuyerBuilder withName(String name) {","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"zengzihui"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"zengzihui"},"content":"        return this;","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"zengzihui"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"     * Sets the {@code Phone} of the {@code Buyer} that we are building.","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"zengzihui"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"zengzihui"},"content":"    public BuyerBuilder withPhone(String phone) {","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"zengzihui"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"zengzihui"},"content":"        return this;","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"zengzihui"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"KhoonSun47"},"content":"     * Sets the {@code Email} of the {@code Buyer} that we are building.","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"zengzihui"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"zengzihui"},"content":"    public BuyerBuilder withEmail(String email) {","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"zengzihui"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"zengzihui"},"content":"        return this;","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"zengzihui"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"KhoonSun47"},"content":"     * Sets the {@code Address} of the {@code Buyer} that we are building.","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"zengzihui"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"zengzihui"},"content":"    public BuyerBuilder withHousingType(String housingType) {","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"KhoonSun47"},"content":"        this.preferredHousingType \u003d new HousingType(housingType);","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"zengzihui"},"content":"        return this;","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"felixchanyy"},"content":"     * Sets the {@code Budget} of the {@code Buyer} that we are building.","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"felixchanyy"},"content":"    public BuyerBuilder withBudget(String budget) {","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"felixchanyy"},"content":"        this.budget \u003d new Budget(budget.trim());","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"felixchanyy"},"content":"        return this;","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"zengzihui"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"zengzihui"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"zengzihui"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"zengzihui"},"content":"    public BuyerBuilder withTags(String ... tags) {","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"zengzihui"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"zengzihui"},"content":"        return this;","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"KhoonSun47"},"content":"    public Buyer build() {","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"KhoonSun47"},"content":"        return new Buyer(name, phone, email, budget, preferredHousingType, tags);","lastModifiedDate":"2024-04-01"},{"lineNumber":107,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"zengzihui"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"redcolorbicycle":2,"zengzihui":82,"felixchanyy":13,"KhoonSun47":11}},{"path":"src/test/java/seedu/address/testutil/EditBuyerDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.logic.commands.EditBuyerCommand.EditBuyerDescriptor;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.house.HousingType;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.person.Buyer;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":" * A utility class to help with building EditBuyerDescriptor objects.","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"public class EditBuyerDescriptorBuilder {","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"    private EditBuyerDescriptor descriptor;","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"    public EditBuyerDescriptorBuilder() {","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"        this.descriptor \u003d new EditBuyerDescriptor();","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"    public EditBuyerDescriptorBuilder(EditBuyerDescriptor descriptor) {","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"        this.descriptor \u003d new EditBuyerDescriptor(descriptor);","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"     * Returns an {@code EditBuyerDescriptor} with fields containing {@code buyer}\u0027s details","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"    public EditBuyerDescriptorBuilder(Buyer buyer) {","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"        this.descriptor \u003d new EditBuyerDescriptor();","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"        this.descriptor.setName(buyer.getName());","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"        this.descriptor.setPhone(buyer.getPhone());","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"        this.descriptor.setEmail(buyer.getEmail());","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"        this.descriptor.setHousingType(buyer.getPreferredHousingType());","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"        this.descriptor.setBudget(buyer.getBudget());","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"        this.descriptor.setTags(buyer.getTags());","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"     * Sets the {@code Name} of the {@code EditBuyerDescriptor} that we are building.","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"    public EditBuyerDescriptorBuilder withName(String name) {","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"        this.descriptor.setName(new Name(name));","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"        return this;","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"     * Sets the {@code Phone} of the {@code EditBuyerDescriptor} that we are building.","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"    public EditBuyerDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"        this.descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"lokidoki102"},"content":"        return this;","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"lokidoki102"},"content":"     * Sets the {@code Email} of the {@code EditBuyerDescriptor} that we are building.","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"lokidoki102"},"content":"    public EditBuyerDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"lokidoki102"},"content":"        this.descriptor.setEmail(new Email(email));","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"lokidoki102"},"content":"        return this;","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"lokidoki102"},"content":"     * Sets the Housing Type of the {@code EditBuyerDescriptor} that we are building.","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"lokidoki102"},"content":"    public EditBuyerDescriptorBuilder withHousingType(String housingType) {","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"lokidoki102"},"content":"        this.descriptor.setHousingType(new HousingType(housingType));","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"lokidoki102"},"content":"        return this;","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"lokidoki102"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditBuyerDescriptor}","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"lokidoki102"},"content":"     * that we are building.","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"lokidoki102"},"content":"    public EditBuyerDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"lokidoki102"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"lokidoki102"},"content":"        this.descriptor.setTags(tagSet);","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"lokidoki102"},"content":"        return this;","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"lokidoki102"},"content":"    public EditBuyerDescriptor build() {","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"lokidoki102"},"content":"        return this.descriptor;","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"KhoonSun47":1,"lokidoki102":88}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.HousingType;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"redcolorbicycle"},"content":"     * Sets the Housing Type of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"redcolorbicycle"},"content":"    public EditPersonDescriptorBuilder withHousingType(String housingType) {","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"redcolorbicycle"},"content":"        descriptor.setHousingType(new HousingType(housingType));","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"redcolorbicycle":4,"-":83}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":13,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"zengzihui"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"zengzihui"},"content":"    public PersonBuilder withHousingType(String housingType) {","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"KhoonSun47"},"content":"        return new Person(name, phone, email, tags);","lastModifiedDate":"2024-04-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"zengzihui":3,"KhoonSun47":1,"-":86}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BLOCK;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BUDGET;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOUSING_TYPE;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LEVEL;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSTALCODE;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STREET;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UNITNUMBER;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.logic.commands.AddBuyerCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.logic.commands.AddSellerCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.logic.commands.EditBuyerCommand.EditBuyerDescriptor;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.Condominium;","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.Hdb;","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.House;","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.person.Buyer;","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Seller;","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"zengzihui"},"content":"     * Returns an add command string for adding the {@code buyer}.","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"felixchanyy"},"content":"    public static String getAddBuyerCommand(Buyer buyer) {","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"felixchanyy"},"content":"        return AddBuyerCommand.COMMAND_WORD + \" \" + getBuyerDetails(buyer);","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"     * Returns an add seller command string for adding the {@code seller}.","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"    public static String getAddSellerCommand(Seller seller) {","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"        return AddSellerCommand.COMMAND_WORD + \" \" + getSellerDetails(seller);","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"felixchanyy"},"content":"     * Returns the part of command string for the given {@code buyer}\u0027s details.","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"felixchanyy"},"content":"    public static String getBuyerDetails(Buyer buyer) {","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"felixchanyy"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"felixchanyy"},"content":"        sb.append(PREFIX_NAME + buyer.getName().fullName + \" \");","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"felixchanyy"},"content":"        sb.append(PREFIX_PHONE + buyer.getPhone().value + \" \");","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"felixchanyy"},"content":"        sb.append(PREFIX_EMAIL + buyer.getEmail().value + \" \");","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"        sb.append(PREFIX_HOUSING_TYPE + buyer.getPreferredHousingType().value + \" \");","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"felixchanyy"},"content":"        sb.append(PREFIX_BUDGET + buyer.getBudget().value + \" \");","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"felixchanyy"},"content":"        buyer.getTags().stream().forEach(","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"felixchanyy"},"content":"                s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"felixchanyy"},"content":"        );","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"felixchanyy"},"content":"        return sb.toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":79,"author":{"gitId":"KhoonSun47"},"content":"     * Returns the part of the command string for the given {@code seller}\u0027s details, including houses.","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"KhoonSun47"},"content":"    public static String getSellerDetails(Seller seller) {","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"KhoonSun47"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"KhoonSun47"},"content":"        sb.append(PREFIX_NAME + seller.getName().fullName + \" \");","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"KhoonSun47"},"content":"        sb.append(PREFIX_PHONE + seller.getPhone().value + \" \");","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"KhoonSun47"},"content":"        sb.append(PREFIX_EMAIL + seller.getEmail().value + \" \");","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"KhoonSun47"},"content":"        // Append house details","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"KhoonSun47"},"content":"        for (House house : seller.getHouses()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"KhoonSun47"},"content":"            sb.append(PREFIX_STREET + house.getStreet().value + \" \");","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"redcolorbicycle"},"content":"            if (house instanceof Hdb) {","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"redcolorbicycle"},"content":"                Hdb hdb \u003d (Hdb) house;","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"redcolorbicycle"},"content":"                if (hdb.getBlock() !\u003d null) {","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"redcolorbicycle"},"content":"                    sb.append(PREFIX_BLOCK).append(hdb.getBlock().value).append(\" \");","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"KhoonSun47"},"content":"                }","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"redcolorbicycle"},"content":"                if (hdb.getLevel() !\u003d null) {","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"redcolorbicycle"},"content":"                    sb.append(PREFIX_LEVEL).append(hdb.getLevel().value).append(\" \");","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"redcolorbicycle"},"content":"                }","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"redcolorbicycle"},"content":"            } else if (house instanceof Condominium) {","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"redcolorbicycle"},"content":"                Condominium condominium \u003d (Condominium) house;","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"redcolorbicycle"},"content":"                if (condominium.getBlock() !\u003d null) {","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"redcolorbicycle"},"content":"                    sb.append(PREFIX_BLOCK).append(condominium.getBlock().value).append(\" \");","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"redcolorbicycle"},"content":"                }","lastModifiedDate":"2024-03-30"},{"lineNumber":102,"author":{"gitId":"redcolorbicycle"},"content":"                if (condominium.getLevel() !\u003d null) {","lastModifiedDate":"2024-03-30"},{"lineNumber":103,"author":{"gitId":"redcolorbicycle"},"content":"                    sb.append(PREFIX_LEVEL).append(condominium.getLevel().value).append(\" \");","lastModifiedDate":"2024-03-30"},{"lineNumber":104,"author":{"gitId":"KhoonSun47"},"content":"                }","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"KhoonSun47"},"content":"            }","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"KhoonSun47"},"content":"            sb.append(PREFIX_UNITNUMBER + house.getUnitNumber().value + \" \");","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"KhoonSun47"},"content":"            sb.append(PREFIX_POSTALCODE + house.getPostalCode().value + \" \");","lastModifiedDate":"2024-03-21"},{"lineNumber":108,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"KhoonSun47"},"content":"        seller.getTags().stream().forEach(","lastModifiedDate":"2024-03-27"},{"lineNumber":111,"author":{"gitId":"KhoonSun47"},"content":"                s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2024-03-27"},{"lineNumber":112,"author":{"gitId":"KhoonSun47"},"content":"        );","lastModifiedDate":"2024-03-27"},{"lineNumber":113,"author":{"gitId":"KhoonSun47"},"content":"        return sb.toString().trim();","lastModifiedDate":"2024-03-21"},{"lineNumber":114,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":124,"author":{"gitId":"zengzihui"},"content":"        descriptor.getHousingType().ifPresent(housingType -\u003e sb.append(PREFIX_HOUSING_TYPE).append(\" \"));","lastModifiedDate":"2024-03-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":135,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":136,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":137,"author":{"gitId":"lokidoki102"},"content":"     * Returns the part of command string for the given {@code EditBuyerDescriptor}\u0027s details.","lastModifiedDate":"2024-03-29"},{"lineNumber":138,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":139,"author":{"gitId":"lokidoki102"},"content":"    public static String getEditBuyerDescriptorDetails(EditBuyerDescriptor descriptor) {","lastModifiedDate":"2024-03-29"},{"lineNumber":140,"author":{"gitId":"lokidoki102"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-03-29"},{"lineNumber":141,"author":{"gitId":"lokidoki102"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2024-03-29"},{"lineNumber":142,"author":{"gitId":"lokidoki102"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2024-03-29"},{"lineNumber":143,"author":{"gitId":"lokidoki102"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2024-03-29"},{"lineNumber":144,"author":{"gitId":"lokidoki102"},"content":"        descriptor.getHousingType().ifPresent(housingType -\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":145,"author":{"gitId":"lokidoki102"},"content":"                sb.append(PREFIX_HOUSING_TYPE).append(housingType).append(\" \"));","lastModifiedDate":"2024-03-29"},{"lineNumber":146,"author":{"gitId":"lokidoki102"},"content":"        descriptor.getBudget().ifPresent(budget -\u003e sb.append(PREFIX_BUDGET).append(budget.value).append(\" \"));","lastModifiedDate":"2024-03-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2024-03-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2024-03-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2024-03-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2024-03-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-03-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"redcolorbicycle":17,"zengzihui":3,"KhoonSun47":37,"felixchanyy":19,"-":68,"lokidoki102":13}},{"path":"src/test/java/seedu/address/testutil/SellerBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.House;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Seller;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":" * A utility class to help with building Seller objects.","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"public class SellerBuilder {","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"    private Name name;","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"    private Phone phone;","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"    private Email email;","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"    private ArrayList\u003cHouse\u003e houses;","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"     * Creates a {@code SellerBuilder} with the default details.","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"    public SellerBuilder() {","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"        houses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"     * Initializes the SellerBuilder with the data of {@code sellerToCopy}.","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"    public SellerBuilder(Seller sellerToCopy) {","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"        name \u003d sellerToCopy.getName();","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"        phone \u003d sellerToCopy.getPhone();","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"        email \u003d sellerToCopy.getEmail();","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"        houses \u003d new ArrayList\u003c\u003e(sellerToCopy.getHouses());","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"        tags \u003d new HashSet\u003c\u003e(sellerToCopy.getTags());","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"     * Sets the {@code Name} of the {@code Seller} that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"    public SellerBuilder withName(String name) {","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"        return this;","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"     * Sets the {@code Phone} of the {@code Seller} that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"    public SellerBuilder withPhone(String phone) {","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"        return this;","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"     * Sets the {@code Email} of the {@code Seller} that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"KhoonSun47"},"content":"    public SellerBuilder withEmail(String email) {","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"KhoonSun47"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"KhoonSun47"},"content":"        return this;","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"KhoonSun47"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Seller} that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"KhoonSun47"},"content":"    public SellerBuilder withTags(String... tags) {","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"KhoonSun47"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"KhoonSun47"},"content":"        return this;","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"KhoonSun47"},"content":"     * Sets the {@code houses} of the {@code Seller} that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"KhoonSun47"},"content":"    public SellerBuilder withHouses(House... houses) {","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"KhoonSun47"},"content":"        this.houses \u003d new ArrayList\u003c\u003e(Arrays.asList(houses));","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"KhoonSun47"},"content":"        return this;","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"KhoonSun47"},"content":"    public Seller build() {","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"KhoonSun47"},"content":"        return new Seller(name, phone, email, houses, tags);","lastModifiedDate":"2024-04-01"},{"lineNumber":95,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"KhoonSun47":96}},{"path":"src/test/java/seedu/address/testutil/TypicalHouses.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.Block;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.Condominium;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.Hdb;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.Landed;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.Level;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.PostalCode;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.house.Price;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.Street;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.UnitNumber;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":" * A utility class containing a list of {@code House} objects to be used in tests.","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"public class TypicalHouses {","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"    // Landed house example: This will only be used when house have validation","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"    public static final Landed HOUSE1 \u003d new Landed(","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"            new UnitNumber(\"1\"),","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"            new PostalCode(\"123456\"),","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"felixchanyy"},"content":"            new Street(\"Acacia Avenue\"),","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"felixchanyy"},"content":"            new Price(\"9999999\")","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"    );","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"    // Non-landed house example (e.g., HDB Flat)","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":"    public static final Hdb HOUSE2 \u003d new Hdb(","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"            new Level(\"10\"),","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"            new PostalCode(\"654321\"),","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"            new Street(\"Orchard Road\"),","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"redcolorbicycle"},"content":"            new UnitNumber(\"38\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"felixchanyy"},"content":"            new Block(\"99B\"),","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":"            new Price(\"8888888\")","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"    );","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"    // Non-landed house example (e.g., Condominium)","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"redcolorbicycle"},"content":"    public static final Condominium HOUSE3 \u003d new Condominium(","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"            new Level(\"11\"),","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"            new PostalCode(\"654321\"),","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"            new Street(\"Toa Payoh Road\"),","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"redcolorbicycle"},"content":"            new UnitNumber(\"38\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"felixchanyy"},"content":"            new Block(\"99A\"),","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"felixchanyy"},"content":"            new Price(\"7777777\")","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"    );","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"redcolorbicycle":6,"KhoonSun47":32,"felixchanyy":7}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BUDGET_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BUDGET_BEN;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BUDGET_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BEN;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_KHOONSUN;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HOUSING_TYPE_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HOUSING_TYPE_BEN;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HOUSING_TYPE_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BEN;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_KHOONSUN;","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BEN;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_KHOONSUN;","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.testutil.TypicalHouses.HOUSE1;","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.TypicalHouses.HOUSE2;","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.TypicalHouses.HOUSE3;","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.Block;","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.Hdb;","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.Landed;","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.Level;","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.PostalCode;","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.house.Price;","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.Street;","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.UnitNumber;","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Buyer;","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Seller;","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"    public static final Seller ALICE_SELLER \u003d new SellerBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"redcolorbicycle"},"content":"            .withPhone(\"94351253\").withHouses(new Hdb(new Level(\"15\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"felixchanyy"},"content":"                    new PostalCode(\"654321\"), new Street(\"Orchard Street\"), new UnitNumber(\"150\"), new Block(\"10A\"),","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"felixchanyy"},"content":"                    new Price(\"123456\")))","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"    public static final Seller BENSON_SELLER \u003d new SellerBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"            .withEmail(\"johnd@example.com\")","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"redcolorbicycle"},"content":"            .withPhone(\"94351253\").withHouses(new Hdb(new Level(\"16\"), new PostalCode(\"654321\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"felixchanyy"},"content":"                    new Street(\"Orchard Street\"), new UnitNumber(\"150\"), new Block(\"9A\"), new Price(\"789101112\")))","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"    public static final Seller CARL_SELLER \u003d new SellerBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"            .withEmail(\"heinz@example.com\").withHouses(new Hdb(new Level(\"17\"),","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"felixchanyy"},"content":"                    new PostalCode(\"654322\"), new Street(\"Orchard Street 1\"), new UnitNumber(\"150\"), new Block(\"10B\"),","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"felixchanyy"},"content":"                    new Price(\"43146141\")))","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"            .build();","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"    public static final Seller DANIEL_SELLER \u003d new SellerBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"redcolorbicycle"},"content":"            .withEmail(\"cornelia@example.com\").withHouses(new Hdb(new Level(\"18\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"                    new PostalCode(\"654323\"), new Street(\"Orchard Street 2\"),","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"felixchanyy"},"content":"                    new UnitNumber(\"150\"), new Block(\"10C\"), new Price(\"3123123\"))).withTags(\"friends\").build();","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"KhoonSun47"},"content":"    public static final Seller ELLE_SELLER \u003d new SellerBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"redcolorbicycle"},"content":"            .withEmail(\"heinz@example.com\").withHouses(new Hdb(new Level(\"19\"), new PostalCode(\"654324\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"felixchanyy"},"content":"                    new Street(\"Orchard Street 3\"), new UnitNumber(\"150\"), new Block(\"10D\"),","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"felixchanyy"},"content":"                    new Price(\"3453465\"))).build();","lastModifiedDate":"2024-04-01"},{"lineNumber":75,"author":{"gitId":"KhoonSun47"},"content":"    public static final Seller FIONA_SELLER \u003d new SellerBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"redcolorbicycle"},"content":"            .withEmail(\"heinz@example.com\").withHouses(new Hdb(new Level(\"20\"), new PostalCode(\"654325\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"felixchanyy"},"content":"                    new Street(\"Orchard Street 4\"), new UnitNumber(\"150\"), new Block(\"10E\"),","lastModifiedDate":"2024-04-01"},{"lineNumber":78,"author":{"gitId":"felixchanyy"},"content":"                    new Price(\"55555555\"))).build();","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"KhoonSun47"},"content":"    public static final Seller GEORGE_SELLER \u003d new SellerBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"redcolorbicycle"},"content":"            .withEmail(\"heinz@example.com\").withHouses(new Landed(new UnitNumber(\"150\"), new PostalCode(\"654326\"),","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"felixchanyy"},"content":"                    new Street(\"Orchard Street 5\"), new Price(\"8945939\"))).build();","lastModifiedDate":"2024-04-01"},{"lineNumber":82,"author":{"gitId":"KhoonSun47"},"content":"    public static final Buyer ALICE_BUYER \u003d new BuyerBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"redcolorbicycle"},"content":"            .withEmail(\"heinz@example.com\").withBudget(\"333000\").withHousingType(\"Hdb\").build();","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":86,"author":{"gitId":"KhoonSun47"},"content":"    public static final Seller HOON_SELLER \u003d new SellerBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"redcolorbicycle"},"content":"            .withEmail(\"stefan@example.com\").withEmail(\"heinz@example.com\").withHouses(new Hdb(new Level(\"22\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"redcolorbicycle"},"content":"                    new PostalCode(\"654327\"), new Street(\"Orchard Street 6\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"felixchanyy"},"content":"                    new UnitNumber(\"150\"), new Block(\"3\"), new Price(\"7777777\"))).build();","lastModifiedDate":"2024-04-01"},{"lineNumber":90,"author":{"gitId":"KhoonSun47"},"content":"    public static final Seller IDA_SELLER \u003d new SellerBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"redcolorbicycle"},"content":"            .withEmail(\"hans@example.com\").withEmail(\"heinz@example.com\").withHouses(new Hdb(new Level(\"23\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"redcolorbicycle"},"content":"                    new PostalCode(\"654328\"), new Street(\"Orchard Street 7\"), new UnitNumber(\"150\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"felixchanyy"},"content":"                    new Block(\"4\"), new Price(\"9876372\"))).build();","lastModifiedDate":"2024-04-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":95,"author":{"gitId":"KhoonSun47"},"content":"    // Manually added - Seller\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"KhoonSun47"},"content":"    public static final Seller AMY_SELLER \u003d new SellerBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"KhoonSun47"},"content":"            .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2024-04-01"},{"lineNumber":98,"author":{"gitId":"KhoonSun47"},"content":"            .withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"KhoonSun47"},"content":"            .withTags(VALID_TAG_FRIEND).withHouses(HOUSE2).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"redcolorbicycle"},"content":"    public static final Seller KHOONSUN_SELLER \u003d new SellerBuilder().withName(VALID_NAME_KHOONSUN)","lastModifiedDate":"2024-03-31"},{"lineNumber":102,"author":{"gitId":"KhoonSun47"},"content":"            .withEmail(VALID_EMAIL_KHOONSUN)","lastModifiedDate":"2024-04-01"},{"lineNumber":103,"author":{"gitId":"redcolorbicycle"},"content":"            .withPhone(VALID_PHONE_KHOONSUN)","lastModifiedDate":"2024-03-31"},{"lineNumber":104,"author":{"gitId":"redcolorbicycle"},"content":"            .withTags(VALID_TAG_FRIEND).withHouses(HOUSE1).build();","lastModifiedDate":"2024-03-31"},{"lineNumber":105,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":106,"author":{"gitId":"KhoonSun47"},"content":"    public static final Seller BOB_SELLER \u003d new SellerBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"KhoonSun47"},"content":"            .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2024-04-01"},{"lineNumber":108,"author":{"gitId":"KhoonSun47"},"content":"            .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"KhoonSun47"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).withHouses(HOUSE3).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":111,"author":{"gitId":"KhoonSun47"},"content":"    // Manually added - Buyer\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2024-03-27"},{"lineNumber":112,"author":{"gitId":"lokidoki102"},"content":"    public static final Buyer ALI_BUYER \u003d new BuyerBuilder().withName(\"Ali York\")","lastModifiedDate":"2024-03-29"},{"lineNumber":113,"author":{"gitId":"felixchanyy"},"content":"            .withPhone(\"82937163\").withEmail(\"ali@gmail.com\").withBudget(\"400000\")","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"lokidoki102"},"content":"            .withHousingType(\"Hdb\").withTags(\"friends\").build();","lastModifiedDate":"2024-03-31"},{"lineNumber":115,"author":{"gitId":"felixchanyy"},"content":"    public static final Buyer BEN_BUYER \u003d new BuyerBuilder().withName(VALID_NAME_BEN).withPhone(VALID_PHONE_BEN)","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"felixchanyy"},"content":"            .withEmail(VALID_EMAIL_BEN).withBudget(VALID_BUDGET_BEN).withHousingType(VALID_HOUSING_TYPE_BEN)","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"felixchanyy"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"felixchanyy"},"content":"            .build();","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":120,"author":{"gitId":"felixchanyy"},"content":"    public static final Buyer AMY_BUYER \u003d new BuyerBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2024-03-29"},{"lineNumber":121,"author":{"gitId":"felixchanyy"},"content":"            .withEmail(VALID_EMAIL_AMY).withBudget(VALID_BUDGET_AMY).withHousingType(VALID_HOUSING_TYPE_AMY)","lastModifiedDate":"2024-03-29"},{"lineNumber":122,"author":{"gitId":"felixchanyy"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2024-03-29"},{"lineNumber":123,"author":{"gitId":"felixchanyy"},"content":"            .build();","lastModifiedDate":"2024-03-29"},{"lineNumber":124,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":125,"author":{"gitId":"felixchanyy"},"content":"    public static final Buyer BOB_BUYER \u003d new BuyerBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-29"},{"lineNumber":126,"author":{"gitId":"felixchanyy"},"content":"            .withEmail(VALID_EMAIL_BOB).withBudget(VALID_BUDGET_BOB).withHousingType(VALID_HOUSING_TYPE_BOB)","lastModifiedDate":"2024-03-29"},{"lineNumber":127,"author":{"gitId":"zengzihui"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2024-03-21"},{"lineNumber":128,"author":{"gitId":"zengzihui"},"content":"            .build();","lastModifiedDate":"2024-03-21"},{"lineNumber":129,"author":{"gitId":"lokidoki102"},"content":"    public static final Buyer ZACK_BUYER \u003d new BuyerBuilder().withName(\"Zack York\")","lastModifiedDate":"2024-03-29"},{"lineNumber":130,"author":{"gitId":"lokidoki102"},"content":"            .withPhone(\"82937163\").withEmail(\"zack@gmail.com\").withBudget(\"400000\")","lastModifiedDate":"2024-03-29"},{"lineNumber":131,"author":{"gitId":"lokidoki102"},"content":"            .withHousingType(\"Hdb\").withTags(\"friends\").build();","lastModifiedDate":"2024-03-31"},{"lineNumber":132,"author":{"gitId":"lokidoki102"},"content":"    public static final Buyer ZANE_BUYER \u003d new BuyerBuilder().withName(\"Zane York\")","lastModifiedDate":"2024-03-29"},{"lineNumber":133,"author":{"gitId":"lokidoki102"},"content":"            .withPhone(\"82937163\").withEmail(\"zack@gmail.com\").withBudget(\"500000\")","lastModifiedDate":"2024-03-29"},{"lineNumber":134,"author":{"gitId":"lokidoki102"},"content":"            .withHousingType(\"Hdb\").withTags(\"friends\").build();","lastModifiedDate":"2024-03-31"},{"lineNumber":135,"author":{"gitId":"lokidoki102"},"content":"    public static final Buyer ZURI_BUYER \u003d new BuyerBuilder().withName(\"Zuri\")","lastModifiedDate":"2024-03-29"},{"lineNumber":136,"author":{"gitId":"lokidoki102"},"content":"            .withPhone(\"63936234\").withEmail(\"Zuri@gmail.com\").withBudget(\"600000\")","lastModifiedDate":"2024-03-29"},{"lineNumber":137,"author":{"gitId":"lokidoki102"},"content":"            .withHousingType(\"Hdb\").withTags(\"someone\").build();","lastModifiedDate":"2024-03-31"},{"lineNumber":138,"author":{"gitId":"lokidoki102"},"content":"    public static final Buyer ZYRA_BUYER \u003d new BuyerBuilder().withName(\"Zyra Moore\")","lastModifiedDate":"2024-03-29"},{"lineNumber":139,"author":{"gitId":"lokidoki102"},"content":"            .withPhone(\"82936234\").withEmail(\"zyra@gmail.com\").withBudget(\"700000\")","lastModifiedDate":"2024-03-29"},{"lineNumber":140,"author":{"gitId":"lokidoki102"},"content":"            .withHousingType(\"Hdb\").withTags(\"someone\").build();","lastModifiedDate":"2024-03-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2024-03-27"},{"lineNumber":143,"author":{"gitId":"zengzihui"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2024-03-21"},{"lineNumber":144,"author":{"gitId":"zengzihui"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2024-03-21"},{"lineNumber":145,"author":{"gitId":"felixchanyy"},"content":"            .withPhone(\"94351253\").withHousingType(\"HDB\")","lastModifiedDate":"2024-03-29"},{"lineNumber":146,"author":{"gitId":"zengzihui"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-21"},{"lineNumber":148,"author":{"gitId":"zengzihui"},"content":"            .withEmail(VALID_EMAIL_BOB).withHousingType(VALID_HOUSING_TYPE_BOB)","lastModifiedDate":"2024-03-21"},{"lineNumber":149,"author":{"gitId":"KhoonSun47"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2024-03-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":164,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":169,"author":{"gitId":"lokidoki102"},"content":"        List\u003cPerson\u003e typicalPersons \u003d Arrays.asList(ALICE_SELLER, BEN_BUYER, BENSON_SELLER,","lastModifiedDate":"2024-03-29"},{"lineNumber":170,"author":{"gitId":"lokidoki102"},"content":"                CARL_SELLER, DANIEL_SELLER, ELLE_SELLER, FIONA_SELLER, GEORGE_SELLER, ZACK_BUYER, ZANE_BUYER);","lastModifiedDate":"2024-03-29"},{"lineNumber":171,"author":{"gitId":"KhoonSun47"},"content":"        List\u003cPerson\u003e sortedTypicalPersons \u003d typicalPersons.stream()","lastModifiedDate":"2024-03-27"},{"lineNumber":172,"author":{"gitId":"KhoonSun47"},"content":"                .sorted(Comparator.comparing(person -\u003e person.getName().toString()))","lastModifiedDate":"2024-03-27"},{"lineNumber":173,"author":{"gitId":"KhoonSun47"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-03-27"},{"lineNumber":174,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":175,"author":{"gitId":"KhoonSun47"},"content":"        return new ArrayList\u003c\u003e(sortedTypicalPersons);","lastModifiedDate":"2024-03-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"redcolorbicycle":21,"zengzihui":9,"felixchanyy":34,"KhoonSun47":45,"-":52,"lokidoki102":16}}]
