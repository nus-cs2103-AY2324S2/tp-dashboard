[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103-F09-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions) [![codecov](https://codecov.io/gh/AY2324S2-CS2103-F09-1/tp/graph/badge.svg?token\u003dNB86I9H23Z)](https://codecov.io/gh/AY2324S2-CS2103-F09-1/tp)","lastModifiedDate":"2024-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"felixchanyy"},"content":"## About the app","lastModifiedDate":"2024-03-04"},{"lineNumber":6,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":"EstateEase simplifies residential property management for real estate listing agents in Singapore.","lastModifiedDate":"2024-03-04"},{"lineNumber":8,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":9,"author":{"gitId":"felixchanyy"},"content":"### Key Features:","lastModifiedDate":"2024-03-04"},{"lineNumber":10,"author":{"gitId":"felixchanyy"},"content":"  * With intuitive tools for listing and client communication, the app is tailored for efficiency. ","lastModifiedDate":"2024-03-04"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":"  * Agents can quickly access contacts and prioritize them, ensuring swift connections with clients. ","lastModifiedDate":"2024-03-04"},{"lineNumber":12,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"### Example Usages:","lastModifiedDate":"2024-03-04"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":"  * Allows real estate agents to add and delete client information.","lastModifiedDate":"2024-03-04"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"  * Allows real estate agents to prioritize client contacts for efficient communication","lastModifiedDate":"2024-03-04"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"  * Allows real estate agents to load and save the list using JSON file","lastModifiedDate":"2024-03-04"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"## Acknowledgements","lastModifiedDate":"2024-03-04"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":"This project is based on the AddressBook-Level3 project created by the ","lastModifiedDate":"2024-03-04"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"[SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-04"}],"authorContributionMap":{"felixchanyy":17,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"felixchanyy"},"content":"You can reach us at the email `felixchanyy.22@u.nus.edu`","lastModifiedDate":"2024-03-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":"### Felix Chan","lastModifiedDate":"2024-03-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"\u003cimg src\u003d\"images/felixchanyy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"[[homepage](https://nus-cs2103-ay2324s2.github.io/website)]","lastModifiedDate":"2024-03-04"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":"[[github](https://github.com/felixchanyy)]","lastModifiedDate":"2024-03-04"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"[[portfolio](https://www.linkedin.com/in/felixchanyy)]","lastModifiedDate":"2024-03-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"felixchanyy"},"content":"* Role: Team Lead, Scheduling and Tracking, Git Expert","lastModifiedDate":"2024-03-04"},{"lineNumber":23,"author":{"gitId":"felixchanyy"},"content":"* Responsibilities: Responsible for overall project coordination,  in charge of defining, assigning, and tracking ","lastModifiedDate":"2024-03-04"},{"lineNumber":24,"author":{"gitId":"felixchanyy"},"content":"project tasks, helps other team members with matters related to Git","lastModifiedDate":"2024-03-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"felixchanyy"},"content":"### Yek Khoon Sun","lastModifiedDate":"2024-03-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"felixchanyy"},"content":"\u003cimg src\u003d\"images/khoonsun47.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"felixchanyy"},"content":"[[github](http://github.com/khoonsun47)]","lastModifiedDate":"2024-03-04"},{"lineNumber":31,"author":{"gitId":"felixchanyy"},"content":"[[portfolio](https://sg.linkedin.com/in/yek-khoon-sun-2b2270177)]","lastModifiedDate":"2024-03-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":"* Role: Testing","lastModifiedDate":"2024-03-04"},{"lineNumber":34,"author":{"gitId":"felixchanyy"},"content":"* Responsibilities: Ensures the testing of the project is done properly and on time","lastModifiedDate":"2024-03-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"felixchanyy"},"content":"### Carl Lim","lastModifiedDate":"2024-03-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"felixchanyy"},"content":"\u003cimg src\u003d\"images/lokidoki102.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"felixchanyy"},"content":"[[github](http://github.com/lokidoki102)] ","lastModifiedDate":"2024-03-04"},{"lineNumber":41,"author":{"gitId":"felixchanyy"},"content":"[[portfolio](https://www.linkedin.com/in/carl-lim-483980152/)]","lastModifiedDate":"2024-03-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"felixchanyy"},"content":"* Role: Code Quality, IntelliJ expert","lastModifiedDate":"2024-03-04"},{"lineNumber":44,"author":{"gitId":"felixchanyy"},"content":"* Responsibilities: Looks after code quality and code review, ensures adherence to coding standards, ","lastModifiedDate":"2024-03-04"},{"lineNumber":45,"author":{"gitId":"felixchanyy"},"content":"helps other team members with matters related to IntelliJ","lastModifiedDate":"2024-03-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"felixchanyy"},"content":"### Zeng Zihui","lastModifiedDate":"2024-03-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"felixchanyy"},"content":"\u003cimg src\u003d\"images/zengzihui.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"felixchanyy"},"content":"[[github](http://github.com/zengzihui)]","lastModifiedDate":"2024-03-04"},{"lineNumber":52,"author":{"gitId":"felixchanyy"},"content":"[[portfolio](https://www.linkedin.com/in/zeng-zihui)]","lastModifiedDate":"2024-03-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"felixchanyy"},"content":"* Role: Documentation, In charge of UI","lastModifiedDate":"2024-03-04"},{"lineNumber":55,"author":{"gitId":"felixchanyy"},"content":"* Responsibilities: Responsible for the quality of various project documents,","lastModifiedDate":"2024-03-04"},{"lineNumber":56,"author":{"gitId":"felixchanyy"},"content":"review changes done to UI, act as the gate keeper of its quality, help others when they face","lastModifiedDate":"2024-03-04"},{"lineNumber":57,"author":{"gitId":"felixchanyy"},"content":"difficulties while modifying UI","lastModifiedDate":"2024-03-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"felixchanyy"},"content":"### Liu Zhengyang","lastModifiedDate":"2024-03-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"felixchanyy"},"content":"\u003cimg src\u003d\"images/redcolorbicycle.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"felixchanyy"},"content":"[[github](http://github.com/redcolorbicycle)]","lastModifiedDate":"2024-03-04"},{"lineNumber":64,"author":{"gitId":"felixchanyy"},"content":"[[portfolio](https://www.linkedin.com/in/liu-zhengyang)]","lastModifiedDate":"2024-03-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"felixchanyy"},"content":"* Role: Deliverables and deadlines","lastModifiedDate":"2024-03-04"},{"lineNumber":67,"author":{"gitId":"felixchanyy"},"content":"* Responsibilities: Ensure project deliverables are done on time and in the right format","lastModifiedDate":"2024-03-04"}],"authorContributionMap":{"felixchanyy":36,"-":31}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"zengzihui"},"content":"# EstateEase Developer Guide","lastModifiedDate":"2024-03-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well }_","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Logic.puml\" alt\u003d\"UndoSequenceDiagram-Logic\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Model.puml\" alt\u003d\"UndoSequenceDiagram-Model\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":267,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"zengzihui"},"content":"* Residential Property Real Estate Listing Agent in Singapore","lastModifiedDate":"2024-03-04"},{"lineNumber":277,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":279,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"zengzihui"},"content":"**Value proposition**: EstateEase simplifies residential property management for real estate listing agents in Singapore. With intuitive tools for listing and client communication, the app is tailored for efficiency. Agents can quickly access contacts and prioritize them, ensuring swift connections with clients.","lastModifiedDate":"2024-03-04"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"zengzihui"},"content":"Priorities: Urgent (must-must have) - `* * * *`, High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2024-03-07"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"| Priority  | As a …​                     | I want to …​                                                                                  | So that I can…​                                                              |","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"zengzihui"},"content":"|-----------|-----------------------------|-----------------------------------------------------------------------------------------------|------------------------------------------------------------------------------|","lastModifiedDate":"2024-03-07"},{"lineNumber":290,"author":{"gitId":"zengzihui"},"content":"| `* * * *` | real estate agent           | add home-owners clients                                                                       | keep track of their contact details and the properties that they are selling |","lastModifiedDate":"2024-03-07"},{"lineNumber":291,"author":{"gitId":"zengzihui"},"content":"| `* * * *` | real estate agent           | add home-buyer clients                                                                        | keep track of their contact details and requirements                         |","lastModifiedDate":"2024-03-07"},{"lineNumber":292,"author":{"gitId":"zengzihui"},"content":"| `* * * *` | real estate agent           | view the list of all contacts stored                                                          | quickly find the contact I need                                              |","lastModifiedDate":"2024-03-07"},{"lineNumber":293,"author":{"gitId":"zengzihui"},"content":"| `* * * *` | real estate agent           | delete the contact that I want to remove                                                      | remove outdated or irrelevant contacts                                       |","lastModifiedDate":"2024-03-07"},{"lineNumber":294,"author":{"gitId":"zengzihui"},"content":"| `* * * *` | real estate agent           | be able to exit the program when I want to                                                    | close the application                                                        |","lastModifiedDate":"2024-03-07"},{"lineNumber":295,"author":{"gitId":"zengzihui"},"content":"| `* * * *` | real estate agent           | be able to automatically save the data I added, changed, and deleted                          | load the data when I open the application, with the saved data, next time    |","lastModifiedDate":"2024-03-07"},{"lineNumber":296,"author":{"gitId":"zengzihui"},"content":"| `* * *`   | real estate agent           | find for a specific contact                                                                   | access their details without scrolling through a long list                   |","lastModifiedDate":"2024-03-07"},{"lineNumber":297,"author":{"gitId":"zengzihui"},"content":"| `* * *`   | real estate agent           | easily update or modify existing contact information                                          | have accurate and up-to-date records                                         |","lastModifiedDate":"2024-03-07"},{"lineNumber":298,"author":{"gitId":"zengzihui"},"content":"| `* * *`   | real estate agent           | add new houses to the home-sellers                                                            | keep track of the houses the home-sellers have                               |","lastModifiedDate":"2024-03-07"},{"lineNumber":299,"author":{"gitId":"zengzihui"},"content":"| `* * *`   | real estate agent           | have whatever contacts I add load to the laptop I am using                                    | do not need to re-enter all the details whenever I open the app              |","lastModifiedDate":"2024-03-07"},{"lineNumber":300,"author":{"gitId":"zengzihui"},"content":"| `* *`     | busy real estate agent      | be able to view specific buyer\u0027s requirements                                                 | understand what are their needs quickly                                      |","lastModifiedDate":"2024-03-07"},{"lineNumber":301,"author":{"gitId":"zengzihui"},"content":"| `* *`     | busy real estate agent      | be able to view specific seller\u0027s properties                                                  | effectively assess their listings quickly                                    |","lastModifiedDate":"2024-03-07"},{"lineNumber":302,"author":{"gitId":"zengzihui"},"content":"| `* *`     | busy real estate agent      | match the buyer with sellers based on the buyer\u0027s requirements                                | quickly identify properties that align with the buyers\u0027 preferences          |","lastModifiedDate":"2024-03-07"},{"lineNumber":303,"author":{"gitId":"zengzihui"},"content":"| `* *`     | busy real estate agent      | be able to tell at a glance whether the contact is a buyer or seller                          | do not need to remember their identity                                       |","lastModifiedDate":"2024-03-07"},{"lineNumber":304,"author":{"gitId":"zengzihui"},"content":"| `* *`     | forgetful real estate agent | filter my contacts based on buyers who do not have a pending or done deal status              | easily identify and manage active buyer contacts                             |","lastModifiedDate":"2024-03-07"},{"lineNumber":305,"author":{"gitId":"zengzihui"},"content":"| `* *`     | forgetful real estate agent | link a buyer to sellers with the properties they are interested in buying                     | push them towards making a transaction                                       |","lastModifiedDate":"2024-03-07"},{"lineNumber":306,"author":{"gitId":"zengzihui"},"content":"| `*`       | busy real estate agent      | be able to add notes about clients when talking to them                                       | do not need to consolidate afterwards                                        |","lastModifiedDate":"2024-03-07"},{"lineNumber":307,"author":{"gitId":"zengzihui"},"content":"| `*`       | real estate agent           | differentiate between home-buyers who are looking for houses and finalizing a deal            | manage them effectively                                                      |","lastModifiedDate":"2024-03-07"},{"lineNumber":308,"author":{"gitId":"zengzihui"},"content":"| `*`       | real estate agent           | differentiate between home-sellers who are looking to sell their houses and finalizing a deal | manage them effectively.                                                     |","lastModifiedDate":"2024-03-07"},{"lineNumber":309,"author":{"gitId":"zengzihui"},"content":"| `*`       | real estate agent           | see the priority of home-sellers after filtering out their selling requirements               | determine who I should prioritize in handling the transactions first         |","lastModifiedDate":"2024-03-07"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"zengzihui"},"content":"(For all use cases below, the **System** is the `EstateEase` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2024-03-04"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"zengzihui"},"content":"**Use case: UC01 - Add a home-seller to contact list**","lastModifiedDate":"2024-03-07"},{"lineNumber":317,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":318,"author":{"gitId":"KhoonSun47"},"content":"**MSS:**","lastModifiedDate":"2024-03-04"},{"lineNumber":319,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":320,"author":{"gitId":"KhoonSun47"},"content":"1. User chooses to add home-seller.","lastModifiedDate":"2024-03-06"},{"lineNumber":321,"author":{"gitId":"KhoonSun47"},"content":"2. EstateEase requests for the details of the home-seller.","lastModifiedDate":"2024-03-06"},{"lineNumber":322,"author":{"gitId":"KhoonSun47"},"content":"3. User enters the requested details.","lastModifiedDate":"2024-03-04"},{"lineNumber":323,"author":{"gitId":"KhoonSun47"},"content":"4. EstateEase adds the home-seller and displays the newly added home-seller. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":324,"author":{"gitId":"KhoonSun47"},"content":"    Use case ends.","lastModifiedDate":"2024-03-04"},{"lineNumber":325,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":326,"author":{"gitId":"KhoonSun47"},"content":"**Precondition for Extension 3i:** EstateEase has received the details of the home-seller from the user. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":327,"author":{"gitId":"KhoonSun47"},"content":"**Trigger:** EstateEase validates the entered details and detects that the block number is missing when the housing type is HDB/Condo.","lastModifiedDate":"2024-03-04"},{"lineNumber":328,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":329,"author":{"gitId":"KhoonSun47"},"content":"**Precondition for Extension 3k and 3l:** EstateEase has received the details of the home-seller from the user. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":330,"author":{"gitId":"KhoonSun47"},"content":"**Trigger:** EstateEase validates the entered details and detects that the unit number is missing when the housing type is HDB/Condo.","lastModifiedDate":"2024-03-04"},{"lineNumber":331,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":332,"author":{"gitId":"KhoonSun47"},"content":"**Precondition for Extension 3i, 3j, 3k, 3l, 3m, 3n:** EstateEase has received the details of the home-seller from the user. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":333,"author":{"gitId":"KhoonSun47"},"content":"**Trigger:** EstateEase validates the entered details and detects missing block number, street name, unit number and postal code in the entered data when he is a home-seller.","lastModifiedDate":"2024-03-06"},{"lineNumber":334,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":335,"author":{"gitId":"KhoonSun47"},"content":"**Extensions**","lastModifiedDate":"2024-03-04"},{"lineNumber":336,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":337,"author":{"gitId":"KhoonSun47"},"content":"* 3a. EstateEase detects missing name in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":338,"author":{"gitId":"KhoonSun47"},"content":"    * 3a1. EstateEase shows an error message regarding missing name. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":339,"author":{"gitId":"KhoonSun47"},"content":"  Use case resumes from step 2.","lastModifiedDate":"2024-03-04"},{"lineNumber":340,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":341,"author":{"gitId":"KhoonSun47"},"content":"* 3b. EstateEase detects duplicate name in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":342,"author":{"gitId":"KhoonSun47"},"content":"    * 3b1. EstateEase shows an error message regarding duplicate name. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":343,"author":{"gitId":"KhoonSun47"},"content":"      Use case ends.","lastModifiedDate":"2024-03-04"},{"lineNumber":344,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":345,"author":{"gitId":"KhoonSun47"},"content":"* 3c. EstateEase detects missing phone number in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":346,"author":{"gitId":"KhoonSun47"},"content":"    * 3c1. EstateEase shows an error message regarding missing phone number. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":347,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-04"},{"lineNumber":348,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":349,"author":{"gitId":"KhoonSun47"},"content":"* 3d. EstateEase detects incorrect format for phone number in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":350,"author":{"gitId":"KhoonSun47"},"content":"    * 3d1. EstateEase shows an error message regarding incorrect format for phone number. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":351,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-04"},{"lineNumber":352,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":353,"author":{"gitId":"KhoonSun47"},"content":"* 3e. EstateEase detects missing email in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":354,"author":{"gitId":"KhoonSun47"},"content":"    * 3e1. EstateEase shows an error message regarding missing email. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":355,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-04"},{"lineNumber":356,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":357,"author":{"gitId":"KhoonSun47"},"content":"* 3f. EstateEase detects incorrect format for email in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":358,"author":{"gitId":"KhoonSun47"},"content":"    * 3f1. EstateEase shows an error message regarding incorrect format for email. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":359,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-04"},{"lineNumber":360,"author":{"gitId":"KhoonSun47"},"content":"  ","lastModifiedDate":"2024-03-04"},{"lineNumber":361,"author":{"gitId":"KhoonSun47"},"content":"* 3g. EstateEase detects missing housing type in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":362,"author":{"gitId":"KhoonSun47"},"content":"    * 3g1. EstateEase shows an error message regarding missing housing type. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":363,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-04"},{"lineNumber":364,"author":{"gitId":"KhoonSun47"},"content":"  ","lastModifiedDate":"2024-03-04"},{"lineNumber":365,"author":{"gitId":"KhoonSun47"},"content":"* 3h. EstateEase detects incorrect housing type in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":366,"author":{"gitId":"KhoonSun47"},"content":"    * 3h1. EstateEase shows an error message regarding the entry of incorrect of housing type. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":367,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-04"},{"lineNumber":368,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":369,"author":{"gitId":"KhoonSun47"},"content":"* 3i. EstateEase detects missing block number in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":370,"author":{"gitId":"KhoonSun47"},"content":"    * 3i1. EstateEase shows an error message regarding missing block number. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":371,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-04"},{"lineNumber":372,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":373,"author":{"gitId":"KhoonSun47"},"content":"* 3j. EstateEase detects missing street name in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":374,"author":{"gitId":"KhoonSun47"},"content":"    * 3j1. EstateEase shows an error message regarding missing street name. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":375,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-04"},{"lineNumber":376,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":377,"author":{"gitId":"KhoonSun47"},"content":"* 3k. EstateEase detects missing unit number in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":378,"author":{"gitId":"KhoonSun47"},"content":"    * 3k1. EstateEase shows an error message regarding missing unit number. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":379,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-04"},{"lineNumber":380,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":381,"author":{"gitId":"KhoonSun47"},"content":"* 3l. EstateEase detects incorrect format for unit number in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":382,"author":{"gitId":"KhoonSun47"},"content":"    * 3l1. EstateEase shows an error message regarding incorrect format for unit number. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":383,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-04"},{"lineNumber":384,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":385,"author":{"gitId":"KhoonSun47"},"content":"* 3m. EstateEase detects missing postal code in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":386,"author":{"gitId":"KhoonSun47"},"content":"    * 3m1. EstateEase shows an error message regarding missing postal code. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":387,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-04"},{"lineNumber":388,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":389,"author":{"gitId":"KhoonSun47"},"content":"* 3n. EstateEase detects incorrect format for postal code in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":390,"author":{"gitId":"KhoonSun47"},"content":"    * 3n1. EstateEase shows an error message regarding incorrect format for postal code. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":391,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-04"},{"lineNumber":392,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":393,"author":{"gitId":"KhoonSun47"},"content":"* 3o. EstateEase detects missing role in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":394,"author":{"gitId":"KhoonSun47"},"content":"    * 3o1. EstateEase shows an error message regarding missing role. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":395,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-04"},{"lineNumber":396,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":397,"author":{"gitId":"KhoonSun47"},"content":"* 3p. EstateEase detects incorrect role in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":398,"author":{"gitId":"KhoonSun47"},"content":"    * 3p1. EstateEase shows an error message regarding the entry of incorrect role. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":399,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-04"},{"lineNumber":400,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":401,"author":{"gitId":"KhoonSun47"},"content":"* 3q. EstateEase detects incorrect priority level in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":402,"author":{"gitId":"KhoonSun47"},"content":"    * 3q1. EstateEase shows an error message regarding the entry of incorrect priority level. \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":403,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-04"},{"lineNumber":404,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":405,"author":{"gitId":"zengzihui"},"content":"**Use case: UC02 - Add a home-buyer to contact list**","lastModifiedDate":"2024-03-07"},{"lineNumber":406,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":407,"author":{"gitId":"KhoonSun47"},"content":"**MSS:**","lastModifiedDate":"2024-03-06"},{"lineNumber":408,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":409,"author":{"gitId":"KhoonSun47"},"content":"1. User chooses to add home-buyer.","lastModifiedDate":"2024-03-06"},{"lineNumber":410,"author":{"gitId":"KhoonSun47"},"content":"2. EstateEase requests for the details of the home-buyer.","lastModifiedDate":"2024-03-06"},{"lineNumber":411,"author":{"gitId":"KhoonSun47"},"content":"3. User enters the requested details.","lastModifiedDate":"2024-03-06"},{"lineNumber":412,"author":{"gitId":"KhoonSun47"},"content":"4. EstateEase adds the home-buyer and displays the newly added home-buyer. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":413,"author":{"gitId":"KhoonSun47"},"content":"   Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":414,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":415,"author":{"gitId":"KhoonSun47"},"content":"**Precondition for Extension 3i:** EstateEase has received the details of the home-buyer from the user. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":416,"author":{"gitId":"KhoonSun47"},"content":"**Trigger:** EstateEase validates the entered details and detects block number, street name, unit number and postal code in the entered data when he is a home-buyer.","lastModifiedDate":"2024-03-06"},{"lineNumber":417,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":418,"author":{"gitId":"KhoonSun47"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":419,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":420,"author":{"gitId":"KhoonSun47"},"content":"* 3a. EstateEase detects missing name in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":421,"author":{"gitId":"KhoonSun47"},"content":"    * 3a1. EstateEase shows an error message regarding missing name. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":422,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":423,"author":{"gitId":"KhoonSun47"},"content":"  ","lastModifiedDate":"2024-03-06"},{"lineNumber":424,"author":{"gitId":"KhoonSun47"},"content":"* 3b. EstateEase detects duplicate name in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":425,"author":{"gitId":"KhoonSun47"},"content":"    * 3b1. EstateEase shows an error message regarding duplicate name. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":426,"author":{"gitId":"KhoonSun47"},"content":"      Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":427,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":428,"author":{"gitId":"KhoonSun47"},"content":"* 3c. EstateEase detects missing phone number in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":429,"author":{"gitId":"KhoonSun47"},"content":"    * 3c1. EstateEase shows an error message regarding missing phone number. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":430,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":431,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":432,"author":{"gitId":"KhoonSun47"},"content":"* 3d. EstateEase detects incorrect format for phone number in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":433,"author":{"gitId":"KhoonSun47"},"content":"    * 3d1. EstateEase shows an error message regarding incorrect format for phone number. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":434,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":435,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":436,"author":{"gitId":"KhoonSun47"},"content":"* 3e. EstateEase detects missing email in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":437,"author":{"gitId":"KhoonSun47"},"content":"    * 3e1. EstateEase shows an error message regarding missing email. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":438,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":439,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":440,"author":{"gitId":"KhoonSun47"},"content":"* 3f. EstateEase detects incorrect format for email in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":441,"author":{"gitId":"KhoonSun47"},"content":"    * 3f1. EstateEase shows an error message regarding incorrect format for email. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":442,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":443,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":444,"author":{"gitId":"KhoonSun47"},"content":"* 3g. EstateEase detects missing housing type (requirement for filter) in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":445,"author":{"gitId":"KhoonSun47"},"content":"    * 3g1. EstateEase shows an error message regarding missing housing type. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":446,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":447,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":448,"author":{"gitId":"KhoonSun47"},"content":"* 3h. EstateEase detects incorrect housing type (requirement for filter) in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":449,"author":{"gitId":"KhoonSun47"},"content":"    * 3h1. EstateEase shows an error message regarding the entry of incorrect of housing type. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":450,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":451,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":452,"author":{"gitId":"KhoonSun47"},"content":"* 3i. EstateEase detects block number, street name, unit number and postal code in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":453,"author":{"gitId":"KhoonSun47"},"content":"    * 3i1. EstateEase shows an error message regarding the entry of housing details because home-buyer should not have a home yet. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":454,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":455,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":456,"author":{"gitId":"KhoonSun47"},"content":"* 3j. EstateEase detects missing role in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":457,"author":{"gitId":"KhoonSun47"},"content":"    * 3j1. EstateEase shows an error message regarding missing role. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":458,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":459,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":460,"author":{"gitId":"KhoonSun47"},"content":"* 3k. EstateEase detects incorrect role in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":461,"author":{"gitId":"KhoonSun47"},"content":"    * 3k1. EstateEase shows an error message regarding the entry of incorrect role. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":462,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":463,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":464,"author":{"gitId":"zengzihui"},"content":"**Use case: UC03 - Add more houses to home-seller**","lastModifiedDate":"2024-03-07"},{"lineNumber":465,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":466,"author":{"gitId":"KhoonSun47"},"content":"**MSS:**","lastModifiedDate":"2024-03-06"},{"lineNumber":467,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":468,"author":{"gitId":"zengzihui"},"content":"1. User chooses to add new house to home-seller.","lastModifiedDate":"2024-03-07"},{"lineNumber":469,"author":{"gitId":"zengzihui"},"content":"2. EstateEase requests for the details of the house.","lastModifiedDate":"2024-03-07"},{"lineNumber":470,"author":{"gitId":"KhoonSun47"},"content":"3. User enters requested details.","lastModifiedDate":"2024-03-06"},{"lineNumber":471,"author":{"gitId":"zengzihui"},"content":"4. EstateEase adds the new house and displays the newly added house of the home-seller. \u003cbr\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":472,"author":{"gitId":"KhoonSun47"},"content":"   Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":473,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":474,"author":{"gitId":"zengzihui"},"content":"**Precondition for Extension 3i:** EstateEase has received the details of the house from the user. \u003cbr\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":475,"author":{"gitId":"KhoonSun47"},"content":"**Trigger:** EstateEase validates the entered details and detects that the block number is missing when the housing type is HDB/Condo.","lastModifiedDate":"2024-03-06"},{"lineNumber":476,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":477,"author":{"gitId":"zengzihui"},"content":"**Precondition for Extension 3k and 3l:** EstateEase has received the details of the house from the user. \u003cbr\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":478,"author":{"gitId":"KhoonSun47"},"content":"**Trigger:** EstateEase validates the entered details and detects that the unit number is missing when the housing type is HDB/Condo.","lastModifiedDate":"2024-03-06"},{"lineNumber":479,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":480,"author":{"gitId":"KhoonSun47"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":481,"author":{"gitId":"KhoonSun47"},"content":"* 1a. The contact list does not have any home-seller. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":482,"author":{"gitId":"KhoonSun47"},"content":"    * 1a1. EstateEase shows an error message stating that the contact list does not have home-seller. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":483,"author":{"gitId":"KhoonSun47"},"content":"      Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":484,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":485,"author":{"gitId":"KhoonSun47"},"content":"* 3a. EstateEase detects missing name of the home-seller in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":486,"author":{"gitId":"KhoonSun47"},"content":"    * 3a1. EstateEase shows an error message regarding missing name. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":487,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":488,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":489,"author":{"gitId":"KhoonSun47"},"content":"* 3b. EstateEase detects invalid name of the home-seller in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":490,"author":{"gitId":"KhoonSun47"},"content":"    * 3b1. EstateEase shows an error message regarding invalid name. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":491,"author":{"gitId":"KhoonSun47"},"content":"      Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":493,"author":{"gitId":"KhoonSun47"},"content":"* 3c. EstateEase detects that the name does not belong to home-seller, but to home-buyer instead. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":494,"author":{"gitId":"KhoonSun47"},"content":"    * 3c1. EstateEase shows an error message regarding home can only be attached to home-seller, instead of home-buyer. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":495,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":497,"author":{"gitId":"KhoonSun47"},"content":"* 3d. EstateEase detects missing housing type in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":498,"author":{"gitId":"KhoonSun47"},"content":"    * 3d1. EstateEase shows an error message regarding missing housing type. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":499,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":501,"author":{"gitId":"KhoonSun47"},"content":"* 3e. EstateEase detects incorrect housing type in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":502,"author":{"gitId":"KhoonSun47"},"content":"    * 3e1. EstateEase shows an error message regarding the entry of incorrect of housing type. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":503,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":504,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":505,"author":{"gitId":"KhoonSun47"},"content":"* 3f. EstateEase detects missing block number in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":506,"author":{"gitId":"KhoonSun47"},"content":"    * 3f1. EstateEase shows an error message regarding missing block number. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":507,"author":{"gitId":"KhoonSun47"},"content":"         Use case resumes from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":508,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":509,"author":{"gitId":"KhoonSun47"},"content":"* 3g. EstateEase detects missing street name in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":510,"author":{"gitId":"KhoonSun47"},"content":"    * 3g1. EstateEase shows an error message regarding missing street name. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":511,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":512,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":513,"author":{"gitId":"KhoonSun47"},"content":"* 3h. EstateEase detects missing unit number in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":514,"author":{"gitId":"KhoonSun47"},"content":"    * 3h1. EstateEase shows an error message regarding missing unit number. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":515,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":516,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":517,"author":{"gitId":"KhoonSun47"},"content":"* 3i. EstateEase detects incorrect format for unit number in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":518,"author":{"gitId":"KhoonSun47"},"content":"    * 3i1. EstateEase shows an error message regarding incorrect format for unit number. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":519,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":520,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":521,"author":{"gitId":"KhoonSun47"},"content":"* 3j. EstateEase detects missing postal code in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":522,"author":{"gitId":"KhoonSun47"},"content":"    * 3j1. EstateEase shows an error message regarding missing postal code. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":523,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":524,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":525,"author":{"gitId":"KhoonSun47"},"content":"* 3k. EstateEase detects incorrect format for postal code in the entered data. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":526,"author":{"gitId":"KhoonSun47"},"content":"    * 3k1. EstateEase shows an error message regarding incorrect format for postal code. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":527,"author":{"gitId":"KhoonSun47"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":528,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":529,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":530,"author":{"gitId":"zengzihui"},"content":"**Use case: UC04 - View all contacts**","lastModifiedDate":"2024-03-07"},{"lineNumber":531,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":532,"author":{"gitId":"redcolorbicycle"},"content":"**MSS:**","lastModifiedDate":"2024-03-05"},{"lineNumber":533,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":534,"author":{"gitId":"lokidoki102"},"content":"1.  User requests to list all of his/her contacts.","lastModifiedDate":"2024-03-06"},{"lineNumber":535,"author":{"gitId":"lokidoki102"},"content":"2.  EstateEase displays a list of contacts, each with their details","lastModifiedDate":"2024-03-06"},{"lineNumber":536,"author":{"gitId":"lokidoki102"},"content":"    and an indication of whether they are a buyer or seller.","lastModifiedDate":"2024-03-06"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":538,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2024-03-05"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":540,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2024-03-05"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":542,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-03-06"},{"lineNumber":543,"author":{"gitId":"lokidoki102"},"content":"    * 2a1. EstateEase displays a message stating that the list is empty.","lastModifiedDate":"2024-03-06"},{"lineNumber":544,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":545,"author":{"gitId":"redcolorbicycle"},"content":"      Use case ends.","lastModifiedDate":"2024-03-05"},{"lineNumber":546,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":547,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":548,"author":{"gitId":"zengzihui"},"content":"**Use case: UC05 - Delete a contact**","lastModifiedDate":"2024-03-07"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"lokidoki102"},"content":"**MSS:**","lastModifiedDate":"2024-03-04"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"zengzihui"},"content":"1.  User requests to \u003cu\u003eview all contacts (UC04)\u003c/u\u003e.","lastModifiedDate":"2024-03-07"},{"lineNumber":553,"author":{"gitId":"zengzihui"},"content":"2.  User requests to delete a specific contact in the contact list.","lastModifiedDate":"2024-03-07"},{"lineNumber":554,"author":{"gitId":"zengzihui"},"content":"3.  EstateEase deletes the contact.","lastModifiedDate":"2024-03-07"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"zengzihui"},"content":"* 1a. The contact list is empty.","lastModifiedDate":"2024-03-07"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"zengzihui"},"content":"* 2a. The given index is invalid input type.","lastModifiedDate":"2024-03-07"},{"lineNumber":565,"author":{"gitId":"zengzihui"},"content":"    * 2a1. EstateEase shows an error message regarding the invalid input type.","lastModifiedDate":"2024-03-07"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":567,"author":{"gitId":"zengzihui"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-07"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"zengzihui"},"content":"* 2b. The given index is out of range.","lastModifiedDate":"2024-03-07"},{"lineNumber":570,"author":{"gitId":"zengzihui"},"content":"    * 2b1. EstateEase shows an error message regarding the out of range.","lastModifiedDate":"2024-03-07"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"zengzihui"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-07"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"zengzihui"},"content":"**Use case: UC06 - Load contact data from file**","lastModifiedDate":"2024-03-07"},{"lineNumber":575,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":576,"author":{"gitId":"felixchanyy"},"content":"**Actor: EstateEase**","lastModifiedDate":"2024-03-06"},{"lineNumber":577,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":578,"author":{"gitId":"felixchanyy"},"content":"**Preconditions:**","lastModifiedDate":"2024-03-06"},{"lineNumber":579,"author":{"gitId":"felixchanyy"},"content":"- EstateEase is initialized.","lastModifiedDate":"2024-03-06"},{"lineNumber":580,"author":{"gitId":"felixchanyy"},"content":"- The user starts the application.","lastModifiedDate":"2024-03-06"},{"lineNumber":581,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":582,"author":{"gitId":"felixchanyy"},"content":"**MSS:**","lastModifiedDate":"2024-03-06"},{"lineNumber":583,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":584,"author":{"gitId":"felixchanyy"},"content":"1. EstateEase automatically loads existing contact and address data from a JSON file stored in the \"data\" folder at the same directory level as the application.","lastModifiedDate":"2024-03-06"},{"lineNumber":585,"author":{"gitId":"felixchanyy"},"content":"2. EstateEase parses the JSON file and imports the contact and address data into the application\u0027s memory.","lastModifiedDate":"2024-03-06"},{"lineNumber":586,"author":{"gitId":"felixchanyy"},"content":"3. EstateEase displays the imported contact and address data to the user.","lastModifiedDate":"2024-03-06"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":588,"author":{"gitId":"felixchanyy"},"content":"   Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":590,"author":{"gitId":"felixchanyy"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":591,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":592,"author":{"gitId":"felixchanyy"},"content":"* 1a. EstateEase detects that the JSON file in the \"data\" folder is missing or inaccessible.","lastModifiedDate":"2024-03-06"},{"lineNumber":593,"author":{"gitId":"felixchanyy"},"content":"    * 1a1. EstateEase attempts to create an empty JSON file named \"addressbook.json\" in the \"data\" folder.","lastModifiedDate":"2024-03-06"},{"lineNumber":594,"author":{"gitId":"felixchanyy"},"content":"    * 1a2. If EstateEase fails to create the JSON file:","lastModifiedDate":"2024-03-06"},{"lineNumber":595,"author":{"gitId":"felixchanyy"},"content":"        * 1a2a. EstateEase displays an error message indicating that the contact and address data could not be loaded, and the \"data\" folder could not be accessed.","lastModifiedDate":"2024-03-06"},{"lineNumber":596,"author":{"gitId":"felixchanyy"},"content":"          Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":597,"author":{"gitId":"felixchanyy"},"content":"    * 1a3. If EstateEase successfully creates the JSON file:","lastModifiedDate":"2024-03-06"},{"lineNumber":598,"author":{"gitId":"felixchanyy"},"content":"        * 1a3a. EstateEase proceeds to load contact and address data from the newly created JSON file.","lastModifiedDate":"2024-03-06"},{"lineNumber":599,"author":{"gitId":"felixchanyy"},"content":"          Use case continues from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":600,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":601,"author":{"gitId":"felixchanyy"},"content":"* 1b. EstateEase detects that the JSON file in the \"data\" folder is empty.","lastModifiedDate":"2024-03-06"},{"lineNumber":602,"author":{"gitId":"felixchanyy"},"content":"    * 1b1. EstateEase displays a message indicating that there are no contacts with address data to load.","lastModifiedDate":"2024-03-06"},{"lineNumber":603,"author":{"gitId":"felixchanyy"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":604,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":605,"author":{"gitId":"felixchanyy"},"content":"* 1c. EstateEase detects that the JSON file in the \"data\" folder has incorrect format.","lastModifiedDate":"2024-03-06"},{"lineNumber":606,"author":{"gitId":"felixchanyy"},"content":"    * 1c1. EstateEase displays an error message indicating that the contact and address data could not be loaded due to incorrect file format.","lastModifiedDate":"2024-03-06"},{"lineNumber":607,"author":{"gitId":"felixchanyy"},"content":"      Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":608,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":609,"author":{"gitId":"felixchanyy"},"content":"* 1d. EstateEase detects that the \"data\" folder does not exist.","lastModifiedDate":"2024-03-06"},{"lineNumber":610,"author":{"gitId":"felixchanyy"},"content":"    * 1d1. EstateEase attempts to create the \"data\" folder.","lastModifiedDate":"2024-03-06"},{"lineNumber":611,"author":{"gitId":"felixchanyy"},"content":"    * 1d2. If EstateEase fails to create the \"data\" folder:","lastModifiedDate":"2024-03-06"},{"lineNumber":612,"author":{"gitId":"felixchanyy"},"content":"        * 1d2a. EstateEase displays an error message indicating that the \"data\" folder could not be created.","lastModifiedDate":"2024-03-06"},{"lineNumber":613,"author":{"gitId":"felixchanyy"},"content":"          Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":614,"author":{"gitId":"felixchanyy"},"content":"    * 1d3. If EstateEase successfully creates the \"data\" folder:","lastModifiedDate":"2024-03-06"},{"lineNumber":615,"author":{"gitId":"felixchanyy"},"content":"        * 1d3a. EstateEase proceeds to create an empty JSON file named \"addressbook.json\" in the \"data\" folder.","lastModifiedDate":"2024-03-06"},{"lineNumber":616,"author":{"gitId":"felixchanyy"},"content":"        * 1d3b. EstateEase proceeds to load contact and address data from the newly created JSON file.","lastModifiedDate":"2024-03-06"},{"lineNumber":617,"author":{"gitId":"felixchanyy"},"content":"          Use case continues from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":618,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":619,"author":{"gitId":"zengzihui"},"content":"**Use case: UC07 - Save to storage**","lastModifiedDate":"2024-03-07"},{"lineNumber":620,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":621,"author":{"gitId":"lokidoki102"},"content":"**Actor: EstateEase**","lastModifiedDate":"2024-03-04"},{"lineNumber":622,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":623,"author":{"gitId":"lokidoki102"},"content":"**Preconditions: The user initiates an add or delete command**","lastModifiedDate":"2024-03-04"},{"lineNumber":624,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":625,"author":{"gitId":"lokidoki102"},"content":"**MSS:**","lastModifiedDate":"2024-03-04"},{"lineNumber":626,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":627,"author":{"gitId":"lokidoki102"},"content":"1.  EstateEase processes the add (UC01) or delete (UC03) command and updates the address book accordingly.","lastModifiedDate":"2024-03-04"},{"lineNumber":628,"author":{"gitId":"lokidoki102"},"content":"2.  EstateEase attempts to update the JSON file accordingly.","lastModifiedDate":"2024-03-04"},{"lineNumber":629,"author":{"gitId":"lokidoki102"},"content":"3.  EstateEase successfully updates the JSON file.","lastModifiedDate":"2024-03-04"},{"lineNumber":630,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":631,"author":{"gitId":"lokidoki102"},"content":"    Use case ends.","lastModifiedDate":"2024-03-04"},{"lineNumber":632,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":633,"author":{"gitId":"lokidoki102"},"content":"**Extensions**","lastModifiedDate":"2024-03-04"},{"lineNumber":634,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":635,"author":{"gitId":"lokidoki102"},"content":"* 2a. EstateEase is unable to write to the JSON file due to file permission issue.","lastModifiedDate":"2024-03-04"},{"lineNumber":636,"author":{"gitId":"lokidoki102"},"content":"    * 2a1. EstateEase shows error message regarding the insufficient file permission to the user.","lastModifiedDate":"2024-03-04"},{"lineNumber":637,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":638,"author":{"gitId":"lokidoki102"},"content":"      Use case ends.","lastModifiedDate":"2024-03-04"},{"lineNumber":639,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":640,"author":{"gitId":"lokidoki102"},"content":"* 2b. EstateEase is unable to write to the JSON file due to some IOException.","lastModifiedDate":"2024-03-04"},{"lineNumber":641,"author":{"gitId":"lokidoki102"},"content":"    * 2b1. EstateEase shows error message regarding the IOException to the user.","lastModifiedDate":"2024-03-04"},{"lineNumber":642,"author":{"gitId":"lokidoki102"},"content":"      Use case ends.","lastModifiedDate":"2024-03-04"},{"lineNumber":643,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":644,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":645,"author":{"gitId":"zengzihui"},"content":"**Use case: UC08 - Search a contact**","lastModifiedDate":"2024-03-07"},{"lineNumber":646,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":647,"author":{"gitId":"felixchanyy"},"content":"**MSS:**","lastModifiedDate":"2024-03-06"},{"lineNumber":648,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":649,"author":{"gitId":"zengzihui"},"content":"1. User requests to search for a contact.","lastModifiedDate":"2024-03-07"},{"lineNumber":650,"author":{"gitId":"zengzihui"},"content":"2. EstateEase displays all the contacts that match the inputted contact name.","lastModifiedDate":"2024-03-07"},{"lineNumber":651,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":652,"author":{"gitId":"zengzihui"},"content":"    Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":653,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":654,"author":{"gitId":"felixchanyy"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":655,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":656,"author":{"gitId":"zengzihui"},"content":"* 1a. The given contact name does not match any contact names in the contact list.","lastModifiedDate":"2024-03-07"},{"lineNumber":657,"author":{"gitId":"zengzihui"},"content":"    * 1a1. EstateEase shows an error message indicating no matches found.","lastModifiedDate":"2024-03-07"},{"lineNumber":658,"author":{"gitId":"zengzihui"},"content":"    ","lastModifiedDate":"2024-03-07"},{"lineNumber":659,"author":{"gitId":"zengzihui"},"content":"      Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":660,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":661,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":662,"author":{"gitId":"zengzihui"},"content":"**Use case: UC09 - View a home-buyer\u0027s requirements**","lastModifiedDate":"2024-03-07"},{"lineNumber":663,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":664,"author":{"gitId":"felixchanyy"},"content":"**MSS:**","lastModifiedDate":"2024-03-06"},{"lineNumber":665,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":666,"author":{"gitId":"zengzihui"},"content":"1. User enters the command to view the specific buyer\u0027s requirements.","lastModifiedDate":"2024-03-07"},{"lineNumber":667,"author":{"gitId":"zengzihui"},"content":"2. EstateEase processes the view command with home-buyer as filter.","lastModifiedDate":"2024-03-07"},{"lineNumber":668,"author":{"gitId":"zengzihui"},"content":"3. EstateEase displays the home-buyer\u0027s requirements.","lastModifiedDate":"2024-03-07"},{"lineNumber":669,"author":{"gitId":"zengzihui"},"content":"   Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":670,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":671,"author":{"gitId":"felixchanyy"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":672,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":673,"author":{"gitId":"zengzihui"},"content":"* 2a. EstateEase detects an invalid name.","lastModifiedDate":"2024-03-07"},{"lineNumber":674,"author":{"gitId":"zengzihui"},"content":"    *   2a1. EstateEase shows an error message regarding an invalid entry.","lastModifiedDate":"2024-03-07"},{"lineNumber":675,"author":{"gitId":"zengzihui"},"content":"        Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":676,"author":{"gitId":"zengzihui"},"content":"* 2b. Command does not match EstateEase\u0027s registered command spelling.","lastModifiedDate":"2024-03-07"},{"lineNumber":677,"author":{"gitId":"zengzihui"},"content":"    *   2b1. EstateEase shows an error message regarding an invalid command.","lastModifiedDate":"2024-03-07"},{"lineNumber":678,"author":{"gitId":"felixchanyy"},"content":"        Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":679,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":680,"author":{"gitId":"zengzihui"},"content":"**Use case: UC10 - View a home-seller\u0027s properties**","lastModifiedDate":"2024-03-07"},{"lineNumber":681,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":682,"author":{"gitId":"felixchanyy"},"content":"**MSS:**","lastModifiedDate":"2024-03-06"},{"lineNumber":683,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":684,"author":{"gitId":"zengzihui"},"content":"1. User enters the command to view the specific seller\u0027s requirements.","lastModifiedDate":"2024-03-07"},{"lineNumber":685,"author":{"gitId":"zengzihui"},"content":"2. EstateEase processes the view command with home-seller as filter.","lastModifiedDate":"2024-03-07"},{"lineNumber":686,"author":{"gitId":"zengzihui"},"content":"3. EstateEase displays the home-seller\u0027s requirements.","lastModifiedDate":"2024-03-07"},{"lineNumber":687,"author":{"gitId":"zengzihui"},"content":"   ","lastModifiedDate":"2024-03-07"},{"lineNumber":688,"author":{"gitId":"zengzihui"},"content":"    Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":689,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":690,"author":{"gitId":"felixchanyy"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":691,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":692,"author":{"gitId":"zengzihui"},"content":"* 2a. EstateEase detects an invalid name.","lastModifiedDate":"2024-03-07"},{"lineNumber":693,"author":{"gitId":"zengzihui"},"content":"    * 2a1. EstateEase shows an error message regarding an invalid entry.","lastModifiedDate":"2024-03-07"},{"lineNumber":694,"author":{"gitId":"zengzihui"},"content":"      ","lastModifiedDate":"2024-03-07"},{"lineNumber":695,"author":{"gitId":"felixchanyy"},"content":"      Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":696,"author":{"gitId":"zengzihui"},"content":"* 2b. Command does not match EstateEase\u0027s registered command spelling.","lastModifiedDate":"2024-03-07"},{"lineNumber":697,"author":{"gitId":"zengzihui"},"content":"    * 2b1. EstateEase shows an error message regarding an invalid command.","lastModifiedDate":"2024-03-07"},{"lineNumber":698,"author":{"gitId":"zengzihui"},"content":"      ","lastModifiedDate":"2024-03-07"},{"lineNumber":699,"author":{"gitId":"zengzihui"},"content":"      Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":700,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":701,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":702,"author":{"gitId":"zengzihui"},"content":"**Use case: UC11 - Edit contact details**","lastModifiedDate":"2024-03-07"},{"lineNumber":703,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":704,"author":{"gitId":"lokidoki102"},"content":"**MSS:**","lastModifiedDate":"2024-03-06"},{"lineNumber":705,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":706,"author":{"gitId":"zengzihui"},"content":"1.  User requests to \u003cu\u003eview all contacts (UC04)\u003c/u\u003e.","lastModifiedDate":"2024-03-07"},{"lineNumber":707,"author":{"gitId":"zengzihui"},"content":"2.  User requests to edit the details of a specific person in the list.","lastModifiedDate":"2024-03-07"},{"lineNumber":708,"author":{"gitId":"zengzihui"},"content":"3.  EstateEase updates the details of the specific person selected by the user.","lastModifiedDate":"2024-03-07"},{"lineNumber":709,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":710,"author":{"gitId":"lokidoki102"},"content":"    Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":711,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":712,"author":{"gitId":"lokidoki102"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":713,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":714,"author":{"gitId":"zengzihui"},"content":"* 2a. The given index is invalid.","lastModifiedDate":"2024-03-07"},{"lineNumber":715,"author":{"gitId":"zengzihui"},"content":"    * 2a1. EstateEase shows an error message.","lastModifiedDate":"2024-03-07"},{"lineNumber":716,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":717,"author":{"gitId":"lokidoki102"},"content":"      Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":718,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":719,"author":{"gitId":"zengzihui"},"content":"* 2b. The new value for the field being updated is not valid.","lastModifiedDate":"2024-03-07"},{"lineNumber":720,"author":{"gitId":"zengzihui"},"content":"    * 2b1. EstateEase shows error message, indicating the nature of the invalid input.","lastModifiedDate":"2024-03-07"},{"lineNumber":721,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":722,"author":{"gitId":"lokidoki102"},"content":"      Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":723,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":724,"author":{"gitId":"zengzihui"},"content":"**Use case: UC12 - Filter out buyers**","lastModifiedDate":"2024-03-07"},{"lineNumber":725,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":726,"author":{"gitId":"zengzihui"},"content":"**MSS:**","lastModifiedDate":"2024-03-07"},{"lineNumber":727,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":728,"author":{"gitId":"zengzihui"},"content":"1.  User requests to view only buyers that are still looking for a houses or those that","lastModifiedDate":"2024-03-07"},{"lineNumber":729,"author":{"gitId":"zengzihui"},"content":"    have already gotten their house.","lastModifiedDate":"2024-03-07"},{"lineNumber":730,"author":{"gitId":"zengzihui"},"content":"2.  EstateEase shows a list of all his/her house buyers based on the filter","lastModifiedDate":"2024-03-07"},{"lineNumber":731,"author":{"gitId":"zengzihui"},"content":"    (i.e. still looking for a house).","lastModifiedDate":"2024-03-07"},{"lineNumber":732,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":733,"author":{"gitId":"zengzihui"},"content":"    Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":734,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":735,"author":{"gitId":"zengzihui"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":736,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":737,"author":{"gitId":"zengzihui"},"content":"* 1a. There are no buyers that match the filter.","lastModifiedDate":"2024-03-07"},{"lineNumber":738,"author":{"gitId":"zengzihui"},"content":"    * 1a1. EstateEase displays a message stating that the list is empty.","lastModifiedDate":"2024-03-07"},{"lineNumber":739,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":740,"author":{"gitId":"zengzihui"},"content":"      Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":741,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":742,"author":{"gitId":"zengzihui"},"content":"**Use case: UC13 - Find matching sellers for a buyer**","lastModifiedDate":"2024-03-07"},{"lineNumber":743,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":744,"author":{"gitId":"zengzihui"},"content":"**MSS:**","lastModifiedDate":"2024-03-07"},{"lineNumber":745,"author":{"gitId":"zengzihui"},"content":"1. User requests to \u003cu\u003efilter out buyers (UC12)\u003c/u\u003e.","lastModifiedDate":"2024-03-07"},{"lineNumber":746,"author":{"gitId":"zengzihui"},"content":"2. User requests to find all the matching sellers for a buyer based on their requirements.","lastModifiedDate":"2024-03-07"},{"lineNumber":747,"author":{"gitId":"zengzihui"},"content":"3. EstateEase displays the list of sellers who have properties that match the buyer\u0027s requirements.","lastModifiedDate":"2024-03-07"},{"lineNumber":748,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":749,"author":{"gitId":"zengzihui"},"content":"Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":750,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":751,"author":{"gitId":"zengzihui"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":752,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":753,"author":{"gitId":"zengzihui"},"content":"* 1a. The list is empty.","lastModifiedDate":"2024-03-07"},{"lineNumber":754,"author":{"gitId":"zengzihui"},"content":"  ","lastModifiedDate":"2024-03-07"},{"lineNumber":755,"author":{"gitId":"zengzihui"},"content":"  Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":756,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":757,"author":{"gitId":"zengzihui"},"content":"* 2a. The given index for the buyer is invalid input type.","lastModifiedDate":"2024-03-07"},{"lineNumber":758,"author":{"gitId":"zengzihui"},"content":"    * 2a1. EstateEase shows an error message indicating the invalid input type.","lastModifiedDate":"2024-03-07"},{"lineNumber":759,"author":{"gitId":"zengzihui"},"content":"      ","lastModifiedDate":"2024-03-07"},{"lineNumber":760,"author":{"gitId":"zengzihui"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-07"},{"lineNumber":761,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":762,"author":{"gitId":"zengzihui"},"content":"* 2b. The given index for the buyer is out of range.","lastModifiedDate":"2024-03-07"},{"lineNumber":763,"author":{"gitId":"zengzihui"},"content":"    * 2b1. EstateEase shows an error message indicating the out of range for the index.","lastModifiedDate":"2024-03-07"},{"lineNumber":764,"author":{"gitId":"zengzihui"},"content":"      ","lastModifiedDate":"2024-03-07"},{"lineNumber":765,"author":{"gitId":"zengzihui"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-07"},{"lineNumber":766,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":767,"author":{"gitId":"zengzihui"},"content":"* 3a. There are no sellers in the contact list.","lastModifiedDate":"2024-03-07"},{"lineNumber":768,"author":{"gitId":"zengzihui"},"content":"    * 3a1. EstateEase shows a message indicating there is no sellers in the contact list.","lastModifiedDate":"2024-03-07"},{"lineNumber":769,"author":{"gitId":"zengzihui"},"content":"      ","lastModifiedDate":"2024-03-07"},{"lineNumber":770,"author":{"gitId":"zengzihui"},"content":"      Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":771,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":772,"author":{"gitId":"zengzihui"},"content":"* 3b. There are no matching properties based on the buyer\u0027s requirements.","lastModifiedDate":"2024-03-07"},{"lineNumber":773,"author":{"gitId":"zengzihui"},"content":"    * 3b1. EstateEase shows a message indicating there is no matching results.","lastModifiedDate":"2024-03-07"},{"lineNumber":774,"author":{"gitId":"zengzihui"},"content":"      ","lastModifiedDate":"2024-03-07"},{"lineNumber":775,"author":{"gitId":"zengzihui"},"content":"      Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":776,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":777,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":778,"author":{"gitId":"zengzihui"},"content":"**Use case: UC14 - Link Buyer to Seller**","lastModifiedDate":"2024-03-07"},{"lineNumber":779,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":780,"author":{"gitId":"zengzihui"},"content":"**MSS:**","lastModifiedDate":"2024-03-07"},{"lineNumber":781,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":782,"author":{"gitId":"zengzihui"},"content":"1. User initiates the process of linking a buyer to sellers for a specific property.","lastModifiedDate":"2024-03-07"},{"lineNumber":783,"author":{"gitId":"zengzihui"},"content":"2. EstateEase validates the provided property information, buyer ID, and seller ID.","lastModifiedDate":"2024-03-07"},{"lineNumber":784,"author":{"gitId":"zengzihui"},"content":"3. EstateEase proceeds to link the buyer to the specified seller(s) for the given property.","lastModifiedDate":"2024-03-07"},{"lineNumber":785,"author":{"gitId":"zengzihui"},"content":"4. Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":786,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":787,"author":{"gitId":"zengzihui"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":788,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":789,"author":{"gitId":"zengzihui"},"content":"* 1a. User provides invalid input for linking.","lastModifiedDate":"2024-03-07"},{"lineNumber":790,"author":{"gitId":"zengzihui"},"content":"    * 1a1. EstateEase displays an error message indicating the issue with the input.","lastModifiedDate":"2024-03-07"},{"lineNumber":791,"author":{"gitId":"zengzihui"},"content":"      Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":792,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":793,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":794,"author":{"gitId":"zengzihui"},"content":"**Use case: UC15 - View home sellers by priority**","lastModifiedDate":"2024-03-07"},{"lineNumber":795,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":796,"author":{"gitId":"zengzihui"},"content":"**Preconditions:**","lastModifiedDate":"2024-03-07"},{"lineNumber":797,"author":{"gitId":"zengzihui"},"content":"- The user initialises a view command with home-seller as a filter","lastModifiedDate":"2024-03-07"},{"lineNumber":798,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":799,"author":{"gitId":"zengzihui"},"content":"**MSS:**","lastModifiedDate":"2024-03-07"},{"lineNumber":800,"author":{"gitId":"zengzihui"},"content":"1.  EstateEase process the view command with home-seller as filter.","lastModifiedDate":"2024-03-07"},{"lineNumber":801,"author":{"gitId":"zengzihui"},"content":"2.  EstateEase shows a list of home-sellers, arranged based on their priority. \u003cbr\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":802,"author":{"gitId":"zengzihui"},"content":"    Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":803,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":804,"author":{"gitId":"zengzihui"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":805,"author":{"gitId":"zengzihui"},"content":"* 1a. The contact list does not have any home-seller. \u003cbr\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":806,"author":{"gitId":"zengzihui"},"content":"    * 1a1. EstateEase shows an error message stating that the contact list does not have home-seller. \u003cbr\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":807,"author":{"gitId":"zengzihui"},"content":"      Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":808,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":809,"author":{"gitId":"lokidoki102"},"content":"      ","lastModifiedDate":"2024-03-06"},{"lineNumber":810,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":811,"author":{"gitId":"zengzihui"},"content":"**Use case: UC16 - Differentiate home-seller status**","lastModifiedDate":"2024-03-07"},{"lineNumber":812,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":813,"author":{"gitId":"zengzihui"},"content":"**MSS:**","lastModifiedDate":"2024-03-07"},{"lineNumber":814,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":815,"author":{"gitId":"zengzihui"},"content":"1. User filters for home-sellers","lastModifiedDate":"2024-03-07"},{"lineNumber":816,"author":{"gitId":"zengzihui"},"content":"2. EstateEase displays home-sellers. Free home-sellers are highlighted in green.","lastModifiedDate":"2024-03-07"},{"lineNumber":817,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":818,"author":{"gitId":"lokidoki102"},"content":"    Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":819,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":820,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":821,"author":{"gitId":"zengzihui"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":822,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":823,"author":{"gitId":"zengzihui"},"content":"* 2a. Pending home-sellers are displayed in red.","lastModifiedDate":"2024-03-07"},{"lineNumber":824,"author":{"gitId":"zengzihui"},"content":"  *   2a1. User clicks on one of the pending home-sellers. The home-seller\u0027s status is set to pending.","lastModifiedDate":"2024-03-07"},{"lineNumber":825,"author":{"gitId":"zengzihui"},"content":"      ","lastModifiedDate":"2024-03-07"},{"lineNumber":826,"author":{"gitId":"zengzihui"},"content":"       Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":827,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":828,"author":{"gitId":"zengzihui"},"content":"* 2b. User clicks on one of the free home-sellers. The home-seller\u0027s status is set to free.","lastModifiedDate":"2024-03-07"},{"lineNumber":829,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":830,"author":{"gitId":"zengzihui"},"content":"  Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":831,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":832,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":833,"author":{"gitId":"zengzihui"},"content":"**Use case: UC17 - Differentiate home-buyer status**","lastModifiedDate":"2024-03-07"},{"lineNumber":834,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":835,"author":{"gitId":"zengzihui"},"content":"**MSS:**","lastModifiedDate":"2024-03-07"},{"lineNumber":836,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":837,"author":{"gitId":"zengzihui"},"content":"1.  User requests to \u003cu\u003eview all contacts\u003c/u\u003e.","lastModifiedDate":"2024-03-07"},{"lineNumber":838,"author":{"gitId":"zengzihui"},"content":"2.  EstateEase displays and highlights the home-buyers who are still looking for houses in green, ","lastModifiedDate":"2024-03-07"},{"lineNumber":839,"author":{"gitId":"zengzihui"},"content":"    and the home-buyers who are pending in finalizing a deal or done deal in red.","lastModifiedDate":"2024-03-07"},{"lineNumber":840,"author":{"gitId":"zengzihui"},"content":"    ","lastModifiedDate":"2024-03-07"},{"lineNumber":841,"author":{"gitId":"zengzihui"},"content":"    Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":842,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":843,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":844,"author":{"gitId":"zengzihui"},"content":"**Use case: UC18 - Adding notes about clients**","lastModifiedDate":"2024-03-07"},{"lineNumber":845,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":846,"author":{"gitId":"zengzihui"},"content":"**MSS:**","lastModifiedDate":"2024-03-07"},{"lineNumber":847,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":848,"author":{"gitId":"zengzihui"},"content":"1. User enters a remark regarding a client.","lastModifiedDate":"2024-03-07"},{"lineNumber":849,"author":{"gitId":"zengzihui"},"content":"2. EstateEase adds the provided remark to the client identified by the specified index.","lastModifiedDate":"2024-03-07"},{"lineNumber":850,"author":{"gitId":"zengzihui"},"content":"   ","lastModifiedDate":"2024-03-07"},{"lineNumber":851,"author":{"gitId":"zengzihui"},"content":"   Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":852,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":853,"author":{"gitId":"zengzihui"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":854,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":855,"author":{"gitId":"zengzihui"},"content":"* 1a. User enters an invalid index or remark format.","lastModifiedDate":"2024-03-07"},{"lineNumber":856,"author":{"gitId":"zengzihui"},"content":"    * 1a1. EstateEase displays an error message indicating the invalid input.","lastModifiedDate":"2024-03-07"},{"lineNumber":857,"author":{"gitId":"zengzihui"},"content":"      Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":858,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":859,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":860,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":861,"author":{"gitId":"zengzihui"},"content":"**Use case: UC19 - Exit application**","lastModifiedDate":"2024-03-07"},{"lineNumber":862,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":863,"author":{"gitId":"zengzihui"},"content":"**MSS:**","lastModifiedDate":"2024-03-07"},{"lineNumber":864,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":865,"author":{"gitId":"zengzihui"},"content":"1. User enters the \u0027exit\u0027 command.","lastModifiedDate":"2024-03-07"},{"lineNumber":866,"author":{"gitId":"zengzihui"},"content":"2. EstateEase immediately closes the application.","lastModifiedDate":"2024-03-07"},{"lineNumber":867,"author":{"gitId":"zengzihui"},"content":"   ","lastModifiedDate":"2024-03-07"},{"lineNumber":868,"author":{"gitId":"zengzihui"},"content":"   Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":869,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":870,"author":{"gitId":"zengzihui"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":871,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":872,"author":{"gitId":"zengzihui"},"content":"* 1a. User enters an unrecognized command.","lastModifiedDate":"2024-03-07"},{"lineNumber":873,"author":{"gitId":"zengzihui"},"content":"    * 1a1. EstateEase displays a message \"Unknown command\".","lastModifiedDate":"2024-03-07"},{"lineNumber":874,"author":{"gitId":"zengzihui"},"content":"      Use case resumes from the previous step.","lastModifiedDate":"2024-03-07"},{"lineNumber":875,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":876,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":877,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":878,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":879,"author":{"gitId":"KhoonSun47"},"content":"1. The program should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2024-03-06"},{"lineNumber":880,"author":{"gitId":"KhoonSun47"},"content":"2. The program should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2024-03-06"},{"lineNumber":881,"author":{"gitId":"KhoonSun47"},"content":"3. The program should be capable of running both online and offline.","lastModifiedDate":"2024-03-06"},{"lineNumber":882,"author":{"gitId":"KhoonSun47"},"content":"4. The program should be able to recover from common errors and not crash without user intervention.","lastModifiedDate":"2024-03-06"},{"lineNumber":883,"author":{"gitId":"KhoonSun47"},"content":"5. The program should provide meaningful error messages that guide the user to resolve issues.","lastModifiedDate":"2024-03-06"},{"lineNumber":884,"author":{"gitId":"KhoonSun47"},"content":"6. The program should be able to respond to any user input within at most 2 seconds.","lastModifiedDate":"2024-03-06"},{"lineNumber":885,"author":{"gitId":"KhoonSun47"},"content":"7. The program must perform consistently across different devices and operating systems with a reliability rate of 99%.","lastModifiedDate":"2024-03-06"},{"lineNumber":886,"author":{"gitId":"KhoonSun47"},"content":"8. The program only supports one user at a time.","lastModifiedDate":"2024-03-06"},{"lineNumber":887,"author":{"gitId":"KhoonSun47"},"content":"9. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2024-03-06"},{"lineNumber":888,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":889,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":890,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":891,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09"},{"lineNumber":892,"author":{"gitId":"KhoonSun47"},"content":"* **CLI**: Command Line Interface","lastModifiedDate":"2024-03-06"},{"lineNumber":893,"author":{"gitId":"KhoonSun47"},"content":"* **GUI**: Graphical User Interface","lastModifiedDate":"2024-03-06"},{"lineNumber":894,"author":{"gitId":"KhoonSun47"},"content":"* **Index**: A number that references the position of the contact in the contact list","lastModifiedDate":"2024-03-06"},{"lineNumber":895,"author":{"gitId":"KhoonSun47"},"content":"* **Unique ID**: An attribute that uniquely identifies the contacts and houses in the contact list","lastModifiedDate":"2024-03-06"},{"lineNumber":896,"author":{"gitId":"KhoonSun47"},"content":"* **Home-buyer**: The contact who wants to buy a house","lastModifiedDate":"2024-03-06"},{"lineNumber":897,"author":{"gitId":"KhoonSun47"},"content":"* **Home-seller**: The contact who wants to sell their houses.","lastModifiedDate":"2024-03-06"},{"lineNumber":898,"author":{"gitId":"KhoonSun47"},"content":"* **Contact**: Home-buyer/Home-seller who is added to the list, containing details of name, phone number etc.","lastModifiedDate":"2024-03-06"},{"lineNumber":899,"author":{"gitId":"KhoonSun47"},"content":"* **Home**: Details of the homes by the home-seller","lastModifiedDate":"2024-03-06"},{"lineNumber":900,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":901,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":902,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":903,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":904,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":905,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":906,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":907,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":908,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":909,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":910,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":911,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":912,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":913,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":914,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":915,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":916,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":917,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":918,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":919,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":920,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":921,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":922,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":923,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":924,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":925,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":926,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":927,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":928,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":929,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":930,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":931,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":932,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":933,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":934,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":935,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":936,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":937,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":938,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":939,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":940,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":941,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":942,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":943,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":944,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":945,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":946,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":947,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":948,"author":{"gitId":"felixchanyy"},"content":"### Loading and Saving Data","lastModifiedDate":"2024-03-06"},{"lineNumber":949,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":950,"author":{"gitId":"felixchanyy"},"content":"1. **Dealing with Missing/Created Data Folder**","lastModifiedDate":"2024-03-06"},{"lineNumber":951,"author":{"gitId":"felixchanyy"},"content":"    - **Loading Data:**","lastModifiedDate":"2024-03-06"},{"lineNumber":952,"author":{"gitId":"felixchanyy"},"content":"        - _{Explain how to simulate a missing data folder during loading, and the expected behavior}_","lastModifiedDate":"2024-03-06"},{"lineNumber":953,"author":{"gitId":"felixchanyy"},"content":"    - **Saving Data:**","lastModifiedDate":"2024-03-06"},{"lineNumber":954,"author":{"gitId":"felixchanyy"},"content":"        - _{Explain how to simulate a missing data folder during saving, and the expected behavior}_","lastModifiedDate":"2024-03-06"},{"lineNumber":955,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":956,"author":{"gitId":"felixchanyy"},"content":"2.  **Dealing with Missing/Corrupted Data Files**","lastModifiedDate":"2024-03-06"},{"lineNumber":957,"author":{"gitId":"felixchanyy"},"content":"    - **Loading Data:**","lastModifiedDate":"2024-03-06"},{"lineNumber":958,"author":{"gitId":"felixchanyy"},"content":"        - _{Explain how to simulate a missing or corrupted data file during loading, and the expected behavior}_","lastModifiedDate":"2024-03-06"},{"lineNumber":959,"author":{"gitId":"felixchanyy"},"content":"    - **Saving Data:**","lastModifiedDate":"2024-03-06"},{"lineNumber":960,"author":{"gitId":"felixchanyy"},"content":"        - _{Explain how to simulate a missing or corrupted data file during saving, and the expected behavior}_","lastModifiedDate":"2024-03-06"},{"lineNumber":961,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":962,"author":{"gitId":"felixchanyy"},"content":"3. _{ more test cases …​ }_","lastModifiedDate":"2024-03-06"},{"lineNumber":963,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"redcolorbicycle":6,"zengzihui":238,"KhoonSun47":220,"felixchanyy":77,"-":372,"lokidoki102":50}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"User Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":"# EstateEase User Guide","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"felixchanyy"},"content":"EstateEase is a **desktop app for managing contacts, optimized for use via a  Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Estate Ease can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"1. Download the latest `addressbook.jar` from [here](https://github.com/se-edu/addressbook-level3/releases).","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your AddressBook.","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar addressbook.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2023-01-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"Adds a person to the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"**Tip:** A person can have any number of tags (including 0)","lastModifiedDate":"2023-09-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"AddressBook data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-09-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.  Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Furthermore, certain edits can cause the AddressBook to behave in unexpected ways (e.g., if a value entered is outside the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2023-09-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"Action     | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"-----------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"**Add**    | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"**Clear**  | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"**Edit**   | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"**Find**   | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"**List**   | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"**Help**   | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"felixchanyy":2,"-":202}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003eEstateEase\u003c/a\u003e","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/index.html\" class\u003d\"nav-link\"\u003eHome\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/se-edu/addressbook-level3\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#quick-start)","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#features)","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * [Appendix: Requirements]({{ baseUrl }}/DeveloperGuide.html#appendix-requirements)","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  * [Appendix: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* Tutorials","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Tracing code]({{ baseUrl }}/tutorials/TracingCode.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * [Adding a command]({{ baseUrl }}/tutorials/AddRemark.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  * [Removing Fields]({{ baseUrl }}/tutorials/RemovingFields.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"felixchanyy":1,"-":66}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"                .append(\"; Postal Code: \")","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"                .append(person.getPostalCode())","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KhoonSun47":2,"-":51}},{"path":"src/main/java/seedu/address/logic/commands/AddBuyerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"felixchanyy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSTALCODE;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":" * Adds a buyer to the address book.","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"public class AddBuyerCommand extends Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"felixchanyy"},"content":"    public static final String COMMAND_WORD \u003d \"addbuyer\";","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"felixchanyy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a buyer to the address book. \"","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"felixchanyy"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_POSTALCODE + \"POSTAL CODE \"","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"felixchanyy"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"felixchanyy"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_POSTALCODE + \"578578 \"","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"felixchanyy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New buyer added: %1$s\";","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"felixchanyy"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This buyer already exists in the address book\";","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"felixchanyy"},"content":"    private final Person buyerToAdd;","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"felixchanyy"},"content":"     * Creates an AddBuyerCommand to add the specified buyer.","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"felixchanyy"},"content":"     * @param person The buyer to be added.","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"felixchanyy"},"content":"    public AddBuyerCommand(Person person) {","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"felixchanyy"},"content":"        requireNonNull(person);","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"felixchanyy"},"content":"        buyerToAdd \u003d person;","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"felixchanyy"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"felixchanyy"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"felixchanyy"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"felixchanyy"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"felixchanyy"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"felixchanyy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"felixchanyy"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"felixchanyy"},"content":"        if (model.hasPerson(buyerToAdd)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"felixchanyy"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"felixchanyy"},"content":"        model.addPerson(buyerToAdd);","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"felixchanyy"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(buyerToAdd)));","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"felixchanyy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"felixchanyy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"felixchanyy"},"content":"            return true;","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"felixchanyy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"felixchanyy"},"content":"        if (!(other instanceof AddBuyerCommand)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"felixchanyy"},"content":"            return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"felixchanyy"},"content":"        AddBuyerCommand otherAddCommand \u003d (AddBuyerCommand) other;","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"felixchanyy"},"content":"        return buyerToAdd.equals(otherAddCommand.buyerToAdd);","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"felixchanyy"},"content":"    public String toString() {","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"felixchanyy"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"felixchanyy"},"content":"                .add(\"buyerToAdd\", buyerToAdd)","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"felixchanyy"},"content":"                .toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"felixchanyy"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"felixchanyy":94}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSTALCODE;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"            + PREFIX_POSTALCODE + \"POSTAL CODE \"","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"            + PREFIX_POSTALCODE + \"578578 \"","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KhoonSun47":3,"-":84}},{"path":"src/main/java/seedu/address/logic/commands/AddSellerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"felixchanyy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSTALCODE;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":" * Adds a seller to the address book.","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"public class AddSellerCommand extends Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"felixchanyy"},"content":"    public static final String COMMAND_WORD \u003d \"addseller\";","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"felixchanyy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a seller to the address book. \"","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"felixchanyy"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_POSTALCODE + \"POSTAL CODE \"","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"felixchanyy"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"felixchanyy"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_POSTALCODE + \"578578 \"","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"felixchanyy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New seller added: %1$s\";","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"felixchanyy"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This seller already exists in the address book\";","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"felixchanyy"},"content":"    private final Person sellerToAdd;","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"felixchanyy"},"content":"     * Creates an AddSellerCommand to add the specified seller.","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"felixchanyy"},"content":"     * @param person The seller to be added.","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"felixchanyy"},"content":"    public AddSellerCommand(Person person) {","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"felixchanyy"},"content":"        requireNonNull(person);","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"felixchanyy"},"content":"        sellerToAdd \u003d person;","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"felixchanyy"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"felixchanyy"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"felixchanyy"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"felixchanyy"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"felixchanyy"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"felixchanyy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"felixchanyy"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"felixchanyy"},"content":"        if (model.hasPerson(sellerToAdd)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"felixchanyy"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"felixchanyy"},"content":"        model.addPerson(sellerToAdd);","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"felixchanyy"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(sellerToAdd)));","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"felixchanyy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"felixchanyy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"felixchanyy"},"content":"            return true;","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"felixchanyy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"felixchanyy"},"content":"        if (!(other instanceof AddSellerCommand)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"felixchanyy"},"content":"            return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"felixchanyy"},"content":"        AddSellerCommand otherAddCommand \u003d (AddSellerCommand) other;","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"felixchanyy"},"content":"        return sellerToAdd.equals(otherAddCommand.sellerToAdd);","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"felixchanyy"},"content":"    public String toString() {","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"felixchanyy"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"felixchanyy"},"content":"                .add(\"sellerToAdd\", sellerToAdd)","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"felixchanyy"},"content":"                .toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"felixchanyy"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"felixchanyy":94}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param index                of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"KhoonSun47"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress,","lastModifiedDate":"2024-03-12"},{"lineNumber":105,"author":{"gitId":"KhoonSun47"},"content":"                personToEdit.getPostalCode(), updatedTags);","lastModifiedDate":"2024-03-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"KhoonSun47"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2024-03-12"},{"lineNumber":144,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"KhoonSun47":4,"-":240}},{"path":"src/main/java/seedu/address/logic/parser/AddBuyerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSTALCODE;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"felixchanyy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.logic.commands.AddBuyerCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.house.PostalCode;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"felixchanyy"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"felixchanyy"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"felixchanyy"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"felixchanyy"},"content":"public class AddBuyerCommandParser implements Parser\u003cAddBuyerCommand\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"felixchanyy"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"felixchanyy"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"felixchanyy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"felixchanyy"},"content":"    public AddBuyerCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"felixchanyy"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"felixchanyy"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"felixchanyy"},"content":"                        PREFIX_POSTALCODE, PREFIX_TAG);","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"felixchanyy"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_POSTALCODE)","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"felixchanyy"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"felixchanyy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddBuyerCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"felixchanyy"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"felixchanyy"},"content":"                PREFIX_ADDRESS, PREFIX_POSTALCODE);","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"felixchanyy"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"felixchanyy"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"felixchanyy"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"felixchanyy"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"felixchanyy"},"content":"        PostalCode postalCode \u003d ParserUtil.parsePostalCode(argMultimap.getValue(PREFIX_POSTALCODE).get());","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"felixchanyy"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"felixchanyy"},"content":"        Person person \u003d new Person(name, phone, email, address, postalCode, tagList);","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"felixchanyy"},"content":"        return new AddBuyerCommand(person);","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"felixchanyy"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"felixchanyy"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"felixchanyy"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"felixchanyy"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"felixchanyy"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"felixchanyy":66}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSTALCODE;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.PostalCode;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"                        PREFIX_POSTALCODE, PREFIX_TAG);","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_POSTALCODE)","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"                PREFIX_ADDRESS, PREFIX_POSTALCODE);","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"        PostalCode postalCode \u003d ParserUtil.parsePostalCode(argMultimap.getValue(PREFIX_POSTALCODE).get());","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"        Person person \u003d new Person(name, phone, email, address, postalCode, tagList);","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"KhoonSun47":9,"-":57}},{"path":"src/main/java/seedu/address/logic/parser/AddSellerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSTALCODE;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"felixchanyy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.logic.commands.AddSellerCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.house.PostalCode;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"felixchanyy"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"felixchanyy"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"felixchanyy"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"felixchanyy"},"content":"public class AddSellerCommandParser implements Parser\u003cAddSellerCommand\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"felixchanyy"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"felixchanyy"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"felixchanyy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"felixchanyy"},"content":"    public AddSellerCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"felixchanyy"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"felixchanyy"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"felixchanyy"},"content":"                        PREFIX_POSTALCODE, PREFIX_TAG);","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"felixchanyy"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_POSTALCODE)","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"felixchanyy"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"felixchanyy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddSellerCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"felixchanyy"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"felixchanyy"},"content":"                PREFIX_ADDRESS, PREFIX_POSTALCODE);","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"felixchanyy"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"felixchanyy"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"felixchanyy"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"felixchanyy"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"felixchanyy"},"content":"        PostalCode postalCode \u003d ParserUtil.parsePostalCode(argMultimap.getValue(PREFIX_POSTALCODE).get());","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"felixchanyy"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"felixchanyy"},"content":"        Person person \u003d new Person(name, phone, email, address, postalCode, tagList);","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"felixchanyy"},"content":"        return new AddSellerCommand(person);","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"felixchanyy"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"felixchanyy"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"felixchanyy"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"felixchanyy"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"felixchanyy"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"felixchanyy":66}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.logic.commands.AddBuyerCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.logic.commands.AddSellerCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"felixchanyy"},"content":"        case AddSellerCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"felixchanyy"},"content":"            return new AddSellerCommandParser().parse(arguments);","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"felixchanyy"},"content":"        case AddBuyerCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"felixchanyy"},"content":"            return new AddBuyerCommandParser().parse(arguments);","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"felixchanyy":8,"-":86}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"    public static final Prefix PREFIX_STREET \u003d new Prefix(\"street/\");","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"    public static final Prefix PREFIX_LEVEL \u003d new Prefix(\"level/\");","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"    public static final Prefix PREFIX_UNITNUMBER \u003d new Prefix(\"unitNo/\");","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"    public static final Prefix PREFIX_BLOCK \u003d new Prefix(\"blk/\");","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"    public static final Prefix PREFIX_POSTALCODE \u003d new Prefix(\"postal/\");","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"KhoonSun47":2,"-":14,"lokidoki102":3}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.house.Block;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.house.Level;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.PostalCode;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.house.Street;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.house.UnitNumber;","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":130,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":131,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":132,"author":{"gitId":"lokidoki102"},"content":"     * Parses a {@code String street} into a {@code Street}.","lastModifiedDate":"2024-03-14"},{"lineNumber":133,"author":{"gitId":"lokidoki102"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-14"},{"lineNumber":134,"author":{"gitId":"lokidoki102"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":135,"author":{"gitId":"lokidoki102"},"content":"     * @throws ParseException if the given {@code street} is invalid.","lastModifiedDate":"2024-03-14"},{"lineNumber":136,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":137,"author":{"gitId":"lokidoki102"},"content":"    public static Street parseStreet(String street) throws ParseException {","lastModifiedDate":"2024-03-14"},{"lineNumber":138,"author":{"gitId":"lokidoki102"},"content":"        requireNonNull(street);","lastModifiedDate":"2024-03-14"},{"lineNumber":139,"author":{"gitId":"lokidoki102"},"content":"        String trimmedStreet \u003d street.trim();","lastModifiedDate":"2024-03-14"},{"lineNumber":140,"author":{"gitId":"lokidoki102"},"content":"        if (!Street.isValidStreet(trimmedStreet)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":141,"author":{"gitId":"lokidoki102"},"content":"            throw new ParseException(Street.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":142,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":143,"author":{"gitId":"lokidoki102"},"content":"        return new Street(trimmedStreet);","lastModifiedDate":"2024-03-14"},{"lineNumber":144,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":145,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":146,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":147,"author":{"gitId":"lokidoki102"},"content":"     * Parses a {@code String level} into a {@code Level}.","lastModifiedDate":"2024-03-14"},{"lineNumber":148,"author":{"gitId":"lokidoki102"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-14"},{"lineNumber":149,"author":{"gitId":"lokidoki102"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":150,"author":{"gitId":"lokidoki102"},"content":"     * @throws ParseException if the given {@code level} is invalid.","lastModifiedDate":"2024-03-14"},{"lineNumber":151,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":152,"author":{"gitId":"lokidoki102"},"content":"    public static Level parseLevel(String level) throws ParseException {","lastModifiedDate":"2024-03-14"},{"lineNumber":153,"author":{"gitId":"lokidoki102"},"content":"        requireNonNull(level);","lastModifiedDate":"2024-03-14"},{"lineNumber":154,"author":{"gitId":"lokidoki102"},"content":"        String trimmedLevel \u003d level.trim();","lastModifiedDate":"2024-03-14"},{"lineNumber":155,"author":{"gitId":"lokidoki102"},"content":"        if (!Level.isValidLevel(trimmedLevel)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":156,"author":{"gitId":"lokidoki102"},"content":"            throw new ParseException(Level.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":157,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":158,"author":{"gitId":"lokidoki102"},"content":"        return new Level(trimmedLevel);","lastModifiedDate":"2024-03-14"},{"lineNumber":159,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":160,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":161,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":162,"author":{"gitId":"KhoonSun47"},"content":"     * Parses a {@code String unitNumber} into a {@code unitNumber}.","lastModifiedDate":"2024-03-14"},{"lineNumber":163,"author":{"gitId":"KhoonSun47"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-14"},{"lineNumber":164,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":165,"author":{"gitId":"KhoonSun47"},"content":"     * @throws ParseException if the given {@code unitNumber} is invalid.","lastModifiedDate":"2024-03-14"},{"lineNumber":166,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":167,"author":{"gitId":"KhoonSun47"},"content":"    public static UnitNumber parseUnitNumber(String unitNumber) throws ParseException {","lastModifiedDate":"2024-03-14"},{"lineNumber":168,"author":{"gitId":"KhoonSun47"},"content":"        requireNonNull(unitNumber);","lastModifiedDate":"2024-03-14"},{"lineNumber":169,"author":{"gitId":"KhoonSun47"},"content":"        String trimmedLevel \u003d unitNumber.trim();","lastModifiedDate":"2024-03-14"},{"lineNumber":170,"author":{"gitId":"KhoonSun47"},"content":"        if (!UnitNumber.isValidUnitNumber(trimmedLevel)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":171,"author":{"gitId":"KhoonSun47"},"content":"            throw new ParseException(UnitNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":172,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":173,"author":{"gitId":"KhoonSun47"},"content":"        return new UnitNumber(trimmedLevel);","lastModifiedDate":"2024-03-14"},{"lineNumber":174,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":175,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":176,"author":{"gitId":"lokidoki102"},"content":"     * Parses a {@code String block} into an {@code Block}.","lastModifiedDate":"2024-03-14"},{"lineNumber":177,"author":{"gitId":"lokidoki102"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-14"},{"lineNumber":178,"author":{"gitId":"lokidoki102"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":179,"author":{"gitId":"lokidoki102"},"content":"     * @throws ParseException if the given {@code block} is invalid.","lastModifiedDate":"2024-03-14"},{"lineNumber":180,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":181,"author":{"gitId":"lokidoki102"},"content":"    public static Block parseBlock(String block) throws ParseException {","lastModifiedDate":"2024-03-14"},{"lineNumber":182,"author":{"gitId":"lokidoki102"},"content":"        requireNonNull(block);","lastModifiedDate":"2024-03-14"},{"lineNumber":183,"author":{"gitId":"lokidoki102"},"content":"        String trimmedBlock \u003d block.trim();","lastModifiedDate":"2024-03-14"},{"lineNumber":184,"author":{"gitId":"lokidoki102"},"content":"        if (!Block.isValidBlock(trimmedBlock)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":185,"author":{"gitId":"lokidoki102"},"content":"            throw new ParseException(Block.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":186,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":187,"author":{"gitId":"lokidoki102"},"content":"        return new Block(trimmedBlock);","lastModifiedDate":"2024-03-14"},{"lineNumber":188,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":189,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":190,"author":{"gitId":"KhoonSun47"},"content":"     * Parses a {@code String postalCode} into a {@code postalCode}.","lastModifiedDate":"2024-03-12"},{"lineNumber":191,"author":{"gitId":"KhoonSun47"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-12"},{"lineNumber":192,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":193,"author":{"gitId":"KhoonSun47"},"content":"     * @throws ParseException if the given {@code postalCode} is invalid.","lastModifiedDate":"2024-03-12"},{"lineNumber":194,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":195,"author":{"gitId":"KhoonSun47"},"content":"    public static PostalCode parsePostalCode(String postalCode) throws ParseException {","lastModifiedDate":"2024-03-12"},{"lineNumber":196,"author":{"gitId":"KhoonSun47"},"content":"        requireNonNull(postalCode);","lastModifiedDate":"2024-03-12"},{"lineNumber":197,"author":{"gitId":"KhoonSun47"},"content":"        String trimmedPostalCode \u003d postalCode.trim();","lastModifiedDate":"2024-03-12"},{"lineNumber":198,"author":{"gitId":"KhoonSun47"},"content":"        if (!PostalCode.isValidPostalCode(trimmedPostalCode)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":199,"author":{"gitId":"KhoonSun47"},"content":"            throw new ParseException(PostalCode.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":200,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":201,"author":{"gitId":"KhoonSun47"},"content":"        return new PostalCode(trimmedPostalCode);","lastModifiedDate":"2024-03-15"},{"lineNumber":202,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"felixchanyy":8,"KhoonSun47":27,"-":124,"lokidoki102":44}},{"path":"src/main/java/seedu/address/model/house/Block.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":" * Represents a House\u0027s block number.","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidBlock(String)}","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"public class Block {","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"            \"Block numbers should only contain numbers, with or without a letter as the end. \"","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"                    + \"There can only be at most 3 digits long.\";","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\d{1,3}[a-zA-Z]?$\";","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"    public static final String ZERO_REGEX \u003d \"^0+$\";","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"    public static final String ZERO_AND_ALPHABET_REGEX \u003d \"^0*[a-zA-Z]$\";","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"    public final String value;","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"     * Constructs a {@code Block}.","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"     * @param block A valid block number.","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"    public Block(String block) {","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"        requireNonNull(block);","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"        checkArgument(isValidBlock(block), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"        value \u003d block;","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"     * Returns true if a given string is a valid block number.","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"    public static boolean isValidBlock(String test) {","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 !test.matches(ZERO_REGEX) \u0026\u0026 !test.matches(ZERO_AND_ALPHABET_REGEX);","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"    public String toString() {","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"        return value;","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"            return true;","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"        if (!(other instanceof Block)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"            return false;","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"        Block otherBlock \u003d (Block) other;","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"        return value.equals(otherBlock.value);","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"lokidoki102"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"lokidoki102":61}},{"path":"src/main/java/seedu/address/model/house/Level.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":" * Represents a House\u0027s level.","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidLevel(String)}","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"public class Level {","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"            \"Level should only contain numbers, and it should only be at most 2 digits long\";","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{1,2}\";","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"    public static final String ZERO_REGEX \u003d \"^0+$\";","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"    public final String value;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"     * Constructs a {@code Level}.","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"     * @param level A valid level.","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"    public Level(String level) {","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"        requireNonNull(level);","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"        checkArgument(isValidLevel(level), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"        value \u003d level;","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"     * Returns true if a given string is a valid level.","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"    public static boolean isValidLevel(String test) {","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 !test.matches(ZERO_REGEX);","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"    public String toString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"        return value;","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"            return true;","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"        if (!(other instanceof Level)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"        Level otherLevel \u003d (Level) other;","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"        return value.equals(otherLevel.value);","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"lokidoki102"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"lokidoki102":63}},{"path":"src/main/java/seedu/address/model/house/PostalCode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":" * Represents a House\u0027s postal code in the address book.","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPostalCode(String)}","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"public class PostalCode {","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"            \"The postal code should only contain numbers, and it should be only 6 digits long\";","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{6}\";","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"    public final String value;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"     * Constructs a {@code PostalCode}.","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"     * @param postalCode A valid postal code.","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"    public PostalCode(String postalCode) {","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"        requireNonNull(postalCode);","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"        checkArgument(isValidPostalCode(postalCode), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"        value \u003d postalCode;","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"     * Returns true if a given string is a valid postal code.","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"    public static boolean isValidPostalCode(String test) {","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"    public String toString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"        return value;","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"            return true;","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"        if (!(other instanceof PostalCode)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"        PostalCode otherPostalCode \u003d (PostalCode) other;","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"        return value.equals(otherPostalCode.value);","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"KhoonSun47":59}},{"path":"src/main/java/seedu/address/model/house/Street.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":" * Represents a House\u0027s street.","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidStreet(String)}","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"public class Street {","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"            \"Street should only contain alphanumeric characters and hyphens.\";","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(?\u003d.*[a-zA-Z0-9])[a-zA-Z0-9\\\\s-]+$\";","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"    public final String value;","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"     * Constructs a {@code Street}.","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"     * @param street A valid street.","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"    public Street(String street) {","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"        requireNonNull(street);","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"        checkArgument(isValidStreet(street), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"        value \u003d street;","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"     * Returns true if a given string is a valid street.","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"    public static boolean isValidStreet(String test) {","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"    public String toString() {","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"        return value;","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"            return true;","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"        if (!(other instanceof Street)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"            return false;","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"        Street otherStreet \u003d (Street) other;","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"        return value.equals(otherStreet.value);","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"lokidoki102"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"lokidoki102"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"lokidoki102":60}},{"path":"src/main/java/seedu/address/model/house/UnitNumber.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":" * Represents a House\u0027s unit number in the address book.","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidUnitNumber(String)}","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"public class UnitNumber {","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"            \"The unit number should only contain numbers, it should be at least 1 digit \"","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"                    + \"and at most 3 digits long, and cannot be \u00270\u0027, \u002700\u0027 or \u0027000\u0027.\";","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{1,3}\";","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"    public static final String ZERO_REGEX \u003d \"^0+$\";","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"    public final String value;","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"     * Constructs a {@code UnitNumber}.","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"     * @param unitNumber A valid unit number.","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"    public UnitNumber(String unitNumber) {","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"        requireNonNull(unitNumber);","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"        checkArgument(isValidUnitNumber(unitNumber), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"        value \u003d unitNumber;","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"     * Returns true if a given string is a valid unit number.","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"     * @param test The string to test.","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"     * @return true if the test matches the VALIDATION_REGEX and is not \"0\".","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"    public static boolean isValidUnitNumber(String test) {","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 !test.matches(ZERO_REGEX);","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"    public String toString() {","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"        return value;","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"            return true;","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"        if (!(other instanceof UnitNumber)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"            return false;","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"        UnitNumber otherUnitNumber \u003d (UnitNumber) other;","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"        return value.equals(otherUnitNumber.value);","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"KhoonSun47":64}},{"path":"src/main/java/seedu/address/model/person/Buyer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"felixchanyy"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.house.PostalCode;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"felixchanyy"},"content":" * Represents a buyer in the address book.","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"felixchanyy"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"felixchanyy"},"content":"public class Buyer extends Person {","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"     * Constructs a new Buyer instance.","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"     * @param name       The name of the buyer.","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"     * @param phone      The phone number of the buyer.","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"     * @param email      The email address of the buyer.","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"     * @param address    The address of the buyer.","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":"     * @param postalCode The postal code of the buyer\u0027s address.","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"     * @param tags       The tags associated with the buyer.","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"felixchanyy"},"content":"    public Buyer(Name name, Phone phone, Email email, Address address, PostalCode postalCode, Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"felixchanyy"},"content":"        super(name, phone, email, address, postalCode, tags);","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"felixchanyy"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"felixchanyy":26}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.PostalCode;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"    private final PostalCode postalCode;","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"    public Person(Name name, Phone phone, Email email, Address address, PostalCode postalCode, Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"        this.postalCode \u003d postalCode;","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"    public PostalCode getPostalCode() {","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"        return postalCode;","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":104,"author":{"gitId":"KhoonSun47"},"content":"                \u0026\u0026 postalCode.equals(otherPerson.postalCode)","lastModifiedDate":"2024-03-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"KhoonSun47"},"content":"        return Objects.hash(name, phone, email, address, postalCode, tags);","lastModifiedDate":"2024-03-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":121,"author":{"gitId":"KhoonSun47"},"content":"                .add(\"postal code\", postalCode)","lastModifiedDate":"2024-03-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KhoonSun47":11,"-":115}},{"path":"src/main/java/seedu/address/model/person/Seller.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"felixchanyy"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.house.PostalCode;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"felixchanyy"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"felixchanyy"},"content":" * Represents a seller in the address book.","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"felixchanyy"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":"public class Seller extends Person {","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":"     * Constructs a new Seller instance.","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"     * @param name       The name of the seller.","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"     * @param phone      The phone number of the seller.","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"     * @param email      The email address of the seller.","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":"     * @param address    The address of the seller.","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"     * @param postalCode The postal code of the seller\u0027s address.","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"felixchanyy"},"content":"     * @param tags       The tags associated with the seller.","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"felixchanyy"},"content":"    public Seller(Name name, Phone phone, Email email, Address address, PostalCode postalCode, Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"felixchanyy"},"content":"        super(name, phone, email, address, postalCode, tags);","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"felixchanyy"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"felixchanyy":26}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.PostalCode;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), new PostalCode(\"123456\"),","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new PostalCode(\"123567\"),","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new PostalCode(\"123890\"),","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new PostalCode(\"123123\"),","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), new PostalCode(\"123010\"),","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new PostalCode(\"123787\"),","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"KhoonSun47":7,"-":54}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.PostalCode;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"    private final String postalCode;","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"            @JsonProperty(\"postalCode\") String postalCode,","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"        this.postalCode \u003d postalCode;","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"        postalCode \u003d source.getPostalCode().value;","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"KhoonSun47"},"content":"        if (postalCode \u003d\u003d null) {","lastModifiedDate":"2024-03-12"},{"lineNumber":111,"author":{"gitId":"KhoonSun47"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-12"},{"lineNumber":112,"author":{"gitId":"KhoonSun47"},"content":"                    PostalCode.class.getSimpleName()));","lastModifiedDate":"2024-03-12"},{"lineNumber":113,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":114,"author":{"gitId":"KhoonSun47"},"content":"        if (!PostalCode.isValidPostalCode(postalCode)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":115,"author":{"gitId":"KhoonSun47"},"content":"            throw new IllegalValueException(PostalCode.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":116,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":117,"author":{"gitId":"KhoonSun47"},"content":"        final PostalCode modelPostalCode \u003d new PostalCode(postalCode);","lastModifiedDate":"2024-03-12"},{"lineNumber":118,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"KhoonSun47"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelPostalCode, modelTags);","lastModifiedDate":"2024-03-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"KhoonSun47":15,"-":108}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"    @FXML","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"    private Label postalCode;","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"        postalCode.setText(\"S\" + person.getPostalCode().value);","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"KhoonSun47":3,"-":59}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"      \u003cLabel fx:id\u003d\"postalCode\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$postalCode\" /\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KhoonSun47":1,"-":36}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POSTALCODE_DESC_AMY;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"KhoonSun47"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + POSTALCODE_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"KhoonSun47":2,"-":174}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSTALCODE;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"    public static final String VALID_POSTAL_CODE_AMY \u003d \"567903\";","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"    public static final String VALID_POSTAL_CODE_BOB \u003d \"530907\";","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"    public static final String POSTALCODE_DESC_AMY \u003d \" \" + PREFIX_POSTALCODE + VALID_POSTAL_CODE_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"    public static final String POSTALCODE_DESC_BOB \u003d \" \" + PREFIX_POSTALCODE + VALID_POSTAL_CODE_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"    public static final String INVALID_POSTALCODE_DESC \u003d \" \" + PREFIX_POSTALCODE + \"89054\"; // only 5 characters","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"KhoonSun47":6,"-":128}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_POSTALCODE_DESC;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POSTALCODE_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POSTALCODE_DESC_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POSTAL_CODE_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSTALCODE;","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.PostalCode;","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"                + ADDRESS_DESC_BOB + POSTALCODE_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + POSTALCODE_DESC_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"KhoonSun47"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"KhoonSun47"},"content":"                + ADDRESS_DESC_BOB + POSTALCODE_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"KhoonSun47"},"content":"        // multiple postal codes","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"KhoonSun47"},"content":"        assertParseFailure(parser, POSTALCODE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"KhoonSun47"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_POSTALCODE));","lastModifiedDate":"2024-03-12"},{"lineNumber":99,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2024-03-13"},{"lineNumber":103,"author":{"gitId":"KhoonSun47"},"content":"                        + POSTALCODE_DESC_AMY","lastModifiedDate":"2024-03-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"KhoonSun47"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_EMAIL, PREFIX_PHONE,","lastModifiedDate":"2024-03-13"},{"lineNumber":106,"author":{"gitId":"KhoonSun47"},"content":"                        PREFIX_POSTALCODE));","lastModifiedDate":"2024-03-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":126,"author":{"gitId":"KhoonSun47"},"content":"        // invalid postal code","lastModifiedDate":"2024-03-12"},{"lineNumber":127,"author":{"gitId":"KhoonSun47"},"content":"        assertParseFailure(parser, INVALID_POSTALCODE_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-12"},{"lineNumber":128,"author":{"gitId":"KhoonSun47"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_POSTALCODE));","lastModifiedDate":"2024-03-12"},{"lineNumber":129,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":147,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":148,"author":{"gitId":"KhoonSun47"},"content":"        // invalid postal code","lastModifiedDate":"2024-03-12"},{"lineNumber":149,"author":{"gitId":"KhoonSun47"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_POSTALCODE_DESC,","lastModifiedDate":"2024-03-12"},{"lineNumber":150,"author":{"gitId":"KhoonSun47"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_POSTALCODE));","lastModifiedDate":"2024-03-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":157,"author":{"gitId":"KhoonSun47"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2024-03-13"},{"lineNumber":158,"author":{"gitId":"KhoonSun47"},"content":"                        + POSTALCODE_DESC_AMY,","lastModifiedDate":"2024-03-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"KhoonSun47"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":168,"author":{"gitId":"KhoonSun47"},"content":"                        + POSTALCODE_DESC_BOB,","lastModifiedDate":"2024-03-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"KhoonSun47"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":173,"author":{"gitId":"KhoonSun47"},"content":"                        + POSTALCODE_DESC_BOB,","lastModifiedDate":"2024-03-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":177,"author":{"gitId":"KhoonSun47"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":178,"author":{"gitId":"KhoonSun47"},"content":"                        + POSTALCODE_DESC_BOB,","lastModifiedDate":"2024-03-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":182,"author":{"gitId":"KhoonSun47"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":183,"author":{"gitId":"KhoonSun47"},"content":"                        + POSTALCODE_DESC_BOB,","lastModifiedDate":"2024-03-13"},{"lineNumber":184,"author":{"gitId":"KhoonSun47"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-12"},{"lineNumber":185,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":186,"author":{"gitId":"KhoonSun47"},"content":"        // missing postal code prefix","lastModifiedDate":"2024-03-12"},{"lineNumber":187,"author":{"gitId":"KhoonSun47"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":188,"author":{"gitId":"KhoonSun47"},"content":"                        + VALID_POSTAL_CODE_BOB,","lastModifiedDate":"2024-03-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":192,"author":{"gitId":"KhoonSun47"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":193,"author":{"gitId":"KhoonSun47"},"content":"                        + VALID_POSTAL_CODE_BOB,","lastModifiedDate":"2024-03-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":201,"author":{"gitId":"KhoonSun47"},"content":"                + POSTALCODE_DESC_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":206,"author":{"gitId":"KhoonSun47"},"content":"                + POSTALCODE_DESC_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":211,"author":{"gitId":"KhoonSun47"},"content":"                + POSTALCODE_DESC_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2024-03-13"},{"lineNumber":216,"author":{"gitId":"KhoonSun47"},"content":"                + POSTALCODE_DESC_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":219,"author":{"gitId":"KhoonSun47"},"content":"        // invalid postal code","lastModifiedDate":"2024-03-12"},{"lineNumber":220,"author":{"gitId":"KhoonSun47"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":221,"author":{"gitId":"KhoonSun47"},"content":"                + INVALID_POSTALCODE_DESC","lastModifiedDate":"2024-03-13"},{"lineNumber":222,"author":{"gitId":"KhoonSun47"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, PostalCode.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":223,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":226,"author":{"gitId":"KhoonSun47"},"content":"                + POSTALCODE_DESC_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":230,"author":{"gitId":"KhoonSun47"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2024-03-13"},{"lineNumber":231,"author":{"gitId":"KhoonSun47"},"content":"                        + POSTALCODE_DESC_BOB,","lastModifiedDate":"2024-03-13"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":236,"author":{"gitId":"KhoonSun47"},"content":"                + ADDRESS_DESC_BOB + POSTALCODE_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"KhoonSun47":55,"-":184}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.house.Block;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.house.Level;","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.PostalCode;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.house.Street;","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.house.UnitNumber;","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"    private static final String INVALID_STREET \u003d \"t3$t!ng\";","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"    private static final String INVALID_LEVEL \u003d \"aa\";","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"    private static final String INVALID_UNIT_NUMBER \u003d \"1234\";","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"    private static final String INVALID_BLOCK \u003d \"12a34\";","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"    private static final String INVALID_POSTALCODE \u003d \"5678990\";","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"    private static final String VALID_POSTALCODE \u003d \"654321\";","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"    private static final String VALID_STREET \u003d \"292A East Coast Rd\";","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"    private static final String VALID_LEVEL \u003d \"10\";","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"    private static final String VALID_UNIT_NUMBER \u003d \"123\";","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"    private static final String VALID_BLOCK \u003d \"205A\";","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":166,"author":{"gitId":"KhoonSun47"},"content":"    public void parsePostalCode_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":167,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePostalCode((String) null));","lastModifiedDate":"2024-03-12"},{"lineNumber":168,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":169,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":170,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":171,"author":{"gitId":"KhoonSun47"},"content":"    public void parsePostalCode_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":172,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePostalCode(INVALID_POSTALCODE));","lastModifiedDate":"2024-03-12"},{"lineNumber":173,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":174,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":175,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":176,"author":{"gitId":"KhoonSun47"},"content":"    public void parsePostalCode_validValueWithoutWhitespace_returnsPostalCode() throws Exception {","lastModifiedDate":"2024-03-12"},{"lineNumber":177,"author":{"gitId":"KhoonSun47"},"content":"        PostalCode expectedPostalCode \u003d new PostalCode(VALID_POSTALCODE);","lastModifiedDate":"2024-03-12"},{"lineNumber":178,"author":{"gitId":"KhoonSun47"},"content":"        assertEquals(expectedPostalCode, ParserUtil.parsePostalCode(VALID_POSTALCODE));","lastModifiedDate":"2024-03-12"},{"lineNumber":179,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":180,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":181,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":182,"author":{"gitId":"KhoonSun47"},"content":"    public void parsePostalCode_validValueWithWhitespace_returnsTrimmedPostalCode() throws Exception {","lastModifiedDate":"2024-03-15"},{"lineNumber":183,"author":{"gitId":"KhoonSun47"},"content":"        String postalCodeWithWhitespace \u003d WHITESPACE + VALID_POSTALCODE + WHITESPACE;","lastModifiedDate":"2024-03-15"},{"lineNumber":184,"author":{"gitId":"KhoonSun47"},"content":"        PostalCode expectedPostalCode \u003d new PostalCode(VALID_POSTALCODE);","lastModifiedDate":"2024-03-15"},{"lineNumber":185,"author":{"gitId":"KhoonSun47"},"content":"        assertEquals(expectedPostalCode, ParserUtil.parsePostalCode(postalCodeWithWhitespace));","lastModifiedDate":"2024-03-15"},{"lineNumber":186,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":187,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":233,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":234,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":235,"author":{"gitId":"lokidoki102"},"content":"    public void parseStreet_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":236,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseStreet((String) null));","lastModifiedDate":"2024-03-14"},{"lineNumber":237,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":238,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":239,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":240,"author":{"gitId":"lokidoki102"},"content":"    public void parseStreet_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":241,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseStreet(INVALID_STREET));","lastModifiedDate":"2024-03-14"},{"lineNumber":242,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":243,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":244,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":245,"author":{"gitId":"lokidoki102"},"content":"    public void parseStreet_validValueWithoutWhitespace_returnsStreet() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":246,"author":{"gitId":"lokidoki102"},"content":"        Street expectedStreet \u003d new Street(VALID_STREET);","lastModifiedDate":"2024-03-14"},{"lineNumber":247,"author":{"gitId":"lokidoki102"},"content":"        assertEquals(expectedStreet, ParserUtil.parseStreet(VALID_STREET));","lastModifiedDate":"2024-03-14"},{"lineNumber":248,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":249,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":250,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":251,"author":{"gitId":"lokidoki102"},"content":"    public void parseStreet_validValueWithWhitespace_returnsTrimmedStreet() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":252,"author":{"gitId":"lokidoki102"},"content":"        String streetWithWhitespace \u003d WHITESPACE + VALID_STREET + WHITESPACE;","lastModifiedDate":"2024-03-14"},{"lineNumber":253,"author":{"gitId":"lokidoki102"},"content":"        Street expectedStreet \u003d new Street(VALID_STREET);","lastModifiedDate":"2024-03-14"},{"lineNumber":254,"author":{"gitId":"lokidoki102"},"content":"        assertEquals(expectedStreet, ParserUtil.parseStreet(streetWithWhitespace));","lastModifiedDate":"2024-03-14"},{"lineNumber":255,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":256,"author":{"gitId":"lokidoki102"},"content":"    public void parseLevel_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":257,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseLevel((String) null));","lastModifiedDate":"2024-03-14"},{"lineNumber":258,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":259,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":260,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":261,"author":{"gitId":"lokidoki102"},"content":"    public void parseLevel_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":262,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseLevel(INVALID_LEVEL));","lastModifiedDate":"2024-03-14"},{"lineNumber":263,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":264,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":265,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":266,"author":{"gitId":"lokidoki102"},"content":"    public void parseLevel_validValueWithoutWhitespace_returnsLevel() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":267,"author":{"gitId":"lokidoki102"},"content":"        Level expectedLevel \u003d new Level(VALID_LEVEL);","lastModifiedDate":"2024-03-14"},{"lineNumber":268,"author":{"gitId":"lokidoki102"},"content":"        assertEquals(expectedLevel, ParserUtil.parseLevel(VALID_LEVEL));","lastModifiedDate":"2024-03-14"},{"lineNumber":269,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":270,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":271,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":272,"author":{"gitId":"lokidoki102"},"content":"    public void parseLevel_validValueWithWhitespace_returnsTrimmedLevel() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":273,"author":{"gitId":"lokidoki102"},"content":"        String levelWithWhitespace \u003d WHITESPACE + VALID_LEVEL + WHITESPACE;","lastModifiedDate":"2024-03-14"},{"lineNumber":274,"author":{"gitId":"lokidoki102"},"content":"        Level expectedLevel \u003d new Level(VALID_LEVEL);","lastModifiedDate":"2024-03-14"},{"lineNumber":275,"author":{"gitId":"lokidoki102"},"content":"        assertEquals(expectedLevel, ParserUtil.parseLevel(levelWithWhitespace));","lastModifiedDate":"2024-03-14"},{"lineNumber":276,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":277,"author":{"gitId":"KhoonSun47"},"content":"    public void parseUnitNumber_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":278,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseUnitNumber((String) null));","lastModifiedDate":"2024-03-14"},{"lineNumber":279,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":280,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":281,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":282,"author":{"gitId":"KhoonSun47"},"content":"    public void parseUnitNumber_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":283,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseUnitNumber(INVALID_UNIT_NUMBER));","lastModifiedDate":"2024-03-14"},{"lineNumber":284,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":285,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":286,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":287,"author":{"gitId":"KhoonSun47"},"content":"    public void parseUnitNumber_validValueWithoutWhitespace_returnsUnitNumber() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":288,"author":{"gitId":"KhoonSun47"},"content":"        UnitNumber expectedUnitNumber \u003d new UnitNumber(VALID_UNIT_NUMBER);","lastModifiedDate":"2024-03-14"},{"lineNumber":289,"author":{"gitId":"KhoonSun47"},"content":"        assertEquals(expectedUnitNumber, ParserUtil.parseUnitNumber(VALID_UNIT_NUMBER));","lastModifiedDate":"2024-03-14"},{"lineNumber":290,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":291,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":292,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":293,"author":{"gitId":"KhoonSun47"},"content":"    public void parseUnitNumber_validValueWithWhitespace_returnsTrimmedUnitNumber() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":294,"author":{"gitId":"KhoonSun47"},"content":"        String unitNumberWithWhitespace \u003d WHITESPACE + VALID_UNIT_NUMBER + WHITESPACE;","lastModifiedDate":"2024-03-14"},{"lineNumber":295,"author":{"gitId":"KhoonSun47"},"content":"        UnitNumber expectedUnitNumber \u003d new UnitNumber(VALID_UNIT_NUMBER);","lastModifiedDate":"2024-03-14"},{"lineNumber":296,"author":{"gitId":"KhoonSun47"},"content":"        assertEquals(expectedUnitNumber, ParserUtil.parseUnitNumber(unitNumberWithWhitespace));","lastModifiedDate":"2024-03-14"},{"lineNumber":297,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":298,"author":{"gitId":"lokidoki102"},"content":"    public void parseBlock_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":299,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseBlock((String) null));","lastModifiedDate":"2024-03-14"},{"lineNumber":300,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":301,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":302,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":303,"author":{"gitId":"lokidoki102"},"content":"    public void parseBlock_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":304,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseBlock(INVALID_BLOCK));","lastModifiedDate":"2024-03-14"},{"lineNumber":305,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":306,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":307,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":308,"author":{"gitId":"lokidoki102"},"content":"    public void parseBlock_validValueWithoutWhitespace_returnsBlock() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":309,"author":{"gitId":"lokidoki102"},"content":"        Block expectedBlock \u003d new Block(VALID_BLOCK);","lastModifiedDate":"2024-03-14"},{"lineNumber":310,"author":{"gitId":"lokidoki102"},"content":"        assertEquals(expectedBlock, ParserUtil.parseBlock(VALID_BLOCK));","lastModifiedDate":"2024-03-14"},{"lineNumber":311,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":312,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":313,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":314,"author":{"gitId":"lokidoki102"},"content":"    public void parseBlock_validValueWithWhitespace_returnsTrimmedBlock() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":315,"author":{"gitId":"lokidoki102"},"content":"        String blockWithWhitespace \u003d WHITESPACE + VALID_BLOCK + WHITESPACE;","lastModifiedDate":"2024-03-14"},{"lineNumber":316,"author":{"gitId":"lokidoki102"},"content":"        Block expectedBlock \u003d new Block(VALID_BLOCK);","lastModifiedDate":"2024-03-14"},{"lineNumber":317,"author":{"gitId":"lokidoki102"},"content":"        assertEquals(expectedBlock, ParserUtil.parseBlock(blockWithWhitespace));","lastModifiedDate":"2024-03-14"},{"lineNumber":318,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"felixchanyy":3,"KhoonSun47":49,"-":195,"lokidoki102":72}},{"path":"src/test/java/seedu/address/model/house/BlockTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"public class BlockTest {","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Block(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"    public void constructor_invalidBlock_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"        String invalidBlock \u003d \"\";","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Block(invalidBlock));","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"    public void isValidBlock() {","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"        // null block number","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(NullPointerException.class, () -\u003e Block.isValidBlock(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"        // invalid block numbers","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Block.isValidBlock(\"0\")); // 1 zero only","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Block.isValidBlock(\"00\")); // 2 zeroes only","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Block.isValidBlock(\"000\")); // 3 zeroes only","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Block.isValidBlock(\"0A\")); // 1 zero + alphabet","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Block.isValidBlock(\"00A\")); // 2 zeroes + alphabet","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Block.isValidBlock(\"000A\")); // 3 zeroes + alphabet","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Block.isValidBlock(\"\")); // empty string","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Block.isValidBlock(\" \")); // spaces only","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Block.isValidBlock(\"A\")); // letter only","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Block.isValidBlock(\"blocknumber\")); // non-numeric","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Block.isValidBlock(\"10A9\")); // alphabet within digits","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Block.isValidBlock(\"A109\")); // alphabet at the start","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Block.isValidBlock(\"14 1\")); // spaces within digits","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Block.isValidBlock(\"9999\")); // more than 3 digits","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"        // valid phone numbers","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(Block.isValidBlock(\"777\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(Block.isValidBlock(\"777A\")); // block number with alphabet at the end","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(Block.isValidBlock(\"1A\")); // short block number with alphabet at the end","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(Block.isValidBlock(\"1\")); // short block number","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"    public void equals() {","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"        Block block \u003d new Block(\"234A\");","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(block.equals(new Block(\"234A\")));","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"lokidoki102"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(block.equals(block));","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"lokidoki102"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(block.equals(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"lokidoki102"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(block.equals(5.0f));","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"lokidoki102"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(block.equals(new Block(\"995\")));","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"lokidoki102":69}},{"path":"src/test/java/seedu/address/model/house/LevelTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"public class LevelTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Level(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"    public void constructor_invalidLevel_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"        String invalidLevel \u003d \"\";","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Level(invalidLevel));","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"    public void isValidLevel() {","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"        // null level","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(NullPointerException.class, () -\u003e Level.isValidLevel(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"        // blank levels","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Level.isValidLevel(\"\")); // empty string","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Level.isValidLevel(\" \")); // spaces only","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"        // invalid levels","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Level.isValidLevel(\"0\")); // 1 zero only","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Level.isValidLevel(\"00\")); // 2 zeroes only","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Level.isValidLevel(\"a\")); // non-digit only","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Level.isValidLevel(\"aa\")); // non-digit only","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Level.isValidLevel(\"###\")); // non-digit only","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Level.isValidLevel(\"!@#\")); // non-digit only","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Level.isValidLevel(\"a1\")); // digit + non-digit","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Level.isValidLevel(\"1a\")); // non-digit + digit","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Level.isValidLevel(\"111\")); // number of digits \u003e 2","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Level.isValidLevel(\"44aa\")); // number of digits \u003e\u003d 2 with letters","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Level.isValidLevel(\"44aaaaa\")); // number of digits \u003e\u003d 2 with letters","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"        // valid levels","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(Level.isValidLevel(\"1\")); // one digit","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(Level.isValidLevel(\"11\")); // two digits","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(Level.isValidLevel(\"01\")); // two digits","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"    public void equals() {","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"        Level level \u003d new Level(\"99\");","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(level.equals(new Level(\"99\")));","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"lokidoki102"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(level.equals(level));","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"lokidoki102"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(level.equals(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"lokidoki102"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(level.equals(5.0f));","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"lokidoki102"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(level.equals(new Level(\"11\")));","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"lokidoki102":69}},{"path":"src/test/java/seedu/address/model/house/PostalCodeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"public class PostalCodeTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(NullPointerException.class, () -\u003e new PostalCode(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"    public void constructor_invalidPostalCode_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"        String invalidPostalCode \u003d \"12345\"; // Not 6 digits","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new PostalCode(invalidPostalCode));","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"    public void isValidPostalCode() {","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"        // null postal code","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(NullPointerException.class, () -\u003e PostalCode.isValidPostalCode(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"        // invalid postal codes","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(PostalCode.isValidPostalCode(\"\")); // empty string","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(PostalCode.isValidPostalCode(\" \")); // spaces only","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(PostalCode.isValidPostalCode(\"12345\")); // less than 6 numbers","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(PostalCode.isValidPostalCode(\"postal\")); // non-numeric","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(PostalCode.isValidPostalCode(\"1234p6\")); // alphabets within digits","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(PostalCode.isValidPostalCode(\"123 456\")); // spaces within digits","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"        // valid postal codes","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(PostalCode.isValidPostalCode(\"123456\")); // exactly 6 numbers","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"    public void equals() {","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"        PostalCode postalCode \u003d new PostalCode(\"654321\");","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(postalCode.equals(new PostalCode(\"654321\")));","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(postalCode.equals(postalCode));","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(postalCode.equals(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(postalCode.equals(5.0f));","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(postalCode.equals(new PostalCode(\"123456\")));","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"KhoonSun47":58}},{"path":"src/test/java/seedu/address/model/house/StreetTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"public class StreetTest {","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Street(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"    public void constructor_invalidBlock_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"        String invalidStreet \u003d \"\";","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Street(invalidStreet));","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"    public void isValidStreet() {","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"        // null street","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(NullPointerException.class, () -\u003e Street.isValidStreet(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"        // invalid street","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Street.isValidStreet(\"\")); // empty string","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Street.isValidStreet(\" \")); // spaces only","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Street.isValidStreet(\"-\")); // hyphen only","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Street.isValidStreet(\"@!^\u0026*%\u0026^\")); // non-alphanumeric","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Street.isValidStreet(\"qwe!@#ert$%\")); // non-alphanumeric + alphabets","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Street.isValidStreet(\"!@#123\")); // non-alphanumeric + numbers","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Street.isValidStreet(\"t3$t!ng\")); // non-alphanumeric + alphanumerics","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"        // valid street","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(Street.isValidStreet(\"292A East Coast Rd\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(Street.isValidStreet(\"350 Orchard Rd Sshaw House 13-01\")); // with dash","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(Street.isValidStreet(\"46 PANDAN LOOP BLK 3 PANDAN LIGHT IND PARK\")); // all caps","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"    public void equals() {","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"        Street street \u003d new Street(\"15 Kaki Bukit View 01-00\");","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(street.equals(new Street(\"15 Kaki Bukit View 01-00\")));","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(street.equals(street));","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(street.equals(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(street.equals(5.0f));","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"lokidoki102"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(street.equals(new Street(\"3 Sungei Kadut Street 6 Sungei Kadut Industrial Estate\")));","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"lokidoki102":60}},{"path":"src/test/java/seedu/address/model/house/UnitNumberTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"public class UnitNumberTest {","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(NullPointerException.class, () -\u003e new UnitNumber(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"    public void constructor_invalidUnitNumber_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"        String invalidUnitNumber \u003d \"abcd\";","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new UnitNumber(invalidUnitNumber));","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"    public void isValidUnitNumber() {","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"        // null unit number","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(NullPointerException.class, () -\u003e UnitNumber.isValidUnitNumber(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"        // invalid unit numbers","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(UnitNumber.isValidUnitNumber(\"0\")); // \u00270\u0027 is invalid","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(UnitNumber.isValidUnitNumber(\"00\")); // \u002700\u0027 is invalid","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(UnitNumber.isValidUnitNumber(\"000\")); // \u0027000\u0027 is invalid","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(UnitNumber.isValidUnitNumber(\"\")); // empty string","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(UnitNumber.isValidUnitNumber(\" \")); // spaces only","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(UnitNumber.isValidUnitNumber(\"1234\")); // more than 3 digits","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(UnitNumber.isValidUnitNumber(\"ab\")); // non-numeric","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(UnitNumber.isValidUnitNumber(\"1a2\")); // alphabets within digits","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"        // valid unit numbers","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(UnitNumber.isValidUnitNumber(\"1\")); // minimum valid number","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(UnitNumber.isValidUnitNumber(\"01\")); // leading 0 is allowed","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(UnitNumber.isValidUnitNumber(\"10\")); // 2 digits","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(UnitNumber.isValidUnitNumber(\"001\")); // 3 digits","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(UnitNumber.isValidUnitNumber(\"999\")); // maximum valid number","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"    public void equals() {","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"        UnitNumber unitNumber \u003d new UnitNumber(\"12\");","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(unitNumber.equals(new UnitNumber(\"12\")));","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(unitNumber.equals(unitNumber));","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(unitNumber.equals(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(unitNumber.equals(5.0f));","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"        // different unit number -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(unitNumber.equals(new UnitNumber(\"34\")));","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"KhoonSun47":64}},{"path":"src/test/java/seedu/address/model/person/BuyerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"felixchanyy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"felixchanyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"felixchanyy"},"content":"public class BuyerTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"felixchanyy"},"content":"    public void equals() {","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":"        Buyer buyerAlice \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"                new Buyer(ALICE.getName(), ALICE.getPhone(), ALICE.getEmail(), ALICE.getAddress(),","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"                        ALICE.getPostalCode(), ALICE.getTags());","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"        Buyer buyerBob \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"                new Buyer(BOB.getName(), BOB.getPhone(), BOB.getEmail(), BOB.getAddress(),","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":"                        BOB.getPostalCode(), BOB.getTags());","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"felixchanyy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"felixchanyy"},"content":"        assertTrue(buyerAlice.equals(buyerAlice));","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"felixchanyy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"felixchanyy"},"content":"        assertFalse(buyerAlice.equals(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"felixchanyy"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"felixchanyy"},"content":"        assertFalse(buyerAlice.equals(5));","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"felixchanyy"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"felixchanyy"},"content":"        assertFalse(buyerAlice.equals(buyerBob));","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"felixchanyy":33}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POSTAL_CODE_BOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"KhoonSun47"},"content":"        // different postal code -\u003e return false","lastModifiedDate":"2024-03-12"},{"lineNumber":90,"author":{"gitId":"KhoonSun47"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPostalCode(VALID_POSTAL_CODE_BOB).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-12"},{"lineNumber":92,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"KhoonSun47"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress() + \", postal code\u003d\"","lastModifiedDate":"2024-03-13"},{"lineNumber":102,"author":{"gitId":"KhoonSun47"},"content":"                + ALICE.getPostalCode() + \", tags\u003d\" + ALICE.getTags() + \"}\";","lastModifiedDate":"2024-03-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"KhoonSun47":7,"-":98}},{"path":"src/test/java/seedu/address/model/person/SellerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"felixchanyy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"felixchanyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"felixchanyy"},"content":"public class SellerTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"felixchanyy"},"content":"    public void equals() {","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":"        Seller sellerAlice \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"                new Seller(ALICE.getName(), ALICE.getPhone(), ALICE.getEmail(), ALICE.getAddress(),","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"                        ALICE.getPostalCode(), ALICE.getTags());","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"        Seller sellerBob \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"                new Seller(BOB.getName(), BOB.getPhone(), BOB.getEmail(), BOB.getAddress(),","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":"                        BOB.getPostalCode(), BOB.getTags());","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"felixchanyy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"felixchanyy"},"content":"        assertTrue(sellerAlice.equals(sellerAlice));","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"felixchanyy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"felixchanyy"},"content":"        assertFalse(sellerAlice.equals(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"felixchanyy"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"felixchanyy"},"content":"        assertFalse(sellerAlice.equals(5));","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"felixchanyy"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"felixchanyy"},"content":"        assertFalse(sellerAlice.equals(sellerBob));","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"felixchanyy":33}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.PostalCode;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"    private static final String INVALID_POSTALCODE \u003d \"6798890\";","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"    private static final String VALID_POSTALCODE \u003d BENSON.getPostalCode().toString();","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"                        VALID_POSTALCODE, VALID_TAGS);","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"                VALID_ADDRESS, VALID_POSTALCODE, VALID_TAGS);","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"                        VALID_ADDRESS, VALID_POSTALCODE, VALID_TAGS);","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL,","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"KhoonSun47"},"content":"                VALID_ADDRESS, VALID_POSTALCODE, VALID_TAGS);","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"KhoonSun47"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-13"},{"lineNumber":82,"author":{"gitId":"KhoonSun47"},"content":"                        VALID_POSTALCODE, VALID_TAGS);","lastModifiedDate":"2024-03-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null,","lastModifiedDate":"2024-03-13"},{"lineNumber":90,"author":{"gitId":"KhoonSun47"},"content":"                VALID_ADDRESS, VALID_POSTALCODE, VALID_TAGS);","lastModifiedDate":"2024-03-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"KhoonSun47"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2024-03-13"},{"lineNumber":99,"author":{"gitId":"KhoonSun47"},"content":"                        VALID_POSTALCODE, VALID_TAGS);","lastModifiedDate":"2024-03-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2024-03-13"},{"lineNumber":107,"author":{"gitId":"KhoonSun47"},"content":"                VALID_POSTALCODE, VALID_TAGS);","lastModifiedDate":"2024-03-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"KhoonSun47"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-13"},{"lineNumber":118,"author":{"gitId":"KhoonSun47"},"content":"                        VALID_POSTALCODE, invalidTags);","lastModifiedDate":"2024-03-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":123,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_invalidPostalCode_throwsIllegalValueException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":124,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-13"},{"lineNumber":125,"author":{"gitId":"KhoonSun47"},"content":"                VALID_ADDRESS, INVALID_POSTALCODE, VALID_TAGS);","lastModifiedDate":"2024-03-13"},{"lineNumber":126,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d PostalCode.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-12"},{"lineNumber":127,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-12"},{"lineNumber":128,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":129,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":130,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":131,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_nullPostalCode_throwsIllegalValueException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":132,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-13"},{"lineNumber":133,"author":{"gitId":"KhoonSun47"},"content":"                VALID_ADDRESS, null, VALID_TAGS);","lastModifiedDate":"2024-03-13"},{"lineNumber":134,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, PostalCode.class.getSimpleName());","lastModifiedDate":"2024-03-12"},{"lineNumber":135,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-12"},{"lineNumber":136,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":137,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":138,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":139,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_validPostalCode_returnsPerson() throws Exception {","lastModifiedDate":"2024-03-12"},{"lineNumber":140,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-13"},{"lineNumber":141,"author":{"gitId":"KhoonSun47"},"content":"                VALID_ADDRESS, VALID_POSTALCODE, VALID_TAGS);","lastModifiedDate":"2024-03-13"},{"lineNumber":142,"author":{"gitId":"KhoonSun47"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2024-03-12"},{"lineNumber":143,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":144,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"KhoonSun47":44,"-":101}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.PostalCode;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"    public static final String DEFAULT_POSTALCODE \u003d \"789012\";","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"    private PostalCode postalCode;","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"        postalCode \u003d new PostalCode(DEFAULT_POSTALCODE);","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"        postalCode \u003d personToCopy.getPostalCode();","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":90,"author":{"gitId":"KhoonSun47"},"content":"     * Sets the {@code Postal Code} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":92,"author":{"gitId":"KhoonSun47"},"content":"    public PersonBuilder withPostalCode(String postalCode) {","lastModifiedDate":"2024-03-12"},{"lineNumber":93,"author":{"gitId":"KhoonSun47"},"content":"        this.postalCode \u003d new PostalCode(postalCode);","lastModifiedDate":"2024-03-12"},{"lineNumber":94,"author":{"gitId":"KhoonSun47"},"content":"        return this;","lastModifiedDate":"2024-03-12"},{"lineNumber":95,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":96,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":106,"author":{"gitId":"KhoonSun47"},"content":"        return new Person(name, phone, email, address, postalCode, tags);","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"KhoonSun47":14,"-":95}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSTALCODE;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"        sb.append(PREFIX_POSTALCODE + person.getPostalCode().value + \" \");","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"KhoonSun47":2,"-":62}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POSTAL_CODE_AMY;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POSTAL_CODE_BOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"            .withPhone(\"94351253\").withPostalCode(\"789012\")","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withPostalCode(\"578903\")","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withPostalCode(\"678999\").build();","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withPostalCode(\"678999\")","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withPostalCode(\"678999\").build();","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withPostalCode(\"678999\").build();","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withPostalCode(\"678999\").build();","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").withPostalCode(\"678999\").build();","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").withPostalCode(\"678999\").build();","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withPostalCode(VALID_POSTAL_CODE_AMY)","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withPostalCode(VALID_POSTAL_CODE_BOB)","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"KhoonSun47":16,"-":65}}]
