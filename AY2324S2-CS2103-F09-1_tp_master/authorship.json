[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103-F09-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions) [![codecov](https://codecov.io/gh/AY2324S2-CS2103-F09-1/tp/graph/badge.svg?token\u003dNB86I9H23Z)](https://codecov.io/gh/AY2324S2-CS2103-F09-1/tp)","lastModifiedDate":"2024-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"felixchanyy"},"content":"![Ui](docs/images/estate_ease_ui.png)","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"felixchanyy"},"content":"## About the app","lastModifiedDate":"2024-03-04"},{"lineNumber":6,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":"EstateEase is an **advanced desktop application designed to streamline residential property management for real estate listing agents in Singapore.** Engineered for efficiency, it combines the precision of a Command Line Interface (CLI) with a Graphical User Interface (GUI). For those proficient in typing, EstateEase delivers administrative task management at a speed surpassing that of conventional GUI-based applications.","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":9,"author":{"gitId":"felixchanyy"},"content":"### Key Features:","lastModifiedDate":"2024-03-04"},{"lineNumber":10,"author":{"gitId":"felixchanyy"},"content":"  * With intuitive tools for listing contacts and houses, the app is tailored for efficiency.","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":"  * Agents can quickly access contacts and houses, allowing for quicker transactions to take place.","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"felixchanyy"},"content":"  * Agents can match buyer with houses according to their preferences.","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":"### Example Usages:","lastModifiedDate":"2024-03-04"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"  * Allows real estate agents to add and delete contact information.","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"  * Allows real estate agents to load and save the list using JSON file.","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"  * Allows real estate agents to match buyers and houses.","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":"## Acknowledgements","lastModifiedDate":"2024-03-04"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"This project is based on the AddressBook-Level3 project created by the","lastModifiedDate":"2024-03-04"},{"lineNumber":21,"author":{"gitId":"felixchanyy"},"content":"[SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-04"}],"authorContributionMap":{"felixchanyy":19,"-":2}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"lokidoki102"},"content":"run {","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"lokidoki102"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":72,"lokidoki102":5}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"felixchanyy"},"content":"You can reach us at the email `felixchanyy.22@u.nus.edu`","lastModifiedDate":"2024-03-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":"### Felix Chan","lastModifiedDate":"2024-03-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"\u003cimg src\u003d\"images/felixchanyy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"[[homepage](https://nus-cs2103-ay2324s2.github.io/website)]","lastModifiedDate":"2024-03-04"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":"[[github](https://github.com/felixchanyy)]","lastModifiedDate":"2024-03-04"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"[[portfolio](https://www.linkedin.com/in/felixchanyy)]","lastModifiedDate":"2024-03-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"felixchanyy"},"content":"* Role: Team Lead, Scheduling and Tracking, Git Expert","lastModifiedDate":"2024-03-04"},{"lineNumber":23,"author":{"gitId":"felixchanyy"},"content":"* Responsibilities: Responsible for overall project coordination,  in charge of defining, assigning, and tracking","lastModifiedDate":"2024-03-04"},{"lineNumber":24,"author":{"gitId":"felixchanyy"},"content":"project tasks, helps other team members with matters related to Git","lastModifiedDate":"2024-03-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"felixchanyy"},"content":"### Yek Khoon Sun","lastModifiedDate":"2024-03-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"felixchanyy"},"content":"\u003cimg src\u003d\"images/khoonsun47.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"felixchanyy"},"content":"[[github](http://github.com/khoonsun47)]","lastModifiedDate":"2024-03-04"},{"lineNumber":31,"author":{"gitId":"felixchanyy"},"content":"[[portfolio](https://sg.linkedin.com/in/yek-khoon-sun-2b2270177)]","lastModifiedDate":"2024-03-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":"* Role: Testing","lastModifiedDate":"2024-03-04"},{"lineNumber":34,"author":{"gitId":"felixchanyy"},"content":"* Responsibilities: Ensures the testing of the project is done properly and on time","lastModifiedDate":"2024-03-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"felixchanyy"},"content":"### Carl Lim","lastModifiedDate":"2024-03-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"felixchanyy"},"content":"\u003cimg src\u003d\"images/lokidoki102.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"felixchanyy"},"content":"[[github](http://github.com/lokidoki102)]","lastModifiedDate":"2024-03-04"},{"lineNumber":41,"author":{"gitId":"felixchanyy"},"content":"[[portfolio](https://www.linkedin.com/in/carl-lim-483980152/)]","lastModifiedDate":"2024-03-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"felixchanyy"},"content":"* Role: Code Quality, IntelliJ expert","lastModifiedDate":"2024-03-04"},{"lineNumber":44,"author":{"gitId":"felixchanyy"},"content":"* Responsibilities: Looks after code quality and code review, ensures adherence to coding standards,","lastModifiedDate":"2024-03-04"},{"lineNumber":45,"author":{"gitId":"felixchanyy"},"content":"helps other team members with matters related to IntelliJ","lastModifiedDate":"2024-03-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"felixchanyy"},"content":"### Zeng Zihui","lastModifiedDate":"2024-03-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"felixchanyy"},"content":"\u003cimg src\u003d\"images/zengzihui.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"felixchanyy"},"content":"[[github](http://github.com/zengzihui)]","lastModifiedDate":"2024-03-04"},{"lineNumber":52,"author":{"gitId":"felixchanyy"},"content":"[[portfolio](https://www.linkedin.com/in/zeng-zihui)]","lastModifiedDate":"2024-03-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"felixchanyy"},"content":"* Role: Documentation, In charge of UI","lastModifiedDate":"2024-03-04"},{"lineNumber":55,"author":{"gitId":"felixchanyy"},"content":"* Responsibilities: Responsible for the quality of various project documents,","lastModifiedDate":"2024-03-04"},{"lineNumber":56,"author":{"gitId":"felixchanyy"},"content":"review changes done to UI, act as the gate keeper of its quality, help others when they face","lastModifiedDate":"2024-03-04"},{"lineNumber":57,"author":{"gitId":"felixchanyy"},"content":"difficulties while modifying UI","lastModifiedDate":"2024-03-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"felixchanyy"},"content":"### Liu Zhengyang","lastModifiedDate":"2024-03-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"felixchanyy"},"content":"\u003cimg src\u003d\"images/redcolorbicycle.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"felixchanyy"},"content":"[[github](http://github.com/redcolorbicycle)]","lastModifiedDate":"2024-03-04"},{"lineNumber":64,"author":{"gitId":"felixchanyy"},"content":"[[portfolio](https://www.linkedin.com/in/liu-zhengyang)]","lastModifiedDate":"2024-03-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"felixchanyy"},"content":"* Role: Deliverables and deadlines","lastModifiedDate":"2024-03-04"},{"lineNumber":67,"author":{"gitId":"felixchanyy"},"content":"* Responsibilities: Ensure project deliverables are done on time and in the right format","lastModifiedDate":"2024-03-04"}],"authorContributionMap":{"felixchanyy":36,"-":31}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"zengzihui"},"content":"# EstateEase Developer Guide","lastModifiedDate":"2024-03-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"This project is based on the AddressBook-Level3 project created by the","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"[SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"felixchanyy"},"content":"* stores EstateEase data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2024-04-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"KhoonSun47"},"content":"* can save both EstateEase data (including `Buyer`, `Seller`, and `House`) and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2024-04-03"},{"lineNumber":139,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"KhoonSun47"},"content":"### Malformed JSONs","lastModifiedDate":"2024-04-04"},{"lineNumber":143,"author":{"gitId":"KhoonSun47"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":144,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":145,"author":{"gitId":"KhoonSun47"},"content":"\u003e **Warning:** If the JSON file is malformed, the contents of EstateEase will not be loaded, and a log message will be printed to a log file instead of being displayed within the application itself. \u003cbr\u003e\u003cbr\u003e No proactive measures are taken to rectify this issue, such as deleting the corrupted file immediately upon detection or automatically fixing the fields or values in the malformed JSON. \u003cbr\u003e\u003cbr\u003e While we do not assume the intended action for encountering a malformed JSON file, it should be noted that the malformed JSON will eventually be overwritten with a correctly formatted JSON once a valid command is triggered.","lastModifiedDate":"2024-04-04"},{"lineNumber":146,"author":{"gitId":"KhoonSun47"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":147,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"KhoonSun47"},"content":"### Add seller feature","lastModifiedDate":"2024-04-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":160,"author":{"gitId":"KhoonSun47"},"content":"#### Purpose","lastModifiedDate":"2024-04-04"},{"lineNumber":161,"author":{"gitId":"KhoonSun47"},"content":"This `addSeller` feature allows user to add a `Seller` and a `House` into the EstateEase","lastModifiedDate":"2024-04-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":163,"author":{"gitId":"KhoonSun47"},"content":"#### Example Usage Scenario","lastModifiedDate":"2024-04-04"},{"lineNumber":164,"author":{"gitId":"KhoonSun47"},"content":"The following activity diagram summarizes what happens when a user executes the `addSeller` command","lastModifiedDate":"2024-04-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":166,"author":{"gitId":"KhoonSun47"},"content":"\u003cpuml src\u003d\"diagrams/AddSellerActivityDiagram.puml\" width\u003d\"1000\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":168,"author":{"gitId":"KhoonSun47"},"content":"#### Implementation","lastModifiedDate":"2024-04-04"},{"lineNumber":169,"author":{"gitId":"KhoonSun47"},"content":"The following sequence diagram shows how an `addSeller` operation goes through the `Logic` component:","lastModifiedDate":"2024-04-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":171,"author":{"gitId":"KhoonSun47"},"content":"\u003cpuml src\u003d\"diagrams/AddSellerSequenceDiagram-Logic.puml\" alt\u003d\"AddSellerSequenceDiagram-Logic\"/\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":173,"author":{"gitId":"KhoonSun47"},"content":"The proposed add seller mechanism is facilitated by `Person`. It extends `Person` with additional field `House`.","lastModifiedDate":"2024-04-04"},{"lineNumber":174,"author":{"gitId":"KhoonSun47"},"content":"Additionally, it implements the following operations:","lastModifiedDate":"2024-04-04"},{"lineNumber":175,"author":{"gitId":"KhoonSun47"},"content":"* `Seller#addHouse()` — Add a house to the seller list of houses.","lastModifiedDate":"2024-04-04"},{"lineNumber":176,"author":{"gitId":"KhoonSun47"},"content":"* `Seller#removeHouse()` — Remove a list of houses from the seller.","lastModifiedDate":"2024-04-04"},{"lineNumber":177,"author":{"gitId":"KhoonSun47"},"content":"* `Seller#getHouses()` — Get a list of houses from the seller.","lastModifiedDate":"2024-04-04"},{"lineNumber":178,"author":{"gitId":"KhoonSun47"},"content":"* `Seller#hasHouse()` — Check if a house in a list of houses from the seller.","lastModifiedDate":"2024-04-04"},{"lineNumber":179,"author":{"gitId":"KhoonSun47"},"content":"* `Seller#copy()` — Values of the seller is copied to a new seller object.","lastModifiedDate":"2024-04-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":181,"author":{"gitId":"KhoonSun47"},"content":"**Details:**","lastModifiedDate":"2024-04-04"},{"lineNumber":182,"author":{"gitId":"KhoonSun47"},"content":"1. The `AddSellerCommand` class extends the `Command` class and is responsible for executing the add seller process. It expects the full name of the `Seller` and the full details of the `House` to be specified in the command input.","lastModifiedDate":"2024-04-04"},{"lineNumber":183,"author":{"gitId":"KhoonSun47"},"content":"2. Upon execution, the command will then be parsed to `execute()` in `LogicManager`.","lastModifiedDate":"2024-04-04"},{"lineNumber":184,"author":{"gitId":"KhoonSun47"},"content":"3. The command will then be parsed to `parseCommand()` in `AddressBookParser`.","lastModifiedDate":"2024-04-04"},{"lineNumber":185,"author":{"gitId":"KhoonSun47"},"content":"4. The argument which contains a `Seller` and a `House` will then be parsed to `parse()` in `AddSellerCommandParser`.","lastModifiedDate":"2024-04-04"},{"lineNumber":186,"author":{"gitId":"KhoonSun47"},"content":"5. The `House` will then be checked at the `checkValidity()` in `AddHouseCommandParser`.","lastModifiedDate":"2024-04-04"},{"lineNumber":187,"author":{"gitId":"KhoonSun47"},"content":"6. If all the arguments for a `Seller` and a `House` is valid, it will then be parsed to the `AddSellerCommand`, where a constructor will be created.","lastModifiedDate":"2024-04-04"},{"lineNumber":188,"author":{"gitId":"KhoonSun47"},"content":"7. At the `AddSellerCommand`, it will check whether there is duplicate `Seller` in `Person`, `Seller` and `Buyer` cannot be the same `Person`. The `House` will also be checked to see whether it is a duplicate `House`, since the same `House` should not exist in the EstateEase data.","lastModifiedDate":"2024-04-04"},{"lineNumber":189,"author":{"gitId":"KhoonSun47"},"content":"8. Once the checks are all done, a `CommandResult` will then be returned. The system will then construct a new `Seller` object which contains the `Seller` details and `House` details. This object will then be used to update the `Model` through `addPerson()` method of model.","lastModifiedDate":"2024-04-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":191,"author":{"gitId":"KhoonSun47"},"content":"**Note:**","lastModifiedDate":"2024-04-04"},{"lineNumber":192,"author":{"gitId":"KhoonSun47"},"content":"- If the `Seller` has the same name as a `Seller` or a `Buyer`, it will return an error to the user that the `Person` has existed. Each `Buyer` and `Seller` are unique, and `Buyer` cannot be a `Seller`, and vice versa.","lastModifiedDate":"2024-04-04"},{"lineNumber":193,"author":{"gitId":"KhoonSun47"},"content":"- If there is a duplicate `House` in the EstateEase, it will return an error to the user that the should `House` has existed. Each `House` is unique, and there should not be duplicates.","lastModifiedDate":"2024-04-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":195,"author":{"gitId":"KhoonSun47"},"content":"#### Design Considerations","lastModifiedDate":"2024-04-04"},{"lineNumber":196,"author":{"gitId":"KhoonSun47"},"content":"**Aspect: How `addSeller` executes:**","lastModifiedDate":"2024-04-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":198,"author":{"gitId":"KhoonSun47"},"content":"* **Alternative 1 (current choice):** Use a new command to add `Seller`.","lastModifiedDate":"2024-04-04"},{"lineNumber":199,"author":{"gitId":"KhoonSun47"},"content":"    * **Pros:** Easy to implement, lesser confusion on adding `Seller` and `Buyer`.","lastModifiedDate":"2024-04-04"},{"lineNumber":200,"author":{"gitId":"KhoonSun47"},"content":"    * **Cons:** May lead to many commands, which is difficult for user to remember.","lastModifiedDate":"2024-04-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":202,"author":{"gitId":"KhoonSun47"},"content":"* **Alternative 2:** Use a prefix to differentiate between `Seller` and `Buyer`.","lastModifiedDate":"2024-04-04"},{"lineNumber":203,"author":{"gitId":"KhoonSun47"},"content":"    * **Pros:** Having lesser commands is easier for the user to remember.","lastModifiedDate":"2024-04-04"},{"lineNumber":204,"author":{"gitId":"KhoonSun47"},"content":"    * **Cons:** Difficult to implement, having more prefixes means more validation.","lastModifiedDate":"2024-04-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":206,"author":{"gitId":"KhoonSun47"},"content":"* **Alternative 1 (current choice):** Use the `addSeller` command to add one `Seller` and one `House`.","lastModifiedDate":"2024-04-04"},{"lineNumber":207,"author":{"gitId":"KhoonSun47"},"content":"    * **Pros:** It allows the `Seller` to have at least one house, so that `Seller` and `Buyer` can match instantly (if the requirements matches).","lastModifiedDate":"2024-04-04"},{"lineNumber":208,"author":{"gitId":"KhoonSun47"},"content":"    * **Cons:** Difficult to implement, as there needs to be validation on both `Seller` and `House`.","lastModifiedDate":"2024-04-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":210,"author":{"gitId":"KhoonSun47"},"content":"* **Alternative 2:** Use the `addSeller` command to add only `Seller`.","lastModifiedDate":"2024-04-04"},{"lineNumber":211,"author":{"gitId":"KhoonSun47"},"content":"    * **Pros:** It is easier to implement, because it does not require `House` validation.","lastModifiedDate":"2024-04-04"},{"lineNumber":212,"author":{"gitId":"KhoonSun47"},"content":"    * **Cons:** The `Seller` will not have a house, and if all the `Seller` in the list does not have a house, `matchBuyer` cannot happen.","lastModifiedDate":"2024-04-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":214,"author":{"gitId":"zengzihui"},"content":"### Add buyer feature","lastModifiedDate":"2024-04-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":216,"author":{"gitId":"zengzihui"},"content":"#### Purpose","lastModifiedDate":"2024-04-04"},{"lineNumber":217,"author":{"gitId":"zengzihui"},"content":"This `addBuyer` feature allows user to add a `Buyer` into the EstateEase","lastModifiedDate":"2024-04-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":219,"author":{"gitId":"zengzihui"},"content":"#### Example Usage Scenario","lastModifiedDate":"2024-04-04"},{"lineNumber":220,"author":{"gitId":"zengzihui"},"content":"The following activity diagram summarizes what happens when a user executes the `addBuyer` command","lastModifiedDate":"2024-04-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":222,"author":{"gitId":"zengzihui"},"content":"\u003cpuml src\u003d\"diagrams/AddBuyerActivityDiagram.puml\" width\u003d\"1000\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":224,"author":{"gitId":"zengzihui"},"content":"#### Implementation","lastModifiedDate":"2024-04-04"},{"lineNumber":225,"author":{"gitId":"zengzihui"},"content":"The following sequence diagram shows how an `addBuyer` operation goes through the `Logic` component:","lastModifiedDate":"2024-04-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":227,"author":{"gitId":"zengzihui"},"content":"\u003cpuml src\u003d\"diagrams/AddBuyerSequenceDiagram-Logic.puml\" alt\u003d\"AddBuyerSequenceDiagram-Logic\"/\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":229,"author":{"gitId":"zengzihui"},"content":"The proposed add buyer mechanism is facilitated by `Person`. It extends `Person` with additional field `Budget` and `PreferredHousingType`.","lastModifiedDate":"2024-04-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":231,"author":{"gitId":"zengzihui"},"content":"**Details:**","lastModifiedDate":"2024-04-04"},{"lineNumber":232,"author":{"gitId":"zengzihui"},"content":"1. The `AddBuyerCommand` class extends the `Command` class and is responsible for executing the add buyer process. It expects the full name and full details of the `Buyer` to be specified in the command input.","lastModifiedDate":"2024-04-04"},{"lineNumber":233,"author":{"gitId":"zengzihui"},"content":"2. Upon execution, the command will then be parsed to `execute()` in `LogicManager`.","lastModifiedDate":"2024-04-04"},{"lineNumber":234,"author":{"gitId":"zengzihui"},"content":"3. The command will then be parsed to `parseCommand()` in `AddressBookParser`.","lastModifiedDate":"2024-04-04"},{"lineNumber":235,"author":{"gitId":"zengzihui"},"content":"4. The argument which contains a `Buyer` will then be parsed to `parse()` in `AddBuyerCommandParser`.","lastModifiedDate":"2024-04-04"},{"lineNumber":236,"author":{"gitId":"zengzihui"},"content":"6. If all the arguments for a `Buyer` are valid, it will then be parsed to the `AddBuyerCommand`, where a constructor will be created.","lastModifiedDate":"2024-04-04"},{"lineNumber":237,"author":{"gitId":"zengzihui"},"content":"7. At the `AddBuyerCommand`, it will check whether there is duplicate `Seller` or `Buyer` in `Person`, `Seller` and `Buyer` cannot be the same `Person`.","lastModifiedDate":"2024-04-04"},{"lineNumber":238,"author":{"gitId":"zengzihui"},"content":"8. Once the checks are all done, a `CommandResult` will then be returned. The system will then construct a new `Buyer` object which contains the `Buyer` details. This object will then be used to update the `Model` through `addPerson()` method of model.","lastModifiedDate":"2024-04-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":240,"author":{"gitId":"zengzihui"},"content":"**Note:**","lastModifiedDate":"2024-04-04"},{"lineNumber":241,"author":{"gitId":"zengzihui"},"content":"- If the `Buyer` has the same name as a `Seller` or a `Buyer`, it will return an error to the user that the `Person` has existed. Each `Buyer` and `Seller` are unique, and `Buyer` cannot be a `Seller`, and vice versa.","lastModifiedDate":"2024-04-04"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":243,"author":{"gitId":"zengzihui"},"content":"#### Design Considerations","lastModifiedDate":"2024-04-04"},{"lineNumber":244,"author":{"gitId":"zengzihui"},"content":"**Aspect: How `addBuyer` executes:**","lastModifiedDate":"2024-04-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":246,"author":{"gitId":"zengzihui"},"content":"* **Alternative 1 (current choice):** Use a new command to add `Buyer`.","lastModifiedDate":"2024-04-04"},{"lineNumber":247,"author":{"gitId":"zengzihui"},"content":"    * **Pros:** Easy to implement, lesser confusion on adding `Seller` and `Buyer`.","lastModifiedDate":"2024-04-04"},{"lineNumber":248,"author":{"gitId":"zengzihui"},"content":"    * **Cons:** May lead to many commands, which is difficult for user to remember.","lastModifiedDate":"2024-04-04"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":250,"author":{"gitId":"zengzihui"},"content":"* **Alternative 2:** Use a prefix to differentiate between `Seller` and `Buyer`.","lastModifiedDate":"2024-04-04"},{"lineNumber":251,"author":{"gitId":"zengzihui"},"content":"    * **Pros:** Having lesser commands is easier for the user to remember.","lastModifiedDate":"2024-04-04"},{"lineNumber":252,"author":{"gitId":"zengzihui"},"content":"    * **Cons:** Difficult to implement, having more prefixes means more validation.","lastModifiedDate":"2024-04-04"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":255,"author":{"gitId":"zengzihui"},"content":"### View the details of a Person feature","lastModifiedDate":"2024-04-04"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":257,"author":{"gitId":"zengzihui"},"content":"#### Purpose","lastModifiedDate":"2024-04-04"},{"lineNumber":258,"author":{"gitId":"zengzihui"},"content":"This `view` feature allows user to view the details of a `Person` in the EstateEase","lastModifiedDate":"2024-04-04"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":260,"author":{"gitId":"zengzihui"},"content":"#### Example Usage Scenario","lastModifiedDate":"2024-04-04"},{"lineNumber":261,"author":{"gitId":"zengzihui"},"content":"The following activity diagram summarizes what happens when a user executes the `view` command","lastModifiedDate":"2024-04-04"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":263,"author":{"gitId":"zengzihui"},"content":"#### Implementation","lastModifiedDate":"2024-04-04"},{"lineNumber":264,"author":{"gitId":"zengzihui"},"content":"The following sequence diagram shows how an `view` operation goes through the `Logic` component:","lastModifiedDate":"2024-04-04"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":266,"author":{"gitId":"zengzihui"},"content":"\u003cpuml src\u003d\"diagrams/ViewSequenceDiagram-Logic.puml\" alt\u003d\"ViewSequenceDiagram-Logic\"/\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":267,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":268,"author":{"gitId":"zengzihui"},"content":"**Details:**","lastModifiedDate":"2024-04-04"},{"lineNumber":269,"author":{"gitId":"zengzihui"},"content":"1. The `ViewCommand` class extends the `Command` class and is responsible for executing the view person details process. It expects the index of the person in the displayed list to be specified in the command input.","lastModifiedDate":"2024-04-04"},{"lineNumber":270,"author":{"gitId":"zengzihui"},"content":"2. Upon execution, the command will then be parsed to `execute()` in `LogicManager`.","lastModifiedDate":"2024-04-04"},{"lineNumber":271,"author":{"gitId":"zengzihui"},"content":"3. The command will then be parsed to `parseCommand()` in `AddressBookParser`.","lastModifiedDate":"2024-04-04"},{"lineNumber":272,"author":{"gitId":"zengzihui"},"content":"4. The argument which contains a `Index` will then be parsed to `parse()` in `ViewCommandParser`.","lastModifiedDate":"2024-04-04"},{"lineNumber":273,"author":{"gitId":"zengzihui"},"content":"6. If the `Index` is valid, it will then be parsed to the `ViewCommand`, where a constructor will be created.","lastModifiedDate":"2024-04-04"},{"lineNumber":274,"author":{"gitId":"zengzihui"},"content":"7. At the `ViewCommand`, it will check whether `Index` is within the range of the displayed list.","lastModifiedDate":"2024-04-04"},{"lineNumber":275,"author":{"gitId":"zengzihui"},"content":"8. Once the checks are all done, a `CommandResult` will then be returned. The system will then construct a new `Person` object which contains the `Person` details. This object will then be used to update the `Model` through `showPerson()` method of model.","lastModifiedDate":"2024-04-04"},{"lineNumber":276,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":277,"author":{"gitId":"zengzihui"},"content":"**Note:**","lastModifiedDate":"2024-04-04"},{"lineNumber":278,"author":{"gitId":"zengzihui"},"content":"- The `Index` should be the index of the displayed person list.","lastModifiedDate":"2024-04-04"},{"lineNumber":279,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":280,"author":{"gitId":"zengzihui"},"content":"#### Design Considerations","lastModifiedDate":"2024-04-04"},{"lineNumber":281,"author":{"gitId":"zengzihui"},"content":"**Aspect: How `view` executes:**","lastModifiedDate":"2024-04-04"},{"lineNumber":282,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":283,"author":{"gitId":"zengzihui"},"content":"* **Alternative 1 (current choice):** Use a new command to view for both `Buyer` and `Seller` and system will check which object to display.","lastModifiedDate":"2024-04-04"},{"lineNumber":284,"author":{"gitId":"zengzihui"},"content":"    * **Pros:** Having lesser commands, lesser confusion on adding too many commands for user to remember.","lastModifiedDate":"2024-04-04"},{"lineNumber":285,"author":{"gitId":"zengzihui"},"content":"    * **Cons:** May be messy to implement it.","lastModifiedDate":"2024-04-04"},{"lineNumber":286,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":287,"author":{"gitId":"zengzihui"},"content":"* **Alternative 2:** Use 2 commands to differentiate between `Seller` and `Buyer`.","lastModifiedDate":"2024-04-04"},{"lineNumber":288,"author":{"gitId":"zengzihui"},"content":"    * **Pros:** Clear commands for user to view either `Seller` or `Buyer`.","lastModifiedDate":"2024-04-04"},{"lineNumber":289,"author":{"gitId":"zengzihui"},"content":"    * **Cons:** Having too many commands is troublesome for the user to remember.","lastModifiedDate":"2024-04-04"},{"lineNumber":290,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":291,"author":{"gitId":"zengzihui"},"content":"* **Alternative 1 (current choice):** Use `INDEX` in the command input to select the person to view details.","lastModifiedDate":"2024-04-04"},{"lineNumber":292,"author":{"gitId":"zengzihui"},"content":"    * **Pros:** Easier for input validation checks, easier to implement.","lastModifiedDate":"2024-04-04"},{"lineNumber":293,"author":{"gitId":"zengzihui"},"content":"      * **Cons:** When there is too many `Person` added to EstateEase, it might not be easy to find the index of the person the user want to view details..","lastModifiedDate":"2024-04-04"},{"lineNumber":294,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":295,"author":{"gitId":"zengzihui"},"content":"* **Alternative 2:** Use `FULLNAME` in the command input to select the person to view details.","lastModifiedDate":"2024-04-04"},{"lineNumber":296,"author":{"gitId":"zengzihui"},"content":"    * **Pros:** Save user the trouble to search for index of the person that user want to view.","lastModifiedDate":"2024-04-04"},{"lineNumber":297,"author":{"gitId":"zengzihui"},"content":"    * **Cons:** More input validation has to be done, user might not remember the full name of the person if the full name is too long.","lastModifiedDate":"2024-04-04"},{"lineNumber":298,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":299,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":300,"author":{"gitId":"lokidoki102"},"content":"### Edit Buyer","lastModifiedDate":"2024-04-03"},{"lineNumber":301,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":302,"author":{"gitId":"lokidoki102"},"content":"#### Purpose","lastModifiedDate":"2024-04-03"},{"lineNumber":303,"author":{"gitId":"lokidoki102"},"content":"The `editBuyer` command allows users to edit the details an existing `Buyer` in EstateEase.","lastModifiedDate":"2024-04-04"},{"lineNumber":304,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":305,"author":{"gitId":"lokidoki102"},"content":"#### Implementation","lastModifiedDate":"2024-04-03"},{"lineNumber":306,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":307,"author":{"gitId":"lokidoki102"},"content":"\u003cpuml src\u003d\"diagrams/EditBuyerSequenceDiagram.puml\" alt\u003d\"EditBuyerSequenceDiagram\" width\u003d\"1200\"/\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":308,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":309,"author":{"gitId":"lokidoki102"},"content":"1. The user enters the `editBuyer` command in the format `editBuyer INDEX [n/NAME] [p/PHONE] [e/EMAIL]","lastModifiedDate":"2024-04-03"},{"lineNumber":310,"author":{"gitId":"lokidoki102"},"content":"[type/HOUSING_TYPE] [budget/BUDGET]` (E.g. editBuyer 1 p/91234567 e/johndoe@example.com).","lastModifiedDate":"2024-04-03"},{"lineNumber":311,"author":{"gitId":"lokidoki102"},"content":"2. The input is then passed to the `AddressBookParser` which calls `EditBuyerCommandParser.parse()` to parse the input.","lastModifiedDate":"2024-04-03"},{"lineNumber":312,"author":{"gitId":"lokidoki102"},"content":"   If the input is invalid, this method will throw a `ParseException`, prompting the user where the invalid input went","lastModifiedDate":"2024-04-03"},{"lineNumber":313,"author":{"gitId":"lokidoki102"},"content":"   wrong.","lastModifiedDate":"2024-04-03"},{"lineNumber":314,"author":{"gitId":"lokidoki102"},"content":"3. `EditBuyerCommandParser.parse()` will create an `editBuyerDescriptor` object if the input is valid.","lastModifiedDate":"2024-04-04"},{"lineNumber":315,"author":{"gitId":"lokidoki102"},"content":"    The `editBuyerDescriptor` object contains the edited values of the `Buyer`.","lastModifiedDate":"2024-04-03"},{"lineNumber":316,"author":{"gitId":"lokidoki102"},"content":"    `EditBuyerCommandParser.parse()` will then return an `EditBuyerCommand` object which contains the `INDEX` of the","lastModifiedDate":"2024-04-03"},{"lineNumber":317,"author":{"gitId":"lokidoki102"},"content":"    `Buyer` and `editBuyerDescriptor`.","lastModifiedDate":"2024-04-03"},{"lineNumber":318,"author":{"gitId":"lokidoki102"},"content":"4. The logic manager will then `execute()` of the `EditBuyerCommand` object.","lastModifiedDate":"2024-04-03"},{"lineNumber":319,"author":{"gitId":"lokidoki102"},"content":"5. In the `execute()`, the system will check if the `INDEX` is valid, check if the object being edited is of `Buyer`","lastModifiedDate":"2024-04-03"},{"lineNumber":320,"author":{"gitId":"lokidoki102"},"content":"   type, and check if the edited `name` value already exists in EstateEase. If any of these checks fail, a","lastModifiedDate":"2024-04-03"},{"lineNumber":321,"author":{"gitId":"lokidoki102"},"content":"   `CommandException` will be thrown.","lastModifiedDate":"2024-04-03"},{"lineNumber":322,"author":{"gitId":"lokidoki102"},"content":"6. Once the checks are all done, the system will construct a new `Buyer` object which contains the edited values. This","lastModifiedDate":"2024-04-03"},{"lineNumber":323,"author":{"gitId":"lokidoki102"},"content":"   object will then be used to update the model through `setPerson()` method of `model`.","lastModifiedDate":"2024-04-03"},{"lineNumber":324,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":325,"author":{"gitId":"lokidoki102"},"content":"#### Design Considerations","lastModifiedDate":"2024-04-04"},{"lineNumber":326,"author":{"gitId":"lokidoki102"},"content":"It is important to ensure that the target of the `editBuyer` command is in fact a `Buyer` object as it has different","lastModifiedDate":"2024-04-04"},{"lineNumber":327,"author":{"gitId":"lokidoki102"},"content":"parameters that is not available to `Seller` object. Hence, the reason why the edit command is also separated into two","lastModifiedDate":"2024-04-04"},{"lineNumber":328,"author":{"gitId":"lokidoki102"},"content":"commands, one for buyer and one for seller. The uniqueness of the `name` value in the EstateEase is also","lastModifiedDate":"2024-04-04"},{"lineNumber":329,"author":{"gitId":"lokidoki102"},"content":"needed as some of the commands uses the `name` to execute the command.","lastModifiedDate":"2024-04-04"},{"lineNumber":330,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":331,"author":{"gitId":"lokidoki102"},"content":"### Editing Seller Details","lastModifiedDate":"2024-04-04"},{"lineNumber":332,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":333,"author":{"gitId":"lokidoki102"},"content":"#### Purpose","lastModifiedDate":"2024-04-04"},{"lineNumber":334,"author":{"gitId":"lokidoki102"},"content":"The `editSeller` command allows user to edit the details of an existing `Seller` in EstateEase.","lastModifiedDate":"2024-04-04"},{"lineNumber":335,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":336,"author":{"gitId":"lokidoki102"},"content":"#### Implementation","lastModifiedDate":"2024-04-04"},{"lineNumber":337,"author":{"gitId":"lokidoki102"},"content":"The overall implementation of this command is very similar to `editBuyer` command, except the command format is","lastModifiedDate":"2024-04-04"},{"lineNumber":338,"author":{"gitId":"lokidoki102"},"content":"`editSeller [n/NAME] [p/PHONE] [e/EMAIL]` (E.g. editSeller 1 p/91234567 e/johndoe@example.com).","lastModifiedDate":"2024-04-04"},{"lineNumber":339,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":340,"author":{"gitId":"KhoonSun47"},"content":"#### Why It\u0027s Implemented That Way","lastModifiedDate":"2024-04-04"},{"lineNumber":341,"author":{"gitId":"KhoonSun47"},"content":"- The edit function is separated out into Buyer and Seller as each Buyer and Seller have a minor difference in their attributes.","lastModifiedDate":"2024-04-04"},{"lineNumber":342,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":343,"author":{"gitId":"felixchanyy"},"content":"### Matching Sellers to a Buyer","lastModifiedDate":"2024-04-03"},{"lineNumber":344,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":345,"author":{"gitId":"felixchanyy"},"content":"#### Purpose","lastModifiedDate":"2024-04-03"},{"lineNumber":346,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":347,"author":{"gitId":"felixchanyy"},"content":"The real estate agent may want to obtain all houses from sellers that match the buyer\u0027s preferences. For example, the real estate agent may want to gather all houses from sellers that align with a specified buyer\u0027s budget and preferred housing type.","lastModifiedDate":"2024-04-03"},{"lineNumber":348,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":349,"author":{"gitId":"felixchanyy"},"content":"#### Implementation","lastModifiedDate":"2024-04-03"},{"lineNumber":350,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":351,"author":{"gitId":"felixchanyy"},"content":"1. The `MatchBuyerCommand` class extends the `Command` class and is responsible for executing the matching process. It expects the full name of the `Buyer` to be specified in the command input. Upon execution, the command retrieves the `Budget` and `HousingType` of the specified buyer. It then matches these preferences with the listings of available sellers\u0027 houses.","lastModifiedDate":"2024-04-04"},{"lineNumber":352,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":353,"author":{"gitId":"felixchanyy"},"content":"2. The `MatchBuyerCommandParser` class is used to parse the user input and create the `MatchBuyerCommand` object. When executed by the `LogicManager`, the `MatchBuyerCommand#execute(Model model)` method is called. This method matches the buyer\u0027s preferences with available sellers\u0027 houses in the model and returns a `CommandResult` object.","lastModifiedDate":"2024-04-03"},{"lineNumber":354,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":355,"author":{"gitId":"felixchanyy"},"content":"#### Example Usage Scenario:","lastModifiedDate":"2024-04-03"},{"lineNumber":356,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":357,"author":{"gitId":"felixchanyy"},"content":"**Step 1:** The user launches the application for the first time. EstateEase will be initialized with the initial app state (consisting of both `Buyer` and `Seller` details).","lastModifiedDate":"2024-04-12"},{"lineNumber":358,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":359,"author":{"gitId":"felixchanyy"},"content":"**Step 2:** The user executes the `matchBuyer Alice Lim` command to find and display `Seller` details with `House` that match the preferences of the buyer named \"Alice Lim\" in EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":360,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":361,"author":{"gitId":"felixchanyy"},"content":"**Note:** If the `matchBuyer` command is used without specifying the full name of a `Buyer`, it will return a message to the user indicating that the buyer does not exist.","lastModifiedDate":"2024-04-03"},{"lineNumber":362,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":363,"author":{"gitId":"felixchanyy"},"content":"The following activity diagram summarises the execution of a `matchBuyer` command:","lastModifiedDate":"2024-04-04"},{"lineNumber":364,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":365,"author":{"gitId":"felixchanyy"},"content":"\u003cpuml src\u003d\"diagrams/MatchBuyerActivityDiagram.puml\" alt\u003d\"MatchBuyerActivityDiagram\" width\u003d\"1000\"/\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":366,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":367,"author":{"gitId":"felixchanyy"},"content":"The following sequence diagram shows how an `matchBuyer` operation goes through the `Logic` component:","lastModifiedDate":"2024-04-03"},{"lineNumber":368,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":369,"author":{"gitId":"lokidoki102"},"content":"\u003cpuml src\u003d\"diagrams/MatchBuyerSequenceDiagram-Logic.puml\" alt\u003d\"MatchBuyerSequenceDiagram-Logic\" width\u003d\"1200\"/\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":370,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":371,"author":{"gitId":"felixchanyy"},"content":"#### Design Considerations","lastModifiedDate":"2024-04-03"},{"lineNumber":372,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":373,"author":{"gitId":"felixchanyy"},"content":"* *Alternative 1 (current choice):* Use a new `MatchBuyerCommand` to do matching.","lastModifiedDate":"2024-04-03"},{"lineNumber":374,"author":{"gitId":"felixchanyy"},"content":"    * Pros:","lastModifiedDate":"2024-04-03"},{"lineNumber":375,"author":{"gitId":"felixchanyy"},"content":"        * Provides a dedicated command specifically tailored for matching sellers to a `Buyer`, enhancing clarity and readability in the codebase.","lastModifiedDate":"2024-04-03"},{"lineNumber":376,"author":{"gitId":"felixchanyy"},"content":"        * Allows for specialized handling of buyer matching logic within its own command class, facilitating easier maintenance and updates.","lastModifiedDate":"2024-04-03"},{"lineNumber":377,"author":{"gitId":"felixchanyy"},"content":"    * Cons:","lastModifiedDate":"2024-04-03"},{"lineNumber":378,"author":{"gitId":"felixchanyy"},"content":"        * Requires the introduction of a new command class, potentially increasing the overall complexity of the codebase.","lastModifiedDate":"2024-04-03"},{"lineNumber":379,"author":{"gitId":"felixchanyy"},"content":"        * More commands for the user to remember","lastModifiedDate":"2024-04-03"},{"lineNumber":380,"author":{"gitId":"felixchanyy"},"content":"* *Alternative 2:* Use prefix in `FindCommand` to do matching","lastModifiedDate":"2024-04-03"},{"lineNumber":381,"author":{"gitId":"felixchanyy"},"content":"    * Pros:","lastModifiedDate":"2024-04-03"},{"lineNumber":382,"author":{"gitId":"felixchanyy"},"content":"        * Utilizes an existing command class, reducing the need for additional code and command classes dedicated to matching.","lastModifiedDate":"2024-04-03"},{"lineNumber":383,"author":{"gitId":"felixchanyy"},"content":"        * Leverages the flexibility of the `FindCommand` structure to accommodate various matching scenarios with different prefixes.","lastModifiedDate":"2024-04-03"},{"lineNumber":384,"author":{"gitId":"felixchanyy"},"content":"    * Cons:","lastModifiedDate":"2024-04-03"},{"lineNumber":385,"author":{"gitId":"felixchanyy"},"content":"        * May lead to less clear and focused command implementations, as matching logic would be mixed with other find functionalities.","lastModifiedDate":"2024-04-03"},{"lineNumber":386,"author":{"gitId":"felixchanyy"},"content":"        * Could result in increased complexity within the `FindCommand` class, potentially making it harder to maintain and understand.","lastModifiedDate":"2024-04-03"},{"lineNumber":387,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":388,"author":{"gitId":"redcolorbicycle"},"content":"#### Adding Houses","lastModifiedDate":"2024-04-03"},{"lineNumber":389,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":390,"author":{"gitId":"redcolorbicycle"},"content":"### Purpose","lastModifiedDate":"2024-04-03"},{"lineNumber":391,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":392,"author":{"gitId":"redcolorbicycle"},"content":"The `AddHouse` Command is necessary to allow Houses to be added to Sellers.","lastModifiedDate":"2024-04-03"},{"lineNumber":393,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":394,"author":{"gitId":"redcolorbicycle"},"content":"### Implementation","lastModifiedDate":"2024-04-03"},{"lineNumber":395,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":396,"author":{"gitId":"redcolorbicycle"},"content":"The `AddHouseCommand` class extends the `Command` class and is responsible for executing the adding of a house to a seller. It expects the full name of the seller to be specified in the command input, along with the full details of the house. Upon execution, the command fetches listings of available sellers\u0027 houses. It checks if the house already exists and if the seller is a valid seller. If it does not exist and the seller is valid, the house is added to the seller.","lastModifiedDate":"2024-04-03"},{"lineNumber":397,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":398,"author":{"gitId":"redcolorbicycle"},"content":"The `AddHouseCommandParser` class is used to parse the user input and create the `AddHouseCommand` object. When executed by the `LogicManager`, the `AddHouseCommand#execute(Model model)` method is called. This method checks if the seller exists and if the house already exists and if the house is valid and returns a `CommandResult` object.","lastModifiedDate":"2024-04-03"},{"lineNumber":399,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":400,"author":{"gitId":"redcolorbicycle"},"content":"### Example Usage Scenario:","lastModifiedDate":"2024-04-03"},{"lineNumber":401,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":402,"author":{"gitId":"redcolorbicycle"},"content":"**Step 1:** The user launches the application. The `AddressBook` is assumed to already have the `Seller` John Doe.","lastModifiedDate":"2024-04-03"},{"lineNumber":403,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":404,"author":{"gitId":"redcolorbicycle"},"content":"**Step 2:** The user executes the `addHouse n/John Doe type/Condominium street/Clementi Ave 2 blk/N/A level/02 unitNo/25 postal/578578 price/99999 ` command to add a `House` with these details to `AddressBook`.","lastModifiedDate":"2024-04-03"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":406,"author":{"gitId":"redcolorbicycle"},"content":"**Note:** If the `addHouse` command is used with a `Person` who is not a `Seller`, or with invalid house details, or to a nonexistent `Seller`, or an already existing `House`, an error message is displayed.","lastModifiedDate":"2024-04-03"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":409,"author":{"gitId":"redcolorbicycle"},"content":"The following sequence diagram shows how an `matchBuyer` operation goes through the `Logic` component:","lastModifiedDate":"2024-04-03"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":411,"author":{"gitId":"lokidoki102"},"content":"\u003cpuml src\u003d\"diagrams/AddHouseSequenceDiagram-Logic.puml\" alt\u003d\"AddHouseSequenceDiagram-Logic\" width\u003d\"1200\"/\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":413,"author":{"gitId":"redcolorbicycle"},"content":"### Design Considerations","lastModifiedDate":"2024-04-03"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":415,"author":{"gitId":"redcolorbicycle"},"content":"* *Alternative 1 (current choice):* Use only a `Houses` ArrayList within Sellers to track","lastModifiedDate":"2024-04-03"},{"lineNumber":416,"author":{"gitId":"redcolorbicycle"},"content":"    * Pros:","lastModifiedDate":"2024-04-03"},{"lineNumber":417,"author":{"gitId":"redcolorbicycle"},"content":"        * Allows for only seller handling for houses and reduces overlap within classes","lastModifiedDate":"2024-04-03"},{"lineNumber":418,"author":{"gitId":"redcolorbicycle"},"content":"        * Easier to track house logic as it will be contained within the seller","lastModifiedDate":"2024-04-03"},{"lineNumber":419,"author":{"gitId":"redcolorbicycle"},"content":"    * Cons:","lastModifiedDate":"2024-04-03"},{"lineNumber":420,"author":{"gitId":"redcolorbicycle"},"content":"        * Need to check all sellers whenever houses are checked for duplicates. increasing runtime","lastModifiedDate":"2024-04-03"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":422,"author":{"gitId":"redcolorbicycle"},"content":"#### Deleting Houses","lastModifiedDate":"2024-04-03"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":424,"author":{"gitId":"redcolorbicycle"},"content":"### Purpose","lastModifiedDate":"2024-04-03"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":426,"author":{"gitId":"redcolorbicycle"},"content":"The `DeleteHouse` Command is necessary to delete Houses from relevant Sellers.","lastModifiedDate":"2024-04-03"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":428,"author":{"gitId":"redcolorbicycle"},"content":"### Implementation","lastModifiedDate":"2024-04-03"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":430,"author":{"gitId":"redcolorbicycle"},"content":"The `DeleteHouseCommand` class extends the `Command` class and is responsible for executing the deletion of a house from a seller. It expects the full name of the seller to be specified in the command input, along with the full details of the house. Upon execution, the command fetches listings of available sellers\u0027 houses. It checks if the house already exists and if the seller is a valid seller. If it does exist and the seller is valid, the house is deleted from the seller.","lastModifiedDate":"2024-04-03"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":432,"author":{"gitId":"redcolorbicycle"},"content":"The `DeleteHouseCommandParser` class is used to parse the user input and create the `DeleteHouseCommand` object. When executed by the `LogicManager`, the `DeleteHouseCommand#execute(Model model)` method is called. This method checks if the seller exists and if the house already exists and if the house is valid and returns a `CommandResult` object.","lastModifiedDate":"2024-04-03"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":434,"author":{"gitId":"redcolorbicycle"},"content":"### Example Usage Scenario:","lastModifiedDate":"2024-04-03"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":436,"author":{"gitId":"redcolorbicycle"},"content":"**Step 1:** The user launches the application. The `AddressBook` is assumed to already have the `Seller` John Doe. John Doe is assumed to have a Condominium located at Clementi Ave 2, level 2 (with no block), unit number 25, postal code 578578 with price 99999.","lastModifiedDate":"2024-04-03"},{"lineNumber":437,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":438,"author":{"gitId":"redcolorbicycle"},"content":"**Step 2:** The user executes the `deleteHouse n/John Doe type/Condominium street/Clementi Ave 2 blk/N/A level/02 unitNo/25 postal/578578 price/99999 ` command to delete a `House` with these details from `AddressBook` and John Doe\u0027s houses.","lastModifiedDate":"2024-04-03"},{"lineNumber":439,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":440,"author":{"gitId":"redcolorbicycle"},"content":"**Note:** If the `deleteHouse` command is used with a `Person` who is not a `Seller`, or with invalid house details, or to a nonexistent `Seller`, or an already existing `House` not under the named `Seller`, an error message is displayed.","lastModifiedDate":"2024-04-03"},{"lineNumber":441,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":442,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":443,"author":{"gitId":"redcolorbicycle"},"content":"The following sequence diagram shows how an `deleteHouse` operation goes through the `Logic` component:","lastModifiedDate":"2024-04-03"},{"lineNumber":444,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":445,"author":{"gitId":"lokidoki102"},"content":"\u003cpuml src\u003d\"diagrams/DeleteHouseSequenceDiagram-Logic.puml\" alt\u003d\"DeleteHouseSequenceDiagram-Logic\" width\u003d\"1200\"/\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":446,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":447,"author":{"gitId":"redcolorbicycle"},"content":"### Design Considerations","lastModifiedDate":"2024-04-03"},{"lineNumber":448,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":449,"author":{"gitId":"redcolorbicycle"},"content":"* *Alternative 1 (current choice):* Use only a `Houses` ArrayList within Sellers to track","lastModifiedDate":"2024-04-03"},{"lineNumber":450,"author":{"gitId":"redcolorbicycle"},"content":"    * Pros:","lastModifiedDate":"2024-04-03"},{"lineNumber":451,"author":{"gitId":"redcolorbicycle"},"content":"        * Allows for only seller handling for houses and reduces overlap within classes","lastModifiedDate":"2024-04-03"},{"lineNumber":452,"author":{"gitId":"redcolorbicycle"},"content":"        * Easier to track house logic as it will be contained within the seller","lastModifiedDate":"2024-04-03"},{"lineNumber":453,"author":{"gitId":"redcolorbicycle"},"content":"    * Cons:","lastModifiedDate":"2024-04-03"},{"lineNumber":454,"author":{"gitId":"redcolorbicycle"},"content":"        * Need to check all sellers whenever houses are checked for duplicates. increasing runtime","lastModifiedDate":"2024-04-03"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":456,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":461,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":462,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":463,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":464,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"zengzihui"},"content":"* Residential Property Real Estate Listing Agent in Singapore","lastModifiedDate":"2024-03-04"},{"lineNumber":474,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":476,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"zengzihui"},"content":"**Value proposition**: EstateEase simplifies residential property management for real estate listing agents in Singapore. With intuitive tools for listing and client communication, the app is tailored for efficiency. Agents can quickly access contacts and prioritize them, ensuring swift connections with clients.","lastModifiedDate":"2024-03-04"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"zengzihui"},"content":"Priorities: Urgent (must-must have) - `* * * *`, High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2024-03-07"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"| Priority  | As a …​                     | I want to …​                                                                                  | So that I can…​                                                              |","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"zengzihui"},"content":"|-----------|-----------------------------|-----------------------------------------------------------------------------------------------|------------------------------------------------------------------------------|","lastModifiedDate":"2024-03-07"},{"lineNumber":487,"author":{"gitId":"KhoonSun47"},"content":"| `* * * *` | real estate agent           | add home-sellers clients                                                                      | keep track of their contact details and the properties that they are selling |","lastModifiedDate":"2024-04-03"},{"lineNumber":488,"author":{"gitId":"KhoonSun47"},"content":"| `* * * *` | real estate agent           | add home-buyers clients                                                                       | keep track of their contact details and requirements                         |","lastModifiedDate":"2024-04-03"},{"lineNumber":489,"author":{"gitId":"zengzihui"},"content":"| `* * * *` | real estate agent           | view the list of all contacts stored                                                          | quickly find the contact I need                                              |","lastModifiedDate":"2024-03-07"},{"lineNumber":490,"author":{"gitId":"zengzihui"},"content":"| `* * * *` | real estate agent           | delete the contact that I want to remove                                                      | remove outdated or irrelevant contacts                                       |","lastModifiedDate":"2024-03-07"},{"lineNumber":491,"author":{"gitId":"zengzihui"},"content":"| `* * * *` | real estate agent           | be able to exit the program when I want to                                                    | close the application                                                        |","lastModifiedDate":"2024-03-07"},{"lineNumber":492,"author":{"gitId":"zengzihui"},"content":"| `* * * *` | real estate agent           | be able to automatically save the data I added, changed, and deleted                          | load the data when I open the application, with the saved data, next time    |","lastModifiedDate":"2024-03-07"},{"lineNumber":493,"author":{"gitId":"felixchanyy"},"content":"| `* * *`   | real estate agent           | keep track of my buyer\u0027s budgets                                                              | efficiently match them with houses within their financial constraints        |","lastModifiedDate":"2024-04-03"},{"lineNumber":494,"author":{"gitId":"felixchanyy"},"content":"| `* * *`   | real estate agent           | keep track of the prices of the houses                                                        | better manage my clients\u0027 requirements                                       |","lastModifiedDate":"2024-04-03"},{"lineNumber":495,"author":{"gitId":"felixchanyy"},"content":"| `* * *`   | real estate agent           | match buyers with sellers based on the buyers\u0027 requirements                                   | quickly identify houses that align with their preferences.                   |","lastModifiedDate":"2024-04-03"},{"lineNumber":496,"author":{"gitId":"zengzihui"},"content":"| `* * *`   | real estate agent           | find for a specific contact                                                                   | access their details without scrolling through a long list                   |","lastModifiedDate":"2024-03-07"},{"lineNumber":497,"author":{"gitId":"zengzihui"},"content":"| `* * *`   | real estate agent           | easily update or modify existing contact information                                          | have accurate and up-to-date records                                         |","lastModifiedDate":"2024-03-07"},{"lineNumber":498,"author":{"gitId":"zengzihui"},"content":"| `* * *`   | real estate agent           | add new houses to the home-sellers                                                            | keep track of the houses the home-sellers have                               |","lastModifiedDate":"2024-03-07"},{"lineNumber":499,"author":{"gitId":"zengzihui"},"content":"| `* * *`   | real estate agent           | have whatever contacts I add load to the laptop I am using                                    | do not need to re-enter all the details whenever I open the app              |","lastModifiedDate":"2024-03-07"},{"lineNumber":500,"author":{"gitId":"zengzihui"},"content":"| `* *`     | busy real estate agent      | be able to view specific buyer\u0027s requirements                                                 | understand what are their needs quickly                                      |","lastModifiedDate":"2024-03-07"},{"lineNumber":501,"author":{"gitId":"zengzihui"},"content":"| `* *`     | busy real estate agent      | be able to view specific seller\u0027s properties                                                  | effectively assess their listings quickly                                    |","lastModifiedDate":"2024-03-07"},{"lineNumber":502,"author":{"gitId":"zengzihui"},"content":"| `* *`     | busy real estate agent      | be able to tell at a glance whether the contact is a buyer or seller                          | do not need to remember their identity                                       |","lastModifiedDate":"2024-03-07"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"zengzihui"},"content":"(For all use cases below, the **System** is the `EstateEase` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2024-03-04"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"zengzihui"},"content":"**Use case: UC01 - Add a home-seller to contact list**","lastModifiedDate":"2024-03-07"},{"lineNumber":509,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":510,"author":{"gitId":"KhoonSun47"},"content":"**MSS:**","lastModifiedDate":"2024-03-04"},{"lineNumber":511,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":512,"author":{"gitId":"KhoonSun47"},"content":"1. User chooses to add home-seller.","lastModifiedDate":"2024-03-06"},{"lineNumber":513,"author":{"gitId":"KhoonSun47"},"content":"2. EstateEase requests for the details of the home-seller.","lastModifiedDate":"2024-03-06"},{"lineNumber":514,"author":{"gitId":"KhoonSun47"},"content":"3. User enters the requested details.","lastModifiedDate":"2024-03-04"},{"lineNumber":515,"author":{"gitId":"KhoonSun47"},"content":"4. Include Use Case UC03 (Add house to home-seller) for the first house.","lastModifiedDate":"2024-04-03"},{"lineNumber":516,"author":{"gitId":"KhoonSun47"},"content":"4. EstateEase adds the home-seller and displays the newly added home-seller along with one house. \u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":517,"author":{"gitId":"KhoonSun47"},"content":"   Use case ends.","lastModifiedDate":"2024-03-04"},{"lineNumber":518,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":519,"author":{"gitId":"KhoonSun47"},"content":"**Extensions**","lastModifiedDate":"2024-03-04"},{"lineNumber":520,"author":{"gitId":"KhoonSun47"},"content":"* 3a. User enters an invalid command. \u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":521,"author":{"gitId":"KhoonSun47"},"content":"    * 3a1. EstateEase shows an error message. \u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":522,"author":{"gitId":"KhoonSun47"},"content":"      Use case ends.","lastModifiedDate":"2024-03-04"},{"lineNumber":523,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":524,"author":{"gitId":"KhoonSun47"},"content":"* 3b. User enters a home-seller that already exists. \u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":525,"author":{"gitId":"KhoonSun47"},"content":"    * 3b1. EstateEase shows an error message. \u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":526,"author":{"gitId":"KhoonSun47"},"content":"      Use case ends.","lastModifiedDate":"2024-04-03"},{"lineNumber":527,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":528,"author":{"gitId":"KhoonSun47"},"content":"* 3c. User does not enter a required field. \u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":529,"author":{"gitId":"KhoonSun47"},"content":"    * 3c1. EstateEase shows an error message. \u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":530,"author":{"gitId":"KhoonSun47"},"content":"      Use case ends.","lastModifiedDate":"2024-04-03"},{"lineNumber":531,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":532,"author":{"gitId":"KhoonSun47"},"content":"* 3d. User enters an invalid value. \u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":533,"author":{"gitId":"KhoonSun47"},"content":"    * 3d1. EstateEase shows an error message. \u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":534,"author":{"gitId":"KhoonSun47"},"content":"      Use case ends.","lastModifiedDate":"2024-04-03"},{"lineNumber":535,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":536,"author":{"gitId":"zengzihui"},"content":"**Use case: UC02 - Add a home-buyer to contact list**","lastModifiedDate":"2024-03-07"},{"lineNumber":537,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":538,"author":{"gitId":"KhoonSun47"},"content":"**MSS:**","lastModifiedDate":"2024-03-06"},{"lineNumber":539,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":540,"author":{"gitId":"KhoonSun47"},"content":"1. User chooses to add home-buyer.","lastModifiedDate":"2024-03-06"},{"lineNumber":541,"author":{"gitId":"KhoonSun47"},"content":"2. EstateEase requests for the details of the home-buyer.","lastModifiedDate":"2024-03-06"},{"lineNumber":542,"author":{"gitId":"KhoonSun47"},"content":"3. User enters the requested details.","lastModifiedDate":"2024-03-06"},{"lineNumber":543,"author":{"gitId":"KhoonSun47"},"content":"4. EstateEase adds the home-buyer and displays the newly added home-buyer. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":544,"author":{"gitId":"KhoonSun47"},"content":"   Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":545,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":546,"author":{"gitId":"KhoonSun47"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":547,"author":{"gitId":"KhoonSun47"},"content":"* 3a. User enters an invalid command. \u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":548,"author":{"gitId":"KhoonSun47"},"content":"    * 3a1. EstateEase shows an error message. \u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":549,"author":{"gitId":"KhoonSun47"},"content":"      Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":550,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":551,"author":{"gitId":"KhoonSun47"},"content":"* 3b. User enters a home-buyer that already exists. \u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":552,"author":{"gitId":"KhoonSun47"},"content":"    * 3b1. EstateEase shows an error message. \u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":553,"author":{"gitId":"KhoonSun47"},"content":"      Use case ends.","lastModifiedDate":"2024-04-03"},{"lineNumber":554,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":555,"author":{"gitId":"KhoonSun47"},"content":"* 3c. User does not enter a required field. \u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":556,"author":{"gitId":"KhoonSun47"},"content":"    * 3c1. EstateEase shows an error message. \u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":557,"author":{"gitId":"KhoonSun47"},"content":"      Use case ends.","lastModifiedDate":"2024-04-03"},{"lineNumber":558,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":559,"author":{"gitId":"KhoonSun47"},"content":"* 3d. User enters an invalid value. \u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":560,"author":{"gitId":"KhoonSun47"},"content":"    * 3d1. EstateEase shows an error message. \u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":561,"author":{"gitId":"KhoonSun47"},"content":"      Use case ends.","lastModifiedDate":"2024-04-03"},{"lineNumber":562,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":563,"author":{"gitId":"KhoonSun47"},"content":"**Use case: UC03 - Add house to house-seller**","lastModifiedDate":"2024-04-03"},{"lineNumber":564,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":565,"author":{"gitId":"KhoonSun47"},"content":"**MSS:**","lastModifiedDate":"2024-03-06"},{"lineNumber":566,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":567,"author":{"gitId":"zengzihui"},"content":"1. User chooses to add new house to home-seller.","lastModifiedDate":"2024-03-07"},{"lineNumber":568,"author":{"gitId":"zengzihui"},"content":"2. EstateEase requests for the details of the house.","lastModifiedDate":"2024-03-07"},{"lineNumber":569,"author":{"gitId":"KhoonSun47"},"content":"3. User enters requested details.","lastModifiedDate":"2024-03-06"},{"lineNumber":570,"author":{"gitId":"zengzihui"},"content":"4. EstateEase adds the new house and displays the newly added house of the home-seller. \u003cbr\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":571,"author":{"gitId":"KhoonSun47"},"content":"   Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":572,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":573,"author":{"gitId":"KhoonSun47"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":574,"author":{"gitId":"KhoonSun47"},"content":"* 1a. The EstateEase list does not have any home-seller. \u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":575,"author":{"gitId":"KhoonSun47"},"content":"    * 1a1. EstateEase shows an error message. \u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":576,"author":{"gitId":"KhoonSun47"},"content":"      Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":577,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":578,"author":{"gitId":"KhoonSun47"},"content":"* 3a. User enters duplicate house data. \u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":579,"author":{"gitId":"KhoonSun47"},"content":"    * 3a1. EstateEase shows an error message. \u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":580,"author":{"gitId":"KhoonSun47"},"content":"      Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":582,"author":{"gitId":"KhoonSun47"},"content":"* 3b. User enters an invalid command. \u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":583,"author":{"gitId":"KhoonSun47"},"content":"    * 3b1. EstateEase shows an error message. \u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":584,"author":{"gitId":"KhoonSun47"},"content":"      Use case ends.","lastModifiedDate":"2024-04-03"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":586,"author":{"gitId":"KhoonSun47"},"content":"* 3c. User does not enter the required field. \u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":587,"author":{"gitId":"KhoonSun47"},"content":"    * 3c1. EstateEase shows an error message. \u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":588,"author":{"gitId":"KhoonSun47"},"content":"      Use case ends.","lastModifiedDate":"2024-04-03"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":590,"author":{"gitId":"KhoonSun47"},"content":"* 3d. User enters an invalid seller. \u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":591,"author":{"gitId":"KhoonSun47"},"content":"    * 3d1. EstateEase shows an error message. \u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":592,"author":{"gitId":"KhoonSun47"},"content":"      Use case ends.","lastModifiedDate":"2024-04-03"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":594,"author":{"gitId":"KhoonSun47"},"content":"* 3e. User enters an invalid house. \u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":595,"author":{"gitId":"KhoonSun47"},"content":"    * 3e1. EstateEase shows an error message. \u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":596,"author":{"gitId":"KhoonSun47"},"content":"      Use case ends.","lastModifiedDate":"2024-04-03"},{"lineNumber":597,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":598,"author":{"gitId":"zengzihui"},"content":"**Use case: UC04 - View all contacts**","lastModifiedDate":"2024-03-07"},{"lineNumber":599,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":600,"author":{"gitId":"redcolorbicycle"},"content":"**MSS:**","lastModifiedDate":"2024-03-05"},{"lineNumber":601,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":602,"author":{"gitId":"lokidoki102"},"content":"1.  User requests to list all of his/her contacts.","lastModifiedDate":"2024-03-06"},{"lineNumber":603,"author":{"gitId":"lokidoki102"},"content":"2.  EstateEase displays a list of contacts, each with their details","lastModifiedDate":"2024-03-06"},{"lineNumber":604,"author":{"gitId":"lokidoki102"},"content":"    and an indication of whether they are a buyer or seller.","lastModifiedDate":"2024-03-06"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":606,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2024-03-05"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":608,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2024-03-05"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":610,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-03-06"},{"lineNumber":611,"author":{"gitId":"lokidoki102"},"content":"    * 2a1. EstateEase displays a message stating that the list is empty.","lastModifiedDate":"2024-03-06"},{"lineNumber":612,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":613,"author":{"gitId":"redcolorbicycle"},"content":"      Use case ends.","lastModifiedDate":"2024-03-05"},{"lineNumber":614,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":615,"author":{"gitId":"zengzihui"},"content":"**Use case: UC05 - Delete a contact**","lastModifiedDate":"2024-03-07"},{"lineNumber":616,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"lokidoki102"},"content":"**MSS:**","lastModifiedDate":"2024-03-04"},{"lineNumber":618,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"zengzihui"},"content":"1.  User requests to \u003cu\u003eview all contacts (UC04)\u003c/u\u003e.","lastModifiedDate":"2024-03-07"},{"lineNumber":620,"author":{"gitId":"zengzihui"},"content":"2.  User requests to delete a specific contact in the contact list.","lastModifiedDate":"2024-03-07"},{"lineNumber":621,"author":{"gitId":"zengzihui"},"content":"3.  EstateEase deletes the contact.","lastModifiedDate":"2024-03-07"},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"zengzihui"},"content":"* 1a. The contact list is empty.","lastModifiedDate":"2024-03-07"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"zengzihui"},"content":"* 2a. The given index is invalid input type.","lastModifiedDate":"2024-03-07"},{"lineNumber":632,"author":{"gitId":"zengzihui"},"content":"    * 2a1. EstateEase shows an error message regarding the invalid input type.","lastModifiedDate":"2024-03-07"},{"lineNumber":633,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":634,"author":{"gitId":"zengzihui"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-07"},{"lineNumber":635,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":636,"author":{"gitId":"zengzihui"},"content":"* 2b. The given index is out of range.","lastModifiedDate":"2024-03-07"},{"lineNumber":637,"author":{"gitId":"zengzihui"},"content":"    * 2b1. EstateEase shows an error message regarding the out of range.","lastModifiedDate":"2024-03-07"},{"lineNumber":638,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"zengzihui"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-07"},{"lineNumber":640,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":641,"author":{"gitId":"KhoonSun47"},"content":"**Use case: UC06 - Load EstateEase data from file**","lastModifiedDate":"2024-04-04"},{"lineNumber":642,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":643,"author":{"gitId":"felixchanyy"},"content":"**Actor: EstateEase**","lastModifiedDate":"2024-03-06"},{"lineNumber":644,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":645,"author":{"gitId":"felixchanyy"},"content":"**Preconditions:**","lastModifiedDate":"2024-03-06"},{"lineNumber":646,"author":{"gitId":"felixchanyy"},"content":"- EstateEase is initialized.","lastModifiedDate":"2024-03-06"},{"lineNumber":647,"author":{"gitId":"felixchanyy"},"content":"- The user starts the application.","lastModifiedDate":"2024-03-06"},{"lineNumber":648,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":649,"author":{"gitId":"felixchanyy"},"content":"**MSS:**","lastModifiedDate":"2024-03-06"},{"lineNumber":650,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":651,"author":{"gitId":"KhoonSun47"},"content":"1. EstateEase automatically attempts to load EstateEase data from a JSON file located in the \"data\" folder at the same directory level as the application.","lastModifiedDate":"2024-04-04"},{"lineNumber":652,"author":{"gitId":"KhoonSun47"},"content":"2. EstateEase parses the JSON file and imports the EstateEase data into the application\u0027s memory.","lastModifiedDate":"2024-04-04"},{"lineNumber":653,"author":{"gitId":"KhoonSun47"},"content":"3. EstateEase displays the EstateEase data to the user. \u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":654,"author":{"gitId":"felixchanyy"},"content":"   Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":655,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":656,"author":{"gitId":"felixchanyy"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":657,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":658,"author":{"gitId":"KhoonSun47"},"content":"* 1a. JSON file is missing or the \"data\" folder is missing:","lastModifiedDate":"2024-04-04"},{"lineNumber":659,"author":{"gitId":"felixchanyy"},"content":"    * 1a1. EstateEase retrieves sample data.","lastModifiedDate":"2024-04-12"},{"lineNumber":660,"author":{"gitId":"felixchanyy"},"content":"    * 1a2. EstateEase displays the sample data to the user.","lastModifiedDate":"2024-04-12"},{"lineNumber":661,"author":{"gitId":"felixchanyy"},"content":"    * 1a3. EstateEase waits for a valid command to be executed before creating an empty JSON file or the \"data\" folder as needed. \u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":662,"author":{"gitId":"felixchanyy"},"content":"    Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":663,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":664,"author":{"gitId":"KhoonSun47"},"content":"* 1b. JSON file has an incorrect format or fields:","lastModifiedDate":"2024-04-04"},{"lineNumber":665,"author":{"gitId":"felixchanyy"},"content":"  * 1b1. EstateEase initializes an empty person list without displaying an error message.","lastModifiedDate":"2024-04-12"},{"lineNumber":666,"author":{"gitId":"felixchanyy"},"content":"  * 1b2. EstateEase displays an empty person list to the user.","lastModifiedDate":"2024-04-12"},{"lineNumber":667,"author":{"gitId":"felixchanyy"},"content":"  * 1b3. Any valid command to empty person list data trigger the creation of a new, corrected JSON file. \u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":668,"author":{"gitId":"felixchanyy"},"content":"  Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":669,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":670,"author":{"gitId":"zengzihui"},"content":"**Use case: UC07 - Save to storage**","lastModifiedDate":"2024-03-07"},{"lineNumber":671,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":672,"author":{"gitId":"lokidoki102"},"content":"**Actor: EstateEase**","lastModifiedDate":"2024-03-04"},{"lineNumber":673,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":674,"author":{"gitId":"KhoonSun47"},"content":"**Preconditions:**","lastModifiedDate":"2024-04-04"},{"lineNumber":675,"author":{"gitId":"KhoonSun47"},"content":"- The user initiates a command that modifies the EstateEase data.**","lastModifiedDate":"2024-04-04"},{"lineNumber":676,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":677,"author":{"gitId":"lokidoki102"},"content":"**MSS:**","lastModifiedDate":"2024-03-04"},{"lineNumber":678,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":679,"author":{"gitId":"felixchanyy"},"content":"1.  EstateEase processes the command \u003cu\u003e(UC01, UC02, UC03, UC05, UC011, UC012)\u003c/u\u003e and updates EstateEase accordingly.","lastModifiedDate":"2024-04-12"},{"lineNumber":680,"author":{"gitId":"KhoonSun47"},"content":"2.  EstateEase updates the JSON file with the new changes.","lastModifiedDate":"2024-04-04"},{"lineNumber":681,"author":{"gitId":"lokidoki102"},"content":"3.  EstateEase successfully updates the JSON file.","lastModifiedDate":"2024-03-04"},{"lineNumber":682,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":683,"author":{"gitId":"lokidoki102"},"content":"    Use case ends.","lastModifiedDate":"2024-03-04"},{"lineNumber":684,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":685,"author":{"gitId":"lokidoki102"},"content":"**Extensions**","lastModifiedDate":"2024-03-04"},{"lineNumber":686,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":687,"author":{"gitId":"lokidoki102"},"content":"* 2a. EstateEase is unable to write to the JSON file due to file permission issue.","lastModifiedDate":"2024-03-04"},{"lineNumber":688,"author":{"gitId":"KhoonSun47"},"content":"    * 2a1. EstateEase shows error message regarding the insufficient file permission to the user. \u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":689,"author":{"gitId":"lokidoki102"},"content":"      Use case ends.","lastModifiedDate":"2024-03-04"},{"lineNumber":690,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":691,"author":{"gitId":"lokidoki102"},"content":"* 2b. EstateEase is unable to write to the JSON file due to some IOException.","lastModifiedDate":"2024-03-04"},{"lineNumber":692,"author":{"gitId":"KhoonSun47"},"content":"    * 2b1. EstateEase shows error message regarding the IOException to the user. \u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":693,"author":{"gitId":"lokidoki102"},"content":"      Use case ends.","lastModifiedDate":"2024-03-04"},{"lineNumber":694,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":695,"author":{"gitId":"zengzihui"},"content":"**Use case: UC08 - Search a contact**","lastModifiedDate":"2024-03-07"},{"lineNumber":696,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":697,"author":{"gitId":"felixchanyy"},"content":"**MSS:**","lastModifiedDate":"2024-03-06"},{"lineNumber":698,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":699,"author":{"gitId":"zengzihui"},"content":"1. User requests to search for a contact.","lastModifiedDate":"2024-03-07"},{"lineNumber":700,"author":{"gitId":"zengzihui"},"content":"2. EstateEase displays all the contacts that match the inputted contact name.","lastModifiedDate":"2024-03-07"},{"lineNumber":701,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":702,"author":{"gitId":"zengzihui"},"content":"   Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":703,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":704,"author":{"gitId":"felixchanyy"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":705,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":706,"author":{"gitId":"zengzihui"},"content":"* 1a. The given contact name does not match any contact names in the contact list.","lastModifiedDate":"2024-03-07"},{"lineNumber":707,"author":{"gitId":"zengzihui"},"content":"    * 1a1. EstateEase shows an error message indicating no matches found.","lastModifiedDate":"2024-03-07"},{"lineNumber":708,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":709,"author":{"gitId":"zengzihui"},"content":"      Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":710,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":711,"author":{"gitId":"zengzihui"},"content":"**Use case: UC09 - View a home-buyer\u0027s requirements**","lastModifiedDate":"2024-03-07"},{"lineNumber":712,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":713,"author":{"gitId":"felixchanyy"},"content":"**MSS:**","lastModifiedDate":"2024-03-06"},{"lineNumber":714,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":715,"author":{"gitId":"zengzihui"},"content":"1. User requests to view a specific buyer\u0027s requirements.","lastModifiedDate":"2024-04-04"},{"lineNumber":716,"author":{"gitId":"zengzihui"},"content":"2. EstateEase displays the home-buyer\u0027s personal details with their requirements.","lastModifiedDate":"2024-04-04"},{"lineNumber":717,"author":{"gitId":"zengzihui"},"content":"   Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":718,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":719,"author":{"gitId":"felixchanyy"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":720,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":721,"author":{"gitId":"zengzihui"},"content":"* 2a. EstateEase detects an invalid index.","lastModifiedDate":"2024-04-04"},{"lineNumber":722,"author":{"gitId":"zengzihui"},"content":"    *   2a1. EstateEase shows an error message regarding an invalid entry.","lastModifiedDate":"2024-03-07"},{"lineNumber":723,"author":{"gitId":"zengzihui"},"content":"        Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":724,"author":{"gitId":"zengzihui"},"content":"* 2b. Command does not match EstateEase\u0027s registered command spelling.","lastModifiedDate":"2024-03-07"},{"lineNumber":725,"author":{"gitId":"zengzihui"},"content":"    *   2b1. EstateEase shows an error message regarding an invalid command.","lastModifiedDate":"2024-03-07"},{"lineNumber":726,"author":{"gitId":"felixchanyy"},"content":"        Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":727,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":728,"author":{"gitId":"zengzihui"},"content":"**Use case: UC10 - View a home-seller\u0027s properties**","lastModifiedDate":"2024-03-07"},{"lineNumber":729,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":730,"author":{"gitId":"felixchanyy"},"content":"**MSS:**","lastModifiedDate":"2024-03-06"},{"lineNumber":731,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":732,"author":{"gitId":"zengzihui"},"content":"1. User requests to view a specific seller\u0027s properties.","lastModifiedDate":"2024-04-04"},{"lineNumber":733,"author":{"gitId":"zengzihui"},"content":"2. EstateEase displays the home-seller\u0027s personal details with their properties details.","lastModifiedDate":"2024-04-04"},{"lineNumber":734,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":735,"author":{"gitId":"zengzihui"},"content":"   Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":736,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":737,"author":{"gitId":"felixchanyy"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":738,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":739,"author":{"gitId":"zengzihui"},"content":"* 2a. EstateEase detects an invalid index.","lastModifiedDate":"2024-04-04"},{"lineNumber":740,"author":{"gitId":"zengzihui"},"content":"    * 2a1. EstateEase shows an error message regarding an invalid entry.","lastModifiedDate":"2024-03-07"},{"lineNumber":741,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":742,"author":{"gitId":"felixchanyy"},"content":"      Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":743,"author":{"gitId":"zengzihui"},"content":"* 2b. Command does not match EstateEase\u0027s registered command spelling.","lastModifiedDate":"2024-03-07"},{"lineNumber":744,"author":{"gitId":"zengzihui"},"content":"    * 2b1. EstateEase shows an error message regarding an invalid command.","lastModifiedDate":"2024-03-07"},{"lineNumber":745,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":746,"author":{"gitId":"zengzihui"},"content":"      Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":747,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":748,"author":{"gitId":"lokidoki102"},"content":"**Use case: UC11 - Edit buyer details**","lastModifiedDate":"2024-04-03"},{"lineNumber":749,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":750,"author":{"gitId":"lokidoki102"},"content":"**MSS:**","lastModifiedDate":"2024-03-06"},{"lineNumber":751,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":752,"author":{"gitId":"lokidoki102"},"content":"1.  User executes the command to edit a Buyer in EstateEase.","lastModifiedDate":"2024-04-03"},{"lineNumber":753,"author":{"gitId":"lokidoki102"},"content":"2.  EstateEase updates the details of the specific buyer selected by the user.","lastModifiedDate":"2024-04-03"},{"lineNumber":754,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":755,"author":{"gitId":"lokidoki102"},"content":"    Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":756,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":757,"author":{"gitId":"lokidoki102"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":758,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":759,"author":{"gitId":"lokidoki102"},"content":"* 1a. The given index is invalid.","lastModifiedDate":"2024-04-03"},{"lineNumber":760,"author":{"gitId":"lokidoki102"},"content":"    * 1a1. EstateEase shows an error message.","lastModifiedDate":"2024-04-03"},{"lineNumber":761,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":762,"author":{"gitId":"lokidoki102"},"content":"      Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":763,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":764,"author":{"gitId":"lokidoki102"},"content":"* 1b. The new value for the field being updated is not valid.","lastModifiedDate":"2024-04-03"},{"lineNumber":765,"author":{"gitId":"lokidoki102"},"content":"    * 1b1. EstateEase shows format error message.","lastModifiedDate":"2024-04-03"},{"lineNumber":766,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":767,"author":{"gitId":"lokidoki102"},"content":"      Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":768,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":769,"author":{"gitId":"lokidoki102"},"content":"* 1c. The edited name field already exists in EstateEase.","lastModifiedDate":"2024-04-03"},{"lineNumber":770,"author":{"gitId":"lokidoki102"},"content":"    * 1c1. EstateEase error message, indicating that the person already exists.","lastModifiedDate":"2024-04-03"},{"lineNumber":771,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":772,"author":{"gitId":"lokidoki102"},"content":"      Use case ends.","lastModifiedDate":"2024-04-03"},{"lineNumber":773,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":774,"author":{"gitId":"lokidoki102"},"content":"**Use case: UC12 - Edit seller details**","lastModifiedDate":"2024-04-03"},{"lineNumber":775,"author":{"gitId":"lokidoki102"},"content":"This use case is similar to \u003cu\u003eUC11 - Edit buyer details\u003c/u\u003e, except it takes in different field","lastModifiedDate":"2024-04-03"},{"lineNumber":776,"author":{"gitId":"lokidoki102"},"content":"(i.e. parameters for name, phone, and email).","lastModifiedDate":"2024-04-03"},{"lineNumber":777,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":778,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":779,"author":{"gitId":"felixchanyy"},"content":"**Use case: UC13 - Match sellers with buyer\u0027s preferences**","lastModifiedDate":"2024-04-03"},{"lineNumber":780,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":781,"author":{"gitId":"zengzihui"},"content":"**MSS:**","lastModifiedDate":"2024-03-07"},{"lineNumber":782,"author":{"gitId":"felixchanyy"},"content":"1. User requests to match a buyer\u0027s preferences.","lastModifiedDate":"2024-04-03"},{"lineNumber":783,"author":{"gitId":"felixchanyy"},"content":"2. EstateEase retrieves the budget and preferred housing type of the specified buyer.","lastModifiedDate":"2024-04-03"},{"lineNumber":784,"author":{"gitId":"felixchanyy"},"content":"3. EstateEase matches the buyer\u0027s preferences with the listings of available sellers.","lastModifiedDate":"2024-04-03"},{"lineNumber":785,"author":{"gitId":"felixchanyy"},"content":"4. EstateEase displays the list of sellers who have houses matching the specified buyer\u0027s budget and housing type.","lastModifiedDate":"2024-04-03"},{"lineNumber":786,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":787,"author":{"gitId":"zengzihui"},"content":"   Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":788,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":789,"author":{"gitId":"zengzihui"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":790,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":791,"author":{"gitId":"felixchanyy"},"content":"* 1a. The specified buyer does not exist","lastModifiedDate":"2024-04-03"},{"lineNumber":792,"author":{"gitId":"felixchanyy"},"content":"    * 1a1. EstateEase shows a message the specified buyer does not exist.","lastModifiedDate":"2024-04-03"},{"lineNumber":793,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":794,"author":{"gitId":"zengzihui"},"content":"      Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":795,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":796,"author":{"gitId":"felixchanyy"},"content":"* 3a. There are no matching listings","lastModifiedDate":"2024-04-03"},{"lineNumber":797,"author":{"gitId":"felixchanyy"},"content":"    * 3a1. EstateEase shows a message indicating there is no matching results.","lastModifiedDate":"2024-04-03"},{"lineNumber":798,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":799,"author":{"gitId":"zengzihui"},"content":"      Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":800,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":801,"author":{"gitId":"felixchanyy"},"content":"**Use case: UC14 - Exit application**","lastModifiedDate":"2024-04-12"},{"lineNumber":802,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":803,"author":{"gitId":"zengzihui"},"content":"**MSS:**","lastModifiedDate":"2024-03-07"},{"lineNumber":804,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":805,"author":{"gitId":"zengzihui"},"content":"1. User enters the \u0027exit\u0027 command.","lastModifiedDate":"2024-03-07"},{"lineNumber":806,"author":{"gitId":"zengzihui"},"content":"2. EstateEase immediately closes the application.","lastModifiedDate":"2024-03-07"},{"lineNumber":807,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":808,"author":{"gitId":"zengzihui"},"content":"   Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":809,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":810,"author":{"gitId":"zengzihui"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":811,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":812,"author":{"gitId":"zengzihui"},"content":"* 1a. User enters an unrecognized command.","lastModifiedDate":"2024-03-07"},{"lineNumber":813,"author":{"gitId":"zengzihui"},"content":"    * 1a1. EstateEase displays a message \"Unknown command\".","lastModifiedDate":"2024-03-07"},{"lineNumber":814,"author":{"gitId":"zengzihui"},"content":"      Use case resumes from the previous step.","lastModifiedDate":"2024-03-07"},{"lineNumber":815,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":816,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":817,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":818,"author":{"gitId":"KhoonSun47"},"content":"1. The program should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2024-03-06"},{"lineNumber":819,"author":{"gitId":"KhoonSun47"},"content":"2. The program should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2024-03-06"},{"lineNumber":820,"author":{"gitId":"KhoonSun47"},"content":"3. The program should be capable of running both online and offline.","lastModifiedDate":"2024-03-06"},{"lineNumber":821,"author":{"gitId":"KhoonSun47"},"content":"4. The program should be able to recover from common errors and not crash without user intervention.","lastModifiedDate":"2024-03-06"},{"lineNumber":822,"author":{"gitId":"KhoonSun47"},"content":"5. The program should provide meaningful error messages that guide the user to resolve issues.","lastModifiedDate":"2024-03-06"},{"lineNumber":823,"author":{"gitId":"KhoonSun47"},"content":"6. The program should be able to respond to any user input within at most 2 seconds.","lastModifiedDate":"2024-03-06"},{"lineNumber":824,"author":{"gitId":"KhoonSun47"},"content":"7. The program must perform consistently across different devices and operating systems with a reliability rate of 99%.","lastModifiedDate":"2024-03-06"},{"lineNumber":825,"author":{"gitId":"KhoonSun47"},"content":"8. The program only supports one user at a time.","lastModifiedDate":"2024-03-06"},{"lineNumber":826,"author":{"gitId":"KhoonSun47"},"content":"9. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2024-03-06"},{"lineNumber":827,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":828,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":829,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":830,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09"},{"lineNumber":831,"author":{"gitId":"KhoonSun47"},"content":"* **CLI**: Command Line Interface","lastModifiedDate":"2024-03-06"},{"lineNumber":832,"author":{"gitId":"KhoonSun47"},"content":"* **GUI**: Graphical User Interface","lastModifiedDate":"2024-03-06"},{"lineNumber":833,"author":{"gitId":"KhoonSun47"},"content":"* **Index**: A number that references the position of the contact in the contact list","lastModifiedDate":"2024-03-06"},{"lineNumber":834,"author":{"gitId":"KhoonSun47"},"content":"* **Unique ID**: An attribute that uniquely identifies the contacts and houses in the contact list","lastModifiedDate":"2024-03-06"},{"lineNumber":835,"author":{"gitId":"KhoonSun47"},"content":"* **Home-buyer**: The contact who wants to buy a house","lastModifiedDate":"2024-03-06"},{"lineNumber":836,"author":{"gitId":"KhoonSun47"},"content":"* **Home-seller**: The contact who wants to sell their houses.","lastModifiedDate":"2024-03-06"},{"lineNumber":837,"author":{"gitId":"KhoonSun47"},"content":"* **Contact**: Home-buyer/Home-seller who is added to the list, containing details of name, phone number etc.","lastModifiedDate":"2024-03-06"},{"lineNumber":838,"author":{"gitId":"KhoonSun47"},"content":"* **Home**: Details of the homes by the home-seller","lastModifiedDate":"2024-03-06"},{"lineNumber":839,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":840,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":841,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":842,"author":{"gitId":"felixchanyy"},"content":"## **Appendix A: Instructions for manual testing**","lastModifiedDate":"2024-04-08"},{"lineNumber":843,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":844,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":845,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":846,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":847,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":848,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":849,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":850,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":851,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":852,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":853,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":854,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":855,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":856,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":857,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":858,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":859,"author":{"gitId":"-"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":860,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":861,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":862,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":863,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":864,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":865,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":866,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":867,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":868,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":869,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":870,"author":{"gitId":"zengzihui"},"content":"### Viewing the details of a person","lastModifiedDate":"2024-04-04"},{"lineNumber":871,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":872,"author":{"gitId":"zengzihui"},"content":"1. Viewing the details of a person while all persons are being shown","lastModifiedDate":"2024-04-04"},{"lineNumber":873,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":874,"author":{"gitId":"zengzihui"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2024-04-04"},{"lineNumber":875,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":876,"author":{"gitId":"zengzihui"},"content":"    1. Test case: `view 1`\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":877,"author":{"gitId":"zengzihui"},"content":"       Expected: Details of the first contact from the displayed list is displayed at the right side of the panel","lastModifiedDate":"2024-04-04"},{"lineNumber":878,"author":{"gitId":"zengzihui"},"content":"        with the displayed person list at the left side of the panel. Name of the selected person shown in the","lastModifiedDate":"2024-04-04"},{"lineNumber":879,"author":{"gitId":"zengzihui"},"content":"        status message.","lastModifiedDate":"2024-04-04"},{"lineNumber":880,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":881,"author":{"gitId":"zengzihui"},"content":"    1. Test case: `view 0`\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":882,"author":{"gitId":"zengzihui"},"content":"       Expected: No person details is displayed. Error details shown in the status message.","lastModifiedDate":"2024-04-04"},{"lineNumber":883,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":884,"author":{"gitId":"zengzihui"},"content":"    1. Other invalid view commands to try: `view`, `view x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":885,"author":{"gitId":"zengzihui"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2024-04-04"},{"lineNumber":886,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":887,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":888,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":889,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":890,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":891,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":892,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":893,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":894,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":895,"author":{"gitId":"-"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":896,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":897,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":898,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":899,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":900,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":901,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":902,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":903,"author":{"gitId":"felixchanyy"},"content":"### Loading and Saving Data","lastModifiedDate":"2024-03-06"},{"lineNumber":904,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":905,"author":{"gitId":"KhoonSun47"},"content":"1. **Dealing with Missing Data Folder/ Missing Data File (with Data Folder)**","lastModifiedDate":"2024-04-04"},{"lineNumber":906,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":907,"author":{"gitId":"felixchanyy"},"content":"   1. **Loading Data:**","lastModifiedDate":"2024-04-03"},{"lineNumber":908,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":909,"author":{"gitId":"KhoonSun47"},"content":"        - To test the application\u0027s response to a missing data folder or `addressbook.json` file, manually delete the `data` folder or the `addressbook.json` file from it.","lastModifiedDate":"2024-04-04"},{"lineNumber":910,"author":{"gitId":"felixchanyy"},"content":"        - The application should automatically populate EstateEase with sample data, displaying buyers and sellers, where sellers are associated with houses.","lastModifiedDate":"2024-04-12"},{"lineNumber":911,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":912,"author":{"gitId":"KhoonSun47"},"content":"   2. **Saving Data:**","lastModifiedDate":"2024-04-04"},{"lineNumber":913,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":914,"author":{"gitId":"KhoonSun47"},"content":"        - If the `data` folder is deleted, the application will recreate it along with a new `addressbook.json` file upon executing a valid command.","lastModifiedDate":"2024-04-04"},{"lineNumber":915,"author":{"gitId":"KhoonSun47"},"content":"        - If only the `addressbook.json` file is deleted, it will be recreated within the existing `data` folder upon executing a valid command.","lastModifiedDate":"2024-04-04"},{"lineNumber":916,"author":{"gitId":"KhoonSun47"},"content":"        - The application saves the sample data to `addressbook.json` upon executing a valid command.","lastModifiedDate":"2024-04-04"},{"lineNumber":917,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":918,"author":{"gitId":"KhoonSun47"},"content":"2. **Dealing with Corrupted Data Files**","lastModifiedDate":"2024-04-04"},{"lineNumber":919,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":920,"author":{"gitId":"KhoonSun47"},"content":"   1. **Loading Data:**","lastModifiedDate":"2024-04-04"},{"lineNumber":921,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":922,"author":{"gitId":"KhoonSun47"},"content":"        - Duplicate a buyer or seller\u0027s details (name, phone, and email) and use them for the opposite role (e.g., use a buyer\u0027s details for a seller or vice versa). *OR*","lastModifiedDate":"2024-04-04"},{"lineNumber":923,"author":{"gitId":"KhoonSun47"},"content":"        - Copy a house listed under one seller and duplicate it under another seller\u0027s list of houses. *OR*","lastModifiedDate":"2024-04-04"},{"lineNumber":924,"author":{"gitId":"KhoonSun47"},"content":"        - Having a data file that has same name as `addressbook.json` but incorrect format.","lastModifiedDate":"2024-04-04"},{"lineNumber":925,"author":{"gitId":"KhoonSun47"},"content":"        - These three actions violates EstateEase\u0027s constraints against duplicate houses, person and incorrect format, hence making the `addressbook.json` corrupted.","lastModifiedDate":"2024-04-04"},{"lineNumber":926,"author":{"gitId":"felixchanyy"},"content":"        - The application should automatically detect this, and display an empty EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":927,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":928,"author":{"gitId":"felixchanyy"},"content":"   2. **Saving Data:**","lastModifiedDate":"2024-04-03"},{"lineNumber":929,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":930,"author":{"gitId":"KhoonSun47"},"content":"        - The corrupted `addressbook.json` will be replaced with a correctly formatted `addressbook.json` only after a valid command is executed.","lastModifiedDate":"2024-04-04"},{"lineNumber":931,"author":{"gitId":"KhoonSun47"},"content":"        - If no valid command is executed, the application maintains the corrupted `addressbook.json`.","lastModifiedDate":"2024-04-04"},{"lineNumber":932,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":933,"author":{"gitId":"felixchanyy"},"content":"### Matching Sellers to a Buyer","lastModifiedDate":"2024-04-03"},{"lineNumber":934,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":935,"author":{"gitId":"felixchanyy"},"content":"**Prerequisites:** List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2024-04-03"},{"lineNumber":936,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":937,"author":{"gitId":"felixchanyy"},"content":"1. **Matching suitable sellers to a buyer using buyer\u0027s full name**","lastModifiedDate":"2024-04-03"},{"lineNumber":938,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":939,"author":{"gitId":"felixchanyy"},"content":"   1. **Test case:** `matchBuyer Alice Lee`","lastModifiedDate":"2024-04-03"},{"lineNumber":940,"author":{"gitId":"felixchanyy"},"content":"      **Expected:** List of sellers who have houses\u0027 price less than or equal to the buyer\u0027s budget and match the buyer\u0027s preferred housing type.","lastModifiedDate":"2024-04-03"},{"lineNumber":941,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":942,"author":{"gitId":"felixchanyy"},"content":"2. **Invalid name format**","lastModifiedDate":"2024-04-04"},{"lineNumber":943,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":944,"author":{"gitId":"felixchanyy"},"content":"   2. **Test case:** `matchBuyer Alice`","lastModifiedDate":"2024-04-03"},{"lineNumber":945,"author":{"gitId":"felixchanyy"},"content":"      **Expected:** Message indicating invalid format. The specified buyer was not found.","lastModifiedDate":"2024-04-03"},{"lineNumber":946,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":947,"author":{"gitId":"felixchanyy"},"content":"   2. **Test case:** `matchBuyer Lee`","lastModifiedDate":"2024-04-03"},{"lineNumber":948,"author":{"gitId":"felixchanyy"},"content":"      **Expected:** Message indicating invalid format. The specified buyer was not found.","lastModifiedDate":"2024-04-03"},{"lineNumber":949,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":950,"author":{"gitId":"felixchanyy"},"content":"3. **Invalid buyer**","lastModifiedDate":"2024-04-04"},{"lineNumber":951,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":952,"author":{"gitId":"felixchanyy"},"content":"   3. **Test case:** `matchBuyer Bob Lim`","lastModifiedDate":"2024-04-04"},{"lineNumber":953,"author":{"gitId":"felixchanyy"},"content":"      **Expected:** Message indicating invalid person. The specified person is not a buyer.","lastModifiedDate":"2024-04-04"},{"lineNumber":954,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":955,"author":{"gitId":"felixchanyy"},"content":"4. **Buyer does not exist**","lastModifiedDate":"2024-04-04"},{"lineNumber":956,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":957,"author":{"gitId":"felixchanyy"},"content":"    4. **Test case:** `matchBuyer Ben Chan`","lastModifiedDate":"2024-04-04"},{"lineNumber":958,"author":{"gitId":"felixchanyy"},"content":"       **Expected:** Message indicating invalid person. The specified buyer was not found.","lastModifiedDate":"2024-04-04"},{"lineNumber":959,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":960,"author":{"gitId":"lokidoki102"},"content":"### Editing Seller Details","lastModifiedDate":"2024-04-04"},{"lineNumber":961,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":962,"author":{"gitId":"lokidoki102"},"content":"**Prerequisites:**","lastModifiedDate":"2024-04-04"},{"lineNumber":963,"author":{"gitId":"lokidoki102"},"content":"- List all persons using the `list` command.","lastModifiedDate":"2024-04-04"},{"lineNumber":964,"author":{"gitId":"lokidoki102"},"content":"- There are no sellers or buyer named \"Jessi Oliverson\".","lastModifiedDate":"2024-04-04"},{"lineNumber":965,"author":{"gitId":"lokidoki102"},"content":"- There is a seller/buyer named \"John Doe\".","lastModifiedDate":"2024-04-04"},{"lineNumber":966,"author":{"gitId":"lokidoki102"},"content":"- There is a seller named \"aaaaaaa\" and this seller is the first person in the list.","lastModifiedDate":"2024-04-04"},{"lineNumber":967,"author":{"gitId":"lokidoki102"},"content":"- There is a buyer named \"aaaaaaab\" and this buyer is the second person in the list.","lastModifiedDate":"2024-04-04"},{"lineNumber":968,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":969,"author":{"gitId":"lokidoki102"},"content":"1. **Duplicate name**\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":970,"author":{"gitId":"lokidoki102"},"content":"   **Test case:** `editSeller 1 n/John Doe`\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":971,"author":{"gitId":"felixchanyy"},"content":"    Expected: An error message indicating that \"This person already exists in EstateEase.\"","lastModifiedDate":"2024-04-12"},{"lineNumber":972,"author":{"gitId":"lokidoki102"},"content":"2. **Wrong type**\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":973,"author":{"gitId":"lokidoki102"},"content":"   **Test case:** `editSeller 2 n/Jessi Oliverson`\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":974,"author":{"gitId":"lokidoki102"},"content":"    Expected: An error message indicating that \"The person you are trying to edit is not a seller.\"","lastModifiedDate":"2024-04-04"},{"lineNumber":975,"author":{"gitId":"lokidoki102"},"content":"3. **Successful edit**\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":976,"author":{"gitId":"lokidoki102"},"content":"   **Test case:** `editSeller 1 n/Jessi Oliverson`\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":977,"author":{"gitId":"lokidoki102"},"content":"    Expected: The name \"aaaaaaa\" is edited to \"Jessi Oliverson\".","lastModifiedDate":"2024-04-04"},{"lineNumber":978,"author":{"gitId":"lokidoki102"},"content":"    The updated details of the edited seller will also be shown in the response box.","lastModifiedDate":"2024-04-04"},{"lineNumber":979,"author":{"gitId":"lokidoki102"},"content":"4. **Invalid INDEX**\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":980,"author":{"gitId":"lokidoki102"},"content":"   **Test case (Invalid INDEX):** `editSeller 0 p/87654321`\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":981,"author":{"gitId":"lokidoki102"},"content":"    Expected: An error messsage indicating that the command has invalid format.","lastModifiedDate":"2024-04-04"},{"lineNumber":982,"author":{"gitId":"lokidoki102"},"content":"    The error message also indicates that the `INDEX` must be a positive number.","lastModifiedDate":"2024-04-04"},{"lineNumber":983,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":984,"author":{"gitId":"lokidoki102"},"content":"### Editing Buyer Details","lastModifiedDate":"2024-04-04"},{"lineNumber":985,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":986,"author":{"gitId":"lokidoki102"},"content":"**Prerequisites:**","lastModifiedDate":"2024-04-04"},{"lineNumber":987,"author":{"gitId":"lokidoki102"},"content":"- List all persons using the `list` command.","lastModifiedDate":"2024-04-04"},{"lineNumber":988,"author":{"gitId":"lokidoki102"},"content":"- There is a buyer named \"aaaaaaa\" and this buyer is the first person in the list.","lastModifiedDate":"2024-04-04"},{"lineNumber":989,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":990,"author":{"gitId":"lokidoki102"},"content":"1. **Invalid budget value**\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":991,"author":{"gitId":"lokidoki102"},"content":"   **Test case:** `editBuyer 1 budget/-1`\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":992,"author":{"gitId":"lokidoki102"},"content":"    Expected: An error message indicating that \"Budget should be a positive number.\"","lastModifiedDate":"2024-04-04"},{"lineNumber":993,"author":{"gitId":"lokidoki102"},"content":"2. **Invalid preferred housing type**\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":994,"author":{"gitId":"lokidoki102"},"content":"   **Test case:** `editBuyer 1 type/bungalow`\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":995,"author":{"gitId":"lokidoki102"},"content":"   Expected: An error message indicating that \"HousingType should only be Landed, Hdb or Condominium.\"","lastModifiedDate":"2024-04-04"},{"lineNumber":996,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":997,"author":{"gitId":"lokidoki102"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":998,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":999,"author":{"gitId":"lokidoki102"},"content":"**Note:** The test cases for duplicate names, wrong type, successful edit, and invalid index are","lastModifiedDate":"2024-04-04"},{"lineNumber":1000,"author":{"gitId":"lokidoki102"},"content":"similar to the test cases found in `Editing Seller Details`.","lastModifiedDate":"2024-04-04"},{"lineNumber":1001,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":1002,"author":{"gitId":"lokidoki102"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":1003,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":1004,"author":{"gitId":"felixchanyy"},"content":"## **Appendix B: Proposed enhancements**","lastModifiedDate":"2024-04-08"},{"lineNumber":1005,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":1006,"author":{"gitId":"felixchanyy"},"content":"### B.1 New Command: matchSeller","lastModifiedDate":"2024-04-08"},{"lineNumber":1007,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":1008,"author":{"gitId":"felixchanyy"},"content":"#### B.1.1 Motivation","lastModifiedDate":"2024-04-08"},{"lineNumber":1009,"author":{"gitId":"felixchanyy"},"content":"Real estate agents often need to match sellers with potential buyers efficiently. Currently, our application lacks a feature to facilitate this process. Introducing a matchSeller command would enhance the usability of the application for real estate agents by providing a convenient way to find potential buyers who match their property listings.","lastModifiedDate":"2024-04-08"},{"lineNumber":1010,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":1011,"author":{"gitId":"felixchanyy"},"content":"#### B.1.2 Implementation","lastModifiedDate":"2024-04-08"},{"lineNumber":1012,"author":{"gitId":"felixchanyy"},"content":"1. Implement the matchSeller command to filter potential buyers based on seller preferences such as price range and housing type.","lastModifiedDate":"2024-04-08"},{"lineNumber":1013,"author":{"gitId":"felixchanyy"},"content":"2. Integrate the command into the application\u0027s existing command structure for seamless user interaction.","lastModifiedDate":"2024-04-08"},{"lineNumber":1014,"author":{"gitId":"felixchanyy"},"content":"3. Display the matched buyers and their relevant details in a clear and organized manner for easy reference.","lastModifiedDate":"2024-04-08"},{"lineNumber":1015,"author":{"gitId":"felixchanyy"},"content":"4. Ensure the command\u0027s functionality is efficient and responsive, providing timely results to real estate agents.","lastModifiedDate":"2024-04-08"},{"lineNumber":1016,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":1017,"author":{"gitId":"felixchanyy"},"content":"### B.2 Limit Price and Budget to 1 Trillion","lastModifiedDate":"2024-04-08"},{"lineNumber":1018,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":1019,"author":{"gitId":"felixchanyy"},"content":"#### B.2.1 Motivation","lastModifiedDate":"2024-04-08"},{"lineNumber":1020,"author":{"gitId":"felixchanyy"},"content":"In the current implementation, there is no limit on the price and budget fields, which can lead to unrealistic values being entered. Setting a limit of 1 trillion ensures that prices and budgets remain within a reasonable range, preventing errors and maintaining data integrity.","lastModifiedDate":"2024-04-08"},{"lineNumber":1021,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":1022,"author":{"gitId":"felixchanyy"},"content":"#### B.2.2 Implementation","lastModifiedDate":"2024-04-08"},{"lineNumber":1023,"author":{"gitId":"felixchanyy"},"content":"1. Update the Price and Budget classes to enforce a maximum value of 1 trillion.","lastModifiedDate":"2024-04-08"},{"lineNumber":1024,"author":{"gitId":"felixchanyy"},"content":"2. Implement validation checks in the user interface to prevent users from entering values exceeding the limit.","lastModifiedDate":"2024-04-08"},{"lineNumber":1025,"author":{"gitId":"felixchanyy"},"content":"3. Provide clear error messages when users attempt to input values beyond the specified limit, guiding them to enter valid data.","lastModifiedDate":"2024-04-08"},{"lineNumber":1026,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":1027,"author":{"gitId":"felixchanyy"},"content":"This enhancement improves the usability and reliability of the application by ensuring that price and budget inputs are realistic and within acceptable bounds.","lastModifiedDate":"2024-04-08"},{"lineNumber":1028,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":1029,"author":{"gitId":"felixchanyy"},"content":"### B.3 Price and Budget 2 Decimal Places Only","lastModifiedDate":"2024-04-08"},{"lineNumber":1030,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":1031,"author":{"gitId":"felixchanyy"},"content":"#### B.3.1 Motivation","lastModifiedDate":"2024-04-08"},{"lineNumber":1032,"author":{"gitId":"felixchanyy"},"content":"Allowing prices and budgets to have more than two decimal places can lead to confusion and inaccuracies. Limiting them to two decimal places ensures consistency and precision in financial calculations.","lastModifiedDate":"2024-04-08"},{"lineNumber":1033,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":1034,"author":{"gitId":"felixchanyy"},"content":"#### B.3.2 Implementation","lastModifiedDate":"2024-04-08"},{"lineNumber":1035,"author":{"gitId":"felixchanyy"},"content":"1. Modify the Price and Budget classes to round values to two decimal places during input validation.","lastModifiedDate":"2024-04-08"},{"lineNumber":1036,"author":{"gitId":"felixchanyy"},"content":"2. Update user interface components to accept inputs with up to two decimal places only.","lastModifiedDate":"2024-04-08"},{"lineNumber":1037,"author":{"gitId":"felixchanyy"},"content":"3. Provide feedback to users if they attempt to input values with more than two decimal places, informing them of the restriction and prompting them to correct their input.","lastModifiedDate":"2024-04-08"},{"lineNumber":1038,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":1039,"author":{"gitId":"felixchanyy"},"content":"This enhancement promotes clarity and accuracy in price and budget management within the application.","lastModifiedDate":"2024-04-08"},{"lineNumber":1040,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":1041,"author":{"gitId":"felixchanyy"},"content":"### B.4 Restrict Landed Properties to a unique postal code","lastModifiedDate":"2024-04-12"},{"lineNumber":1042,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":1043,"author":{"gitId":"felixchanyy"},"content":"#### B.4.1 Motivation","lastModifiedDate":"2024-04-12"},{"lineNumber":1044,"author":{"gitId":"redcolorbicycle"},"content":"In the current implementation, HDBs and Condominiums are allowed to share postal codes, similar to real world situations. However, following further research, landed properties have shown no need to share postal codes.","lastModifiedDate":"2024-04-09"},{"lineNumber":1045,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":1046,"author":{"gitId":"felixchanyy"},"content":"#### B4.2 Implementation","lastModifiedDate":"2024-04-12"},{"lineNumber":1047,"author":{"gitId":"redcolorbicycle"},"content":"1. Update the method used to check Landed Property uniqueness. Currently, the method uses the whole string. Include postal code uniqueness as a requirement.","lastModifiedDate":"2024-04-09"},{"lineNumber":1048,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":1049,"author":{"gitId":"felixchanyy"},"content":"### B.5 Add Seller/Buyer command","lastModifiedDate":"2024-04-12"},{"lineNumber":1050,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":1051,"author":{"gitId":"felixchanyy"},"content":"#### B.5.1 Motivation","lastModifiedDate":"2024-04-12"},{"lineNumber":1052,"author":{"gitId":"KhoonSun47"},"content":"- The `addSeller` and `addBuyer` commands currently identify individuals within the `Persons` list using `name` as a unique identifier. There are three main reasons for this approach.","lastModifiedDate":"2024-04-08"},{"lineNumber":1053,"author":{"gitId":"KhoonSun47"},"content":"- Firstly, we have been using the `name` to identify `Buyers` and `Sellers` in various commands, such as adding or deleting a house.","lastModifiedDate":"2024-04-08"},{"lineNumber":1054,"author":{"gitId":"KhoonSun47"},"content":"- Secondly, to distinguish between individuals sharing the same `name`, the user can append numbers to the `name`, resulting in unique identifiers like `John Doe 1` and `John Doe 2`, which is why we allow alphanumeric characters in the `name` field.","lastModifiedDate":"2024-04-08"},{"lineNumber":1055,"author":{"gitId":"KhoonSun47"},"content":"- Lastly, if we choose to require both `name` and another unique identifier, such as `email` or `phone`, to distinctly identify a `person`, it would necessitate users repetitively typing both pieces of information for actions like `add House` or `delete House`. This requirement could significantly hinder the user experience, making the process inconvenient.","lastModifiedDate":"2024-04-08"},{"lineNumber":1056,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":1057,"author":{"gitId":"felixchanyy"},"content":"### B.6 Phone Number Field","lastModifiedDate":"2024-04-12"},{"lineNumber":1058,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":1059,"author":{"gitId":"felixchanyy"},"content":"#### B.6.1 Motivation","lastModifiedDate":"2024-04-12"},{"lineNumber":1060,"author":{"gitId":"KhoonSun47"},"content":"- In the current implementation, the `phone` field accepts more than three digits without specifically limiting the input to the standard eight digits customary for Singaporean phone numbers, despite the application being Singapore-focused.","lastModifiedDate":"2024-04-08"},{"lineNumber":1061,"author":{"gitId":"KhoonSun47"},"content":"- This design decision accounts for the potential users living abroad with international `phone` numbers, such as Singaporeans residing overseas who wish to purchase property back home, or foreigners intending to relocate to Singapore who may not yet have a local `phone` number.","lastModifiedDate":"2024-04-08"},{"lineNumber":1062,"author":{"gitId":"KhoonSun47"},"content":"- However, this method has led to confusion, since it permits the entry of invalid `phone` numbers into the system due to the absence of strict validation criteria.","lastModifiedDate":"2024-04-08"},{"lineNumber":1063,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":1064,"author":{"gitId":"felixchanyy"},"content":"#### B.6.2 Implementation","lastModifiedDate":"2024-04-12"},{"lineNumber":1065,"author":{"gitId":"KhoonSun47"},"content":"- To enhance the system\u0027s flexibility while maintaining data integrity, one potential improvement could involve updating our validation strategy,which is to introduce a validation mechanism that recognizes and accommodates both local (8-digit) and international `phone` number formats. This could involve specifying a more complex regex pattern or implementing a logic that checks for a country code prefix to distinguish between local and international numbers.","lastModifiedDate":"2024-04-08"},{"lineNumber":1066,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":1067,"author":{"gitId":"redcolorbicycle"},"content":"[//]: # (@@author redcolorbicycle)","lastModifiedDate":"2024-04-12"},{"lineNumber":1068,"author":{"gitId":"redcolorbicycle"},"content":"### B.7 Edit House Command","lastModifiedDate":"2024-04-12"},{"lineNumber":1069,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":1070,"author":{"gitId":"redcolorbicycle"},"content":"#### B.7.1 Motivation","lastModifiedDate":"2024-04-12"},{"lineNumber":1071,"author":{"gitId":"redcolorbicycle"},"content":"- In the current implementation, the `editHouse` command was not implemented as it could be broken down into `deleteHouse` and `addHouse` and was not seen as necessary.","lastModifiedDate":"2024-04-12"},{"lineNumber":1072,"author":{"gitId":"redcolorbicycle"},"content":"- However, to increase user convenience, `editHouse` can be implemented in future versions.","lastModifiedDate":"2024-04-12"},{"lineNumber":1073,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":1074,"author":{"gitId":"redcolorbicycle"},"content":"#### B.7.2 Implementation","lastModifiedDate":"2024-04-12"},{"lineNumber":1075,"author":{"gitId":"redcolorbicycle"},"content":"- Similar to the current `addHouse` and `deleteHouse` commands, `editHouse` would require seller and the exact house details. The logic would be fundamentally the same.","lastModifiedDate":"2024-04-12"},{"lineNumber":1076,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":1077,"author":{"gitId":"redcolorbicycle"},"content":"### B.8 Switch all index based commands to name based commands","lastModifiedDate":"2024-04-12"},{"lineNumber":1078,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":1079,"author":{"gitId":"redcolorbicycle"},"content":"#### B.8.1 Motivation","lastModifiedDate":"2024-04-12"},{"lineNumber":1080,"author":{"gitId":"redcolorbicycle"},"content":"- In the current implementation, some commands like `editSeller` or `view` are index based while others are name based.","lastModifiedDate":"2024-04-12"},{"lineNumber":1081,"author":{"gitId":"redcolorbicycle"},"content":"- However, to standardise all commands for user\u0027s convenience, index based commands can be refactor to name based.","lastModifiedDate":"2024-04-12"},{"lineNumber":1082,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":1083,"author":{"gitId":"redcolorbicycle"},"content":"#### B.8.2 Implementation","lastModifiedDate":"2024-04-12"},{"lineNumber":1084,"author":{"gitId":"redcolorbicycle"},"content":"- Similar to the current `addHouse` command which uses name based.","lastModifiedDate":"2024-04-12"}],"authorContributionMap":{"redcolorbicycle":71,"zengzihui":182,"felixchanyy":190,"KhoonSun47":197,"-":305,"lokidoki102":139}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"User Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":"# EstateEase User Guide","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"felixchanyy"},"content":"EstateEase is an **advanced desktop application designed to streamline residential property management for real estate listing agents in Singapore.** Engineered for efficiency, it combines the precision of a Command Line Interface (CLI) with a Graphical User Interface (GUI). For those proficient in typing, EstateEase delivers administrative task management at a speed surpassing that of conventional GUI-based applications.","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"1. Download the latest `EstateEase.jar` from [here](https://github.com/AY2324S2-CS2103-F09-1/tp/releases).","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"zengzihui"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your EstateEase.","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"felixchanyy"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar EstateEase.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":26,"author":{"gitId":"zengzihui"},"content":"   ![Ui](images/estate_ease_ui.png)","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"   * `addSeller n/John Doe p/98765432 e/johnd@example.com type/Hdb street/Clementi Ave 2 blk/311 level/02 unitNo/25 postal/578578 price/999999999`:\u003cbr\u003e Adds a `Seller` named `John Doe` with a `House` to EstateEase.","lastModifiedDate":"2024-04-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"felixchanyy"},"content":"   * `matchBuyer Alex Yeoh","lastModifiedDate":"2024-04-12"},{"lineNumber":38,"author":{"gitId":"felixchanyy"},"content":"   ` : Display `Seller` details with `House` that match the `Budget` and `HousingType` of the `Buyer` named `Alex Yeoh","lastModifiedDate":"2024-04-12"},{"lineNumber":39,"author":{"gitId":"felixchanyy"},"content":"   ` in EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":40,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"felixchanyy"},"content":"## Variable Constraints","lastModifiedDate":"2024-04-12"},{"lineNumber":50,"author":{"gitId":"felixchanyy"},"content":"- `BUDGET` must be a positive number with at most 17 digits, including any decimal points, and less than 1 trillion.","lastModifiedDate":"2024-04-12"},{"lineNumber":51,"author":{"gitId":"felixchanyy"},"content":"- `PRICE` must be a positive number with at most 17 digits, including any decimal points, and less than 1 trillion.","lastModifiedDate":"2024-04-12"},{"lineNumber":52,"author":{"gitId":"felixchanyy"},"content":"- `INDEX` must be positive with a maximum value equal to the number of people stored in the app or 2147483647, whichever is smaller.","lastModifiedDate":"2024-04-12"},{"lineNumber":53,"author":{"gitId":"felixchanyy"},"content":"- `PHONE` must be at least 3 digits long and at most 15 digits long to account for international constraints. Phone numbers entered should be no shorter than 3 characters and no longer than 15 characters.","lastModifiedDate":"2024-04-12"},{"lineNumber":54,"author":{"gitId":"felixchanyy"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-12"},{"lineNumber":55,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"  e.g. in `addBuyer n/NAME`, `NAME` is a parameter which can be used as `addBuyer n/John Doe`.","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"lokidoki102"},"content":"  e.g `n/NAME [e/EMAIL]` can be used as `n/John Doe e/johnny@doe.com` or as `n/John Doe`.","lastModifiedDate":"2024-04-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"felixchanyy"},"content":"  e.g. if the command specifies `n/NAME p/PHONE`, `p/PHONE n/NAME` is also acceptable.","lastModifiedDate":"2024-04-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"lokidoki102"},"content":"![help message](images/ui-screenshots/helpMessage.png)","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"zengzihui"},"content":"### Adding a buyer: `addBuyer`","lastModifiedDate":"2024-04-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":87,"author":{"gitId":"zengzihui"},"content":"Adds a `Buyer` to EstateEase.","lastModifiedDate":"2024-04-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":89,"author":{"gitId":"felixchanyy"},"content":"Format: `addBuyer n/NAME p/PHONE e/EMAIL budget/BUDGET type/PREFERRED_HOUSING_TYPE`","lastModifiedDate":"2024-04-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":91,"author":{"gitId":"zengzihui"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":92,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":93,"author":{"gitId":"zengzihui"},"content":"**Note:**","lastModifiedDate":"2024-04-04"},{"lineNumber":94,"author":{"gitId":"felixchanyy"},"content":"- `BUDGET` and `PREFERRED_HOUSING_TYPE` are the housing requirement preferences for every `Buyer`, so that `Buyer` and `Seller` can be matched immediately if their preference matched.","lastModifiedDate":"2024-04-12"},{"lineNumber":95,"author":{"gitId":"lokidoki102"},"content":"- The `BUDGET` value should not exceed $1 trillion.","lastModifiedDate":"2024-04-08"},{"lineNumber":96,"author":{"gitId":"zengzihui"},"content":"- A `Buyer` cannot have the same name as a `Seller`, because a `Buyer` cannot be a `Seller`, they must be unique.","lastModifiedDate":"2024-04-04"},{"lineNumber":97,"author":{"gitId":"zengzihui"},"content":"  \u003c/box\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":98,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":99,"author":{"gitId":"zengzihui"},"content":"Examples:","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"zengzihui"},"content":"* `addBuyer n/James p/98765432 e/james@gmail.com budget/20000 type/Hdb`","lastModifiedDate":"2024-04-08"},{"lineNumber":101,"author":{"gitId":"zengzihui"},"content":"* `addBuyer n/James p/98765432 e/james@gmail.com budget/20000 type/Condominium`","lastModifiedDate":"2024-04-08"},{"lineNumber":102,"author":{"gitId":"zengzihui"},"content":"* `addBuyer n/James p/98765432 e/james@gmail.com budget/20000 type/Landed`","lastModifiedDate":"2024-04-04"},{"lineNumber":103,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":105,"author":{"gitId":"KhoonSun47"},"content":"### Adding a seller: `addSeller`","lastModifiedDate":"2024-03-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"zengzihui"},"content":"Adds a `Seller` to EstateEase.","lastModifiedDate":"2024-04-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"felixchanyy"},"content":"Format: `addSeller n/NAME p/PHONE e/EMAIL type/HOUSING_TYPE street/STREET [blk/BLOCK] [level/LEVEL] unitNo/UNIT_NUMBER postal/POSTAL_CODE price/HOUSE_PRICE`","lastModifiedDate":"2024-04-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":113,"author":{"gitId":"KhoonSun47"},"content":"**Note:**","lastModifiedDate":"2024-04-04"},{"lineNumber":114,"author":{"gitId":"KhoonSun47"},"content":"- Adding a `Seller` will add a `House` to his/her list of houses, so that `Seller` and `Buyer` can be matched immediately if their preference matched.","lastModifiedDate":"2024-04-04"},{"lineNumber":115,"author":{"gitId":"KhoonSun47"},"content":"- A `Seller` cannot have the same name as a `Buyer`, because a `Seller` cannot be a `Buyer`, they must be unique.","lastModifiedDate":"2024-04-04"},{"lineNumber":116,"author":{"gitId":"felixchanyy"},"content":"- The necessity of fields `Block` and `Level` depends on the `Housing Type`. If the `Housing Type` is a `Condominium`, including a `Block` is optional but a `Level` is compulsory. If the `Housing Type` is `Landed`, `Block` and `Level` must not exist. For `Hdb`, `Block` and `Level` are compulsory.","lastModifiedDate":"2024-04-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"KhoonSun47"},"content":"##### Successful Execution","lastModifiedDate":"2024-04-04"},{"lineNumber":120,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":121,"author":{"gitId":"KhoonSun47"},"content":"**Example 1**","lastModifiedDate":"2024-04-04"},{"lineNumber":122,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":123,"author":{"gitId":"KhoonSun47"},"content":"\u003e **Case**: Add seller with name, phone, email, housing type of `Hdb`, street, block, level, unit number, postal code and housing price.","lastModifiedDate":"2024-04-04"},{"lineNumber":124,"author":{"gitId":"KhoonSun47"},"content":"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":125,"author":{"gitId":"KhoonSun47"},"content":"\u003e **Input**: `addSeller n/John Doe p/98765432 e/johnd@example.com type/Hdb street/Clementi Ave 2 blk/311 level/02 unitNo/25 postal/578578 price/999999999`","lastModifiedDate":"2024-04-04"},{"lineNumber":126,"author":{"gitId":"KhoonSun47"},"content":"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":127,"author":{"gitId":"KhoonSun47"},"content":"\u003e **Output**:","lastModifiedDate":"2024-04-04"},{"lineNumber":128,"author":{"gitId":"KhoonSun47"},"content":"\u003e ```","lastModifiedDate":"2024-04-04"},{"lineNumber":129,"author":{"gitId":"KhoonSun47"},"content":"\u003e New seller added\u003d John Doe; Phone\u003d 98765432; Email\u003d johnd@example.com","lastModifiedDate":"2024-04-04"},{"lineNumber":130,"author":{"gitId":"KhoonSun47"},"content":"\u003e ```","lastModifiedDate":"2024-04-04"},{"lineNumber":131,"author":{"gitId":"KhoonSun47"},"content":"*Example 1 will be presented in EstateEase as follows:*","lastModifiedDate":"2024-04-04"},{"lineNumber":132,"author":{"gitId":"lokidoki102"},"content":"![addSeller](images/ui-screenshots/addSeller-success.png)","lastModifiedDate":"2024-04-04"},{"lineNumber":133,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":134,"author":{"gitId":"KhoonSun47"},"content":"**Example 2**","lastModifiedDate":"2024-04-04"},{"lineNumber":135,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":136,"author":{"gitId":"KhoonSun47"},"content":"\u003e **Case**: Add seller with name, phone, email, housing type of `Landed`, unit number, postal code and housing price.","lastModifiedDate":"2024-04-04"},{"lineNumber":137,"author":{"gitId":"KhoonSun47"},"content":"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":138,"author":{"gitId":"KhoonSun47"},"content":"\u003e **Input**: `addSeller n/John Koe p/98765432 e/johnd@example.com type/Landed street/Clementi Ave 2 unitNo/25 postal/578578 price/10000`","lastModifiedDate":"2024-04-04"},{"lineNumber":139,"author":{"gitId":"KhoonSun47"},"content":"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":140,"author":{"gitId":"KhoonSun47"},"content":"\u003e **Output**:","lastModifiedDate":"2024-04-04"},{"lineNumber":141,"author":{"gitId":"KhoonSun47"},"content":"\u003e ```","lastModifiedDate":"2024-04-04"},{"lineNumber":142,"author":{"gitId":"KhoonSun47"},"content":"\u003e New seller added\u003d John Koe; Phone\u003d 98765432; Email\u003d johnd@example.com","lastModifiedDate":"2024-04-04"},{"lineNumber":143,"author":{"gitId":"KhoonSun47"},"content":"\u003e ```","lastModifiedDate":"2024-04-04"},{"lineNumber":144,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":145,"author":{"gitId":"felixchanyy"},"content":"**Other possible examples (Commands assumed to be standalone)**:","lastModifiedDate":"2024-04-12"},{"lineNumber":146,"author":{"gitId":"KhoonSun47"},"content":"* `addSeller n/John Doe p/98765432 e/johnd@example.com type/Condominium street/Clementi Ave 2 blk/N/A level/02 unitNo/25 postal/578578 price/10000`","lastModifiedDate":"2024-04-04"},{"lineNumber":147,"author":{"gitId":"KhoonSun47"},"content":"* `addSeller n/John Doe p/98765432 e/johnd@example.com type/Condominium street/Clementi Ave 2 level/02 unitNo/25 postal/578578 price/10000`","lastModifiedDate":"2024-04-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"KhoonSun47"},"content":"##### Failed Execution","lastModifiedDate":"2024-04-04"},{"lineNumber":150,"author":{"gitId":"KhoonSun47"},"content":"**Example 1**","lastModifiedDate":"2024-04-04"},{"lineNumber":151,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":152,"author":{"gitId":"KhoonSun47"},"content":"\u003e **Case**: Missing compulsory details.","lastModifiedDate":"2024-04-04"},{"lineNumber":153,"author":{"gitId":"KhoonSun47"},"content":"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":154,"author":{"gitId":"KhoonSun47"},"content":"\u003e **Input**: `addSeller`","lastModifiedDate":"2024-04-04"},{"lineNumber":155,"author":{"gitId":"KhoonSun47"},"content":"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":156,"author":{"gitId":"KhoonSun47"},"content":"\u003e **Output**:","lastModifiedDate":"2024-04-04"},{"lineNumber":157,"author":{"gitId":"KhoonSun47"},"content":"\u003e ```","lastModifiedDate":"2024-04-04"},{"lineNumber":158,"author":{"gitId":"KhoonSun47"},"content":"\u003e Invalid command format!","lastModifiedDate":"2024-04-04"},{"lineNumber":159,"author":{"gitId":"KhoonSun47"},"content":"\u003e addSeller: Adds a seller to EstateEase. Parameters: n/NAME p/PHONE e/EMAIL type/HOUSING_TYPE street/STREET blk/BLOCK level/LEVEL unitNo/UNIT NUMBER postal/POSTAL CODE price/PRICE","lastModifiedDate":"2024-04-04"},{"lineNumber":160,"author":{"gitId":"KhoonSun47"},"content":"\u003e Example: addSeller n/John Doe p/98765432 e/johnd@example.com type/Hdb street/Clementi Ave 2 blk/311 level/02 unitNo/25 postal/578578 price/999999999","lastModifiedDate":"2024-04-04"},{"lineNumber":161,"author":{"gitId":"KhoonSun47"},"content":"\u003e ```","lastModifiedDate":"2024-04-04"},{"lineNumber":162,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":163,"author":{"gitId":"KhoonSun47"},"content":"**Example 2**","lastModifiedDate":"2024-04-04"},{"lineNumber":164,"author":{"gitId":"KhoonSun47"},"content":"\u003e **Case**: Duplicate seller (seller and buyer cannot be same name).","lastModifiedDate":"2024-04-04"},{"lineNumber":165,"author":{"gitId":"KhoonSun47"},"content":"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":166,"author":{"gitId":"KhoonSun47"},"content":"\u003e **Input**: `addSeller n/John Koe p/98765432 e/johnd@example.com type/Landed street/Clementi Ave 2 unitNo/25 postal/578578 price/10000`","lastModifiedDate":"2024-04-04"},{"lineNumber":167,"author":{"gitId":"KhoonSun47"},"content":"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":168,"author":{"gitId":"KhoonSun47"},"content":"\u003e **Output**:","lastModifiedDate":"2024-04-04"},{"lineNumber":169,"author":{"gitId":"KhoonSun47"},"content":"\u003e ```","lastModifiedDate":"2024-04-04"},{"lineNumber":170,"author":{"gitId":"KhoonSun47"},"content":"\u003e This person already exists in EstateEase","lastModifiedDate":"2024-04-04"},{"lineNumber":171,"author":{"gitId":"KhoonSun47"},"content":"\u003e ```","lastModifiedDate":"2024-04-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"KhoonSun47"},"content":"**Example 3**","lastModifiedDate":"2024-04-04"},{"lineNumber":174,"author":{"gitId":"KhoonSun47"},"content":"\u003e **Case**: Duplicate house.","lastModifiedDate":"2024-04-04"},{"lineNumber":175,"author":{"gitId":"KhoonSun47"},"content":"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":176,"author":{"gitId":"KhoonSun47"},"content":"\u003e **Input**: `addSeller n/John Kokomelon p/98765432 e/johnd@example.com type/Hdb street/Clementi Ave 2 blk/311 level/02 unitNo/25 postal/578578 price/999999999`","lastModifiedDate":"2024-04-04"},{"lineNumber":177,"author":{"gitId":"KhoonSun47"},"content":"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":178,"author":{"gitId":"KhoonSun47"},"content":"\u003e **Output**:","lastModifiedDate":"2024-04-04"},{"lineNumber":179,"author":{"gitId":"KhoonSun47"},"content":"\u003e ```","lastModifiedDate":"2024-04-04"},{"lineNumber":180,"author":{"gitId":"KhoonSun47"},"content":"\u003e This house already exists in EstateEase","lastModifiedDate":"2024-04-04"},{"lineNumber":181,"author":{"gitId":"KhoonSun47"},"content":"\u003e ```","lastModifiedDate":"2024-04-04"},{"lineNumber":182,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":183,"author":{"gitId":"zengzihui"},"content":"### View a person detail : `view INDEX`","lastModifiedDate":"2024-04-04"},{"lineNumber":184,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":185,"author":{"gitId":"felixchanyy"},"content":"Views the detail of a `Person` in EstateEase. The index provided must be a positive number from 1 to the number of entries present.","lastModifiedDate":"2024-04-12"},{"lineNumber":186,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":187,"author":{"gitId":"zengzihui"},"content":"Format: `view INDEX`","lastModifiedDate":"2024-04-04"},{"lineNumber":188,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":189,"author":{"gitId":"zengzihui"},"content":"![view](images/ui-screenshots/view-success.png)","lastModifiedDate":"2024-04-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":191,"author":{"gitId":"zengzihui"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":193,"author":{"gitId":"zengzihui"},"content":"**Note:**","lastModifiedDate":"2024-04-04"},{"lineNumber":194,"author":{"gitId":"zengzihui"},"content":"- Views the details of the person at the specified `INDEX`.","lastModifiedDate":"2024-04-04"},{"lineNumber":195,"author":{"gitId":"zengzihui"},"content":"- The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2024-04-04"},{"lineNumber":196,"author":{"gitId":"lokidoki102"},"content":"- The index **must be a positive integer** 1, 2, 3, …, and should not exceed 2147483647.","lastModifiedDate":"2024-04-08"},{"lineNumber":197,"author":{"gitId":"zengzihui"},"content":"- `list` followed by `view 2` views the details of the 2nd person in EstateEase.","lastModifiedDate":"2024-04-04"},{"lineNumber":198,"author":{"gitId":"felixchanyy"},"content":"- `find Foy` (sample name) followed by `view 1` views the details of the 1st person in the results of the `find` command.","lastModifiedDate":"2024-04-12"},{"lineNumber":199,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":200,"author":{"gitId":"zengzihui"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":201,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":202,"author":{"gitId":"zengzihui"},"content":"Examples:","lastModifiedDate":"2024-04-04"},{"lineNumber":203,"author":{"gitId":"zengzihui"},"content":"* `view 1`","lastModifiedDate":"2024-04-04"},{"lineNumber":204,"author":{"gitId":"zengzihui"},"content":"* `view 2`","lastModifiedDate":"2024-04-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":207,"author":{"gitId":"lokidoki102"},"content":"### Editing seller details : `editSeller`","lastModifiedDate":"2024-04-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":209,"author":{"gitId":"lokidoki102"},"content":"Edits an existing `Seller` in EstateEase.","lastModifiedDate":"2024-04-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":211,"author":{"gitId":"lokidoki102"},"content":"Format: `editSeller INDEX [n/NAME] [p/PHONE] [e/EMAIL]`","lastModifiedDate":"2024-04-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":213,"author":{"gitId":"lokidoki102"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":214,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":215,"author":{"gitId":"lokidoki102"},"content":"**Note:**","lastModifiedDate":"2024-04-04"},{"lineNumber":216,"author":{"gitId":"lokidoki102"},"content":"* Edits the seller at the specified `INDEX`. The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2024-04-04"},{"lineNumber":217,"author":{"gitId":"lokidoki102"},"content":"* The `INDEX` **must be a positive integer** 1, 2, 3, …, and should not exceed 2147483647.","lastModifiedDate":"2024-04-08"},{"lineNumber":218,"author":{"gitId":"lokidoki102"},"content":"* The specified `INDEX` must be pointing to a `Seller` and not a `Buyer`.","lastModifiedDate":"2024-04-04"},{"lineNumber":219,"author":{"gitId":"lokidoki102"},"content":"* The new `NAME` value of the seller should not have a duplicate in EstateEase.","lastModifiedDate":"2024-04-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2024-04-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2024-04-04"},{"lineNumber":222,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":223,"author":{"gitId":"lokidoki102"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":224,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":225,"author":{"gitId":"lokidoki102"},"content":"##### Successful Execution","lastModifiedDate":"2024-04-04"},{"lineNumber":226,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":227,"author":{"gitId":"lokidoki102"},"content":"**Example 1**","lastModifiedDate":"2024-04-04"},{"lineNumber":228,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":229,"author":{"gitId":"lokidoki102"},"content":"\u003e **Case**: Edit a seller\u0027s phone number and email.","lastModifiedDate":"2024-04-04"},{"lineNumber":230,"author":{"gitId":"lokidoki102"},"content":"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":231,"author":{"gitId":"lokidoki102"},"content":"\u003e **Input**: `editSeller 1 p/91234567 e/johndoe@example.com`","lastModifiedDate":"2024-04-04"},{"lineNumber":232,"author":{"gitId":"lokidoki102"},"content":"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":233,"author":{"gitId":"lokidoki102"},"content":"\u003e **Output**:","lastModifiedDate":"2024-04-04"},{"lineNumber":234,"author":{"gitId":"lokidoki102"},"content":"\u003e ```","lastModifiedDate":"2024-04-04"},{"lineNumber":235,"author":{"gitId":"lokidoki102"},"content":"\u003e Edited Person(Seller): Bavid Li; Phone\u003d 91234567; Email\u003d johndoe@example.com","lastModifiedDate":"2024-04-04"},{"lineNumber":236,"author":{"gitId":"lokidoki102"},"content":"\u003e ```","lastModifiedDate":"2024-04-04"},{"lineNumber":237,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":238,"author":{"gitId":"lokidoki102"},"content":"**Example 2**","lastModifiedDate":"2024-04-04"},{"lineNumber":239,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":240,"author":{"gitId":"lokidoki102"},"content":"\u003e **Case**: Edit a seller name (no duplicate).","lastModifiedDate":"2024-04-04"},{"lineNumber":241,"author":{"gitId":"lokidoki102"},"content":"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":242,"author":{"gitId":"lokidoki102"},"content":"\u003e **Input**: `editSeller 1 n/David Newman`","lastModifiedDate":"2024-04-04"},{"lineNumber":243,"author":{"gitId":"lokidoki102"},"content":"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":244,"author":{"gitId":"lokidoki102"},"content":"\u003e **Output**:","lastModifiedDate":"2024-04-04"},{"lineNumber":245,"author":{"gitId":"lokidoki102"},"content":"\u003e ```","lastModifiedDate":"2024-04-04"},{"lineNumber":246,"author":{"gitId":"lokidoki102"},"content":"\u003e Edited Person(Seller): David Newman; Phone\u003d 91234567; Email\u003d johndoe@example.com","lastModifiedDate":"2024-04-04"},{"lineNumber":247,"author":{"gitId":"lokidoki102"},"content":"\u003e ```","lastModifiedDate":"2024-04-04"},{"lineNumber":248,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":249,"author":{"gitId":"lokidoki102"},"content":"##### Failed Execution","lastModifiedDate":"2024-04-04"},{"lineNumber":250,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":251,"author":{"gitId":"lokidoki102"},"content":"**Example 1**","lastModifiedDate":"2024-04-04"},{"lineNumber":252,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":253,"author":{"gitId":"lokidoki102"},"content":"\u003e **Case**: Edit a seller\u0027s name to an existing person in EstateEase.","lastModifiedDate":"2024-04-04"},{"lineNumber":254,"author":{"gitId":"lokidoki102"},"content":"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":255,"author":{"gitId":"lokidoki102"},"content":"\u003e **Input**: `editSeller 3 n/David Newman`","lastModifiedDate":"2024-04-04"},{"lineNumber":256,"author":{"gitId":"lokidoki102"},"content":"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":257,"author":{"gitId":"lokidoki102"},"content":"\u003e **Output**:","lastModifiedDate":"2024-04-04"},{"lineNumber":258,"author":{"gitId":"lokidoki102"},"content":"\u003e ```","lastModifiedDate":"2024-04-04"},{"lineNumber":259,"author":{"gitId":"felixchanyy"},"content":"\u003e This person already exists in EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":260,"author":{"gitId":"lokidoki102"},"content":"\u003e ```","lastModifiedDate":"2024-04-04"},{"lineNumber":261,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":262,"author":{"gitId":"lokidoki102"},"content":"**Example 2**","lastModifiedDate":"2024-04-04"},{"lineNumber":263,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":264,"author":{"gitId":"lokidoki102"},"content":"\u003e **Case**: Edit a `buyer` while using `editSeller` command.","lastModifiedDate":"2024-04-04"},{"lineNumber":265,"author":{"gitId":"lokidoki102"},"content":"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":266,"author":{"gitId":"lokidoki102"},"content":"\u003e **Input**: `editSeller 2 n/John Doe`","lastModifiedDate":"2024-04-04"},{"lineNumber":267,"author":{"gitId":"lokidoki102"},"content":"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":268,"author":{"gitId":"lokidoki102"},"content":"\u003e **Output**:","lastModifiedDate":"2024-04-04"},{"lineNumber":269,"author":{"gitId":"lokidoki102"},"content":"\u003e ```","lastModifiedDate":"2024-04-04"},{"lineNumber":270,"author":{"gitId":"lokidoki102"},"content":"\u003e The person you are trying to edit is not a seller.","lastModifiedDate":"2024-04-04"},{"lineNumber":271,"author":{"gitId":"lokidoki102"},"content":"\u003e ```","lastModifiedDate":"2024-04-04"},{"lineNumber":272,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":273,"author":{"gitId":"lokidoki102"},"content":"**Example 3**","lastModifiedDate":"2024-04-04"},{"lineNumber":274,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":275,"author":{"gitId":"lokidoki102"},"content":"\u003e **Case**: Edit a seller without any parameters.","lastModifiedDate":"2024-04-04"},{"lineNumber":276,"author":{"gitId":"lokidoki102"},"content":"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":277,"author":{"gitId":"lokidoki102"},"content":"\u003e **Input**: `editSeller 3`","lastModifiedDate":"2024-04-04"},{"lineNumber":278,"author":{"gitId":"lokidoki102"},"content":"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":279,"author":{"gitId":"lokidoki102"},"content":"\u003e **Output**:","lastModifiedDate":"2024-04-04"},{"lineNumber":280,"author":{"gitId":"lokidoki102"},"content":"\u003e ```","lastModifiedDate":"2024-04-04"},{"lineNumber":281,"author":{"gitId":"lokidoki102"},"content":"\u003e At least one field to edit must be provided.","lastModifiedDate":"2024-04-04"},{"lineNumber":282,"author":{"gitId":"lokidoki102"},"content":"\u003e ```","lastModifiedDate":"2024-04-04"},{"lineNumber":283,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":284,"author":{"gitId":"lokidoki102"},"content":"**Example 4**","lastModifiedDate":"2024-04-04"},{"lineNumber":285,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":286,"author":{"gitId":"lokidoki102"},"content":"\u003e **Case**: Edit a seller with invalid `INDEX`.","lastModifiedDate":"2024-04-04"},{"lineNumber":287,"author":{"gitId":"lokidoki102"},"content":"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":288,"author":{"gitId":"lokidoki102"},"content":"\u003e **Input**: `editSeller 9999999 n/Bob Freeman`","lastModifiedDate":"2024-04-04"},{"lineNumber":289,"author":{"gitId":"lokidoki102"},"content":"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":290,"author":{"gitId":"lokidoki102"},"content":"\u003e **Output**:","lastModifiedDate":"2024-04-04"},{"lineNumber":291,"author":{"gitId":"lokidoki102"},"content":"\u003e ```","lastModifiedDate":"2024-04-04"},{"lineNumber":292,"author":{"gitId":"lokidoki102"},"content":"\u003e The person index provided is invalid.","lastModifiedDate":"2024-04-04"},{"lineNumber":293,"author":{"gitId":"lokidoki102"},"content":"\u003e ```","lastModifiedDate":"2024-04-04"},{"lineNumber":294,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":295,"author":{"gitId":"lokidoki102"},"content":"### Editing buyer details : `editBuyer`","lastModifiedDate":"2024-04-04"},{"lineNumber":296,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":297,"author":{"gitId":"lokidoki102"},"content":"Edits an existing `Buyer` in EstateEase.","lastModifiedDate":"2024-04-04"},{"lineNumber":298,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":299,"author":{"gitId":"felixchanyy"},"content":"Format: `editBuyer INDEX [n/NAME] [p/PHONE] [e/EMAIL] [type/PREFERRED_HOUSING_TYPE] [budget/BUDGET]`","lastModifiedDate":"2024-04-12"},{"lineNumber":300,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":301,"author":{"gitId":"lokidoki102"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":302,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":303,"author":{"gitId":"lokidoki102"},"content":"**Note:**","lastModifiedDate":"2024-04-04"},{"lineNumber":304,"author":{"gitId":"lokidoki102"},"content":"* The constraints are very similar to `editSeller` command, except the specified `INDEX` must be pointing to a `Buyer`","lastModifiedDate":"2024-04-04"},{"lineNumber":305,"author":{"gitId":"lokidoki102"},"content":"  and not a `Seller`.","lastModifiedDate":"2024-04-04"},{"lineNumber":306,"author":{"gitId":"lokidoki102"},"content":"* The `BUDGET` value should not exceed $1 trillion.","lastModifiedDate":"2024-04-08"},{"lineNumber":307,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":308,"author":{"gitId":"lokidoki102"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":310,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2024-04-04"},{"lineNumber":311,"author":{"gitId":"lokidoki102"},"content":"##### Successful Execution","lastModifiedDate":"2024-04-04"},{"lineNumber":312,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":313,"author":{"gitId":"lokidoki102"},"content":"**Example 1**","lastModifiedDate":"2024-04-04"},{"lineNumber":314,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":315,"author":{"gitId":"lokidoki102"},"content":"\u003e **Case**: Edit a buyer\u0027s phone number, email, preferred housing type, and budget.","lastModifiedDate":"2024-04-04"},{"lineNumber":316,"author":{"gitId":"lokidoki102"},"content":"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":317,"author":{"gitId":"lokidoki102"},"content":"\u003e **Input**: `editBuyer 1 p/91234567 e/johndoe@example.com type/Landed budget/15000000`","lastModifiedDate":"2024-04-04"},{"lineNumber":318,"author":{"gitId":"lokidoki102"},"content":"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":319,"author":{"gitId":"lokidoki102"},"content":"\u003e **Output**:","lastModifiedDate":"2024-04-04"},{"lineNumber":320,"author":{"gitId":"lokidoki102"},"content":"\u003e ```","lastModifiedDate":"2024-04-04"},{"lineNumber":321,"author":{"gitId":"lokidoki102"},"content":"\u003e Edited Person(Buyer): Alex Yeoh; Phone\u003d 91234567; Email\u003d johndoe@example.com; Preferred Housing Type\u003d Landed; Budget\u003d 15000000","lastModifiedDate":"2024-04-04"},{"lineNumber":322,"author":{"gitId":"lokidoki102"},"content":"\u003e ```","lastModifiedDate":"2024-04-04"},{"lineNumber":323,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":324,"author":{"gitId":"lokidoki102"},"content":"##### Failed Execution","lastModifiedDate":"2024-04-04"},{"lineNumber":325,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":326,"author":{"gitId":"lokidoki102"},"content":"**Example 1**","lastModifiedDate":"2024-04-04"},{"lineNumber":327,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":328,"author":{"gitId":"lokidoki102"},"content":"\u003e **Case**: Edit a buyer\u0027s budget to a non-positive number.","lastModifiedDate":"2024-04-04"},{"lineNumber":329,"author":{"gitId":"lokidoki102"},"content":"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":330,"author":{"gitId":"lokidoki102"},"content":"\u003e **Input**: `editBuyer 1 budget/-200000`","lastModifiedDate":"2024-04-04"},{"lineNumber":331,"author":{"gitId":"lokidoki102"},"content":"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":332,"author":{"gitId":"lokidoki102"},"content":"\u003e **Output**:","lastModifiedDate":"2024-04-04"},{"lineNumber":333,"author":{"gitId":"lokidoki102"},"content":"\u003e ```","lastModifiedDate":"2024-04-04"},{"lineNumber":334,"author":{"gitId":"lokidoki102"},"content":"\u003e Budget should be a positive number.","lastModifiedDate":"2024-04-04"},{"lineNumber":335,"author":{"gitId":"lokidoki102"},"content":"\u003e ```","lastModifiedDate":"2024-04-04"},{"lineNumber":336,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":337,"author":{"gitId":"lokidoki102"},"content":"**Example 2**","lastModifiedDate":"2024-04-04"},{"lineNumber":338,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":339,"author":{"gitId":"lokidoki102"},"content":"\u003e **Case**: Edit a `seller` while using `editBuyer` command.","lastModifiedDate":"2024-04-04"},{"lineNumber":340,"author":{"gitId":"lokidoki102"},"content":"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":341,"author":{"gitId":"lokidoki102"},"content":"\u003e **Input**: `editBuyer 2 n/John Buyer`","lastModifiedDate":"2024-04-04"},{"lineNumber":342,"author":{"gitId":"lokidoki102"},"content":"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":343,"author":{"gitId":"lokidoki102"},"content":"\u003e **Output**:","lastModifiedDate":"2024-04-04"},{"lineNumber":344,"author":{"gitId":"lokidoki102"},"content":"\u003e ```","lastModifiedDate":"2024-04-04"},{"lineNumber":345,"author":{"gitId":"lokidoki102"},"content":"\u003e The person you are trying to edit is not a buyer..","lastModifiedDate":"2024-04-04"},{"lineNumber":346,"author":{"gitId":"lokidoki102"},"content":"\u003e ```","lastModifiedDate":"2024-04-04"},{"lineNumber":347,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":348,"author":{"gitId":"lokidoki102"},"content":"**Example 3**","lastModifiedDate":"2024-04-04"},{"lineNumber":349,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":350,"author":{"gitId":"lokidoki102"},"content":"\u003e **Case**: Edit a buyer\u0027s preferred housing type that\u0027s not valid.","lastModifiedDate":"2024-04-04"},{"lineNumber":351,"author":{"gitId":"lokidoki102"},"content":"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":352,"author":{"gitId":"lokidoki102"},"content":"\u003e **Input**: `editBuyer 1 type/Bungalow`","lastModifiedDate":"2024-04-04"},{"lineNumber":353,"author":{"gitId":"lokidoki102"},"content":"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":354,"author":{"gitId":"lokidoki102"},"content":"\u003e **Output**:","lastModifiedDate":"2024-04-04"},{"lineNumber":355,"author":{"gitId":"lokidoki102"},"content":"\u003e ```","lastModifiedDate":"2024-04-04"},{"lineNumber":356,"author":{"gitId":"lokidoki102"},"content":"\u003e HousingType should only be Landed, Hdb or Condominium.","lastModifiedDate":"2024-04-04"},{"lineNumber":357,"author":{"gitId":"lokidoki102"},"content":"\u003e ```","lastModifiedDate":"2024-04-04"},{"lineNumber":358,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":359,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":360,"author":{"gitId":"redcolorbicycle"},"content":"### Adding a house: `addHouse`","lastModifiedDate":"2024-04-03"},{"lineNumber":361,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":362,"author":{"gitId":"redcolorbicycle"},"content":"Adds a house to a specific seller.","lastModifiedDate":"2024-04-03"},{"lineNumber":363,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":364,"author":{"gitId":"felixchanyy"},"content":"Format: ","lastModifiedDate":"2024-04-12"},{"lineNumber":365,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":366,"author":{"gitId":"felixchanyy"},"content":"**Add House (HDB):**`addHouse n/NAME type/HOUSING_TYPE street/STREET blk/BLOCK level/LEVEL unitNo/UNIT_NUMBER postal/POSTAL_CODE price/HOUSE_PRICE`\u003cbr\u003e\u003cbr\u003e**Add House (Landed)**: `addHouse n/NAME type/HOUSING_TYPE street/STREET unitNo/UNIT_NUMBER postal/POSTAL_CODE price/HOUSE_PRICE`\u003cbr\u003e\u003cbr\u003e**Add House (Condominium):**`addHouse n/NAME type/HOUSING_TYPE street/STREET [blk/BLOCK] level/LEVEL unitNo/UNIT_NUMBER postal/POSTAL_CODE price/HOUSE_PRICE`","lastModifiedDate":"2024-04-12"},{"lineNumber":367,"author":{"gitId":"redcolorbicycle"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":368,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":369,"author":{"gitId":"felixchanyy"},"content":"**Tip:** A Hdb must have blk and level in the command. A condominium must have level in the command. Condominiums without blocks can have block represented by \"N/A\", or by completely omitting the blk/ prefix. A landed house must NOT have blk or level.","lastModifiedDate":"2024-04-12"},{"lineNumber":370,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":371,"author":{"gitId":"felixchanyy"},"content":"**Note:** Even if the house type is different, if all other details (except Price) are the same, they are considered as the same house. Different Hdbs and Condominiums are allowed to have the same Postal Code. While landed houses are not supposed to have that functionality, such checks will only be introduced in future versions.","lastModifiedDate":"2024-04-12"},{"lineNumber":372,"author":{"gitId":"redcolorbicycle"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":373,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":374,"author":{"gitId":"redcolorbicycle"},"content":"##### Successful Execution","lastModifiedDate":"2024-04-04"},{"lineNumber":375,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":376,"author":{"gitId":"redcolorbicycle"},"content":"**Example 1**","lastModifiedDate":"2024-04-04"},{"lineNumber":377,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":378,"author":{"gitId":"redcolorbicycle"},"content":"\u003e **Case**: Add a Condominium that does not have a block","lastModifiedDate":"2024-04-04"},{"lineNumber":379,"author":{"gitId":"redcolorbicycle"},"content":"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":380,"author":{"gitId":"redcolorbicycle"},"content":"\u003e **Input**: `addHouse n/John Doe type/Condominium street/Clementi Ave 2 blk/N/A level/02 unitNo/25 postal/578578 price/10000`","lastModifiedDate":"2024-04-04"},{"lineNumber":381,"author":{"gitId":"redcolorbicycle"},"content":"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":382,"author":{"gitId":"redcolorbicycle"},"content":"\u003e **Output**:","lastModifiedDate":"2024-04-04"},{"lineNumber":383,"author":{"gitId":"redcolorbicycle"},"content":"\u003e ```New house added!```","lastModifiedDate":"2024-04-04"},{"lineNumber":384,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":385,"author":{"gitId":"redcolorbicycle"},"content":"**Example 2**","lastModifiedDate":"2024-04-04"},{"lineNumber":386,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":387,"author":{"gitId":"redcolorbicycle"},"content":"\u003e **Case**: Add a Condominium that has a block","lastModifiedDate":"2024-04-04"},{"lineNumber":388,"author":{"gitId":"redcolorbicycle"},"content":"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":389,"author":{"gitId":"redcolorbicycle"},"content":"\u003e **Input**: `addHouse n/John Doe type/Condominium street/Clementi Ave 2 level/02 unitNo/25 postal/578578 price/10000`","lastModifiedDate":"2024-04-04"},{"lineNumber":390,"author":{"gitId":"redcolorbicycle"},"content":"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":391,"author":{"gitId":"redcolorbicycle"},"content":"\u003e **Output**:","lastModifiedDate":"2024-04-04"},{"lineNumber":392,"author":{"gitId":"redcolorbicycle"},"content":"\u003e ```New house added!```","lastModifiedDate":"2024-04-04"},{"lineNumber":393,"author":{"gitId":"redcolorbicycle"},"content":"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":394,"author":{"gitId":"redcolorbicycle"},"content":"\u003e **Remarks**: Condominiums with no blocks are allowed to either have or exclude the blk/ aspect of the command. If included when the Condominium has no block, the value must be N/A.","lastModifiedDate":"2024-04-04"},{"lineNumber":395,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":396,"author":{"gitId":"redcolorbicycle"},"content":"**Example 3**","lastModifiedDate":"2024-04-04"},{"lineNumber":397,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":398,"author":{"gitId":"redcolorbicycle"},"content":"\u003e **Case**: Add a Landed","lastModifiedDate":"2024-04-04"},{"lineNumber":399,"author":{"gitId":"redcolorbicycle"},"content":"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":400,"author":{"gitId":"redcolorbicycle"},"content":"\u003e **Input**: `addHouse n/John Doe type/Landed street/Clementi Ave 2 unitNo/25 postal/578578 price/10000`","lastModifiedDate":"2024-04-04"},{"lineNumber":401,"author":{"gitId":"redcolorbicycle"},"content":"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":402,"author":{"gitId":"redcolorbicycle"},"content":"\u003e **Output**:","lastModifiedDate":"2024-04-04"},{"lineNumber":403,"author":{"gitId":"redcolorbicycle"},"content":"\u003e ```New house added!```","lastModifiedDate":"2024-04-04"},{"lineNumber":404,"author":{"gitId":"redcolorbicycle"},"content":"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":405,"author":{"gitId":"redcolorbicycle"},"content":"\u003e **Remarks**: Landed must not have blk or level as arguments.","lastModifiedDate":"2024-04-04"},{"lineNumber":406,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":407,"author":{"gitId":"felixchanyy"},"content":"**Example 4**","lastModifiedDate":"2024-04-12"},{"lineNumber":408,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":409,"author":{"gitId":"felixchanyy"},"content":"\u003e **Case**: Add a Hdb","lastModifiedDate":"2024-04-12"},{"lineNumber":410,"author":{"gitId":"felixchanyy"},"content":"\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":411,"author":{"gitId":"felixchanyy"},"content":"\u003e **Input**: `addHouse n/John Doe type/Hdb street/Clementi Ave 2 blk/311 level/02 unitNo/25 postal/578578 price/999999999`","lastModifiedDate":"2024-04-12"},{"lineNumber":412,"author":{"gitId":"felixchanyy"},"content":"\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":413,"author":{"gitId":"felixchanyy"},"content":"\u003e **Output**:","lastModifiedDate":"2024-04-12"},{"lineNumber":414,"author":{"gitId":"felixchanyy"},"content":"\u003e ```New house added!```","lastModifiedDate":"2024-04-12"},{"lineNumber":415,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":416,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":417,"author":{"gitId":"redcolorbicycle"},"content":"##### Failed Execution","lastModifiedDate":"2024-04-04"},{"lineNumber":418,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":419,"author":{"gitId":"redcolorbicycle"},"content":"**Example 1**","lastModifiedDate":"2024-04-04"},{"lineNumber":420,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":421,"author":{"gitId":"redcolorbicycle"},"content":"\u003e **Case**: Missing compulsory fields.","lastModifiedDate":"2024-04-04"},{"lineNumber":422,"author":{"gitId":"redcolorbicycle"},"content":"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":423,"author":{"gitId":"redcolorbicycle"},"content":"\u003e **Input**: `addHouse`","lastModifiedDate":"2024-04-04"},{"lineNumber":424,"author":{"gitId":"redcolorbicycle"},"content":"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":425,"author":{"gitId":"redcolorbicycle"},"content":"\u003e **Output**:","lastModifiedDate":"2024-04-04"},{"lineNumber":426,"author":{"gitId":"redcolorbicycle"},"content":"\u003e ```","lastModifiedDate":"2024-04-04"},{"lineNumber":427,"author":{"gitId":"redcolorbicycle"},"content":"\u003e Invalid command format!","lastModifiedDate":"2024-04-04"},{"lineNumber":428,"author":{"gitId":"redcolorbicycle"},"content":"\u003e addHouse: Adds a house to a Seller. Indicate N/A for nonexistent fields. Parameters: n/NAME type/HOUSING_TYPE street/STREET blk/BLOCK level/LEVEL unitNo/UNIT NUMBER postal/POSTAL CODE price/PRICE","lastModifiedDate":"2024-04-04"},{"lineNumber":429,"author":{"gitId":"redcolorbicycle"},"content":"\u003e Example: addHouse n/John Doe type/Condominium street/Clementi Ave 2 blk/N/A level/02 unitNo/25 postal/578578 price/99999","lastModifiedDate":"2024-04-04"},{"lineNumber":430,"author":{"gitId":"redcolorbicycle"},"content":"\u003e ```","lastModifiedDate":"2024-04-04"},{"lineNumber":431,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":432,"author":{"gitId":"redcolorbicycle"},"content":"**Example 2**","lastModifiedDate":"2024-04-04"},{"lineNumber":433,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":434,"author":{"gitId":"redcolorbicycle"},"content":"\u003e **Case**: Duplicate categories with valid compulsory fields.","lastModifiedDate":"2024-04-04"},{"lineNumber":435,"author":{"gitId":"redcolorbicycle"},"content":"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":436,"author":{"gitId":"KhoonSun47"},"content":"\u003e **Input**: `addHouse n/John Doe type/Condominium type/Hdb street/Clementi Ave 2 blk/N/A level/02 unitNo/25 postal/578578 price/99999`","lastModifiedDate":"2024-04-08"},{"lineNumber":437,"author":{"gitId":"redcolorbicycle"},"content":"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":438,"author":{"gitId":"redcolorbicycle"},"content":"\u003e **Output**:","lastModifiedDate":"2024-04-04"},{"lineNumber":439,"author":{"gitId":"redcolorbicycle"},"content":"\u003e ```","lastModifiedDate":"2024-04-04"},{"lineNumber":440,"author":{"gitId":"KhoonSun47"},"content":"\u003e Multiple values specified for the following single-valued field(s): type/","lastModifiedDate":"2024-04-08"},{"lineNumber":441,"author":{"gitId":"redcolorbicycle"},"content":"\u003e ```","lastModifiedDate":"2024-04-04"},{"lineNumber":442,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":443,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":444,"author":{"gitId":"redcolorbicycle"},"content":"### Deleting a house: `deleteHouse`","lastModifiedDate":"2024-04-03"},{"lineNumber":445,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":446,"author":{"gitId":"redcolorbicycle"},"content":"Deletes a house from a specific seller.","lastModifiedDate":"2024-04-03"},{"lineNumber":447,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":448,"author":{"gitId":"felixchanyy"},"content":"Format: `deleteHouse n/NAME type/HOUSING_TYPE street/STREET [blk/BLOCK] [level/LEVEL] unitNo/UNIT_NUMBER postal/POSTAL_CODE price/HOUSE_PRICE`","lastModifiedDate":"2024-04-12"},{"lineNumber":449,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":450,"author":{"gitId":"redcolorbicycle"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":451,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":452,"author":{"gitId":"felixchanyy"},"content":"**Tip:** The exact House restrictions applied in addHouse apply here too.","lastModifiedDate":"2024-04-12"},{"lineNumber":453,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":454,"author":{"gitId":"redcolorbicycle"},"content":"**Note:** A seller with one house can have his house deleted. The seller would have no houses to his name then but would still exist.","lastModifiedDate":"2024-04-03"},{"lineNumber":455,"author":{"gitId":"redcolorbicycle"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":456,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":457,"author":{"gitId":"redcolorbicycle"},"content":"Examples: Largely similar to addHouse commands, except the addHouse command word is now deleteHouse.","lastModifiedDate":"2024-04-04"},{"lineNumber":458,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":459,"author":{"gitId":"felixchanyy"},"content":"### Matching Sellers to a Buyer: `matchBuyer`","lastModifiedDate":"2024-04-04"},{"lineNumber":460,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":461,"author":{"gitId":"felixchanyy"},"content":"Shows a list of sellers and their houses that match the budget and preferred housing type of a specified buyer.","lastModifiedDate":"2024-04-08"},{"lineNumber":462,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":463,"author":{"gitId":"felixchanyy"},"content":"Format: `matchBuyer FULL_NAME`","lastModifiedDate":"2024-04-04"},{"lineNumber":464,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":465,"author":{"gitId":"felixchanyy"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":466,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":467,"author":{"gitId":"felixchanyy"},"content":"**Tip:** Ensure you use the buyer\u0027s full name when entering the command.","lastModifiedDate":"2024-04-08"},{"lineNumber":468,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":469,"author":{"gitId":"lokidoki102"},"content":"**Note:** ","lastModifiedDate":"2024-04-08"},{"lineNumber":470,"author":{"gitId":"lokidoki102"},"content":"* This command only matches sellers whose house prices are less than or equal to the buyer\u0027s budget and whose housing types match the buyer\u0027s preference.","lastModifiedDate":"2024-04-08"},{"lineNumber":471,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":472,"author":{"gitId":"felixchanyy"},"content":"**Important:** ","lastModifiedDate":"2024-04-12"},{"lineNumber":473,"author":{"gitId":"felixchanyy"},"content":"* Extreme cases of using more than 17 digits for both price and budget are not allowed as they may result in incorrect outcomes.","lastModifiedDate":"2024-04-12"},{"lineNumber":474,"author":{"gitId":"felixchanyy"},"content":"                    ","lastModifiedDate":"2024-04-08"},{"lineNumber":475,"author":{"gitId":"felixchanyy"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":476,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":477,"author":{"gitId":"felixchanyy"},"content":"##### Successful Execution","lastModifiedDate":"2024-04-08"},{"lineNumber":478,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":479,"author":{"gitId":"felixchanyy"},"content":"**Example 1**","lastModifiedDate":"2024-04-08"},{"lineNumber":480,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":481,"author":{"gitId":"felixchanyy"},"content":"\u003e **Case**: Matching sellers to a buyer with the full name \"Helix Doe\".","lastModifiedDate":"2024-04-12"},{"lineNumber":482,"author":{"gitId":"felixchanyy"},"content":"\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":483,"author":{"gitId":"felixchanyy"},"content":"\u003e **Input**: `matchBuyer Helix Doe`","lastModifiedDate":"2024-04-12"},{"lineNumber":484,"author":{"gitId":"felixchanyy"},"content":"\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":485,"author":{"gitId":"felixchanyy"},"content":"\u003e **Output**:","lastModifiedDate":"2024-04-08"},{"lineNumber":486,"author":{"gitId":"felixchanyy"},"content":"\u003e ```","lastModifiedDate":"2024-04-08"},{"lineNumber":487,"author":{"gitId":"felixchanyy"},"content":"\u003e 1 house(s) listed!","lastModifiedDate":"2024-04-08"},{"lineNumber":488,"author":{"gitId":"felixchanyy"},"content":"\u003e ```","lastModifiedDate":"2024-04-08"},{"lineNumber":489,"author":{"gitId":"felixchanyy"},"content":"*Example 1 will be presented in EstateEase as follows:*","lastModifiedDate":"2024-04-08"},{"lineNumber":490,"author":{"gitId":"lokidoki102"},"content":"![matchBuyer](images/ui-screenshots/matchBuyer-success.png)","lastModifiedDate":"2024-04-04"},{"lineNumber":491,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":492,"author":{"gitId":"felixchanyy"},"content":"##### Failed Execution","lastModifiedDate":"2024-04-08"},{"lineNumber":493,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":494,"author":{"gitId":"felixchanyy"},"content":"**Example 1**","lastModifiedDate":"2024-04-08"},{"lineNumber":495,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":496,"author":{"gitId":"felixchanyy"},"content":"\u003e **Case**: Buyer with the specified name not found.","lastModifiedDate":"2024-04-08"},{"lineNumber":497,"author":{"gitId":"felixchanyy"},"content":"\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":498,"author":{"gitId":"felixchanyy"},"content":"\u003e **Input**: `matchBuyer Alex`","lastModifiedDate":"2024-04-12"},{"lineNumber":499,"author":{"gitId":"felixchanyy"},"content":"\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":500,"author":{"gitId":"felixchanyy"},"content":"\u003e **Output**:","lastModifiedDate":"2024-04-08"},{"lineNumber":501,"author":{"gitId":"felixchanyy"},"content":"\u003e ```","lastModifiedDate":"2024-04-08"},{"lineNumber":502,"author":{"gitId":"felixchanyy"},"content":"\u003e The specified buyer was not found.","lastModifiedDate":"2024-04-08"},{"lineNumber":503,"author":{"gitId":"felixchanyy"},"content":"\u003e ```","lastModifiedDate":"2024-04-08"},{"lineNumber":504,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":505,"author":{"gitId":"felixchanyy"},"content":"**Example 2**","lastModifiedDate":"2024-04-08"},{"lineNumber":506,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":507,"author":{"gitId":"felixchanyy"},"content":"\u003e **Case**:  Specified name is a seller.","lastModifiedDate":"2024-04-08"},{"lineNumber":508,"author":{"gitId":"felixchanyy"},"content":"\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":509,"author":{"gitId":"felixchanyy"},"content":"\u003e **Input**: `matchBuyer Alex Yeoh","lastModifiedDate":"2024-04-12"},{"lineNumber":510,"author":{"gitId":"felixchanyy"},"content":"\u003e`","lastModifiedDate":"2024-04-12"},{"lineNumber":511,"author":{"gitId":"felixchanyy"},"content":"\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":512,"author":{"gitId":"felixchanyy"},"content":"\u003e **Output**:","lastModifiedDate":"2024-04-08"},{"lineNumber":513,"author":{"gitId":"felixchanyy"},"content":"\u003e ```","lastModifiedDate":"2024-04-08"},{"lineNumber":514,"author":{"gitId":"felixchanyy"},"content":"\u003e The specified person is not a buyer.","lastModifiedDate":"2024-04-08"},{"lineNumber":515,"author":{"gitId":"felixchanyy"},"content":"\u003e ```","lastModifiedDate":"2024-04-08"},{"lineNumber":516,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":517,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"zengzihui"},"content":"Shows a list of all persons in EstateEase.","lastModifiedDate":"2024-04-04"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"lokidoki102"},"content":"![list](images/ui-screenshots/list-success.png)","lastModifiedDate":"2024-04-04"},{"lineNumber":524,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":526,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":539,"author":{"gitId":"lokidoki102"},"content":"##### Successful Execution","lastModifiedDate":"2024-04-04"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"lokidoki102"},"content":"**Example 1**","lastModifiedDate":"2024-04-04"},{"lineNumber":542,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":543,"author":{"gitId":"lokidoki102"},"content":"\u003e **Case**: Find people named John.","lastModifiedDate":"2024-04-04"},{"lineNumber":544,"author":{"gitId":"lokidoki102"},"content":"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":545,"author":{"gitId":"lokidoki102"},"content":"\u003e **Input**: `find John`","lastModifiedDate":"2024-04-04"},{"lineNumber":546,"author":{"gitId":"lokidoki102"},"content":"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":547,"author":{"gitId":"lokidoki102"},"content":"\u003e **Output**:","lastModifiedDate":"2024-04-04"},{"lineNumber":548,"author":{"gitId":"lokidoki102"},"content":"\u003e ```3 persons listed!```","lastModifiedDate":"2024-04-04"},{"lineNumber":549,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":550,"author":{"gitId":"lokidoki102"},"content":"Here\u0027s an example of how it looks like","lastModifiedDate":"2024-04-04"},{"lineNumber":551,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":552,"author":{"gitId":"lokidoki102"},"content":"![result for \u0027find John\u0027](images/ui-screenshots/find-success.png)","lastModifiedDate":"2024-04-04"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"zengzihui"},"content":"Deletes the specified person from EstateEase.","lastModifiedDate":"2024-04-04"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"lokidoki102"},"content":"* The index **must be a positive integer** 1, 2, 3, …, and should not exceed 2147483647.","lastModifiedDate":"2024-04-08"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"zengzihui"},"content":"* `list` followed by `delete 2` deletes the 2nd person in EstateEase.","lastModifiedDate":"2024-04-04"},{"lineNumber":566,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"zengzihui"},"content":"Clears all entries from EstateEase.","lastModifiedDate":"2024-04-04"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"zengzihui"},"content":"EstateEase data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2024-04-04"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":586,"author":{"gitId":"zengzihui"},"content":"EstateEase data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2024-04-04"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":588,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":590,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":591,"author":{"gitId":"felixchanyy"},"content":"If your changes to the data file makes its format invalid, EstateEase will override the existing data file with an empty data file in the next successful command execution. Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":592,"author":{"gitId":"KhoonSun47"},"content":"Furthermore, certain edits can cause EstateEase to behave in unexpected ways. Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2024-04-04"},{"lineNumber":593,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":595,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"zengzihui"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous EstateEase home folder.","lastModifiedDate":"2024-04-04"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"Action     | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"-----------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-12"},{"lineNumber":608,"author":{"gitId":"felixchanyy"},"content":"**Add Buyer**     | `addBuyer n/NAME p/PHONE e/EMAIL budget/BUDGET type/PREFERRED_HOUSING_TYPE`\u003cbr\u003e\u003cbr\u003e **e.g.,** `addBuyer n/James p/98765432 e/james@gmail.com budget/20000 type/Hdb`","lastModifiedDate":"2024-04-12"},{"lineNumber":609,"author":{"gitId":"felixchanyy"},"content":"**Add Seller**    | `addSeller n/NAME p/PHONE e/EMAIL type/HOUSING_TYPE street/STREET [blk/BLOCK] [level/LEVEL] unitNo/UNIT_NUMBER postal/POSTAL_CODE price/HOUSE_PRICE`\u003cbr\u003e \u003cbr\u003e**e.g.,**\u003cbr\u003e **Add Seller with Hdb:**`addSeller n/John Doe p/98765432 e/johnd@example.com type/Hdb street/Clementi Ave 2 blk/311 level/02 unitNo/25 postal/578578 price/999999999`\u003cbr\u003e\u003cbr\u003e **Add Seller with Landed:** `addSeller n/John Koe p/98765432 e/johnd@example.com type/Landed street/Clementi Ave 2 unitNo/25 postal/578578 price/10000`\u003cbr\u003e\u003cbr\u003e **Add Seller with Condominium:** `addSeller n/John Doe p/98765432 e/johnd@example.com type/Condominium street/Clementi Ave 2 level/02 unitNo/25 postal/578578 price/10000`\u003cbr\u003e\u003cbr\u003e **Take note that the format of adding a `Seller` is the same as adding a `House`, but with additional field of `phone` and `email`. Please refer to [Add House](#add-house).** ","lastModifiedDate":"2024-04-12"},{"lineNumber":610,"author":{"gitId":"KhoonSun47"},"content":"**View**          | `view INDEX` \u003cbr\u003e\u003cbr\u003e **e.g.,** `view 1`","lastModifiedDate":"2024-04-09"},{"lineNumber":611,"author":{"gitId":"felixchanyy"},"content":"**Add House**     | \u003ca name\u003d\"add-house\"\u003e\u003c/a\u003e**Add House (Hdb):**`addHouse n/NAME type/HOUSING_TYPE street/STREET blk/BLOCK level/LEVEL unitNo/UNIT_NUMBER postal/POSTAL_CODE price/HOUSE_PRICE`\u003cbr\u003e\u003cbr\u003e**Add House (Landed)**: `addHouse n/NAME type/HOUSING_TYPE street/STREET unitNo/UNIT_NUMBER postal/POSTAL_CODE price/HOUSE_PRICE`\u003cbr\u003e\u003cbr\u003e**Add House (Condominium):**`addHouse n/NAME type/HOUSING_TYPE street/STREET [blk/BLOCK] level/LEVEL unitNo/UNIT_NUMBER postal/POSTAL_CODE price/HOUSE_PRICE`\u003cbr\u003e\u003cbr\u003e**e.g.,**\u003cbr\u003e **Add House (Hdb):** `addHouse n/John Doe type/Hdb street/Clementi Ave 2 blk/311 level/02 unitNo/25 postal/578578 price/10000`\u003cbr\u003e\u003cbr\u003e **Add House (Landed):** `addHouse n/John Doe type/Landed street/Clementi Ave 2 unitNo/25 postal/578578 price/10000`\u003cbr\u003e\u003cbr\u003e **Add House (Condominium):**`addHouse n/John Doe type/Condominium street/Clementi Ave 2 level/02 unitNo/25 postal/578578 price/10000`","lastModifiedDate":"2024-04-12"},{"lineNumber":612,"author":{"gitId":"felixchanyy"},"content":"**Delete House**  | `deleteHouse n/NAME type/HOUSING_TYPE street/STREET [blk/BLOCK] [level/LEVEL] unitNo/UNIT_NUMBER postal/POSTAL_CODE price/HOUSE_PRICE`\u003cbr\u003e\u003cbr\u003e**e.g.,**\u003cbr\u003e **Delete House (Hdb)** `deleteHouse n/John Doe type/Hdb street/Clementi Ave 2 blk/311 level/02 unitNo/25 postal/578578 price/10000`\u003cbr\u003e\u003cbr\u003e **Delete House (Landed):** `deleteHouse n/John Doe type/Landed street/Clementi Ave 2 unitNo/25 postal/578578 price/10000`\u003cbr\u003e\u003cbr\u003e **Delete House (Condominium):**`deleteHouse n/John Doe type/Condominium street/Clementi Ave 2 level/02 unitNo/25 postal/578578 price/10000` \u003cbr\u003e\u003cbr\u003e **Take note that the format of deleting a `House` is the same as adding a `House`. Please refer to [Add House](#add-house).**","lastModifiedDate":"2024-04-12"},{"lineNumber":613,"author":{"gitId":"felixchanyy"},"content":"**Match Buyer**   | `matchBuyer FULL_NAME`\u003cbr\u003e\u003cbr\u003e **e.g.,** `matchBuyer Alex Yeoh`","lastModifiedDate":"2024-04-12"},{"lineNumber":614,"author":{"gitId":"felixchanyy"},"content":"**Edit Seller**   | `editSeller INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS]`\u003cbr\u003e\u003cbr\u003e **e.g.,**`editSeller 1 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2024-04-12"},{"lineNumber":615,"author":{"gitId":"felixchanyy"},"content":"**Edit Buyer**    | `editBuyer INDEX [n/NAME] [p/PHONE] [e/EMAIL] [type/PREFERRED_HOUSING_TYPE] [budget/BUDGET]`\u003cbr\u003e\u003cbr\u003e **e.g.,**`editBuyer 1 p/88888888 e/buyer@example.com type/Landed budget/5000000`","lastModifiedDate":"2024-04-12"},{"lineNumber":616,"author":{"gitId":"-"},"content":"**List**          | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"KhoonSun47"},"content":"**Find**          | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e\u003cbr\u003e **e.g.,** `find James Jake`","lastModifiedDate":"2024-04-09"},{"lineNumber":618,"author":{"gitId":"KhoonSun47"},"content":"**Delete**        | `delete INDEX`\u003cbr\u003e\u003cbr\u003e **e.g.,** `delete 3`","lastModifiedDate":"2024-04-09"},{"lineNumber":619,"author":{"gitId":"zengzihui"},"content":"**Clear**         | `clear`","lastModifiedDate":"2024-04-04"},{"lineNumber":620,"author":{"gitId":"zengzihui"},"content":"**Exit**          | `exit`","lastModifiedDate":"2024-04-04"},{"lineNumber":621,"author":{"gitId":"-"},"content":"**Help**          | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"redcolorbicycle":80,"zengzihui":45,"felixchanyy":104,"KhoonSun47":71,"-":153,"lokidoki102":168}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003eEstateEase\u003c/a\u003e","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/index.html\" class\u003d\"nav-link\"\u003eHome\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/AY2324S2-CS2103-F09-1/tp\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#quick-start)","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#features)","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * [Appendix: Requirements]({{ baseUrl }}/DeveloperGuide.html#appendix-requirements)","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  * [Appendix: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* Tutorials","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Tracing code]({{ baseUrl }}/tutorials/TracingCode.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * [Adding a command]({{ baseUrl }}/tutorials/AddRemark.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  * [Removing Fields]({{ baseUrl }}/tutorials/RemovingFields.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"felixchanyy":1,"-":65,"lokidoki102":1}},{"path":"docs/diagrams/AddBuyerActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zengzihui"},"content":"@startuml","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"zengzihui"},"content":"skin rose","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"zengzihui"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"zengzihui"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"zengzihui"},"content":"start","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"zengzihui"},"content":":User executes addBuyer command;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"zengzihui"},"content":"if () then ([User provided correct parameters])","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"zengzihui"},"content":":Buyer\u0027s name, phone, email, budget and preferredHousingType are parsed;","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"zengzihui"},"content":"#palegreen:New buyer is returned;","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"zengzihui"},"content":"stop","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"zengzihui"},"content":"else([User failed to provide correct parameters])","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"zengzihui"},"content":"#pink:EstateEase displays an error;","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"zengzihui"},"content":"end","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"zengzihui"},"content":"@enduml","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"zengzihui":16}},{"path":"docs/diagrams/AddBuyerSequenceDiagram-Logic.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zengzihui"},"content":"@startuml","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"zengzihui"},"content":"!include style.puml","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"zengzihui"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"zengzihui"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"zengzihui"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"zengzihui"},"content":"participant \":AddBuyerCommandParser\" as AddBuyerCommandParser LOGIC_COLOR","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"zengzihui"},"content":"participant \"a:AddBuyerCommand\" as AddBuyerCommand LOGIC_COLOR","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"zengzihui"},"content":"participant \"commandResult:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"zengzihui"},"content":"end box","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"zengzihui"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"zengzihui"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"zengzihui"},"content":"end box","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"zengzihui"},"content":"[-\u003e LogicManager : execute(addBuyer n/James \\n\\","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"zengzihui"},"content":"p/98765432 e/james@gmail.com \\n\\","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"zengzihui"},"content":"budget/20000 type/HDB)","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"zengzihui"},"content":"activate LogicManager","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"zengzihui"},"content":"LogicManager -\u003e AddressBookParser : parse(addBuyer n/James \\n\\","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"zengzihui"},"content":"p/98765432 e/james@gmail.com \\n\\","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"zengzihui"},"content":"budget/20000 type/HDB)","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"zengzihui"},"content":"activate AddressBookParser","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"zengzihui"},"content":"create AddBuyerCommandParser","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"zengzihui"},"content":"AddressBookParser -\u003e AddBuyerCommandParser","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"zengzihui"},"content":"activate AddBuyerCommandParser","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"zengzihui"},"content":"AddBuyerCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"zengzihui"},"content":"deactivate AddBuyerCommandParser","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"zengzihui"},"content":"AddressBookParser -\u003e AddBuyerCommandParser : parse(n/James p/98765432 \\n\\","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"zengzihui"},"content":"e/james@gmail.com budget/20000 type/HDB)","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"zengzihui"},"content":"activate AddBuyerCommandParser","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"zengzihui"},"content":"create AddBuyerCommand","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"zengzihui"},"content":"AddBuyerCommandParser -\u003e AddBuyerCommand","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"zengzihui"},"content":"activate AddBuyerCommand","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"zengzihui"},"content":"AddBuyerCommand --\u003e AddBuyerCommandParser","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"zengzihui"},"content":"deactivate AddBuyerCommand","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"zengzihui"},"content":"AddBuyerCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"zengzihui"},"content":"deactivate AddBuyerCommandParser","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"zengzihui"},"content":"AddBuyerCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"zengzihui"},"content":"destroy AddBuyerCommandParser","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"zengzihui"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"zengzihui"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"zengzihui"},"content":"LogicManager -\u003e AddBuyerCommand : execute()","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"zengzihui"},"content":"activate AddBuyerCommand","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"zengzihui"},"content":"AddBuyerCommand -\u003e Model : addBuyer(buyer)","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"zengzihui"},"content":"activate Model","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"zengzihui"},"content":"Model --\u003e AddBuyerCommand","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"zengzihui"},"content":"deactivate Model","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"zengzihui"},"content":"create CommandResult","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"zengzihui"},"content":"AddBuyerCommand -\u003e CommandResult","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"zengzihui"},"content":"activate CommandResult","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"zengzihui"},"content":"CommandResult --\u003e AddBuyerCommand","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"zengzihui"},"content":"deactivate CommandResult","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"zengzihui"},"content":"AddBuyerCommand --\u003e LogicManager : commandResult","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"zengzihui"},"content":"deactivate AddBuyerCommand","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"zengzihui"},"content":"[\u003c-- LogicManager : commandResult","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"zengzihui"},"content":"deactivate LogicManager","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"zengzihui"},"content":"@enduml","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"zengzihui":76}},{"path":"docs/diagrams/AddHouseSequenceDiagram-Logic.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"@startuml","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"!include style.puml","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"participant \":AddHouseCommandParser\" as AddHouseCommandParser LOGIC_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"participant \"a:AddHouseCommand\" as AddHouseCommand LOGIC_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"end box","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"end box","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"[-\u003e LogicManager : execute(\"addHouse n/John Doe type/Condominium \\","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"street/Clementi Ave 2 blk/N/A level/02 unitNo/25 postal/578578 price/99999 \")","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"redcolorbicycle"},"content":"activate LogicManager","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"redcolorbicycle"},"content":"LogicManager -\u003e AddressBookParser : parse(...)","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"activate AddressBookParser","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"create AddHouseCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"redcolorbicycle"},"content":"AddressBookParser -\u003e AddHouseCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"redcolorbicycle"},"content":"activate AddHouseCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":"AddHouseCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"redcolorbicycle"},"content":"deactivate AddHouseCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"redcolorbicycle"},"content":"AddressBookParser -\u003e AddHouseCommandParser : parse(...)","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"redcolorbicycle"},"content":"activate AddHouseCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"redcolorbicycle"},"content":"create AddHouseCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"redcolorbicycle"},"content":"AddHouseCommandParser -\u003e AddHouseCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"redcolorbicycle"},"content":"activate AddHouseCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"redcolorbicycle"},"content":"AddHouseCommand --\u003e AddHouseCommandParser : a","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"redcolorbicycle"},"content":"deactivate AddHouseCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"redcolorbicycle"},"content":"AddHouseCommandParser --\u003e AddressBookParser: a","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"redcolorbicycle"},"content":"deactivate AddHouseCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"redcolorbicycle"},"content":"AddHouseCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"redcolorbicycle"},"content":"destroy AddHouseCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"redcolorbicycle"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"redcolorbicycle"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"redcolorbicycle"},"content":"LogicManager -\u003e AddHouseCommand : execute()","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"redcolorbicycle"},"content":"activate AddHouseCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"redcolorbicycle"},"content":"AddHouseCommand -\u003e Model : addHouse(house)","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"redcolorbicycle"},"content":"activate Model","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"redcolorbicycle"},"content":"Model --\u003e AddHouseCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"redcolorbicycle"},"content":"deactivate Model","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"redcolorbicycle"},"content":"create CommandResult","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"redcolorbicycle"},"content":"AddHouseCommand -\u003e CommandResult","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"redcolorbicycle"},"content":"activate CommandResult","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"redcolorbicycle"},"content":"CommandResult --\u003e AddHouseCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"redcolorbicycle"},"content":"deactivate CommandResult","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"redcolorbicycle"},"content":"AddHouseCommand --\u003e LogicManager : result","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"redcolorbicycle"},"content":"deactivate AddHouseCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"redcolorbicycle"},"content":"[\u003c--LogicManager : result","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"redcolorbicycle"},"content":"deactivate LogicManager","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"redcolorbicycle"},"content":"@enduml","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"redcolorbicycle":70}},{"path":"docs/diagrams/AddSellerActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"@startuml","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"skin rose","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"start","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":":User enters add seller command;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"if () then ([Seller and House Details Missing or Invalid])","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"    :Parse exception thrown;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"    stop","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"else ([Details Valid])","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"    :Displays the success message;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"endif","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"stop","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"@enduml","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"redcolorbicycle":1,"KhoonSun47":15}},{"path":"docs/diagrams/AddSellerSequenceDiagram-Logic.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"@startuml","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"!include style.puml","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"participant \":AddSellerCommandParser\" as AddSellerCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"participant \":AddHouseCommandParser\" as AddHouseCommandParser LOGIC_COLOR","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"participant \"a:AddSellerCommand\" as AddSellerCommand LOGIC_COLOR","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"participant \"commandResult:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"end box","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"end box","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"[-\u003e LogicManager : execute(addSeller n/John Doe p/98765432 \\n\\","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"e/johnd@example.com type/Hdb street/Clementi Ave 2 blk/311 \\n\\","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"level/02 unitNo/25 postal/578578 price/999999999)","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"activate LogicManager","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"LogicManager -\u003e AddressBookParser : parse(addSeller n/John Doe p/98765432 \\n\\","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"e/johnd@example.com type/Hdb street/Clementi Ave 2 blk/311 \\n\\","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"level/02 unitNo/25 postal/578578 price/999999999)","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"create AddSellerCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"AddressBookParser -\u003e AddSellerCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"activate AddSellerCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"AddSellerCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"deactivate AddSellerCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"AddressBookParser -\u003e AddSellerCommandParser : parse(n/John Doe p/98765432 \\n\\","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"e/johnd@example.com type/Hdb street/Clementi Ave 2 blk/311 \\n\\","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"level/02 unitNo/25 postal/578578 price/999999999)","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"activate AddSellerCommandParser","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"AddSellerCommandParser -\u003e AddHouseCommandParser : checkValidity(...)","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"activate AddHouseCommandParser","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"AddHouseCommandParser --\u003e AddSellerCommandParser","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"deactivate AddHouseCommandParser","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"create AddSellerCommand","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"AddSellerCommandParser -\u003e AddSellerCommand","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"activate AddSellerCommand","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"AddSellerCommand --\u003e AddSellerCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"deactivate AddSellerCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"AddSellerCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"deactivate AddSellerCommandParser","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"AddSellerCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"destroy AddSellerCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"LogicManager -\u003e AddSellerCommand : execute()","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"activate AddSellerCommand","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"AddSellerCommand -\u003e Model : addSeller(seller)","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"activate Model","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"Model --\u003e AddSellerCommand","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"deactivate Model","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"create CommandResult","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"KhoonSun47"},"content":"AddSellerCommand -\u003e CommandResult","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"KhoonSun47"},"content":"activate CommandResult","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"KhoonSun47"},"content":"CommandResult --\u003e AddSellerCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"KhoonSun47"},"content":"deactivate CommandResult","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"KhoonSun47"},"content":"AddSellerCommand --\u003e LogicManager : commandResult","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"KhoonSun47"},"content":"deactivate AddSellerCommand","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"KhoonSun47"},"content":"[\u003c-- LogicManager : commandResult","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"KhoonSun47"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"KhoonSun47"},"content":"@enduml","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"KhoonSun47":82}},{"path":"docs/diagrams/DeleteHouseSequenceDiagram-Logic.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"@startuml","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"!include style.puml","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"participant \":DeleteHouseCommandParser\" as DeleteHouseCommandParser LOGIC_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"participant \"a:DeleteHouseCommand\" as DeleteHouseCommand LOGIC_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"end box","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"end box","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"[-\u003e LogicManager : execute(\"deleteHouse n/John Doe type/Condominium \\","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"street/Clementi Ave 2 blk/N/A level/02 unitNo/25 postal/578578 price/99999 \")","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"redcolorbicycle"},"content":"activate LogicManager","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"redcolorbicycle"},"content":"LogicManager -\u003e AddressBookParser : parse(...)","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"activate AddressBookParser","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"create DeleteHouseCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"redcolorbicycle"},"content":"AddressBookParser -\u003e DeleteHouseCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"redcolorbicycle"},"content":"activate DeleteHouseCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":"DeleteHouseCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"redcolorbicycle"},"content":"deactivate DeleteHouseCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"redcolorbicycle"},"content":"AddressBookParser -\u003e DeleteHouseCommandParser : parse(...)","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"redcolorbicycle"},"content":"activate DeleteHouseCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"redcolorbicycle"},"content":"create DeleteHouseCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"redcolorbicycle"},"content":"DeleteHouseCommandParser -\u003e DeleteHouseCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"redcolorbicycle"},"content":"activate DeleteHouseCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"redcolorbicycle"},"content":"DeleteHouseCommand --\u003e DeleteHouseCommandParser : a","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"redcolorbicycle"},"content":"deactivate DeleteHouseCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"redcolorbicycle"},"content":"DeleteHouseCommandParser --\u003e AddressBookParser: a","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"redcolorbicycle"},"content":"deactivate DeleteHouseCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"redcolorbicycle"},"content":"DeleteHouseCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"redcolorbicycle"},"content":"destroy DeleteHouseCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"redcolorbicycle"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"redcolorbicycle"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"redcolorbicycle"},"content":"LogicManager -\u003e DeleteHouseCommand : execute()","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"redcolorbicycle"},"content":"activate DeleteHouseCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"redcolorbicycle"},"content":"DeleteHouseCommand -\u003e Model : deleteHouse(house)","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"redcolorbicycle"},"content":"activate Model","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"redcolorbicycle"},"content":"Model --\u003e DeleteHouseCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"redcolorbicycle"},"content":"deactivate Model","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"redcolorbicycle"},"content":"create CommandResult","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"redcolorbicycle"},"content":"DeleteHouseCommand -\u003e CommandResult","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"redcolorbicycle"},"content":"activate CommandResult","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"redcolorbicycle"},"content":"CommandResult --\u003e DeleteHouseCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"redcolorbicycle"},"content":"deactivate CommandResult","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"redcolorbicycle"},"content":"DeleteHouseCommand --\u003e LogicManager : result","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"redcolorbicycle"},"content":"deactivate DeleteHouseCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"redcolorbicycle"},"content":"[\u003c--LogicManager : result","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"redcolorbicycle"},"content":"deactivate LogicManager","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"redcolorbicycle"},"content":"@enduml","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"redcolorbicycle":70}},{"path":"docs/diagrams/EditBuyerSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"@startuml","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"!include style.puml","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"skinparam participantFontSize 20","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"skinparam arrowFontSize 18","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"participant \":EditBuyerCommandParser\" as EditBuyerCommandParser LOGIC_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"participant \":EditBuyerDescriptor\" as EditBuyerDescriptor LOGIC_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"participant \"a:EditBuyerCommand\" as EditBuyerCommand LOGIC_COLOR","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"participant \"new:Buyer\" as EditedBuyer LOGIC_COLOR","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"participant \"b:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"end box","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"end box","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"[-\u003e LogicManager : execute(\"edit 1 n/John Doe\")","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"activate LogicManager","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"edit 1 n/John Doe\")","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"activate AddressBookParser","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"create EditBuyerCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"AddressBookParser -\u003e EditBuyerCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"activate EditBuyerCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"EditBuyerCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"deactivate EditBuyerCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"AddressBookParser -\u003e EditBuyerCommandParser : parse(\"1 n/John Doe\")","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"activate EditBuyerCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"create EditBuyerDescriptor","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"EditBuyerCommandParser -\u003e EditBuyerDescriptor","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"activate EditBuyerDescriptor","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"EditBuyerDescriptor --\u003e EditBuyerCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"deactivate EditBuyerDescriptor","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"create EditBuyerCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"EditBuyerCommandParser -\u003e EditBuyerCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"activate EditBuyerCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"EditBuyerCommand --\u003e EditBuyerCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"deactivate EditBuyerCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"EditBuyerCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"deactivate EditBuyerCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"lokidoki102"},"content":"LogicManager -\u003e EditBuyerCommand : execute(model)","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"lokidoki102"},"content":"activate EditBuyerCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"lokidoki102"},"content":"create EditedBuyer","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"lokidoki102"},"content":"EditBuyerCommand -\u003e EditedBuyer","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"lokidoki102"},"content":"activate EditedBuyer","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"lokidoki102"},"content":"EditedBuyer --\u003e EditBuyerCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"lokidoki102"},"content":"deactivate EditedBuyer","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"lokidoki102"},"content":"EditBuyerCommand -\u003e Model : setPerson(old, new)","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"lokidoki102"},"content":"activate Model","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"lokidoki102"},"content":"Model --\u003e EditBuyerCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"lokidoki102"},"content":"deactivate Model","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"lokidoki102"},"content":"create CommandResult","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"lokidoki102"},"content":"EditBuyerCommand -\u003e CommandResult","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"lokidoki102"},"content":"activate CommandResult","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"lokidoki102"},"content":"CommandResult --\u003e EditBuyerCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"lokidoki102"},"content":"deactivate CommandResult","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"lokidoki102"},"content":"EditBuyerCommand --\u003e LogicManager : b","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"lokidoki102"},"content":"deactivate EditBuyerCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"lokidoki102"},"content":"[\u003c--LogicManager : b","lastModifiedDate":"2024-04-04"},{"lineNumber":83,"author":{"gitId":"lokidoki102"},"content":"deactivate LogicManager","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"lokidoki102"},"content":"@enduml","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"lokidoki102":84}},{"path":"docs/diagrams/MatchBuyerActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"@startuml","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"felixchanyy"},"content":"skin rose","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"felixchanyy"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"felixchanyy"},"content":"start","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":":User executes matchBuyer command;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"felixchanyy"},"content":":Parameter is parsed by MatchBuyerCommandParser;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"felixchanyy"},"content":"if() then ([parameter is invalid])","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"felixchanyy"},"content":"    :Display parse error message;","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":"else([parameter is valid])","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"felixchanyy"},"content":"    :Create FullNameEqualsKeywordPredicate with keyword;","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"    :MatchBuyerCommand is executed;","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":"    :Model update filtered seller list with predicate;","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"    :Display list of sellers with matching houses;","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"endif","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"stop","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"@enduml","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"felixchanyy":20}},{"path":"docs/diagrams/MatchBuyerSequenceDiagram-Logic.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"@startuml","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"felixchanyy"},"content":"!include style.puml","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"felixchanyy"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"felixchanyy"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":"participant \":MatchBuyerCommandParser\" as MatchBuyerCommandParser LOGIC_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"felixchanyy"},"content":"participant \"a:MatchBuyerCommand\" as MatchBuyerCommand LOGIC_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"felixchanyy"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"felixchanyy"},"content":"end box","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"felixchanyy"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":"end box","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"[-\u003e LogicManager : execute(\"matchBuyer Alice Lim\")","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"activate LogicManager","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":"LogicManager -\u003e AddressBookParser : parse(\"matchBuyer Alice Lim\")","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"activate AddressBookParser","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"felixchanyy"},"content":"create MatchBuyerCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"felixchanyy"},"content":"AddressBookParser -\u003e MatchBuyerCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"felixchanyy"},"content":"activate MatchBuyerCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"felixchanyy"},"content":"MatchBuyerCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"felixchanyy"},"content":"deactivate MatchBuyerCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"felixchanyy"},"content":"AddressBookParser -\u003e MatchBuyerCommandParser : parse(\"Alice Lim\")","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"felixchanyy"},"content":"activate MatchBuyerCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"felixchanyy"},"content":"create MatchBuyerCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":"MatchBuyerCommandParser -\u003e MatchBuyerCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"felixchanyy"},"content":"activate MatchBuyerCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"felixchanyy"},"content":"MatchBuyerCommand --\u003e MatchBuyerCommandParser : a","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"felixchanyy"},"content":"deactivate MatchBuyerCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"felixchanyy"},"content":"MatchBuyerCommandParser --\u003e AddressBookParser: a","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"felixchanyy"},"content":"deactivate MatchBuyerCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"felixchanyy"},"content":"MatchBuyerCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"felixchanyy"},"content":"destroy MatchBuyerCommandParser","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"felixchanyy"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"felixchanyy"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"felixchanyy"},"content":"LogicManager -\u003e MatchBuyerCommand : execute()","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"felixchanyy"},"content":"activate MatchBuyerCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"felixchanyy"},"content":"MatchBuyerCommand -\u003e Model : updateFilteredSellerList(predicate)","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"felixchanyy"},"content":"activate Model","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"felixchanyy"},"content":"Model --\u003e MatchBuyerCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"felixchanyy"},"content":"deactivate Model","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"felixchanyy"},"content":"create CommandResult","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"felixchanyy"},"content":"MatchBuyerCommand -\u003e CommandResult","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"felixchanyy"},"content":"activate CommandResult","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"felixchanyy"},"content":"CommandResult --\u003e MatchBuyerCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"felixchanyy"},"content":"deactivate CommandResult","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"felixchanyy"},"content":"MatchBuyerCommand --\u003e LogicManager : result","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"felixchanyy"},"content":"deactivate MatchBuyerCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"felixchanyy"},"content":"[\u003c--LogicManager : result","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"felixchanyy"},"content":"deactivate LogicManager","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"felixchanyy"},"content":"@enduml","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"felixchanyy":69}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"Class PostalCode","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"\u0027@@author lokidoki102","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"Class Street","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"felixchanyy"},"content":"Class Level","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"Class Block","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"\u0027@@author","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"Class UnitNumber","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"redcolorbicycle"},"content":"Class Buyer extends Person","lastModifiedDate":"2024-03-22"},{"lineNumber":29,"author":{"gitId":"redcolorbicycle"},"content":"Class Seller extends Person","lastModifiedDate":"2024-03-22"},{"lineNumber":30,"author":{"gitId":"zengzihui"},"content":"Class House","lastModifiedDate":"2024-03-22"},{"lineNumber":31,"author":{"gitId":"felixchanyy"},"content":"Class Condo implements House","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"redcolorbicycle"},"content":"Class Hdb implements House","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":"Class Landed implements House","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"felixchanyy"},"content":"Class Budget","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"Class HousingType","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"House *--\u003e PostalCode","lastModifiedDate":"2024-03-22"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"House *--\u003e UnitNumber","lastModifiedDate":"2024-03-22"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"House *--\u003e Street","lastModifiedDate":"2024-03-22"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"House *--\u003e HousingType","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"Seller *--\u003e \"0..*\" House : owns","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"Buyer *--\u003e \"*\" House : match","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"zengzihui"},"content":"Buyer *--\u003e Budget","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"redcolorbicycle":5,"zengzihui":3,"felixchanyy":4,"KhoonSun47":7,"-":51,"lokidoki102":4}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage as StoragePackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"Class JsonAdaptedBuyer","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"Class JsonAdaptedSeller","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"Class JsonAdaptedHouse","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedBuyer","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedSeller","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"JsonAdaptedSeller --\u003e \"*\" JsonAdaptedHouse","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"KhoonSun47":6,"-":43}},{"path":"docs/diagrams/ViewSequenceDiagram-Logic.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"@startuml","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"felixchanyy"},"content":"!include style.puml","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"felixchanyy"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"felixchanyy"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":"participant \":ViewCommandParser\" as ViewCommandParser LOGIC_COLOR","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"felixchanyy"},"content":"participant \"a:ViewCommand\" as ViewCommand LOGIC_COLOR","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"felixchanyy"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"felixchanyy"},"content":"end box","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"felixchanyy"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":"end box","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"[-\u003e LogicManager : execute(\"view 1\")","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"activate LogicManager","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":"LogicManager -\u003e AddressBookParser : parse(\"view 1\")","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"activate AddressBookParser","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"felixchanyy"},"content":"create ViewCommandParser","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"felixchanyy"},"content":"AddressBookParser -\u003e ViewCommandParser","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"felixchanyy"},"content":"activate ViewCommandParser","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"felixchanyy"},"content":"ViewCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"felixchanyy"},"content":"deactivate ViewCommandParser","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"felixchanyy"},"content":"AddressBookParser -\u003e ViewCommandParser : parse(\"1\")","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"felixchanyy"},"content":"activate ViewCommandParser","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"felixchanyy"},"content":"create ViewCommand","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":"ViewCommandParser -\u003e ViewCommand","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"felixchanyy"},"content":"activate ViewCommand","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"felixchanyy"},"content":"ViewCommand --\u003e ViewCommandParser : a","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"felixchanyy"},"content":"deactivate ViewCommand","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"felixchanyy"},"content":"ViewCommandParser --\u003e AddressBookParser: a","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"felixchanyy"},"content":"deactivate ViewCommandParser","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"felixchanyy"},"content":"ViewCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"felixchanyy"},"content":"destroy ViewCommandParser","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"felixchanyy"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"felixchanyy"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"felixchanyy"},"content":"LogicManager -\u003e ViewCommand : execute()","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"felixchanyy"},"content":"activate ViewCommand","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"felixchanyy"},"content":"ViewCommand -\u003e Model : showPerson(personToView)","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"felixchanyy"},"content":"activate Model","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"felixchanyy"},"content":"Model --\u003e ViewCommand","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"felixchanyy"},"content":"deactivate Model","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"felixchanyy"},"content":"create CommandResult","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"felixchanyy"},"content":"ViewCommand -\u003e CommandResult","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"felixchanyy"},"content":"activate CommandResult","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"felixchanyy"},"content":"CommandResult --\u003e ViewCommand","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"felixchanyy"},"content":"deactivate CommandResult","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"felixchanyy"},"content":"ViewCommand --\u003e LogicManager : result","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"felixchanyy"},"content":"deactivate ViewCommand","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"felixchanyy"},"content":"[\u003c--LogicManager : result","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"felixchanyy"},"content":"deactivate LogicManager","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"felixchanyy"},"content":"@enduml","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"felixchanyy":69}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"# EstateEase","lastModifiedDate":"2024-04-08"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103-F09-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions) [![codecov](https://codecov.io/gh/AY2324S2-CS2103-F09-1/tp/graph/badge.svg?token\u003dNB86I9H23Z)](https://codecov.io/gh/AY2324S2-CS2103-F09-1/tp)","lastModifiedDate":"2024-04-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"![Ui](images/estate_ease_ui.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":"EstateEase is an **advanced desktop application designed to streamline residential property management for real estate listing agents in Singapore.** Engineered for efficiency, it combines the precision of a Command Line Interface (CLI) with a Graphical User Interface (GUI). For those proficient in typing, EstateEase delivers administrative task management at a speed surpassing that of conventional GUI-based applications.","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"* If you are interested in using **EstateEase**, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2024-04-08"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"* If you are interested about developing **EstateEase**, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2024-04-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"KhoonSun47":5,"felixchanyy":1,"-":13}},{"path":"docs/team/johndoe.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"John Doe\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"felixchanyy"},"content":"### Project: EstateEase","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"felixchanyy"},"content":"EstateEase is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"felixchanyy":2,"-":44}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Adding a command","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"felixchanyy"},"content":" * Changes the remark of an existing person in EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/add-remark/RemarkClass.puml\" alt\u003d\"The relationship between RemarkCommand and Command\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/add-remark/ParserClass.puml\" alt\u003d\"The relationship between Parser and RemarkCommandParser\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2023-09-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":236,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-01-02"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2023-09-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2023-09-12"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":350,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":379,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":402,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"felixchanyy":1,"-":401}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, true);","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"zengzihui"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing EstateEase ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":67,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"zengzihui"},"content":"        model.setUi(ui);","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"felixchanyy"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s EstateEase and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":73,"author":{"gitId":"felixchanyy"},"content":"     * The data from the sample EstateEase will be used instead if {@code storage}\u0027s EstateEase is not found,","lastModifiedDate":"2024-04-12"},{"lineNumber":74,"author":{"gitId":"felixchanyy"},"content":"     * or an empty EstateEase will be used instead if errors occur when reading {@code storage}\u0027s EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":85,"author":{"gitId":"zengzihui"},"content":"                        + \" populated with a sample EstateEase.\");","lastModifiedDate":"2024-04-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":90,"author":{"gitId":"zengzihui"},"content":"                    + \" Will be starting with an empty EstateEase.\");","lastModifiedDate":"2024-04-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"zengzihui"},"content":"        logger.info(\"Starting EstateEase \" + MainApp.VERSION);","lastModifiedDate":"2024-04-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"zengzihui"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping EstateEase ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2024-04-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zengzihui":7,"felixchanyy":3,"-":176,"lokidoki102":1}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.person.Seller;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"zengzihui"},"content":"    /** Returns the person to display the details */","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"zengzihui"},"content":"    Person getPersonToDisplay();","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"zengzihui"},"content":"    /** Returns the filtered list of sellers */","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"zengzihui"},"content":"    ObservableList\u003cSeller\u003e getFilteredSellerList();","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"felixchanyy"},"content":"     * Returns the user prefs\u0027 EstateEase file path.","lastModifiedDate":"2024-04-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"zengzihui":7,"felixchanyy":1,"-":49}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.person.Seller;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":75,"author":{"gitId":"zengzihui"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"zengzihui"},"content":"    public Person getPersonToDisplay() {","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"zengzihui"},"content":"        return model.getPerson();","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"zengzihui"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"zengzihui"},"content":"    public ObservableList\u003cSeller\u003e getFilteredSellerList() {","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"zengzihui"},"content":"        return model.getFilteredSellerList();","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"zengzihui":11,"-":88}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Buyer;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":"    public static final String MESSAGE_HOUSE_LISTED_OVERVIEW \u003d \"%1$d house(s) listed!\";","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"felixchanyy"},"content":"    public static final String MESSAGE_BUYER_NOT_FOUND \u003d \"The specified buyer was not found.\";","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"felixchanyy"},"content":"    public static final String MESSAGE_NOT_A_BUYER \u003d \"The specified person is not a buyer.\";","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"     * Formats the {@code person} for display to the user, differentiating between Buyer and Seller.","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"                .append(\"; Phone\u003d \")","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"                .append(\"; Email\u003d \")","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"                .append(person.getEmail());","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"        if (person instanceof Buyer) {","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"            appendBuyerDetails((Buyer) person, builder);","lastModifiedDate":"2024-04-12"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2024-04-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"    private static void appendBuyerDetails(Buyer buyer, StringBuilder builder) {","lastModifiedDate":"2024-04-12"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"        builder.append(\"; Preferred Housing Type\u003d \")","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"                .append(buyer.getPreferredHousingType())","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"                .append(\"; Budget\u003d \")","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"                .append(buyer.getBudget());","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KhoonSun47":15,"felixchanyy":3,"-":41,"lokidoki102":1}},{"path":"src/main/java/seedu/address/logic/commands/AddBuyerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"felixchanyy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BUDGET;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOUSING_TYPE;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.State;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":" * Adds a buyer to the EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"public class AddBuyerCommand extends Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"zengzihui"},"content":"    public static final String COMMAND_WORD \u003d \"addBuyer\";","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"zengzihui"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a buyer to EstateEase. \"","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"felixchanyy"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_BUDGET + \"BUDGET \"","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"            + PREFIX_HOUSING_TYPE + \"HOUSING_TYPE\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"felixchanyy"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_BUDGET + \"99999900 \"","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"            + PREFIX_HOUSING_TYPE + \"Hdb\";","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"felixchanyy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New buyer added: %1$s\";","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"    public static final String MESSAGE_DUPLICATE_BUYER \u003d \"This person already exists in EstateEase\";","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"felixchanyy"},"content":"    private final Person buyerToAdd;","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"felixchanyy"},"content":"     * Creates an AddBuyerCommand to add the specified buyer.","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"felixchanyy"},"content":"     * @param person The buyer to be added.","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"felixchanyy"},"content":"    public AddBuyerCommand(Person person) {","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"felixchanyy"},"content":"        requireNonNull(person);","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"zengzihui"},"content":"        this.buyerToAdd \u003d person;","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"felixchanyy"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"felixchanyy"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"felixchanyy"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"felixchanyy"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"felixchanyy"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"felixchanyy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"felixchanyy"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"felixchanyy"},"content":"        if (model.hasPerson(buyerToAdd)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"zengzihui"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_BUYER);","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"zengzihui"},"content":"        model.setState(State.PERSON_LIST);","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"felixchanyy"},"content":"        model.addPerson(buyerToAdd);","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"felixchanyy"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(buyerToAdd)));","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"felixchanyy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"felixchanyy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"felixchanyy"},"content":"            return true;","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"felixchanyy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"felixchanyy"},"content":"        if (!(other instanceof AddBuyerCommand)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"felixchanyy"},"content":"            return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"felixchanyy"},"content":"        AddBuyerCommand otherAddCommand \u003d (AddBuyerCommand) other;","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"felixchanyy"},"content":"        return buyerToAdd.equals(otherAddCommand.buyerToAdd);","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"felixchanyy"},"content":"    public String toString() {","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"felixchanyy"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"felixchanyy"},"content":"                .add(\"buyerToAdd\", buyerToAdd)","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"felixchanyy"},"content":"                .toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"felixchanyy"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"redcolorbicycle":3,"zengzihui":7,"felixchanyy":78,"KhoonSun47":1,"lokidoki102":2}},{"path":"src/main/java/seedu/address/logic/commands/AddHouseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BLOCK;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOUSING_TYPE;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LEVEL;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSTALCODE;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STREET;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UNITNUMBER;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.State;","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.House;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.person.Seller;","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"redcolorbicycle"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"redcolorbicycle"},"content":" * Adds a house to the seller.","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"redcolorbicycle"},"content":"public class AddHouseCommand extends Command {","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"redcolorbicycle"},"content":"    public static final String COMMAND_WORD \u003d \"addHouse\";","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"redcolorbicycle"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a house to a Seller. Indicate N/A for \"","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"redcolorbicycle"},"content":"            + \"nonexistent fields. \"","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"redcolorbicycle"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"redcolorbicycle"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"redcolorbicycle"},"content":"            + PREFIX_HOUSING_TYPE + \"HOUSING_TYPE \"","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"redcolorbicycle"},"content":"            + PREFIX_STREET + \"STREET \"","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"redcolorbicycle"},"content":"            + PREFIX_BLOCK + \"BLOCK \"","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"redcolorbicycle"},"content":"            + PREFIX_LEVEL + \"LEVEL \"","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"redcolorbicycle"},"content":"            + PREFIX_UNITNUMBER + \"UNIT NUMBER \"","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"redcolorbicycle"},"content":"            + PREFIX_POSTALCODE + \"POSTAL CODE \"","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"redcolorbicycle"},"content":"            + PREFIX_PRICE + \"PRICE\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"redcolorbicycle"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"redcolorbicycle"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"redcolorbicycle"},"content":"            + PREFIX_HOUSING_TYPE + \"Condominium \"","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"redcolorbicycle"},"content":"            + PREFIX_STREET + \"Clementi Ave 2 \"","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"redcolorbicycle"},"content":"            + PREFIX_BLOCK + \"N/A \"","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"redcolorbicycle"},"content":"            + PREFIX_LEVEL + \"02 \"","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"redcolorbicycle"},"content":"            + PREFIX_UNITNUMBER + \"25 \"","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"redcolorbicycle"},"content":"            + PREFIX_POSTALCODE + \"578578 \"","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"redcolorbicycle"},"content":"            + PREFIX_PRICE + \"99999 \";","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"redcolorbicycle"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New house added!\";","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"redcolorbicycle"},"content":"    public static final String MESSAGE_DUPLICATE_HOUSE \u003d \"This house already exists in EstateEase\";","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"redcolorbicycle"},"content":"    public static final String MESSAGE_INVALID_SELLER \u003d \"This Seller does not exist in EstateEase\";","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"redcolorbicycle"},"content":"    private final House houseToAdd;","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"redcolorbicycle"},"content":"    private final Name nameToCheck;","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"redcolorbicycle"},"content":"    //@@author redcolorbicycle","lastModifiedDate":"2024-04-12"},{"lineNumber":63,"author":{"gitId":"redcolorbicycle"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(AddHouseCommand.class);","lastModifiedDate":"2024-04-12"},{"lineNumber":64,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"redcolorbicycle"},"content":"     * Creates an AddHouseCommand to add the specified {@code house}","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"redcolorbicycle"},"content":"    public AddHouseCommand(House house, Name name) {","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"redcolorbicycle"},"content":"        requireNonNull(house);","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"redcolorbicycle"},"content":"        requireNonNull(name);","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"redcolorbicycle"},"content":"        houseToAdd \u003d house;","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"redcolorbicycle"},"content":"        nameToCheck \u003d name;","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"redcolorbicycle"},"content":"    //@@author redcolorbicycle","lastModifiedDate":"2024-04-12"},{"lineNumber":74,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":75,"author":{"gitId":"redcolorbicycle"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2024-04-01"},{"lineNumber":76,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":77,"author":{"gitId":"redcolorbicycle"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2024-04-01"},{"lineNumber":78,"author":{"gitId":"redcolorbicycle"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"redcolorbicycle"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":82,"author":{"gitId":"redcolorbicycle"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-04-01"},{"lineNumber":83,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":84,"author":{"gitId":"redcolorbicycle"},"content":"        logger.info(\"----------------[ADD HOUSE] executing addHouse command\");","lastModifiedDate":"2024-04-12"},{"lineNumber":85,"author":{"gitId":"redcolorbicycle"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":87,"author":{"gitId":"redcolorbicycle"},"content":"        if (model.hasHouse(houseToAdd)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":88,"author":{"gitId":"redcolorbicycle"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_HOUSE);","lastModifiedDate":"2024-04-01"},{"lineNumber":89,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":90,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":91,"author":{"gitId":"redcolorbicycle"},"content":"        if (!model.hasPerson(nameToCheck)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":92,"author":{"gitId":"redcolorbicycle"},"content":"            throw new CommandException(MESSAGE_INVALID_SELLER);","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":94,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":95,"author":{"gitId":"redcolorbicycle"},"content":"        Person sellerToAddTo \u003d model.findPersonByName(nameToCheck);","lastModifiedDate":"2024-04-01"},{"lineNumber":96,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":97,"author":{"gitId":"redcolorbicycle"},"content":"        if (!(sellerToAddTo instanceof Seller)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":98,"author":{"gitId":"redcolorbicycle"},"content":"            throw new CommandException(MESSAGE_INVALID_SELLER);","lastModifiedDate":"2024-04-01"},{"lineNumber":99,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":100,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":101,"author":{"gitId":"redcolorbicycle"},"content":"        try {","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"redcolorbicycle"},"content":"            model.addHouse(houseToAdd, sellerToAddTo);","lastModifiedDate":"2024-04-01"},{"lineNumber":103,"author":{"gitId":"redcolorbicycle"},"content":"            model.setState(State.PERSON_LIST);","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"redcolorbicycle"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"redcolorbicycle"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_HOUSE);","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"redcolorbicycle"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS));","lastModifiedDate":"2024-04-01"},{"lineNumber":108,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":109,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":110,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":111,"author":{"gitId":"redcolorbicycle"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-01"},{"lineNumber":112,"author":{"gitId":"redcolorbicycle"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-01"},{"lineNumber":113,"author":{"gitId":"redcolorbicycle"},"content":"            return true;","lastModifiedDate":"2024-04-01"},{"lineNumber":114,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":115,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":116,"author":{"gitId":"redcolorbicycle"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-01"},{"lineNumber":117,"author":{"gitId":"redcolorbicycle"},"content":"        if (!(other instanceof AddHouseCommand)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":118,"author":{"gitId":"redcolorbicycle"},"content":"            return false;","lastModifiedDate":"2024-04-01"},{"lineNumber":119,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":120,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":121,"author":{"gitId":"redcolorbicycle"},"content":"        AddHouseCommand otherAddCommand \u003d (AddHouseCommand) other;","lastModifiedDate":"2024-04-01"},{"lineNumber":122,"author":{"gitId":"redcolorbicycle"},"content":"        return houseToAdd.equals(otherAddCommand.houseToAdd);","lastModifiedDate":"2024-04-01"},{"lineNumber":123,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":124,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":125,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":126,"author":{"gitId":"redcolorbicycle"},"content":"    public String toString() {","lastModifiedDate":"2024-04-01"},{"lineNumber":127,"author":{"gitId":"redcolorbicycle"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-04-01"},{"lineNumber":128,"author":{"gitId":"redcolorbicycle"},"content":"                .add(\"houseToAdd\", houseToAdd)","lastModifiedDate":"2024-04-01"},{"lineNumber":129,"author":{"gitId":"redcolorbicycle"},"content":"                .toString();","lastModifiedDate":"2024-04-01"},{"lineNumber":130,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":131,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"redcolorbicycle":127,"zengzihui":1,"felixchanyy":3}},{"path":"src/main/java/seedu/address/logic/commands/AddSellerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"felixchanyy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.commands.AddHouseCommand.MESSAGE_DUPLICATE_HOUSE;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BLOCK;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOUSING_TYPE;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LEVEL;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSTALCODE;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STREET;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UNITNUMBER;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.State;","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.House;","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.person.Seller;","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"felixchanyy"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"felixchanyy"},"content":" * Adds a seller to EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":27,"author":{"gitId":"felixchanyy"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"felixchanyy"},"content":"public class AddSellerCommand extends Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"zengzihui"},"content":"    public static final String COMMAND_WORD \u003d \"addSeller\";","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"zengzihui"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a seller to EstateEase. \"","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"zengzihui"},"content":"            + PREFIX_HOUSING_TYPE + \"HOUSING_TYPE \"","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"redcolorbicycle"},"content":"            + PREFIX_STREET + \"STREET \"","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"redcolorbicycle"},"content":"            + PREFIX_BLOCK + \"BLOCK \"","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"redcolorbicycle"},"content":"            + PREFIX_LEVEL + \"LEVEL \"","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"redcolorbicycle"},"content":"            + PREFIX_UNITNUMBER + \"UNIT NUMBER \"","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_POSTALCODE + \"POSTAL CODE \"","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"            + PREFIX_PRICE + \"PRICE\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"felixchanyy"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"redcolorbicycle"},"content":"            + PREFIX_HOUSING_TYPE + \"Hdb \"","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"redcolorbicycle"},"content":"            + PREFIX_STREET + \"Clementi Ave 2 \"","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"            + PREFIX_BLOCK + \"311 \"","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"            + PREFIX_LEVEL + \"02 \"","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"            + PREFIX_UNITNUMBER + \"25 \"","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"felixchanyy"},"content":"            + PREFIX_POSTALCODE + \"578578 \"","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"            + PREFIX_PRICE + \"999999999\";","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New seller added\u003d %1$s\";","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"    public static final String MESSAGE_DUPLICATE_SELLER \u003d \"This person already exists in EstateEase\";","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"redcolorbicycle"},"content":"    private final Seller sellerToAdd;","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"     * Creates an AddSellerCommand to add the specified {@code Seller}","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"redcolorbicycle"},"content":"    public AddSellerCommand(Seller seller) {","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"redcolorbicycle"},"content":"        requireNonNull(seller);","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"redcolorbicycle"},"content":"        sellerToAdd \u003d seller;","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"felixchanyy"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"felixchanyy"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"felixchanyy"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"felixchanyy"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"felixchanyy"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"felixchanyy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"felixchanyy"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"felixchanyy"},"content":"        if (model.hasPerson(sellerToAdd)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"KhoonSun47"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"zengzihui"},"content":"        model.setState(State.PERSON_LIST);","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"felixchanyy"},"content":"        model.addPerson(sellerToAdd);","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"KhoonSun47"},"content":"        House houseToAdd \u003d sellerToAdd.getHouses().get(0);","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"redcolorbicycle"},"content":"        if (model.hasHouse(houseToAdd)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"KhoonSun47"},"content":"            model.deletePersonFromPersons(sellerToAdd);","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"redcolorbicycle"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_HOUSE);","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"redcolorbicycle"},"content":"        model.addHouseToHouses(houseToAdd);","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"felixchanyy"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(sellerToAdd)));","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"felixchanyy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"felixchanyy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"felixchanyy"},"content":"            return true;","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"felixchanyy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"felixchanyy"},"content":"        if (!(other instanceof AddSellerCommand)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"felixchanyy"},"content":"            return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"felixchanyy"},"content":"        AddSellerCommand otherAddCommand \u003d (AddSellerCommand) other;","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"felixchanyy"},"content":"        return sellerToAdd.equals(otherAddCommand.sellerToAdd);","lastModifiedDate":"2024-03-18"},{"lineNumber":110,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":111,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":112,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"felixchanyy"},"content":"    public String toString() {","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"felixchanyy"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-18"},{"lineNumber":115,"author":{"gitId":"felixchanyy"},"content":"                .add(\"sellerToAdd\", sellerToAdd)","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"felixchanyy"},"content":"                .toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":117,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"felixchanyy"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"redcolorbicycle":30,"zengzihui":5,"felixchanyy":71,"KhoonSun47":10,"lokidoki102":2}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.State;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"felixchanyy"},"content":" * Clears EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"EstateEase has been cleared!\";","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"zengzihui"},"content":"        model.setState(State.PERSON_LIST);","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zengzihui":2,"felixchanyy":2,"-":21}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"zengzihui"},"content":"    private final boolean showPerson;","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"zengzihui"},"content":"        this.showPerson \u003d false;","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"zengzihui"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"zengzihui"},"content":"     * Constructs a {@code CommandResult} with the specified {@code person}, {@code feedbackToUser},","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"zengzihui"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"zengzihui"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"zengzihui"},"content":"    public CommandResult(String feedbackToUser, boolean showPerson) {","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"zengzihui"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"zengzihui"},"content":"        this.showHelp \u003d false;","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"zengzihui"},"content":"        this.exit \u003d false;","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"zengzihui"},"content":"        this.showPerson \u003d showPerson;","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"zengzihui"},"content":"    public boolean isShow() {","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"zengzihui"},"content":"        return showPerson;","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zengzihui":17,"-":82}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.State;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.person.Seller;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"zengzihui"},"content":" * Deletes a person identified using it\u0027s displayed index from the displayed list.","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"zengzihui"},"content":"        model.setState(State.PERSON_LIST);","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"redcolorbicycle"},"content":"        if (personToDelete instanceof Seller) {","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"redcolorbicycle"},"content":"        } else {","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"redcolorbicycle"},"content":"            model.deletePersonFromPersons(personToDelete);","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"redcolorbicycle":6,"zengzihui":3,"-":68}},{"path":"src/main/java/seedu/address/logic/commands/DeleteHouseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BLOCK;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOUSING_TYPE;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LEVEL;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSTALCODE;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STREET;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UNITNUMBER;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.State;","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.House;","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.person.Seller;","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"redcolorbicycle"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"redcolorbicycle"},"content":" * Adds a house to the seller.","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"redcolorbicycle"},"content":"public class DeleteHouseCommand extends Command {","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"redcolorbicycle"},"content":"    public static final String COMMAND_WORD \u003d \"deleteHouse\";","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"redcolorbicycle"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes a house assigned to a Seller. Indicate N/A \"","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"redcolorbicycle"},"content":"            + \"for nonexistent fields. \"","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"redcolorbicycle"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"redcolorbicycle"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"redcolorbicycle"},"content":"            + PREFIX_HOUSING_TYPE + \"HOUSING_TYPE \"","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"redcolorbicycle"},"content":"            + PREFIX_STREET + \"STREET \"","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"redcolorbicycle"},"content":"            + PREFIX_BLOCK + \"BLOCK \"","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"redcolorbicycle"},"content":"            + PREFIX_LEVEL + \"LEVEL \"","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"redcolorbicycle"},"content":"            + PREFIX_UNITNUMBER + \"UNIT NUMBER \"","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"redcolorbicycle"},"content":"            + PREFIX_POSTALCODE + \"POSTAL CODE \"","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"redcolorbicycle"},"content":"            + PREFIX_PRICE + \"PRICE\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"redcolorbicycle"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"redcolorbicycle"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"redcolorbicycle"},"content":"            + PREFIX_HOUSING_TYPE + \"Condominium \"","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"redcolorbicycle"},"content":"            + PREFIX_STREET + \"Clementi Ave 2 \"","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"redcolorbicycle"},"content":"            + PREFIX_BLOCK + \"N/A \"","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"redcolorbicycle"},"content":"            + PREFIX_LEVEL + \"02 \"","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"redcolorbicycle"},"content":"            + PREFIX_UNITNUMBER + \"25 \"","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"redcolorbicycle"},"content":"            + PREFIX_POSTALCODE + \"578578 \"","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"redcolorbicycle"},"content":"            + PREFIX_PRICE + \"99999 \";","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"redcolorbicycle"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"House deleted!\";","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"redcolorbicycle"},"content":"    public static final String MESSAGE_MISSING_HOUSE \u003d \"This house does not exist in EstateEase\";","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"redcolorbicycle"},"content":"    public static final String MESSAGE_WRONG_HOUSE \u003d \"This house does not belong to this seller!\";","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"redcolorbicycle"},"content":"    public static final String MESSAGE_INVALID_SELLER \u003d \"This Seller does not exist in EstateEase\";","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"redcolorbicycle"},"content":"    private final House houseToDelete;","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"redcolorbicycle"},"content":"    private final Name nameToCheck;","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"redcolorbicycle"},"content":"    //@@author redcolorbicycle","lastModifiedDate":"2024-04-12"},{"lineNumber":65,"author":{"gitId":"redcolorbicycle"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(DeleteHouseCommand.class);","lastModifiedDate":"2024-04-12"},{"lineNumber":66,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":67,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"redcolorbicycle"},"content":"     * Creates a DeleteHouseCommand to delete the specified {@code house}","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"redcolorbicycle"},"content":"    public DeleteHouseCommand(House house, Name name) {","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"redcolorbicycle"},"content":"        requireNonNull(house);","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"redcolorbicycle"},"content":"        requireNonNull(name);","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"redcolorbicycle"},"content":"        houseToDelete \u003d house;","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"redcolorbicycle"},"content":"        nameToCheck \u003d name;","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"redcolorbicycle"},"content":"    //@@author redcolorbicycle","lastModifiedDate":"2024-04-12"},{"lineNumber":78,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"redcolorbicycle"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"redcolorbicycle"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"redcolorbicycle"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"redcolorbicycle"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"redcolorbicycle"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":88,"author":{"gitId":"redcolorbicycle"},"content":"        logger.info(\"----------------[DELETE HOUSE] executing deleteHouse command\");","lastModifiedDate":"2024-04-12"},{"lineNumber":89,"author":{"gitId":"redcolorbicycle"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"redcolorbicycle"},"content":"        if (!model.hasHouse(houseToDelete)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"redcolorbicycle"},"content":"            throw new CommandException(MESSAGE_MISSING_HOUSE);","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"redcolorbicycle"},"content":"        if (!model.hasPerson(nameToCheck)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"redcolorbicycle"},"content":"            throw new CommandException(MESSAGE_INVALID_SELLER);","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"redcolorbicycle"},"content":"        Person sellerToDeleteFrom \u003d model.findPersonByName(nameToCheck);","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"redcolorbicycle"},"content":"        if (!(sellerToDeleteFrom instanceof Seller)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"redcolorbicycle"},"content":"            throw new CommandException(MESSAGE_INVALID_SELLER);","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"redcolorbicycle"},"content":"        if (!((Seller) sellerToDeleteFrom).hasHouse(houseToDelete)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"redcolorbicycle"},"content":"            throw new CommandException(MESSAGE_WRONG_HOUSE);","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":109,"author":{"gitId":"redcolorbicycle"},"content":"        model.setState(State.PERSON_LIST);","lastModifiedDate":"2024-04-04"},{"lineNumber":110,"author":{"gitId":"redcolorbicycle"},"content":"        model.deleteHouse(houseToDelete, sellerToDeleteFrom);","lastModifiedDate":"2024-04-02"},{"lineNumber":111,"author":{"gitId":"redcolorbicycle"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS));","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"redcolorbicycle"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"redcolorbicycle"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"redcolorbicycle"},"content":"            return true;","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"redcolorbicycle"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"redcolorbicycle"},"content":"        if (!(other instanceof DeleteHouseCommand)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"redcolorbicycle"},"content":"            return false;","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"redcolorbicycle"},"content":"        DeleteHouseCommand otherDeleteCommand \u003d (DeleteHouseCommand) other;","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"redcolorbicycle"},"content":"        return houseToDelete.equals(otherDeleteCommand.houseToDelete);","lastModifiedDate":"2024-04-02"},{"lineNumber":127,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":129,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":130,"author":{"gitId":"redcolorbicycle"},"content":"    public String toString() {","lastModifiedDate":"2024-04-02"},{"lineNumber":131,"author":{"gitId":"redcolorbicycle"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-04-02"},{"lineNumber":132,"author":{"gitId":"redcolorbicycle"},"content":"                .add(\"houseToDelete\", houseToDelete)","lastModifiedDate":"2024-04-02"},{"lineNumber":133,"author":{"gitId":"redcolorbicycle"},"content":"                .toString();","lastModifiedDate":"2024-04-02"},{"lineNumber":134,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":135,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"redcolorbicycle":131,"zengzihui":1,"felixchanyy":3}},{"path":"src/main/java/seedu/address/logic/commands/EditBuyerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BUDGET;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOUSING_TYPE;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"import java.util.List;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.State;","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.house.HousingType;","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.person.Budget;","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.person.Buyer;","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":" * Edits the details of an existing buyer in the EstateEase contacts.","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"public class EditBuyerCommand extends Command {","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"    public static final String COMMAND_WORD \u003d \"editBuyer\";","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the buyer identified \"","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"redcolorbicycle"},"content":"            + \"by the index number used in the displayed list. \"","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"redcolorbicycle"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"            + \"[\" + PREFIX_HOUSING_TYPE + \"HOUSING_TYPE] \"","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"            + \"[\" + PREFIX_BUDGET + \"BUDGET]\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"redcolorbicycle"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"lokidoki102"},"content":"    public static final String MESSAGE_EDIT_BUYER_SUCCESS \u003d \"Edited Person(Buyer): %1$s\";","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"lokidoki102"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"redcolorbicycle"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in EstateEase.\";","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"    public static final String MESSAGE_WRONG_TYPE \u003d \"The person you are trying to edit is not a buyer.\";","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"lokidoki102"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(EditBuyerCommand.class);","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"redcolorbicycle"},"content":"    private final Index index;","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"lokidoki102"},"content":"    private final EditBuyerDescriptor editBuyerDescriptor;","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"felixchanyy"},"content":"     * @param index of the buyer in the filtered person list to edit.","lastModifiedDate":"2024-04-12"},{"lineNumber":68,"author":{"gitId":"felixchanyy"},"content":"     * @param editBuyerDescriptor details to edit the buyer with.","lastModifiedDate":"2024-04-12"},{"lineNumber":69,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"redcolorbicycle"},"content":"    public EditBuyerCommand(Index index, EditBuyerDescriptor editBuyerDescriptor) {","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"redcolorbicycle"},"content":"        requireNonNull(index);","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"lokidoki102"},"content":"        requireNonNull(editBuyerDescriptor);","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"redcolorbicycle"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"lokidoki102"},"content":"        this.editBuyerDescriptor \u003d new EditBuyerDescriptor(editBuyerDescriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"lokidoki102"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"lokidoki102"},"content":"        logger.info(\"----------------[EDIT BUYER] executing edit command\");","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"lokidoki102"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"redcolorbicycle"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"redcolorbicycle"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"redcolorbicycle"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"redcolorbicycle"},"content":"        if (!(lastShownList.get(index.getZeroBased()) instanceof Buyer)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"redcolorbicycle"},"content":"            logger.info(\"----------------[EDIT BUYER] target person is not a buyer\");","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"lokidoki102"},"content":"            throw new CommandException(MESSAGE_WRONG_TYPE);","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"lokidoki102"},"content":"        // safe to cast to Buyer type as there\u0027s already a validation to check if the target is a Buyer.","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"redcolorbicycle"},"content":"        Buyer buyerToEdit \u003d (Buyer) lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"lokidoki102"},"content":"        Buyer editedBuyer \u003d createEditedBuyer(buyerToEdit, editBuyerDescriptor);","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"redcolorbicycle"},"content":"        if (!buyerToEdit.isSamePerson(editedBuyer) \u0026\u0026 model.hasPerson(editedBuyer)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"redcolorbicycle"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"zengzihui"},"content":"        model.setState(State.PERSON_LIST);","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"lokidoki102"},"content":"        model.setPerson(buyerToEdit, editedBuyer);","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"lokidoki102"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"lokidoki102"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_BUYER_SUCCESS, Messages.format(editedBuyer)));","lastModifiedDate":"2024-03-28"},{"lineNumber":103,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":104,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":105,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":106,"author":{"gitId":"lokidoki102"},"content":"     * Creates and returns a {@code Buyer} with the details of {@code buyerToEdit}","lastModifiedDate":"2024-03-28"},{"lineNumber":107,"author":{"gitId":"lokidoki102"},"content":"     * edited with {@code editBuyerDescriptor}.","lastModifiedDate":"2024-03-28"},{"lineNumber":108,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":109,"author":{"gitId":"lokidoki102"},"content":"    private static Buyer createEditedBuyer(Buyer buyerToEdit, EditBuyerDescriptor editBuyerDescriptor) {","lastModifiedDate":"2024-03-28"},{"lineNumber":110,"author":{"gitId":"lokidoki102"},"content":"        assert buyerToEdit !\u003d null;","lastModifiedDate":"2024-03-28"},{"lineNumber":111,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":112,"author":{"gitId":"lokidoki102"},"content":"        Name updatedName \u003d editBuyerDescriptor.getName().orElse(buyerToEdit.getName());","lastModifiedDate":"2024-03-28"},{"lineNumber":113,"author":{"gitId":"lokidoki102"},"content":"        Phone updatedPhone \u003d editBuyerDescriptor.getPhone().orElse(buyerToEdit.getPhone());","lastModifiedDate":"2024-03-28"},{"lineNumber":114,"author":{"gitId":"lokidoki102"},"content":"        Email updatedEmail \u003d editBuyerDescriptor.getEmail().orElse(buyerToEdit.getEmail());","lastModifiedDate":"2024-03-28"},{"lineNumber":115,"author":{"gitId":"lokidoki102"},"content":"        Budget updatedBudget \u003d editBuyerDescriptor.getBudget().orElse(buyerToEdit.getBudget());","lastModifiedDate":"2024-03-30"},{"lineNumber":116,"author":{"gitId":"KhoonSun47"},"content":"        HousingType updatedHousingType \u003d editBuyerDescriptor.getHousingType()","lastModifiedDate":"2024-04-01"},{"lineNumber":117,"author":{"gitId":"KhoonSun47"},"content":"                .orElse(buyerToEdit.getPreferredHousingType());","lastModifiedDate":"2024-04-01"},{"lineNumber":118,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":119,"author":{"gitId":"lokidoki102"},"content":"        return new Buyer(updatedName, updatedPhone, updatedEmail, updatedBudget, updatedHousingType);","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":121,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":122,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":123,"author":{"gitId":"lokidoki102"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-28"},{"lineNumber":124,"author":{"gitId":"lokidoki102"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-28"},{"lineNumber":125,"author":{"gitId":"lokidoki102"},"content":"            return true;","lastModifiedDate":"2024-03-28"},{"lineNumber":126,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":127,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":128,"author":{"gitId":"lokidoki102"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-28"},{"lineNumber":129,"author":{"gitId":"lokidoki102"},"content":"        if (!(other instanceof EditBuyerCommand)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":130,"author":{"gitId":"lokidoki102"},"content":"            return false;","lastModifiedDate":"2024-03-28"},{"lineNumber":131,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":132,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":133,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerCommand otherEditCommand \u003d (EditBuyerCommand) other;","lastModifiedDate":"2024-03-28"},{"lineNumber":134,"author":{"gitId":"redcolorbicycle"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2024-04-03"},{"lineNumber":135,"author":{"gitId":"lokidoki102"},"content":"                \u0026\u0026 editBuyerDescriptor.equals(otherEditCommand.editBuyerDescriptor);","lastModifiedDate":"2024-03-28"},{"lineNumber":136,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":137,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":138,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":139,"author":{"gitId":"lokidoki102"},"content":"    public String toString() {","lastModifiedDate":"2024-03-28"},{"lineNumber":140,"author":{"gitId":"lokidoki102"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-28"},{"lineNumber":141,"author":{"gitId":"redcolorbicycle"},"content":"                .add(\"index\", index)","lastModifiedDate":"2024-04-03"},{"lineNumber":142,"author":{"gitId":"lokidoki102"},"content":"                .add(\"editBuyerDescriptor\", editBuyerDescriptor)","lastModifiedDate":"2024-03-28"},{"lineNumber":143,"author":{"gitId":"lokidoki102"},"content":"                .toString();","lastModifiedDate":"2024-03-28"},{"lineNumber":144,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":145,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":146,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":147,"author":{"gitId":"lokidoki102"},"content":"     * Stores the details to edit the buyer with. Each non-empty field value will replace the","lastModifiedDate":"2024-03-28"},{"lineNumber":148,"author":{"gitId":"lokidoki102"},"content":"     * corresponding field value of the byer.","lastModifiedDate":"2024-03-28"},{"lineNumber":149,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":150,"author":{"gitId":"lokidoki102"},"content":"    public static class EditBuyerDescriptor {","lastModifiedDate":"2024-03-28"},{"lineNumber":151,"author":{"gitId":"lokidoki102"},"content":"        private Name name;","lastModifiedDate":"2024-03-28"},{"lineNumber":152,"author":{"gitId":"lokidoki102"},"content":"        private Phone phone;","lastModifiedDate":"2024-03-28"},{"lineNumber":153,"author":{"gitId":"lokidoki102"},"content":"        private Email email;","lastModifiedDate":"2024-03-28"},{"lineNumber":154,"author":{"gitId":"lokidoki102"},"content":"        private HousingType housingType;","lastModifiedDate":"2024-03-31"},{"lineNumber":155,"author":{"gitId":"lokidoki102"},"content":"        private Budget budget;","lastModifiedDate":"2024-03-29"},{"lineNumber":156,"author":{"gitId":"lokidoki102"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2024-03-28"},{"lineNumber":157,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":158,"author":{"gitId":"lokidoki102"},"content":"        public EditBuyerDescriptor() {","lastModifiedDate":"2024-03-28"},{"lineNumber":159,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":160,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":161,"author":{"gitId":"lokidoki102"},"content":"        /**","lastModifiedDate":"2024-03-28"},{"lineNumber":162,"author":{"gitId":"lokidoki102"},"content":"         * Copy constructor.","lastModifiedDate":"2024-03-28"},{"lineNumber":163,"author":{"gitId":"lokidoki102"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2024-03-28"},{"lineNumber":164,"author":{"gitId":"lokidoki102"},"content":"         */","lastModifiedDate":"2024-03-28"},{"lineNumber":165,"author":{"gitId":"lokidoki102"},"content":"        public EditBuyerDescriptor(EditBuyerCommand.EditBuyerDescriptor toCopy) {","lastModifiedDate":"2024-03-28"},{"lineNumber":166,"author":{"gitId":"lokidoki102"},"content":"            setName(toCopy.name);","lastModifiedDate":"2024-03-28"},{"lineNumber":167,"author":{"gitId":"lokidoki102"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2024-03-28"},{"lineNumber":168,"author":{"gitId":"lokidoki102"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2024-03-28"},{"lineNumber":169,"author":{"gitId":"lokidoki102"},"content":"            setHousingType(toCopy.housingType);","lastModifiedDate":"2024-03-28"},{"lineNumber":170,"author":{"gitId":"lokidoki102"},"content":"            setBudget(toCopy.budget);","lastModifiedDate":"2024-03-29"},{"lineNumber":171,"author":{"gitId":"lokidoki102"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2024-03-28"},{"lineNumber":172,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":173,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":174,"author":{"gitId":"lokidoki102"},"content":"        /**","lastModifiedDate":"2024-03-28"},{"lineNumber":175,"author":{"gitId":"lokidoki102"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2024-03-28"},{"lineNumber":176,"author":{"gitId":"lokidoki102"},"content":"         */","lastModifiedDate":"2024-03-28"},{"lineNumber":177,"author":{"gitId":"lokidoki102"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2024-03-28"},{"lineNumber":178,"author":{"gitId":"lokidoki102"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, housingType, budget);","lastModifiedDate":"2024-04-02"},{"lineNumber":179,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":180,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":181,"author":{"gitId":"lokidoki102"},"content":"        public void setName(Name name) {","lastModifiedDate":"2024-03-28"},{"lineNumber":182,"author":{"gitId":"lokidoki102"},"content":"            this.name \u003d name;","lastModifiedDate":"2024-03-28"},{"lineNumber":183,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":184,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":185,"author":{"gitId":"lokidoki102"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2024-03-28"},{"lineNumber":186,"author":{"gitId":"lokidoki102"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2024-03-28"},{"lineNumber":187,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":188,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":189,"author":{"gitId":"lokidoki102"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2024-03-28"},{"lineNumber":190,"author":{"gitId":"lokidoki102"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2024-03-28"},{"lineNumber":191,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":192,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":193,"author":{"gitId":"lokidoki102"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2024-03-28"},{"lineNumber":194,"author":{"gitId":"lokidoki102"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2024-03-28"},{"lineNumber":195,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":196,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":197,"author":{"gitId":"lokidoki102"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2024-03-28"},{"lineNumber":198,"author":{"gitId":"lokidoki102"},"content":"            this.email \u003d email;","lastModifiedDate":"2024-03-28"},{"lineNumber":199,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":200,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":201,"author":{"gitId":"lokidoki102"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2024-03-28"},{"lineNumber":202,"author":{"gitId":"lokidoki102"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2024-03-28"},{"lineNumber":203,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":204,"author":{"gitId":"lokidoki102"},"content":"        public void setBudget(Budget budget) {","lastModifiedDate":"2024-03-29"},{"lineNumber":205,"author":{"gitId":"lokidoki102"},"content":"            this.budget \u003d budget;","lastModifiedDate":"2024-03-29"},{"lineNumber":206,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":207,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":208,"author":{"gitId":"lokidoki102"},"content":"        public Optional\u003cBudget\u003e getBudget() {","lastModifiedDate":"2024-03-29"},{"lineNumber":209,"author":{"gitId":"lokidoki102"},"content":"            return Optional.ofNullable(budget);","lastModifiedDate":"2024-03-29"},{"lineNumber":210,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":211,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":212,"author":{"gitId":"lokidoki102"},"content":"        public void setHousingType(HousingType housingType) {","lastModifiedDate":"2024-03-31"},{"lineNumber":213,"author":{"gitId":"lokidoki102"},"content":"            this.housingType \u003d housingType;","lastModifiedDate":"2024-03-28"},{"lineNumber":214,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":215,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":216,"author":{"gitId":"lokidoki102"},"content":"        public Optional\u003cHousingType\u003e getHousingType() {","lastModifiedDate":"2024-03-31"},{"lineNumber":217,"author":{"gitId":"lokidoki102"},"content":"            return Optional.ofNullable(housingType);","lastModifiedDate":"2024-03-28"},{"lineNumber":218,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":219,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":220,"author":{"gitId":"lokidoki102"},"content":"        /**","lastModifiedDate":"2024-03-28"},{"lineNumber":221,"author":{"gitId":"lokidoki102"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2024-03-28"},{"lineNumber":222,"author":{"gitId":"lokidoki102"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2024-03-28"},{"lineNumber":223,"author":{"gitId":"lokidoki102"},"content":"         */","lastModifiedDate":"2024-03-28"},{"lineNumber":224,"author":{"gitId":"lokidoki102"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-28"},{"lineNumber":225,"author":{"gitId":"lokidoki102"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2024-03-28"},{"lineNumber":226,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":227,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":228,"author":{"gitId":"lokidoki102"},"content":"        /**","lastModifiedDate":"2024-03-28"},{"lineNumber":229,"author":{"gitId":"lokidoki102"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2024-03-28"},{"lineNumber":230,"author":{"gitId":"lokidoki102"},"content":"         * if modification is attempted.","lastModifiedDate":"2024-03-28"},{"lineNumber":231,"author":{"gitId":"lokidoki102"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2024-03-28"},{"lineNumber":232,"author":{"gitId":"lokidoki102"},"content":"         */","lastModifiedDate":"2024-03-28"},{"lineNumber":233,"author":{"gitId":"lokidoki102"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2024-03-28"},{"lineNumber":234,"author":{"gitId":"lokidoki102"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2024-03-28"},{"lineNumber":235,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":236,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":237,"author":{"gitId":"lokidoki102"},"content":"        @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":238,"author":{"gitId":"lokidoki102"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2024-03-28"},{"lineNumber":239,"author":{"gitId":"lokidoki102"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-28"},{"lineNumber":240,"author":{"gitId":"lokidoki102"},"content":"                return true;","lastModifiedDate":"2024-03-28"},{"lineNumber":241,"author":{"gitId":"lokidoki102"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":242,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":243,"author":{"gitId":"lokidoki102"},"content":"            // instanceof handles nulls","lastModifiedDate":"2024-03-28"},{"lineNumber":244,"author":{"gitId":"lokidoki102"},"content":"            if (!(other instanceof EditBuyerCommand.EditBuyerDescriptor)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":245,"author":{"gitId":"lokidoki102"},"content":"                return false;","lastModifiedDate":"2024-03-28"},{"lineNumber":246,"author":{"gitId":"lokidoki102"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":247,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":248,"author":{"gitId":"lokidoki102"},"content":"            EditBuyerCommand.EditBuyerDescriptor otherEditDescriptor \u003d (EditBuyerCommand.EditBuyerDescriptor) other;","lastModifiedDate":"2024-03-28"},{"lineNumber":249,"author":{"gitId":"lokidoki102"},"content":"            return Objects.equals(name, otherEditDescriptor.name)","lastModifiedDate":"2024-03-28"},{"lineNumber":250,"author":{"gitId":"lokidoki102"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditDescriptor.phone)","lastModifiedDate":"2024-03-28"},{"lineNumber":251,"author":{"gitId":"lokidoki102"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditDescriptor.email)","lastModifiedDate":"2024-03-28"},{"lineNumber":252,"author":{"gitId":"lokidoki102"},"content":"                    \u0026\u0026 Objects.equals(housingType, otherEditDescriptor.housingType)","lastModifiedDate":"2024-03-28"},{"lineNumber":253,"author":{"gitId":"lokidoki102"},"content":"                    \u0026\u0026 Objects.equals(budget, otherEditDescriptor.budget)","lastModifiedDate":"2024-03-30"},{"lineNumber":254,"author":{"gitId":"lokidoki102"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditDescriptor.tags);","lastModifiedDate":"2024-03-28"},{"lineNumber":255,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":256,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":257,"author":{"gitId":"lokidoki102"},"content":"        @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":258,"author":{"gitId":"lokidoki102"},"content":"        public String toString() {","lastModifiedDate":"2024-03-28"},{"lineNumber":259,"author":{"gitId":"lokidoki102"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2024-03-28"},{"lineNumber":260,"author":{"gitId":"lokidoki102"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2024-03-28"},{"lineNumber":261,"author":{"gitId":"lokidoki102"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2024-03-28"},{"lineNumber":262,"author":{"gitId":"lokidoki102"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2024-03-28"},{"lineNumber":263,"author":{"gitId":"lokidoki102"},"content":"                    .add(\"housingType\", housingType)","lastModifiedDate":"2024-03-28"},{"lineNumber":264,"author":{"gitId":"lokidoki102"},"content":"                    .add(\"budget\", budget)","lastModifiedDate":"2024-03-30"},{"lineNumber":265,"author":{"gitId":"lokidoki102"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2024-03-28"},{"lineNumber":266,"author":{"gitId":"lokidoki102"},"content":"                    .toString();","lastModifiedDate":"2024-03-28"},{"lineNumber":267,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":268,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":269,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"redcolorbicycle":21,"zengzihui":2,"felixchanyy":2,"KhoonSun47":2,"lokidoki102":242}},{"path":"src/main/java/seedu/address/logic/commands/EditSellerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"zengzihui"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.State;","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.house.House;","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.person.Seller;","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":" * Edits the details of an existing person in EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"public class EditSellerCommand extends Command {","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"    public static final String COMMAND_WORD \u003d \"editSeller\";","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the seller identified \"","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"            + \"by the index number used in the displayed list. \"","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL]\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"    public static final String MESSAGE_EDIT_SELLER_SUCCESS \u003d \"Edited Person(Seller): %1$s\";","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"felixchanyy"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in EstateEase.\";","lastModifiedDate":"2024-04-12"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"    public static final String MESSAGE_WRONG_TYPE \u003d \"The person you are trying to edit is not a seller.\";","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"lokidoki102"},"content":"    private final EditSellerDescriptor editSellerDescriptor;","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"felixchanyy"},"content":"     * @param index of the seller in the filtered person list to edit.","lastModifiedDate":"2024-04-12"},{"lineNumber":60,"author":{"gitId":"felixchanyy"},"content":"     * @param editSellerDescriptor details to edit the seller with.","lastModifiedDate":"2024-04-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"lokidoki102"},"content":"    public EditSellerCommand(Index index, EditSellerDescriptor editSellerDescriptor) {","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"lokidoki102"},"content":"        requireNonNull(editSellerDescriptor);","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"lokidoki102"},"content":"        this.editSellerDescriptor \u003d new EditSellerDescriptor(editSellerDescriptor);","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"lokidoki102"},"content":"        if (!(lastShownList.get(index.getZeroBased()) instanceof Seller)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"lokidoki102"},"content":"            throw new CommandException(MESSAGE_WRONG_TYPE);","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":82,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":83,"author":{"gitId":"lokidoki102"},"content":"        Seller sellerToEdit \u003d (Seller) lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-04-01"},{"lineNumber":84,"author":{"gitId":"lokidoki102"},"content":"        Seller editedSeller \u003d createEditedSeller(sellerToEdit, editSellerDescriptor);","lastModifiedDate":"2024-04-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"lokidoki102"},"content":"        if (!sellerToEdit.isSamePerson(editedSeller) \u0026\u0026 model.hasPerson(editedSeller)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"zengzihui"},"content":"        model.setState(State.PERSON_LIST);","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"lokidoki102"},"content":"        model.setPerson(sellerToEdit, editedSeller);","lastModifiedDate":"2024-04-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"lokidoki102"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_SELLER_SUCCESS, Messages.format(editedSeller)));","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"lokidoki102"},"content":"     * Creates and returns a {@code Seller} with the details of {@code sellerToEdit}","lastModifiedDate":"2024-04-01"},{"lineNumber":97,"author":{"gitId":"lokidoki102"},"content":"     * edited with {@code editSellerDescriptor}.","lastModifiedDate":"2024-04-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"lokidoki102"},"content":"    private static Seller createEditedSeller(Seller sellerToEdit, EditSellerDescriptor editSellerDescriptor) {","lastModifiedDate":"2024-04-01"},{"lineNumber":100,"author":{"gitId":"lokidoki102"},"content":"        assert sellerToEdit !\u003d null;","lastModifiedDate":"2024-04-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"lokidoki102"},"content":"        Name updatedName \u003d editSellerDescriptor.getName().orElse(sellerToEdit.getName());","lastModifiedDate":"2024-04-01"},{"lineNumber":103,"author":{"gitId":"lokidoki102"},"content":"        Phone updatedPhone \u003d editSellerDescriptor.getPhone().orElse(sellerToEdit.getPhone());","lastModifiedDate":"2024-04-01"},{"lineNumber":104,"author":{"gitId":"lokidoki102"},"content":"        Email updatedEmail \u003d editSellerDescriptor.getEmail().orElse(sellerToEdit.getEmail());","lastModifiedDate":"2024-04-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"lokidoki102"},"content":"        // Houses are non-editable via editSellerCommand","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"zengzihui"},"content":"        ObservableList\u003cHouse\u003e houses \u003d sellerToEdit.getHouses();","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"lokidoki102"},"content":"        return new Seller(updatedName, updatedPhone, updatedEmail, houses);","lastModifiedDate":"2024-04-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"lokidoki102"},"content":"        if (!(other instanceof EditSellerCommand)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"lokidoki102"},"content":"        EditSellerCommand otherEditSellerCommand \u003d (EditSellerCommand) other;","lastModifiedDate":"2024-04-01"},{"lineNumber":124,"author":{"gitId":"lokidoki102"},"content":"        return index.equals(otherEditSellerCommand.index)","lastModifiedDate":"2024-04-01"},{"lineNumber":125,"author":{"gitId":"lokidoki102"},"content":"                \u0026\u0026 editSellerDescriptor.equals(otherEditSellerCommand.editSellerDescriptor);","lastModifiedDate":"2024-04-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"lokidoki102"},"content":"                .add(\"editSellerDescriptor\", editSellerDescriptor)","lastModifiedDate":"2024-04-01"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"lokidoki102"},"content":"     * Stores the details to edit the seller with. Each non-empty field value will replace the","lastModifiedDate":"2024-04-01"},{"lineNumber":138,"author":{"gitId":"lokidoki102"},"content":"     * corresponding field value of the Seller.","lastModifiedDate":"2024-04-01"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"lokidoki102"},"content":"    public static class EditSellerDescriptor {","lastModifiedDate":"2024-04-01"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"lokidoki102"},"content":"        public EditSellerDescriptor() {","lastModifiedDate":"2024-04-01"},{"lineNumber":147,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":153,"author":{"gitId":"lokidoki102"},"content":"        public EditSellerDescriptor(EditSellerDescriptor toCopy) {","lastModifiedDate":"2024-04-01"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"lokidoki102"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, tags);","lastModifiedDate":"2024-04-02"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"lokidoki102"},"content":"            if (!(other instanceof EditSellerDescriptor)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"lokidoki102"},"content":"            EditSellerDescriptor otherEditSellerDescriptor \u003d (EditSellerDescriptor) other;","lastModifiedDate":"2024-04-01"},{"lineNumber":221,"author":{"gitId":"lokidoki102"},"content":"            return Objects.equals(name, otherEditSellerDescriptor.name)","lastModifiedDate":"2024-04-01"},{"lineNumber":222,"author":{"gitId":"lokidoki102"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditSellerDescriptor.phone)","lastModifiedDate":"2024-04-01"},{"lineNumber":223,"author":{"gitId":"lokidoki102"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditSellerDescriptor.email)","lastModifiedDate":"2024-04-01"},{"lineNumber":224,"author":{"gitId":"lokidoki102"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditSellerDescriptor.tags);","lastModifiedDate":"2024-04-01"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"redcolorbicycle":1,"zengzihui":4,"felixchanyy":4,"KhoonSun47":1,"-":179,"lokidoki102":48}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"felixchanyy"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting EstateEase as requested ...\";","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"felixchanyy":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.State;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"felixchanyy"},"content":" * Finds and lists all persons in EstateEase whose name contains any of the argument keywords.","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"zengzihui"},"content":"        model.setState(State.PERSON_LIST);","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"zengzihui":2,"felixchanyy":1,"-":57}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.State;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"felixchanyy"},"content":" * Lists all persons in the EstateEase to the user.","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"zengzihui"},"content":"        model.setState(State.PERSON_LIST);","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zengzihui":2,"felixchanyy":1,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/MatchBuyerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"felixchanyy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"felixchanyy"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.State;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.house.House;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.house.HousingType;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.house.Price;","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.house.PriceAndHousingTypePredicate;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.person.Budget;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.person.Buyer;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.person.FullNameEqualsKeywordPredicate;","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"felixchanyy"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"felixchanyy"},"content":" * Matches a specific buyer\u0027s budget and housing type to sellers\u0027 house price and","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"felixchanyy"},"content":" * housing type when given the buyer\u0027s name.","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"felixchanyy"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"felixchanyy"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"felixchanyy"},"content":"public class MatchBuyerCommand extends Command {","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"felixchanyy"},"content":"    public static final String COMMAND_WORD \u003d \"matchBuyer\";","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"felixchanyy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Matches a specific buyer\u0027s budget and housing type \"","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"felixchanyy"},"content":"            + \"to sellers\u0027 house price and housing type when given the buyer\u0027s full name (case-insensitive).\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":"            + \"Parameters: FULL_NAME\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"felixchanyy"},"content":"            + \"Example: \" + COMMAND_WORD + \" Alice Lim\";","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"felixchanyy"},"content":"    private final FullNameEqualsKeywordPredicate fullNamePredicate;","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"felixchanyy"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(MatchBuyerCommand.class);","lastModifiedDate":"2024-04-12"},{"lineNumber":39,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":40,"author":{"gitId":"felixchanyy"},"content":"    public MatchBuyerCommand(FullNameEqualsKeywordPredicate fullNamePredicate) {","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"felixchanyy"},"content":"        this.fullNamePredicate \u003d fullNamePredicate;","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"felixchanyy"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"felixchanyy"},"content":"        logger.info(\"----------------[MATCH BUYER] executing matchBuyer command\");","lastModifiedDate":"2024-04-12"},{"lineNumber":47,"author":{"gitId":"felixchanyy"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"felixchanyy"},"content":"        model.updateFilteredPersonList(fullNamePredicate);","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":50,"author":{"gitId":"felixchanyy"},"content":"        if (model.getFilteredPersonList().isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"felixchanyy"},"content":"            return new CommandResult(Messages.MESSAGE_BUYER_NOT_FOUND);","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":53,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":54,"author":{"gitId":"felixchanyy"},"content":"        Person person \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":56,"author":{"gitId":"felixchanyy"},"content":"        if (!(person instanceof Buyer)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"felixchanyy"},"content":"            return new CommandResult(Messages.MESSAGE_NOT_A_BUYER);","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":60,"author":{"gitId":"felixchanyy"},"content":"        Buyer targetBuyer \u003d (Buyer) person;","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"felixchanyy"},"content":"        Budget budget \u003d targetBuyer.getBudget();","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"felixchanyy"},"content":"        HousingType housingType \u003d targetBuyer.getPreferredHousingType();","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"felixchanyy"},"content":"        Price price \u003d budget.toPrice();","lastModifiedDate":"2024-04-12"},{"lineNumber":64,"author":{"gitId":"felixchanyy"},"content":"        PriceAndHousingTypePredicate predicate \u003d new PriceAndHousingTypePredicate(price, housingType);","lastModifiedDate":"2024-04-12"},{"lineNumber":65,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"felixchanyy"},"content":"        model.updateFilteredSellerList(predicate);","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"zengzihui"},"content":"        ObservableList\u003cHouse\u003e filteredSellerList \u003d model.getAllFilteredHouseList(predicate);","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":70,"author":{"gitId":"zengzihui"},"content":"        model.setState(State.MATCH_RESULTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"zengzihui"},"content":"        model.showMatchResults(model.getFilteredSellerList());","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"felixchanyy"},"content":"        return new CommandResult(","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"felixchanyy"},"content":"                String.format(Messages.MESSAGE_HOUSE_LISTED_OVERVIEW, filteredSellerList.size()));","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":76,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":77,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":78,"author":{"gitId":"felixchanyy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"felixchanyy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"felixchanyy"},"content":"            return true;","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":82,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":83,"author":{"gitId":"felixchanyy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-01"},{"lineNumber":84,"author":{"gitId":"felixchanyy"},"content":"        if (!(other instanceof MatchBuyerCommand)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":85,"author":{"gitId":"felixchanyy"},"content":"            return false;","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":87,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":88,"author":{"gitId":"felixchanyy"},"content":"        MatchBuyerCommand otherMatchBuyerCommand \u003d (MatchBuyerCommand) other;","lastModifiedDate":"2024-04-01"},{"lineNumber":89,"author":{"gitId":"felixchanyy"},"content":"        return fullNamePredicate.equals(otherMatchBuyerCommand.fullNamePredicate);","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":91,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":92,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"felixchanyy"},"content":"    public String toString() {","lastModifiedDate":"2024-04-01"},{"lineNumber":94,"author":{"gitId":"felixchanyy"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-04-01"},{"lineNumber":95,"author":{"gitId":"felixchanyy"},"content":"                .add(\"fullNamePredicate\", fullNamePredicate)","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"felixchanyy"},"content":"                .toString();","lastModifiedDate":"2024-04-01"},{"lineNumber":97,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":98,"author":{"gitId":"felixchanyy"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"zengzihui":4,"felixchanyy":94}},{"path":"src/main/java/seedu/address/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zengzihui"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"zengzihui"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"zengzihui"},"content":"import java.util.List;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"zengzihui"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"zengzihui"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"zengzihui"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"zengzihui"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.State;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"zengzihui"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"zengzihui"},"content":" * Displays the detail of a person identified using it\u0027s displayed index from the displayed list.","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"zengzihui"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"zengzihui"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"zengzihui"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"zengzihui"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"zengzihui"},"content":"            + \": Views the details of the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"zengzihui"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"zengzihui"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"zengzihui"},"content":"    public static final String MESSAGE_VIEW_PERSON_SUCCESS \u003d \"Displayed the details of the Person: %1$s\";","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"zengzihui"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"zengzihui"},"content":"    public ViewCommand(Index targetIndex) {","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"zengzihui"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"zengzihui"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"zengzihui"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"zengzihui"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"zengzihui"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"zengzihui"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"zengzihui"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"zengzihui"},"content":"        assert targetIndex.getZeroBased() \u003c lastShownList.size()","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"zengzihui"},"content":"                : \"Index should be within the range of the list displayed\";","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"zengzihui"},"content":"        assert targetIndex.getZeroBased() \u003e\u003d 0","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"zengzihui"},"content":"                : \"Index should be a positive number\";","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"zengzihui"},"content":"        Person personToView \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"zengzihui"},"content":"        model.setState(State.PERSON_DETAILS);","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"zengzihui"},"content":"        model.showPerson(personToView);","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"zengzihui"},"content":"        return new CommandResult(","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"zengzihui"},"content":"                String.format(MESSAGE_VIEW_PERSON_SUCCESS, personToView.getName()));","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"zengzihui"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"zengzihui"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"zengzihui"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"zengzihui"},"content":"            return true;","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"zengzihui"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"zengzihui"},"content":"        if (!(other instanceof ViewCommand)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"zengzihui"},"content":"            return false;","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"zengzihui"},"content":"        ViewCommand otherViewCommand \u003d (ViewCommand) other;","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"zengzihui"},"content":"        return targetIndex.equals(otherViewCommand.targetIndex);","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"zengzihui"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"zengzihui"},"content":"    public String toString() {","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"zengzihui"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"zengzihui"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"zengzihui"},"content":"                .toString();","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"zengzihui"},"content":"}","lastModifiedDate":"2024-04-01"},{"lineNumber":75,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":76,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":77,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":78,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"zengzihui":79}},{"path":"src/main/java/seedu/address/logic/parser/AddBuyerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BUDGET;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOUSING_TYPE;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.logic.commands.AddBuyerCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.HousingType;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.person.Budget;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Buyer;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"felixchanyy"},"content":"public class AddBuyerCommandParser implements Parser\u003cAddBuyerCommand\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"felixchanyy"},"content":"    public AddBuyerCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"zengzihui"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_HOUSING_TYPE,","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"                        PREFIX_BUDGET);","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"felixchanyy"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_HOUSING_TYPE,","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"felixchanyy"},"content":"                PREFIX_BUDGET)","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"felixchanyy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddBuyerCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"felixchanyy"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_HOUSING_TYPE,","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"felixchanyy"},"content":"                PREFIX_BUDGET);","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"redcolorbicycle"},"content":"        HousingType housingType \u003d ParserUtil.parseHousing(argMultimap.getValue(PREFIX_HOUSING_TYPE).get());","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"felixchanyy"},"content":"        Budget budget \u003d ParserUtil.parseBudget(argMultimap.getValue(PREFIX_BUDGET).get());","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"        Buyer buyer \u003d new Buyer(name, phone, email, budget, housingType);","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"        return new AddBuyerCommand(buyer);","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"redcolorbicycle":2,"zengzihui":2,"felixchanyy":11,"KhoonSun47":2,"-":43,"lokidoki102":2}},{"path":"src/main/java/seedu/address/logic/parser/AddHouseCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BLOCK;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOUSING_TYPE;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LEVEL;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSTALCODE;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STREET;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UNITNUMBER;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.logic.commands.AddHouseCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.Block;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.Condominium;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.Hdb;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.House;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.HousingType;","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.Landed;","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.Level;","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.PostalCode;","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.Price;","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.Street;","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.UnitNumber;","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"redcolorbicycle"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"redcolorbicycle"},"content":" * Parses input arguments and creates a new AddHouseCommand object","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"redcolorbicycle"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"redcolorbicycle"},"content":"public class AddHouseCommandParser implements Parser\u003cAddHouseCommand\u003e {","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"redcolorbicycle"},"content":"    public static final String MESSAGE_INVALID_HDB \u003d \"Hdb must have a block and a level!\";","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"redcolorbicycle"},"content":"    public static final String MESSAGE_INVALID_CONDOMINIUM \u003d \"Condominium must have a level!\";","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"redcolorbicycle"},"content":"    public static final String MESSAGE_INVALID_LANDED \u003d \"Landed must not have a level or block!\";","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"redcolorbicycle"},"content":"     * Parses the given {@code String} of arguments in the context of the AddHouseCommand","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"redcolorbicycle"},"content":"     * and returns an AddHouseCommand object for execution.","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"redcolorbicycle"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"redcolorbicycle"},"content":"    public AddHouseCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"redcolorbicycle"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"redcolorbicycle"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_HOUSING_TYPE, PREFIX_LEVEL, PREFIX_BLOCK,","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"redcolorbicycle"},"content":"                        PREFIX_PRICE, PREFIX_STREET, PREFIX_UNITNUMBER, PREFIX_POSTALCODE);","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"redcolorbicycle"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_HOUSING_TYPE, PREFIX_PRICE,","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"redcolorbicycle"},"content":"                PREFIX_POSTALCODE, PREFIX_STREET, PREFIX_UNITNUMBER) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"redcolorbicycle"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddHouseCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"redcolorbicycle"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_HOUSING_TYPE, PREFIX_LEVEL, PREFIX_PRICE,","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"redcolorbicycle"},"content":"                PREFIX_BLOCK, PREFIX_STREET, PREFIX_UNITNUMBER, PREFIX_POSTALCODE);","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"redcolorbicycle"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"redcolorbicycle"},"content":"        HousingType housingType \u003d ParserUtil.parseHousing(argMultimap.getValue(PREFIX_HOUSING_TYPE).get());","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"redcolorbicycle"},"content":"        UnitNumber unitNumber \u003d ParserUtil.parseUnitNumber(argMultimap.getValue(PREFIX_UNITNUMBER).get());","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"redcolorbicycle"},"content":"        Street street \u003d ParserUtil.parseStreet(argMultimap.getValue(PREFIX_STREET).get());","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"redcolorbicycle"},"content":"        PostalCode postalCode \u003d ParserUtil.parsePostalCode(argMultimap.getValue(PREFIX_POSTALCODE).get());","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"redcolorbicycle"},"content":"        Price price \u003d ParserUtil.parsePrice(argMultimap.getValue(PREFIX_PRICE).get());","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"redcolorbicycle"},"content":"        boolean hasBlock \u003d argMultimap.getValue(PREFIX_BLOCK).isPresent();","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"redcolorbicycle"},"content":"        boolean hasLevel \u003d argMultimap.getValue(PREFIX_LEVEL).isPresent();","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"redcolorbicycle"},"content":"        House house \u003d checkValidity(housingType, unitNumber, street, postalCode, price, hasBlock, hasLevel,","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"redcolorbicycle"},"content":"                argMultimap);","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"redcolorbicycle"},"content":"        return new AddHouseCommand(house, name);","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"redcolorbicycle"},"content":"     * Returns a house, if all the arguments are valid","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"redcolorbicycle"},"content":"    public static House checkValidity(HousingType housingType, UnitNumber unitNumber, Street street,","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"redcolorbicycle"},"content":"                                      PostalCode postalCode, Price price, boolean hasBlock, boolean hasLevel,","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"redcolorbicycle"},"content":"                                      ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"KhoonSun47"},"content":"        switch (housingType.toString().toLowerCase()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"KhoonSun47"},"content":"        case \"hdb\":","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"KhoonSun47"},"content":"            return handleHdb(unitNumber, street, postalCode, price, hasBlock, hasLevel, argMultimap);","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"KhoonSun47"},"content":"        case \"condominium\":","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"KhoonSun47"},"content":"            return handleCondominium(unitNumber, street, postalCode, price, hasBlock, hasLevel, argMultimap);","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"KhoonSun47"},"content":"        case \"landed\":","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"KhoonSun47"},"content":"            return handleLanded(unitNumber, street, postalCode, price, hasBlock, hasLevel);","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"KhoonSun47"},"content":"        default:","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"KhoonSun47"},"content":"            throw new ParseException(\"Unknown Housing Type\");","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"redcolorbicycle"},"content":"    //@@author redcolorbicycle","lastModifiedDate":"2024-04-12"},{"lineNumber":90,"author":{"gitId":"KhoonSun47"},"content":"    //@@author KhoonSun47","lastModifiedDate":"2024-04-12"},{"lineNumber":91,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"KhoonSun47"},"content":"     * Create a HDB.","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"KhoonSun47"},"content":"    private static House handleHdb(UnitNumber unitNumber, Street street, PostalCode postalCode, Price price,","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"KhoonSun47"},"content":"                                   boolean hasBlock, boolean hasLevel,","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"KhoonSun47"},"content":"                                   ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"KhoonSun47"},"content":"        if (!hasLevel || !hasBlock) {","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"KhoonSun47"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_HDB, AddHouseCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"KhoonSun47"},"content":"        Block block \u003d ParserUtil.parseBlock(argMultimap.getValue(PREFIX_BLOCK).get());","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"KhoonSun47"},"content":"        if (block.toString().equals(\"N/A\")) {","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"KhoonSun47"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_HDB, AddHouseCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"KhoonSun47"},"content":"        Level level \u003d ParserUtil.parseLevel(argMultimap.getValue(PREFIX_LEVEL).get());","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"KhoonSun47"},"content":"        return new Hdb(level, postalCode, street, unitNumber, block, price);","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"redcolorbicycle"},"content":"    //@@author redcolorbicycle","lastModifiedDate":"2024-04-12"},{"lineNumber":109,"author":{"gitId":"KhoonSun47"},"content":"    //@@author KhoonSun47","lastModifiedDate":"2024-04-12"},{"lineNumber":110,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"KhoonSun47"},"content":"     * Create a Condominium.","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"KhoonSun47"},"content":"    private static House handleCondominium(UnitNumber unitNumber, Street street, PostalCode postalCode, Price price,","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"KhoonSun47"},"content":"                                           boolean hasBlock, boolean hasLevel,","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"KhoonSun47"},"content":"                                           ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"KhoonSun47"},"content":"        if (!hasLevel) {","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"KhoonSun47"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_CONDOMINIUM, AddHouseCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"KhoonSun47"},"content":"        Level level \u003d ParserUtil.parseLevel(argMultimap.getValue(PREFIX_LEVEL).get());","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"KhoonSun47"},"content":"        if (!hasBlock) {","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"KhoonSun47"},"content":"            return new Condominium(level, postalCode, street, unitNumber, price);","lastModifiedDate":"2024-04-03"},{"lineNumber":122,"author":{"gitId":"KhoonSun47"},"content":"        } else {","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"KhoonSun47"},"content":"            Block block \u003d ParserUtil.parseBlock(argMultimap.getValue(PREFIX_BLOCK).get());","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"KhoonSun47"},"content":"            if (block.toString().equals(\"N/A\")) {","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"KhoonSun47"},"content":"                return new Condominium(level, postalCode, street, unitNumber, price);","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"KhoonSun47"},"content":"            } else {","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"KhoonSun47"},"content":"                return new Condominium(level, postalCode, street, unitNumber, block, price);","lastModifiedDate":"2024-04-03"},{"lineNumber":128,"author":{"gitId":"KhoonSun47"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":129,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"redcolorbicycle"},"content":"    //@@author redcolorbicycle","lastModifiedDate":"2024-04-12"},{"lineNumber":133,"author":{"gitId":"KhoonSun47"},"content":"    //@@author KhoonSun47","lastModifiedDate":"2024-04-12"},{"lineNumber":134,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":135,"author":{"gitId":"KhoonSun47"},"content":"     * Create a Landed.","lastModifiedDate":"2024-04-03"},{"lineNumber":136,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":137,"author":{"gitId":"KhoonSun47"},"content":"    private static House handleLanded(UnitNumber unitNumber, Street street, PostalCode postalCode, Price price,","lastModifiedDate":"2024-04-03"},{"lineNumber":138,"author":{"gitId":"KhoonSun47"},"content":"                                      boolean hasBlock, boolean hasLevel) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":139,"author":{"gitId":"KhoonSun47"},"content":"        if (hasBlock || hasLevel) {","lastModifiedDate":"2024-04-03"},{"lineNumber":140,"author":{"gitId":"KhoonSun47"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_LANDED, AddHouseCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-03"},{"lineNumber":141,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":142,"author":{"gitId":"KhoonSun47"},"content":"        return new Landed(unitNumber, postalCode, street, price);","lastModifiedDate":"2024-04-03"},{"lineNumber":143,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":144,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":145,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":146,"author":{"gitId":"KhoonSun47"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-04-01"},{"lineNumber":147,"author":{"gitId":"KhoonSun47"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-04-01"},{"lineNumber":148,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":149,"author":{"gitId":"KhoonSun47"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-04-01"},{"lineNumber":150,"author":{"gitId":"KhoonSun47"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-04-01"},{"lineNumber":151,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":152,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"redcolorbicycle":79,"KhoonSun47":73}},{"path":"src/main/java/seedu/address/logic/parser/AddSellerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.AddHouseCommandParser.checkValidity;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BLOCK;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOUSING_TYPE;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LEVEL;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSTALCODE;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STREET;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UNITNUMBER;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"zengzihui"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"zengzihui"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.logic.commands.AddSellerCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.House;","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.HousingType;","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.PostalCode;","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.house.Price;","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.Street;","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.UnitNumber;","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.person.Seller;","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"redcolorbicycle"},"content":" * Parses input arguments and creates a new AddSellerCommand object","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"felixchanyy"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"felixchanyy"},"content":"public class AddSellerCommandParser implements Parser\u003cAddSellerCommand\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"     * Parses the given {@code String} of arguments in the context of the AddSellerCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"     * and returns an AddSellerCommand object for execution.","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"     * Separate methods to adhere to SLAP.","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"felixchanyy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"felixchanyy"},"content":"    public AddSellerCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"        ArgumentMultimap argMultimap \u003d tokenizeArguments(args);","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"        validateRequiredPrefixes(argMultimap);","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_HOUSING_TYPE, PREFIX_LEVEL,","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"                PREFIX_EMAIL, PREFIX_BLOCK, PREFIX_STREET, PREFIX_UNITNUMBER, PREFIX_POSTALCODE, PREFIX_PRICE);","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"        Seller seller \u003d createSeller(argMultimap);","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"        return new AddSellerCommand(seller);","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"    private ArgumentMultimap tokenizeArguments(String args) {","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"        return ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"                PREFIX_HOUSING_TYPE, PREFIX_LEVEL, PREFIX_BLOCK, PREFIX_STREET,","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"                PREFIX_UNITNUMBER, PREFIX_POSTALCODE, PREFIX_PRICE);","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"    private void validateRequiredPrefixes(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"zengzihui"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_HOUSING_TYPE,","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"                PREFIX_POSTALCODE, PREFIX_STREET, PREFIX_UNITNUMBER, PREFIX_PRICE)","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddSellerCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"    private Seller createSeller(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"felixchanyy"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"felixchanyy"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"felixchanyy"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"redcolorbicycle"},"content":"        HousingType housingType \u003d ParserUtil.parseHousing(argMultimap.getValue(PREFIX_HOUSING_TYPE).get());","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"redcolorbicycle"},"content":"        UnitNumber unitNumber \u003d ParserUtil.parseUnitNumber(argMultimap.getValue(PREFIX_UNITNUMBER).get());","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"redcolorbicycle"},"content":"        Street street \u003d ParserUtil.parseStreet(argMultimap.getValue(PREFIX_STREET).get());","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"redcolorbicycle"},"content":"        PostalCode postalCode \u003d ParserUtil.parsePostalCode(argMultimap.getValue(PREFIX_POSTALCODE).get());","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"felixchanyy"},"content":"        Price price \u003d ParserUtil.parsePrice(argMultimap.getValue(PREFIX_PRICE).get());","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"redcolorbicycle"},"content":"        boolean hasBlock \u003d argMultimap.getValue(PREFIX_BLOCK).isPresent();","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"redcolorbicycle"},"content":"        boolean hasLevel \u003d argMultimap.getValue(PREFIX_LEVEL).isPresent();","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"KhoonSun47"},"content":"        House house \u003d checkValidity(housingType, unitNumber, street, postalCode, price, hasBlock,","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"KhoonSun47"},"content":"                hasLevel, argMultimap);","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"zengzihui"},"content":"        ObservableList\u003cHouse\u003e houses \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"redcolorbicycle"},"content":"        houses.add(house);","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":88,"author":{"gitId":"KhoonSun47"},"content":"        return new Seller(name, phone, email, houses);","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":90,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":91,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"felixchanyy"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"felixchanyy"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"felixchanyy"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"felixchanyy"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"felixchanyy"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"redcolorbicycle":28,"zengzihui":5,"felixchanyy":34,"KhoonSun47":30,"lokidoki102":1}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.logic.commands.AddBuyerCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.logic.commands.AddHouseCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.logic.commands.AddSellerCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.logic.commands.DeleteHouseCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.logic.commands.EditBuyerCommand;","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.logic.commands.EditSellerCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.logic.commands.MatchBuyerCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"zengzihui"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"felixchanyy"},"content":"        case AddSellerCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"felixchanyy"},"content":"            return new AddSellerCommandParser().parse(arguments);","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"felixchanyy"},"content":"        case AddBuyerCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"felixchanyy"},"content":"            return new AddBuyerCommandParser().parse(arguments);","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"lokidoki102"},"content":"        case EditSellerCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"lokidoki102"},"content":"            return new EditSellerCommandParser().parse(arguments);","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"redcolorbicycle"},"content":"        case AddHouseCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"redcolorbicycle"},"content":"            return new AddHouseCommandParser().parse(arguments);","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"redcolorbicycle"},"content":"        case DeleteHouseCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"redcolorbicycle"},"content":"            return new DeleteHouseCommandParser().parse(arguments);","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"lokidoki102"},"content":"        case EditBuyerCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"lokidoki102"},"content":"            return new EditBuyerCommandParser().parse(arguments);","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"zengzihui"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"zengzihui"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":101,"author":{"gitId":"felixchanyy"},"content":"        case MatchBuyerCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-01"},{"lineNumber":102,"author":{"gitId":"felixchanyy"},"content":"            return new MatchBuyerCommandParser().parse(arguments);","lastModifiedDate":"2024-04-01"},{"lineNumber":103,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"redcolorbicycle":8,"zengzihui":4,"felixchanyy":11,"-":81,"lokidoki102":6}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"zengzihui"},"content":"    public static final Prefix PREFIX_HOUSING_TYPE \u003d new Prefix(\"type/\");","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"    public static final Prefix PREFIX_STREET \u003d new Prefix(\"street/\");","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"    public static final Prefix PREFIX_LEVEL \u003d new Prefix(\"level/\");","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"    public static final Prefix PREFIX_UNITNUMBER \u003d new Prefix(\"unitNo/\");","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"    public static final Prefix PREFIX_BLOCK \u003d new Prefix(\"blk/\");","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"    public static final Prefix PREFIX_POSTALCODE \u003d new Prefix(\"postal/\");","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"    public static final Prefix PREFIX_BUDGET \u003d new Prefix(\"budget/\");","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"felixchanyy"},"content":"    public static final Prefix PREFIX_PRICE \u003d new Prefix(\"price/\");","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"redcolorbicycle":1,"zengzihui":1,"KhoonSun47":2,"felixchanyy":2,"-":13,"lokidoki102":3}},{"path":"src/main/java/seedu/address/logic/parser/DeleteHouseCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.AddHouseCommandParser.checkValidity;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BLOCK;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOUSING_TYPE;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LEVEL;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSTALCODE;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STREET;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UNITNUMBER;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.logic.commands.DeleteHouseCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.House;","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.HousingType;","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.PostalCode;","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.Price;","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.Street;","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.UnitNumber;","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"redcolorbicycle"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"redcolorbicycle"},"content":" * Parses input arguments and creates a new AddHouseCommand object","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"redcolorbicycle"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"redcolorbicycle"},"content":"public class DeleteHouseCommandParser implements Parser\u003cDeleteHouseCommand\u003e {","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"redcolorbicycle"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteHouseCommand","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"redcolorbicycle"},"content":"     * and returns a DeleteHouseCommand object for execution.","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"redcolorbicycle"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"redcolorbicycle"},"content":"    public DeleteHouseCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"redcolorbicycle"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"redcolorbicycle"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_HOUSING_TYPE, PREFIX_LEVEL, PREFIX_BLOCK,","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"redcolorbicycle"},"content":"                        PREFIX_PRICE, PREFIX_STREET, PREFIX_UNITNUMBER, PREFIX_POSTALCODE);","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"redcolorbicycle"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_HOUSING_TYPE, PREFIX_PRICE,","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"redcolorbicycle"},"content":"                PREFIX_POSTALCODE, PREFIX_STREET, PREFIX_UNITNUMBER) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"redcolorbicycle"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteHouseCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"redcolorbicycle"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_HOUSING_TYPE, PREFIX_LEVEL, PREFIX_PRICE,","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"redcolorbicycle"},"content":"                PREFIX_BLOCK, PREFIX_STREET, PREFIX_UNITNUMBER, PREFIX_POSTALCODE);","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"redcolorbicycle"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"redcolorbicycle"},"content":"        HousingType housingType \u003d ParserUtil.parseHousing(argMultimap.getValue(PREFIX_HOUSING_TYPE).get());","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"redcolorbicycle"},"content":"        UnitNumber unitNumber \u003d ParserUtil.parseUnitNumber(argMultimap.getValue(PREFIX_UNITNUMBER).get());","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"redcolorbicycle"},"content":"        Street street \u003d ParserUtil.parseStreet(argMultimap.getValue(PREFIX_STREET).get());","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"redcolorbicycle"},"content":"        PostalCode postalCode \u003d ParserUtil.parsePostalCode(argMultimap.getValue(PREFIX_POSTALCODE).get());","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"redcolorbicycle"},"content":"        Price price \u003d ParserUtil.parsePrice(argMultimap.getValue(PREFIX_PRICE).get());","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"redcolorbicycle"},"content":"        boolean hasBlock \u003d argMultimap.getValue(PREFIX_BLOCK).isPresent();","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"redcolorbicycle"},"content":"        boolean hasLevel \u003d argMultimap.getValue(PREFIX_LEVEL).isPresent();","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"redcolorbicycle"},"content":"        ArrayList\u003cHouse\u003e houses \u003d new ArrayList\u003cHouse\u003e();","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"redcolorbicycle"},"content":"        House house \u003d checkValidity(housingType, unitNumber, street, postalCode, price, hasBlock, hasLevel,","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"redcolorbicycle"},"content":"                argMultimap);","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"redcolorbicycle"},"content":"        houses.add(house);","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"redcolorbicycle"},"content":"        return new DeleteHouseCommand(house, name);","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"redcolorbicycle"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"redcolorbicycle"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"redcolorbicycle"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"redcolorbicycle"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"redcolorbicycle":75}},{"path":"src/main/java/seedu/address/logic/parser/EditBuyerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BUDGET;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOUSING_TYPE;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"import java.util.Collection;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.logic.commands.EditBuyerCommand;","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.logic.commands.EditBuyerCommand.EditBuyerDescriptor;","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":" * Parses input arguments and creates a new EditBuyerCommand object","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"public class EditBuyerCommandParser implements Parser\u003cEditBuyerCommand\u003e {","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"     * Parses the given {@code String} of arguments in the context of the EditBuyerCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"     * and returns an EditBuyerCommand object for execution.","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"    public EditBuyerCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"redcolorbicycle"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_HOUSING_TYPE,","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"redcolorbicycle"},"content":"                        PREFIX_BUDGET);","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"redcolorbicycle"},"content":"        Index index;","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"redcolorbicycle"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"redcolorbicycle"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"redcolorbicycle"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"redcolorbicycle"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditBuyerCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"redcolorbicycle"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_HOUSING_TYPE,","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"redcolorbicycle"},"content":"                PREFIX_BUDGET);","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerDescriptor editBuyerDescriptor \u003d new EditBuyerDescriptor();","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"            editBuyerDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"            editBuyerDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"lokidoki102"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"lokidoki102"},"content":"            editBuyerDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"lokidoki102"},"content":"        if (argMultimap.getValue(PREFIX_HOUSING_TYPE).isPresent()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"lokidoki102"},"content":"            editBuyerDescriptor.setHousingType(ParserUtil.parseHousing(argMultimap","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"lokidoki102"},"content":"                    .getValue(PREFIX_HOUSING_TYPE).get()));","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"lokidoki102"},"content":"        if (argMultimap.getValue(PREFIX_BUDGET).isPresent()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"lokidoki102"},"content":"            editBuyerDescriptor.setBudget(ParserUtil.parseBudget(argMultimap","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"lokidoki102"},"content":"                    .getValue(PREFIX_BUDGET).get()));","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"lokidoki102"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editBuyerDescriptor::setTags);","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"lokidoki102"},"content":"        if (!editBuyerDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"lokidoki102"},"content":"            throw new ParseException(EditBuyerCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"redcolorbicycle"},"content":"        return new EditBuyerCommand(index, editBuyerDescriptor);","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"lokidoki102"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"lokidoki102"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"lokidoki102"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"lokidoki102"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"lokidoki102"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"lokidoki102"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"lokidoki102"},"content":"            return Optional.empty();","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":88,"author":{"gitId":"felixchanyy"},"content":"        Collection\u003cString\u003e tagSet;","lastModifiedDate":"2024-04-12"},{"lineNumber":89,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":90,"author":{"gitId":"felixchanyy"},"content":"        if (tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":91,"author":{"gitId":"felixchanyy"},"content":"            tagSet \u003d Collections.emptySet();","lastModifiedDate":"2024-04-12"},{"lineNumber":92,"author":{"gitId":"felixchanyy"},"content":"        } else {","lastModifiedDate":"2024-04-12"},{"lineNumber":93,"author":{"gitId":"felixchanyy"},"content":"            tagSet \u003d tags;","lastModifiedDate":"2024-04-12"},{"lineNumber":94,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":95,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":96,"author":{"gitId":"lokidoki102"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"redcolorbicycle":19,"felixchanyy":9,"lokidoki102":70}},{"path":"src/main/java/seedu/address/logic/parser/EditSellerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.logic.commands.EditSellerCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.logic.commands.EditSellerCommand.EditSellerDescriptor;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":" * Parses input arguments and creates a new EditSellerCommand object","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"public class EditSellerCommandParser implements Parser\u003cEditSellerCommand\u003e {","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"     * Parses the given {@code String} of arguments in the context of the EditSellerCommand","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"     * and returns an EditSellerCommand object for execution.","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"    public EditSellerCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL);","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"                    EditSellerCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL);","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"        EditSellerDescriptor editSellerDescriptor \u003d new EditSellerDescriptor();","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"            editSellerDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"            editSellerDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"lokidoki102"},"content":"            editSellerDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"lokidoki102"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editSellerDescriptor::setTags);","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"lokidoki102"},"content":"        if (!editSellerDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"lokidoki102"},"content":"            throw new ParseException(EditSellerCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"lokidoki102"},"content":"        return new EditSellerCommand(index, editSellerDescriptor);","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":80,"author":{"gitId":"felixchanyy"},"content":"        Collection\u003cString\u003e tagSet;","lastModifiedDate":"2024-04-12"},{"lineNumber":81,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":82,"author":{"gitId":"felixchanyy"},"content":"        if (tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":83,"author":{"gitId":"felixchanyy"},"content":"            tagSet \u003d Collections.emptySet();","lastModifiedDate":"2024-04-12"},{"lineNumber":84,"author":{"gitId":"felixchanyy"},"content":"        } else {","lastModifiedDate":"2024-04-12"},{"lineNumber":85,"author":{"gitId":"felixchanyy"},"content":"            tagSet \u003d tags;","lastModifiedDate":"2024-04-12"},{"lineNumber":86,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":87,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"redcolorbicycle":1,"felixchanyy":9,"-":62,"lokidoki102":19}},{"path":"src/main/java/seedu/address/logic/parser/MatchBuyerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.logic.commands.MatchBuyerCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.person.FullNameEqualsKeywordPredicate;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"felixchanyy"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"felixchanyy"},"content":" * Parses input arguments and creates a new MatchBuyerCommand object","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"felixchanyy"},"content":"public class MatchBuyerCommandParser implements Parser\u003cMatchBuyerCommand\u003e {","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"     * Parses the given {@code String} of arguments in the context of the MatchBuyerCommand","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"     * and returns a MatchBuyerCommand object for execution.","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":"    public MatchBuyerCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"felixchanyy"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"felixchanyy"},"content":"            throw new ParseException(","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"felixchanyy"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MatchBuyerCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"felixchanyy"},"content":"        return new MatchBuyerCommand(new FullNameEqualsKeywordPredicate(trimmedArgs));","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"felixchanyy"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"felixchanyy":29}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.house.Block;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.House;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.HousingType;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.house.Level;","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.PostalCode;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.house.Price;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.house.Street;","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.house.UnitNumber;","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.person.Budget;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":117,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":118,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"KhoonSun47"},"content":"     * Parses a {@code String houseType} into a {@code String houseType}.","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"redcolorbicycle"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":122,"author":{"gitId":"KhoonSun47"},"content":"     * @throws ParseException if the given {@code String houseType} is invalid.","lastModifiedDate":"2024-03-21"},{"lineNumber":123,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":124,"author":{"gitId":"redcolorbicycle"},"content":"    public static HousingType parseHousing(String houseType) throws ParseException {","lastModifiedDate":"2024-03-29"},{"lineNumber":125,"author":{"gitId":"KhoonSun47"},"content":"        requireNonNull(houseType);","lastModifiedDate":"2024-03-21"},{"lineNumber":126,"author":{"gitId":"KhoonSun47"},"content":"        String trimmedName \u003d houseType.trim();","lastModifiedDate":"2024-03-21"},{"lineNumber":127,"author":{"gitId":"KhoonSun47"},"content":"        if (!House.isValidName(trimmedName)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":128,"author":{"gitId":"KhoonSun47"},"content":"            throw new ParseException(HousingType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":129,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":130,"author":{"gitId":"redcolorbicycle"},"content":"        return new HousingType(trimmedName);","lastModifiedDate":"2024-03-29"},{"lineNumber":131,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":132,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":133,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":134,"author":{"gitId":"lokidoki102"},"content":"     * Parses a {@code String street} into a {@code Street}.","lastModifiedDate":"2024-03-14"},{"lineNumber":135,"author":{"gitId":"lokidoki102"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-14"},{"lineNumber":136,"author":{"gitId":"lokidoki102"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":137,"author":{"gitId":"lokidoki102"},"content":"     * @throws ParseException if the given {@code street} is invalid.","lastModifiedDate":"2024-03-14"},{"lineNumber":138,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":139,"author":{"gitId":"lokidoki102"},"content":"    public static Street parseStreet(String street) throws ParseException {","lastModifiedDate":"2024-03-14"},{"lineNumber":140,"author":{"gitId":"lokidoki102"},"content":"        requireNonNull(street);","lastModifiedDate":"2024-03-14"},{"lineNumber":141,"author":{"gitId":"lokidoki102"},"content":"        String trimmedStreet \u003d street.trim();","lastModifiedDate":"2024-03-14"},{"lineNumber":142,"author":{"gitId":"lokidoki102"},"content":"        if (!Street.isValidStreet(trimmedStreet)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":143,"author":{"gitId":"lokidoki102"},"content":"            throw new ParseException(Street.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":144,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":145,"author":{"gitId":"lokidoki102"},"content":"        return new Street(trimmedStreet);","lastModifiedDate":"2024-03-14"},{"lineNumber":146,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":147,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":148,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":149,"author":{"gitId":"lokidoki102"},"content":"     * Parses a {@code String level} into a {@code Level}.","lastModifiedDate":"2024-03-14"},{"lineNumber":150,"author":{"gitId":"lokidoki102"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-14"},{"lineNumber":151,"author":{"gitId":"lokidoki102"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":152,"author":{"gitId":"lokidoki102"},"content":"     * @throws ParseException if the given {@code level} is invalid.","lastModifiedDate":"2024-03-14"},{"lineNumber":153,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":154,"author":{"gitId":"lokidoki102"},"content":"    public static Level parseLevel(String level) throws ParseException {","lastModifiedDate":"2024-03-14"},{"lineNumber":155,"author":{"gitId":"lokidoki102"},"content":"        requireNonNull(level);","lastModifiedDate":"2024-03-14"},{"lineNumber":156,"author":{"gitId":"lokidoki102"},"content":"        String trimmedLevel \u003d level.trim();","lastModifiedDate":"2024-03-14"},{"lineNumber":157,"author":{"gitId":"lokidoki102"},"content":"        if (!Level.isValidLevel(trimmedLevel)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":158,"author":{"gitId":"lokidoki102"},"content":"            throw new ParseException(Level.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":159,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":160,"author":{"gitId":"lokidoki102"},"content":"        return new Level(trimmedLevel);","lastModifiedDate":"2024-03-14"},{"lineNumber":161,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":162,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":163,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":164,"author":{"gitId":"KhoonSun47"},"content":"     * Parses a {@code String unitNumber} into a {@code unitNumber}.","lastModifiedDate":"2024-03-14"},{"lineNumber":165,"author":{"gitId":"KhoonSun47"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-14"},{"lineNumber":166,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":167,"author":{"gitId":"KhoonSun47"},"content":"     * @throws ParseException if the given {@code unitNumber} is invalid.","lastModifiedDate":"2024-03-14"},{"lineNumber":168,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":169,"author":{"gitId":"KhoonSun47"},"content":"    public static UnitNumber parseUnitNumber(String unitNumber) throws ParseException {","lastModifiedDate":"2024-03-14"},{"lineNumber":170,"author":{"gitId":"KhoonSun47"},"content":"        requireNonNull(unitNumber);","lastModifiedDate":"2024-03-14"},{"lineNumber":171,"author":{"gitId":"KhoonSun47"},"content":"        String trimmedLevel \u003d unitNumber.trim();","lastModifiedDate":"2024-03-14"},{"lineNumber":172,"author":{"gitId":"KhoonSun47"},"content":"        if (!UnitNumber.isValidUnitNumber(trimmedLevel)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":173,"author":{"gitId":"KhoonSun47"},"content":"            throw new ParseException(UnitNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":174,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":175,"author":{"gitId":"KhoonSun47"},"content":"        return new UnitNumber(trimmedLevel);","lastModifiedDate":"2024-03-14"},{"lineNumber":176,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":177,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":178,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":179,"author":{"gitId":"lokidoki102"},"content":"     * Parses a {@code String block} into an {@code Block}.","lastModifiedDate":"2024-03-14"},{"lineNumber":180,"author":{"gitId":"lokidoki102"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-14"},{"lineNumber":181,"author":{"gitId":"lokidoki102"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":182,"author":{"gitId":"lokidoki102"},"content":"     * @throws ParseException if the given {@code block} is invalid.","lastModifiedDate":"2024-03-14"},{"lineNumber":183,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":184,"author":{"gitId":"lokidoki102"},"content":"    public static Block parseBlock(String block) throws ParseException {","lastModifiedDate":"2024-03-14"},{"lineNumber":185,"author":{"gitId":"lokidoki102"},"content":"        requireNonNull(block);","lastModifiedDate":"2024-03-14"},{"lineNumber":186,"author":{"gitId":"lokidoki102"},"content":"        String trimmedBlock \u003d block.trim();","lastModifiedDate":"2024-03-14"},{"lineNumber":187,"author":{"gitId":"lokidoki102"},"content":"        if (!Block.isValidBlock(trimmedBlock)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":188,"author":{"gitId":"lokidoki102"},"content":"            throw new ParseException(Block.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":189,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":190,"author":{"gitId":"lokidoki102"},"content":"        return new Block(trimmedBlock);","lastModifiedDate":"2024-03-14"},{"lineNumber":191,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":192,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":193,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":194,"author":{"gitId":"KhoonSun47"},"content":"     * Parses a {@code String postalCode} into a {@code postalCode}.","lastModifiedDate":"2024-03-12"},{"lineNumber":195,"author":{"gitId":"KhoonSun47"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-12"},{"lineNumber":196,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":197,"author":{"gitId":"KhoonSun47"},"content":"     * @throws ParseException if the given {@code postalCode} is invalid.","lastModifiedDate":"2024-03-12"},{"lineNumber":198,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":199,"author":{"gitId":"KhoonSun47"},"content":"    public static PostalCode parsePostalCode(String postalCode) throws ParseException {","lastModifiedDate":"2024-03-12"},{"lineNumber":200,"author":{"gitId":"KhoonSun47"},"content":"        requireNonNull(postalCode);","lastModifiedDate":"2024-03-12"},{"lineNumber":201,"author":{"gitId":"KhoonSun47"},"content":"        String trimmedPostalCode \u003d postalCode.trim();","lastModifiedDate":"2024-03-12"},{"lineNumber":202,"author":{"gitId":"KhoonSun47"},"content":"        if (!PostalCode.isValidPostalCode(trimmedPostalCode)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":203,"author":{"gitId":"KhoonSun47"},"content":"            throw new ParseException(PostalCode.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":204,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":205,"author":{"gitId":"KhoonSun47"},"content":"        return new PostalCode(trimmedPostalCode);","lastModifiedDate":"2024-03-15"},{"lineNumber":206,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":207,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":208,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":209,"author":{"gitId":"felixchanyy"},"content":"     * Parses a {@code String budget} into an {@code Budget}","lastModifiedDate":"2024-03-29"},{"lineNumber":210,"author":{"gitId":"felixchanyy"},"content":"     * Loading and trailing whitespaces will be trimmed","lastModifiedDate":"2024-03-29"},{"lineNumber":211,"author":{"gitId":"felixchanyy"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":212,"author":{"gitId":"felixchanyy"},"content":"     * @throws ParseException if the given {@code budget} is invalid","lastModifiedDate":"2024-03-29"},{"lineNumber":213,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":214,"author":{"gitId":"felixchanyy"},"content":"    public static Budget parseBudget(String budget) throws ParseException {","lastModifiedDate":"2024-03-29"},{"lineNumber":215,"author":{"gitId":"felixchanyy"},"content":"        requireNonNull(budget);","lastModifiedDate":"2024-03-29"},{"lineNumber":216,"author":{"gitId":"felixchanyy"},"content":"        String trimmedBudget \u003d budget.trim();","lastModifiedDate":"2024-03-29"},{"lineNumber":217,"author":{"gitId":"felixchanyy"},"content":"        if (!Budget.isValidBudget(trimmedBudget)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":218,"author":{"gitId":"felixchanyy"},"content":"            throw new ParseException(Budget.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-29"},{"lineNumber":219,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":220,"author":{"gitId":"felixchanyy"},"content":"        return new Budget(trimmedBudget);","lastModifiedDate":"2024-03-29"},{"lineNumber":221,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":222,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":223,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":224,"author":{"gitId":"felixchanyy"},"content":"     * Parses a {@code String price} into an {@code Price}.","lastModifiedDate":"2024-04-01"},{"lineNumber":225,"author":{"gitId":"felixchanyy"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-04-01"},{"lineNumber":226,"author":{"gitId":"felixchanyy"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":227,"author":{"gitId":"felixchanyy"},"content":"     * @throws ParseException if the given {@code price} is invalid.","lastModifiedDate":"2024-04-01"},{"lineNumber":228,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":229,"author":{"gitId":"felixchanyy"},"content":"    public static Price parsePrice(String price) throws ParseException {","lastModifiedDate":"2024-04-01"},{"lineNumber":230,"author":{"gitId":"felixchanyy"},"content":"        requireNonNull(price);","lastModifiedDate":"2024-04-01"},{"lineNumber":231,"author":{"gitId":"felixchanyy"},"content":"        String trimmedPrice \u003d price.trim();","lastModifiedDate":"2024-04-01"},{"lineNumber":232,"author":{"gitId":"felixchanyy"},"content":"        if (!Price.isValidPrice(trimmedPrice)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":233,"author":{"gitId":"felixchanyy"},"content":"            throw new ParseException(Price.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-01"},{"lineNumber":234,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":235,"author":{"gitId":"felixchanyy"},"content":"        return new Price(trimmedPrice);","lastModifiedDate":"2024-04-01"},{"lineNumber":236,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"redcolorbicycle":11,"felixchanyy":40,"KhoonSun47":35,"-":107,"lokidoki102":44}},{"path":"src/main/java/seedu/address/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zengzihui"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"zengzihui"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"zengzihui"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"zengzihui"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"zengzihui"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"zengzihui"},"content":" * Parses input arguments and creates a new ViewCommand object","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"zengzihui"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"zengzihui"},"content":"public class ViewCommandParser implements Parser\u003cViewCommand\u003e {","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"zengzihui"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"zengzihui"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewCommand","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"zengzihui"},"content":"     * and returns a ViewCommand object for execution.","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"zengzihui"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"zengzihui"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"zengzihui"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"zengzihui"},"content":"    public ViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"zengzihui"},"content":"        try {","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"zengzihui"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"zengzihui"},"content":"            return new ViewCommand(index);","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"zengzihui"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"zengzihui"},"content":"            throw new ParseException(","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"zengzihui"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"zengzihui"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"zengzihui":30}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.House;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.UniqueHouseList;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.person.Seller;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"    private final UniqueHouseList houses;","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":34,"author":{"gitId":"redcolorbicycle"},"content":"        houses \u003d new UniqueHouseList();","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"redcolorbicycle"},"content":"     * Replaces the contents of the house list with {@code houses}.","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"redcolorbicycle"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"redcolorbicycle"},"content":"    public void setHouses(List\u003cHouse\u003e houses) {","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"redcolorbicycle"},"content":"        this.houses.setHouses(houses);","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":72,"author":{"gitId":"redcolorbicycle"},"content":"        setHouses(newData.getHouseList());","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":78,"author":{"gitId":"redcolorbicycle"},"content":"     * Returns a person with the name as {@code name}.","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"redcolorbicycle"},"content":"    public Person findPersonByName(Name name) {","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"redcolorbicycle"},"content":"        requireNonNull(name);","lastModifiedDate":"2024-04-01"},{"lineNumber":82,"author":{"gitId":"redcolorbicycle"},"content":"        return persons.findPersonByName(name);","lastModifiedDate":"2024-04-01"},{"lineNumber":83,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":84,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":85,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"felixchanyy"},"content":"     * Returns true if a house with the same identity as {@code housse} exists in EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":87,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":88,"author":{"gitId":"redcolorbicycle"},"content":"    public boolean hasHouse(House house) {","lastModifiedDate":"2024-04-01"},{"lineNumber":89,"author":{"gitId":"redcolorbicycle"},"content":"        requireNonNull(house);","lastModifiedDate":"2024-04-01"},{"lineNumber":90,"author":{"gitId":"redcolorbicycle"},"content":"        return houses.contains(house);","lastModifiedDate":"2024-04-01"},{"lineNumber":91,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":92,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"felixchanyy"},"content":"     * Returns true if a person with the same identity as {@code person} exists in EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":102,"author":{"gitId":"felixchanyy"},"content":"     * Returns true if a person with the same String name as {@code person} exists in EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":103,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":104,"author":{"gitId":"redcolorbicycle"},"content":"    public boolean hasPerson(Name name) {","lastModifiedDate":"2024-04-01"},{"lineNumber":105,"author":{"gitId":"redcolorbicycle"},"content":"        requireNonNull(name);","lastModifiedDate":"2024-04-01"},{"lineNumber":106,"author":{"gitId":"redcolorbicycle"},"content":"        return persons.contains(name);","lastModifiedDate":"2024-04-01"},{"lineNumber":107,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":108,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"felixchanyy"},"content":"     * Adds a person to EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":111,"author":{"gitId":"felixchanyy"},"content":"     * The person must not already exist in EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":118,"author":{"gitId":"felixchanyy"},"content":"     * Adds a house to a person in EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":119,"author":{"gitId":"redcolorbicycle"},"content":"     * The house must not already exist in the person\u0027s houses.","lastModifiedDate":"2024-04-01"},{"lineNumber":120,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":121,"author":{"gitId":"redcolorbicycle"},"content":"    public void addHouse(House house, Person owner) {","lastModifiedDate":"2024-04-01"},{"lineNumber":122,"author":{"gitId":"redcolorbicycle"},"content":"        persons.addHouse(house, owner);","lastModifiedDate":"2024-04-01"},{"lineNumber":123,"author":{"gitId":"redcolorbicycle"},"content":"        houses.add(house);","lastModifiedDate":"2024-04-01"},{"lineNumber":124,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":125,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":126,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":127,"author":{"gitId":"redcolorbicycle"},"content":"     * Adds a house to internal list.","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"redcolorbicycle"},"content":"     * The house must not already exist in the person\u0027s houses.","lastModifiedDate":"2024-04-02"},{"lineNumber":129,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":130,"author":{"gitId":"redcolorbicycle"},"content":"    public void addHouseToHouses(House house) {","lastModifiedDate":"2024-04-02"},{"lineNumber":131,"author":{"gitId":"redcolorbicycle"},"content":"        houses.add(house);","lastModifiedDate":"2024-04-02"},{"lineNumber":132,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":133,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"felixchanyy"},"content":"     * {@code target} must exist in EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":137,"author":{"gitId":"felixchanyy"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"felixchanyy"},"content":"     * {@code key} must exist in EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":150,"author":{"gitId":"redcolorbicycle"},"content":"        if (key instanceof Seller) {","lastModifiedDate":"2024-04-02"},{"lineNumber":151,"author":{"gitId":"redcolorbicycle"},"content":"            Seller seller \u003d (Seller) key;","lastModifiedDate":"2024-04-02"},{"lineNumber":152,"author":{"gitId":"KhoonSun47"},"content":"            if (!seller.getHouses().isEmpty()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":153,"author":{"gitId":"KhoonSun47"},"content":"                for (House h: seller.getHouses()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":154,"author":{"gitId":"redcolorbicycle"},"content":"                    houses.remove(h);","lastModifiedDate":"2024-04-02"},{"lineNumber":155,"author":{"gitId":"redcolorbicycle"},"content":"                }","lastModifiedDate":"2024-04-02"},{"lineNumber":156,"author":{"gitId":"redcolorbicycle"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":157,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":162,"author":{"gitId":"KhoonSun47"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2024-04-03"},{"lineNumber":163,"author":{"gitId":"felixchanyy"},"content":"     * {@code key} must exist in EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":164,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":165,"author":{"gitId":"KhoonSun47"},"content":"    public void removePersonFromPersons(Person key) {","lastModifiedDate":"2024-04-03"},{"lineNumber":166,"author":{"gitId":"KhoonSun47"},"content":"        persons.remove(key);","lastModifiedDate":"2024-04-03"},{"lineNumber":167,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":168,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":169,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":170,"author":{"gitId":"redcolorbicycle"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2024-04-01"},{"lineNumber":171,"author":{"gitId":"felixchanyy"},"content":"     * {@code key} must exist in EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":172,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":173,"author":{"gitId":"redcolorbicycle"},"content":"    public void removeHouse(House house, Person owner) {","lastModifiedDate":"2024-04-01"},{"lineNumber":174,"author":{"gitId":"redcolorbicycle"},"content":"        persons.removeHouse(house, owner);","lastModifiedDate":"2024-04-01"},{"lineNumber":175,"author":{"gitId":"redcolorbicycle"},"content":"        houses.remove(house);","lastModifiedDate":"2024-04-01"},{"lineNumber":176,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":177,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":192,"author":{"gitId":"redcolorbicycle"},"content":"    public ObservableList\u003cHouse\u003e getHouseList() {","lastModifiedDate":"2024-04-03"},{"lineNumber":193,"author":{"gitId":"redcolorbicycle"},"content":"        return houses.asUnmodifiableObservableListHouse();","lastModifiedDate":"2024-04-03"},{"lineNumber":194,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":195,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"redcolorbicycle":69,"felixchanyy":11,"KhoonSun47":9,"-":126}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.house.House;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.house.PriceAndHousingTypePredicate;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.person.Seller;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"zengzihui"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"felixchanyy"},"content":"     * Returns the user prefs\u0027 EstateEase file path.","lastModifiedDate":"2024-04-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"felixchanyy"},"content":"     * Sets the user prefs\u0027 EstateEase file path.","lastModifiedDate":"2024-04-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"felixchanyy"},"content":"     * Replaces EstateEase data with the data in {@code addressBook}.","lastModifiedDate":"2024-04-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"redcolorbicycle"},"content":"     * Returns the person with the unique name {@code name} .","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"redcolorbicycle"},"content":"    Person findPersonByName(Name name);","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"felixchanyy"},"content":"     * Returns true if a person who is the same object as {@code person} exists in EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"felixchanyy"},"content":"     * Returns true if a person with the same name as {@code person} exists in EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":72,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"redcolorbicycle"},"content":"    boolean hasPerson(Name name);","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":75,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":76,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":77,"author":{"gitId":"felixchanyy"},"content":"     * Returns true if a house with the same address details as {@code house} exists in EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":78,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"redcolorbicycle"},"content":"    boolean hasHouse(House house);","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"felixchanyy"},"content":"     * The person must exist in EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"KhoonSun47"},"content":"     * Deletes the given person.","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"felixchanyy"},"content":"     * The person must exist in EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":90,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"KhoonSun47"},"content":"    void deletePersonFromPersons(Person target);","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":94,"author":{"gitId":"redcolorbicycle"},"content":"     * Deletes the given house.","lastModifiedDate":"2024-04-01"},{"lineNumber":95,"author":{"gitId":"felixchanyy"},"content":"     * The house must belong to a seller in EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":96,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":97,"author":{"gitId":"redcolorbicycle"},"content":"    void deleteHouse(House house, Person owner);","lastModifiedDate":"2024-04-01"},{"lineNumber":98,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"felixchanyy"},"content":"     * {@code person} must not already exist in EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":105,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":106,"author":{"gitId":"redcolorbicycle"},"content":"     * Adds the given house.","lastModifiedDate":"2024-04-01"},{"lineNumber":107,"author":{"gitId":"felixchanyy"},"content":"     * {@code house} must not already exist in the EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":108,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":109,"author":{"gitId":"redcolorbicycle"},"content":"    void addHouse(House house, Person person);","lastModifiedDate":"2024-04-01"},{"lineNumber":110,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":111,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"redcolorbicycle"},"content":"     * Adds the given house.","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"felixchanyy"},"content":"     * {@code house} must not already exist in the EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":114,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"redcolorbicycle"},"content":"    void addHouseToHouses(House house);","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":119,"author":{"gitId":"felixchanyy"},"content":"     * {@code target} must exist in EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":120,"author":{"gitId":"felixchanyy"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":124,"author":{"gitId":"zengzihui"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"zengzihui"},"content":"     * Returns the current ui state of the program.","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"zengzihui"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":127,"author":{"gitId":"zengzihui"},"content":"    State getState();","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":129,"author":{"gitId":"zengzihui"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":130,"author":{"gitId":"zengzihui"},"content":"     * Update the ui state of the program.","lastModifiedDate":"2024-04-02"},{"lineNumber":131,"author":{"gitId":"zengzihui"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":132,"author":{"gitId":"zengzihui"},"content":"    void setState(State newState);","lastModifiedDate":"2024-04-02"},{"lineNumber":133,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":134,"author":{"gitId":"zengzihui"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":135,"author":{"gitId":"zengzihui"},"content":"     * Check if the new ui state is same as the current ui state.","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"zengzihui"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"zengzihui"},"content":"    boolean isSameState(State newState);","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":139,"author":{"gitId":"zengzihui"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":140,"author":{"gitId":"zengzihui"},"content":"     * Initialise the ui.","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"zengzihui"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":142,"author":{"gitId":"zengzihui"},"content":"    void setUi(Ui ui);","lastModifiedDate":"2024-04-02"},{"lineNumber":143,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":144,"author":{"gitId":"zengzihui"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":145,"author":{"gitId":"zengzihui"},"content":"     * Displays the given person.","lastModifiedDate":"2024-04-01"},{"lineNumber":146,"author":{"gitId":"felixchanyy"},"content":"     * {@code target} must exist in EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":147,"author":{"gitId":"zengzihui"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":148,"author":{"gitId":"zengzihui"},"content":"    void showPerson(Person target);","lastModifiedDate":"2024-04-01"},{"lineNumber":149,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":150,"author":{"gitId":"zengzihui"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":151,"author":{"gitId":"zengzihui"},"content":"     * Displays the match results of the buyer.","lastModifiedDate":"2024-04-03"},{"lineNumber":152,"author":{"gitId":"zengzihui"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":153,"author":{"gitId":"zengzihui"},"content":"    void showMatchResults(ObservableList\u003cSeller\u003e seller);","lastModifiedDate":"2024-04-03"},{"lineNumber":154,"author":{"gitId":"zengzihui"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":155,"author":{"gitId":"zengzihui"},"content":"     * Returns the person for viewing details.","lastModifiedDate":"2024-04-02"},{"lineNumber":156,"author":{"gitId":"zengzihui"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":157,"author":{"gitId":"zengzihui"},"content":"    Person getPerson();","lastModifiedDate":"2024-04-02"},{"lineNumber":158,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":167,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":168,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":169,"author":{"gitId":"felixchanyy"},"content":"     * Updates the filtered list of sellers based on the given price and housing type predicate.","lastModifiedDate":"2024-04-01"},{"lineNumber":170,"author":{"gitId":"felixchanyy"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":171,"author":{"gitId":"felixchanyy"},"content":"     * @param predicate The predicate to filter the sellers.","lastModifiedDate":"2024-04-01"},{"lineNumber":172,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":173,"author":{"gitId":"felixchanyy"},"content":"    void updateFilteredSellerList(PriceAndHousingTypePredicate predicate);","lastModifiedDate":"2024-04-01"},{"lineNumber":174,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":175,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":176,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":177,"author":{"gitId":"felixchanyy"},"content":"     * Retrieves the filtered list of sellers.","lastModifiedDate":"2024-04-01"},{"lineNumber":178,"author":{"gitId":"felixchanyy"},"content":"     * @return The filtered list of sellers.","lastModifiedDate":"2024-04-01"},{"lineNumber":179,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":180,"author":{"gitId":"zengzihui"},"content":"    public ObservableList\u003cHouse\u003e getAllFilteredHouseList(PriceAndHousingTypePredicate predicate);","lastModifiedDate":"2024-04-03"},{"lineNumber":181,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":182,"author":{"gitId":"felixchanyy"},"content":"    /** Returns an unmodifiable view of seller list*/","lastModifiedDate":"2024-04-02"},{"lineNumber":183,"author":{"gitId":"zengzihui"},"content":"    public ObservableList\u003cSeller\u003e getFilteredSellerList();","lastModifiedDate":"2024-04-03"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"redcolorbicycle":30,"zengzihui":37,"felixchanyy":33,"KhoonSun47":5,"-":79}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"zengzihui"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"felixchanyy"},"content":"import java.util.Collection;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.house.House;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.house.PriceAndHousingTypePredicate;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.person.Seller;","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"zengzihui"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"felixchanyy"},"content":" * Represents the in-memory model of the EstateEase data.","lastModifiedDate":"2024-04-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"zengzihui"},"content":"    private ObservableList\u003cSeller\u003e filteredSellers;","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"zengzihui"},"content":"    private Ui ui \u003d null;","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"zengzihui"},"content":"    private State state \u003d State.PERSON_LIST;","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"zengzihui"},"content":"    private Person currentDisplayedPerson \u003d null;","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"felixchanyy"},"content":"        logger.fine(\"Initializing with EstateEase: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2024-04-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"zengzihui"},"content":"        filteredSellers \u003d new FilteredList\u003c\u003e(FXCollections.observableArrayList());","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":101,"author":{"gitId":"redcolorbicycle"},"content":"    public Person findPersonByName(Name name) {","lastModifiedDate":"2024-04-01"},{"lineNumber":102,"author":{"gitId":"redcolorbicycle"},"content":"        requireNonNull(name);","lastModifiedDate":"2024-04-01"},{"lineNumber":103,"author":{"gitId":"redcolorbicycle"},"content":"        return addressBook.findPersonByName(name);","lastModifiedDate":"2024-04-01"},{"lineNumber":104,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":105,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":112,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":113,"author":{"gitId":"redcolorbicycle"},"content":"    public boolean hasPerson(Name name) {","lastModifiedDate":"2024-04-01"},{"lineNumber":114,"author":{"gitId":"redcolorbicycle"},"content":"        requireNonNull(name);","lastModifiedDate":"2024-04-01"},{"lineNumber":115,"author":{"gitId":"redcolorbicycle"},"content":"        return addressBook.hasPerson(name);","lastModifiedDate":"2024-04-01"},{"lineNumber":116,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":117,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":118,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":119,"author":{"gitId":"redcolorbicycle"},"content":"    public boolean hasHouse(House house) {","lastModifiedDate":"2024-04-01"},{"lineNumber":120,"author":{"gitId":"redcolorbicycle"},"content":"        requireNonNull(house);","lastModifiedDate":"2024-04-01"},{"lineNumber":121,"author":{"gitId":"redcolorbicycle"},"content":"        return addressBook.hasHouse(house);","lastModifiedDate":"2024-04-01"},{"lineNumber":122,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":123,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"KhoonSun47"},"content":"    public void deletePersonFromPersons(Person target) {","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"KhoonSun47"},"content":"        addressBook.removePersonFromPersons(target);","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":133,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":135,"author":{"gitId":"redcolorbicycle"},"content":"    public void deleteHouse(House house, Person owner) {","lastModifiedDate":"2024-04-01"},{"lineNumber":136,"author":{"gitId":"redcolorbicycle"},"content":"        addressBook.removeHouse(house, owner);","lastModifiedDate":"2024-04-01"},{"lineNumber":137,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":138,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":145,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":146,"author":{"gitId":"redcolorbicycle"},"content":"    public void addHouse(House house, Person owner) {","lastModifiedDate":"2024-04-01"},{"lineNumber":147,"author":{"gitId":"redcolorbicycle"},"content":"        addressBook.addHouse(house, owner);","lastModifiedDate":"2024-04-01"},{"lineNumber":148,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":149,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":150,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":151,"author":{"gitId":"redcolorbicycle"},"content":"    public void addHouseToHouses(House house) {","lastModifiedDate":"2024-04-02"},{"lineNumber":152,"author":{"gitId":"redcolorbicycle"},"content":"        addressBook.addHouseToHouses(house);","lastModifiedDate":"2024-04-02"},{"lineNumber":153,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":154,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":176,"author":{"gitId":"zengzihui"},"content":"    public State getState() {","lastModifiedDate":"2024-04-02"},{"lineNumber":177,"author":{"gitId":"zengzihui"},"content":"        return state;","lastModifiedDate":"2024-04-02"},{"lineNumber":178,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":179,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":180,"author":{"gitId":"zengzihui"},"content":"    public void setState(State newState) {","lastModifiedDate":"2024-04-02"},{"lineNumber":181,"author":{"gitId":"zengzihui"},"content":"        boolean isStateChanged \u003d isSameState(newState);","lastModifiedDate":"2024-04-02"},{"lineNumber":182,"author":{"gitId":"zengzihui"},"content":"        if (!isStateChanged) {","lastModifiedDate":"2024-04-02"},{"lineNumber":183,"author":{"gitId":"zengzihui"},"content":"            state \u003d newState;","lastModifiedDate":"2024-04-02"},{"lineNumber":184,"author":{"gitId":"zengzihui"},"content":"            if (ui !\u003d null) {","lastModifiedDate":"2024-04-02"},{"lineNumber":185,"author":{"gitId":"zengzihui"},"content":"                ui.updateUiLayout(newState);","lastModifiedDate":"2024-04-02"},{"lineNumber":186,"author":{"gitId":"zengzihui"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":187,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":188,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":189,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":190,"author":{"gitId":"zengzihui"},"content":"    public boolean isSameState(State newState) {","lastModifiedDate":"2024-04-02"},{"lineNumber":191,"author":{"gitId":"zengzihui"},"content":"        return state.equals(newState);","lastModifiedDate":"2024-04-02"},{"lineNumber":192,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":193,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":194,"author":{"gitId":"zengzihui"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":195,"author":{"gitId":"zengzihui"},"content":"    public void setUi(Ui ui) {","lastModifiedDate":"2024-04-02"},{"lineNumber":196,"author":{"gitId":"zengzihui"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-04-02"},{"lineNumber":197,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":198,"author":{"gitId":"zengzihui"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":199,"author":{"gitId":"zengzihui"},"content":"    public void showPerson(Person target) {","lastModifiedDate":"2024-04-02"},{"lineNumber":200,"author":{"gitId":"zengzihui"},"content":"        requireNonNull(target);","lastModifiedDate":"2024-04-02"},{"lineNumber":201,"author":{"gitId":"zengzihui"},"content":"        this.currentDisplayedPerson \u003d target;","lastModifiedDate":"2024-04-02"},{"lineNumber":202,"author":{"gitId":"zengzihui"},"content":"        if (ui !\u003d null) {","lastModifiedDate":"2024-04-02"},{"lineNumber":203,"author":{"gitId":"zengzihui"},"content":"            ui.showPersonDetails(currentDisplayedPerson);","lastModifiedDate":"2024-04-02"},{"lineNumber":204,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":205,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":206,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":207,"author":{"gitId":"zengzihui"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":208,"author":{"gitId":"zengzihui"},"content":"    public void showMatchResults(ObservableList\u003cSeller\u003e seller) {","lastModifiedDate":"2024-04-03"},{"lineNumber":209,"author":{"gitId":"zengzihui"},"content":"        requireNonNull(seller);","lastModifiedDate":"2024-04-03"},{"lineNumber":210,"author":{"gitId":"zengzihui"},"content":"        if (ui !\u003d null) {","lastModifiedDate":"2024-04-03"},{"lineNumber":211,"author":{"gitId":"zengzihui"},"content":"            ui.showMatchResults(filteredSellers);","lastModifiedDate":"2024-04-03"},{"lineNumber":212,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":213,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":214,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":215,"author":{"gitId":"zengzihui"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":216,"author":{"gitId":"zengzihui"},"content":"    public Person getPerson() {","lastModifiedDate":"2024-04-02"},{"lineNumber":217,"author":{"gitId":"zengzihui"},"content":"        return this.currentDisplayedPerson;","lastModifiedDate":"2024-04-02"},{"lineNumber":218,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":219,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":220,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":221,"author":{"gitId":"felixchanyy"},"content":"    public void updateFilteredSellerList(PriceAndHousingTypePredicate predicate) {","lastModifiedDate":"2024-04-01"},{"lineNumber":222,"author":{"gitId":"felixchanyy"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2024-04-01"},{"lineNumber":223,"author":{"gitId":"felixchanyy"},"content":"        filteredSellers.clear();","lastModifiedDate":"2024-04-02"},{"lineNumber":224,"author":{"gitId":"zengzihui"},"content":"        ArrayList\u003cSeller\u003e temp \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":225,"author":{"gitId":"felixchanyy"},"content":"        filteredPersons.setPredicate(person -\u003e {","lastModifiedDate":"2024-04-02"},{"lineNumber":226,"author":{"gitId":"felixchanyy"},"content":"            if (person instanceof Seller) {","lastModifiedDate":"2024-04-02"},{"lineNumber":227,"author":{"gitId":"felixchanyy"},"content":"                Seller seller \u003d ((Seller) person).copy();","lastModifiedDate":"2024-04-02"},{"lineNumber":228,"author":{"gitId":"zengzihui"},"content":"                ObservableList\u003cHouse\u003e houses \u003d getFilteredHousesForSeller((Seller) person, predicate);","lastModifiedDate":"2024-04-03"},{"lineNumber":229,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":230,"author":{"gitId":"felixchanyy"},"content":"                if (houses.isEmpty()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":231,"author":{"gitId":"felixchanyy"},"content":"                    return false;","lastModifiedDate":"2024-04-02"},{"lineNumber":232,"author":{"gitId":"felixchanyy"},"content":"                }","lastModifiedDate":"2024-04-01"},{"lineNumber":233,"author":{"gitId":"KhoonSun47"},"content":"                seller.getHouses().clear();","lastModifiedDate":"2024-04-03"},{"lineNumber":234,"author":{"gitId":"felixchanyy"},"content":"                seller.getHouses().addAll(houses);","lastModifiedDate":"2024-04-12"},{"lineNumber":235,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":236,"author":{"gitId":"zengzihui"},"content":"                temp.add(seller);","lastModifiedDate":"2024-04-03"},{"lineNumber":237,"author":{"gitId":"felixchanyy"},"content":"                return true;","lastModifiedDate":"2024-04-02"},{"lineNumber":238,"author":{"gitId":"felixchanyy"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":239,"author":{"gitId":"felixchanyy"},"content":"            return false;","lastModifiedDate":"2024-04-02"},{"lineNumber":240,"author":{"gitId":"felixchanyy"},"content":"        });","lastModifiedDate":"2024-04-02"},{"lineNumber":241,"author":{"gitId":"felixchanyy"},"content":"        filteredSellers \u003d FXCollections.observableArrayList(temp);","lastModifiedDate":"2024-04-12"},{"lineNumber":242,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":243,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":244,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":245,"author":{"gitId":"zengzihui"},"content":"    public ObservableList\u003cSeller\u003e getFilteredSellerList() {","lastModifiedDate":"2024-04-03"},{"lineNumber":246,"author":{"gitId":"felixchanyy"},"content":"        return filteredSellers;","lastModifiedDate":"2024-04-02"},{"lineNumber":247,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":248,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":249,"author":{"gitId":"felixchanyy"},"content":"    //@@author felixchanyy","lastModifiedDate":"2024-04-12"},{"lineNumber":250,"author":{"gitId":"felixchanyy"},"content":"    private ObservableList\u003cHouse\u003e getFilteredHousesForSeller(Seller seller, PriceAndHousingTypePredicate predicate) {","lastModifiedDate":"2024-04-03"},{"lineNumber":251,"author":{"gitId":"felixchanyy"},"content":"        ObservableList\u003cHouse\u003e originalHouseList \u003d seller.getHouses();","lastModifiedDate":"2024-04-03"},{"lineNumber":252,"author":{"gitId":"felixchanyy"},"content":"        FilteredList\u003cHouse\u003e filteredHouseList \u003d new FilteredList\u003c\u003e(originalHouseList, predicate);","lastModifiedDate":"2024-04-03"},{"lineNumber":253,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":254,"author":{"gitId":"felixchanyy"},"content":"        ObservableList\u003cHouse\u003e convertedList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-04-03"},{"lineNumber":255,"author":{"gitId":"felixchanyy"},"content":"        convertedList.addAll(filteredHouseList);","lastModifiedDate":"2024-04-03"},{"lineNumber":256,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":257,"author":{"gitId":"felixchanyy"},"content":"        return convertedList;","lastModifiedDate":"2024-04-03"},{"lineNumber":258,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":259,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":260,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":261,"author":{"gitId":"felixchanyy"},"content":"    public ObservableList\u003cHouse\u003e getAllFilteredHouseList(PriceAndHousingTypePredicate predicate) {","lastModifiedDate":"2024-04-03"},{"lineNumber":262,"author":{"gitId":"felixchanyy"},"content":"        FilteredList\u003cPerson\u003e filteredSellers \u003d filteredPersons.filtered(person -\u003e person instanceof Seller);","lastModifiedDate":"2024-04-01"},{"lineNumber":263,"author":{"gitId":"felixchanyy"},"content":"        ObservableList\u003cHouse\u003e allHouses \u003d filteredSellers.stream()","lastModifiedDate":"2024-04-02"},{"lineNumber":264,"author":{"gitId":"felixchanyy"},"content":"                .map(seller -\u003e ((Seller) seller).getHouses())","lastModifiedDate":"2024-04-03"},{"lineNumber":265,"author":{"gitId":"felixchanyy"},"content":"                .flatMap(Collection::stream)","lastModifiedDate":"2024-04-02"},{"lineNumber":266,"author":{"gitId":"felixchanyy"},"content":"                .collect(Collectors.toCollection(FXCollections::observableArrayList));","lastModifiedDate":"2024-04-01"},{"lineNumber":267,"author":{"gitId":"felixchanyy"},"content":"        return allHouses.filtered(predicate);","lastModifiedDate":"2024-04-02"},{"lineNumber":268,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":269,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":270,"author":{"gitId":"felixchanyy"},"content":"    //@@author","lastModifiedDate":"2024-04-12"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":284,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":285,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":288,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"redcolorbicycle":34,"zengzihui":56,"felixchanyy":53,"KhoonSun47":6,"-":139}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.House;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"felixchanyy"},"content":" * Unmodifiable view of EstateEase","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"    ObservableList\u003cHouse\u003e getHouseList();","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"redcolorbicycle":2,"felixchanyy":1,"-":16}},{"path":"src/main/java/seedu/address/model/State.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zengzihui"},"content":"package seedu.address.model;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"zengzihui"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"zengzihui"},"content":" * Enum for different possible UI state of the program.","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"zengzihui"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"zengzihui"},"content":"public enum State {","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"zengzihui"},"content":"    PERSON_LIST,","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"zengzihui"},"content":"    PERSON_DETAILS,","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"zengzihui"},"content":"    MATCH_RESULTS;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"zengzihui"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"zengzihui":10}},{"path":"src/main/java/seedu/address/model/house/Block.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":" * Represents a House\u0027s block number.","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidBlock(String)}","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"public class Block {","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"            \"Block numbers should only contain numbers, with or without a letter as the end. \"","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"                    + \"There can only be at most 3 digits long.\";","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\d{1,3}[a-zA-Z]?$\";","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"    public static final String ZERO_REGEX \u003d \"^0+$\";","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"    public static final String ZERO_AND_ALPHABET_REGEX \u003d \"^0*[a-zA-Z]$\";","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"    public final String value;","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"     * Constructs a {@code Block}.","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"     * @param block A valid block number.","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"    public Block(String block) {","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"        requireNonNull(block);","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"        checkArgument(isValidBlock(block), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"        value \u003d block;","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"     * Returns true if a given string is a valid block number.","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"    public static boolean isValidBlock(String test) {","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"redcolorbicycle"},"content":"        if (test.equals(\"N/A\")) {","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"redcolorbicycle"},"content":"            return true;","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 !test.matches(ZERO_REGEX) \u0026\u0026 !test.matches(ZERO_AND_ALPHABET_REGEX);","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"    public String toString() {","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"        return value;","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"            return true;","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"        if (!(other instanceof Block)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"            return false;","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"lokidoki102"},"content":"        Block otherBlock \u003d (Block) other;","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"lokidoki102"},"content":"        return value.equals(otherBlock.value);","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"lokidoki102"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"lokidoki102"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"redcolorbicycle":3,"lokidoki102":61}},{"path":"src/main/java/seedu/address/model/house/Condominium.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":" * Represents a Condominium","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"public class Condominium implements House {","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"    public final PostalCode postalCode;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"    public final Street street;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"    public final UnitNumber unitNumber;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"    public final Block block;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"    public final Level level;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"    public final Price price;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"redcolorbicycle"},"content":"     * Constructs a Condominium.","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"     * @param unitNumber The unit number of the house.","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"redcolorbicycle"},"content":"     * @param postalCode The postal code of the house.","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"     * @param street     The street of the house.","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"redcolorbicycle"},"content":"     * @param block      The block of the house.","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"redcolorbicycle"},"content":"     * @param level      The level of the house.","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"felixchanyy"},"content":"     * @param price      The price of the house.","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"felixchanyy"},"content":"    public Condominium(Level level, PostalCode postalCode, Street street, UnitNumber unitNumber, Block block,","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"felixchanyy"},"content":"                       Price price) {","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"redcolorbicycle"},"content":"        this.postalCode \u003d postalCode;","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"redcolorbicycle"},"content":"        this.street \u003d street;","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"redcolorbicycle"},"content":"        this.unitNumber \u003d unitNumber;","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"redcolorbicycle"},"content":"        this.block \u003d block;","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"redcolorbicycle"},"content":"        this.level \u003d level;","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"felixchanyy"},"content":"        this.price \u003d price;","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"redcolorbicycle"},"content":"     * Constructs a Condominium with no block","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"redcolorbicycle"},"content":"     * @param unitNumber The unit number of the house.","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"redcolorbicycle"},"content":"     * @param postalCode The postal code of the house.","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"redcolorbicycle"},"content":"     * @param street     The street of the house.","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"redcolorbicycle"},"content":"     * @param level      The level of the house.","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"felixchanyy"},"content":"     * @param price      The price of the house.","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"felixchanyy"},"content":"    public Condominium(Level level, PostalCode postalCode, Street street, UnitNumber unitNumber, Price price) {","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"redcolorbicycle"},"content":"        this.postalCode \u003d postalCode;","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"redcolorbicycle"},"content":"        this.street \u003d street;","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"redcolorbicycle"},"content":"        this.unitNumber \u003d unitNumber;","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"redcolorbicycle"},"content":"        this.block \u003d new Block(\"N/A\");","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"redcolorbicycle"},"content":"        this.level \u003d level;","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"felixchanyy"},"content":"        this.price \u003d price;","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"redcolorbicycle"},"content":"     * Retrieves the unit number of the Condominium.","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"redcolorbicycle"},"content":"     * @return The unit number of the Condominium.","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"redcolorbicycle"},"content":"    public UnitNumber getUnitNumber() {","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"redcolorbicycle"},"content":"        return this.unitNumber;","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"redcolorbicycle"},"content":"     * Retrieves the postal code of the Condominium.","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"redcolorbicycle"},"content":"     * @return The postal code of the Condominium.","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"redcolorbicycle"},"content":"    public PostalCode getPostalCode() {","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"redcolorbicycle"},"content":"        return this.postalCode;","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"redcolorbicycle"},"content":"     * Retrieves the street of the Condominium.","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"redcolorbicycle"},"content":"     * @return The street of the Condominium.","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"redcolorbicycle"},"content":"    public Street getStreet() {","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"redcolorbicycle"},"content":"        return this.street;","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"redcolorbicycle"},"content":"     * Retrieves the block of the Condominium.","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"redcolorbicycle"},"content":"     * @return The block of the Condominium.","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"redcolorbicycle"},"content":"    public Block getBlock() {","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"redcolorbicycle"},"content":"        return this.block;","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"redcolorbicycle"},"content":"     * Retrieves the level of the Condominium.","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"redcolorbicycle"},"content":"     * @return The level of the Condominium.","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"redcolorbicycle"},"content":"    public Level getLevel() {","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"redcolorbicycle"},"content":"        return this.level;","lastModifiedDate":"2024-03-30"},{"lineNumber":102,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":103,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":104,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":105,"author":{"gitId":"felixchanyy"},"content":"     * Retrieves the price of the Condominium.","lastModifiedDate":"2024-04-01"},{"lineNumber":106,"author":{"gitId":"felixchanyy"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":107,"author":{"gitId":"felixchanyy"},"content":"     * @return The price of the Condominium.","lastModifiedDate":"2024-04-01"},{"lineNumber":108,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":109,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":110,"author":{"gitId":"felixchanyy"},"content":"    public Price getPrice() {","lastModifiedDate":"2024-04-01"},{"lineNumber":111,"author":{"gitId":"felixchanyy"},"content":"        return price;","lastModifiedDate":"2024-04-01"},{"lineNumber":112,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":113,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":114,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":115,"author":{"gitId":"felixchanyy"},"content":"     * Retrieves the housing type of the condominium.","lastModifiedDate":"2024-04-01"},{"lineNumber":116,"author":{"gitId":"felixchanyy"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":117,"author":{"gitId":"felixchanyy"},"content":"     * @return The housing type of the condominium.","lastModifiedDate":"2024-04-01"},{"lineNumber":118,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":119,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":120,"author":{"gitId":"felixchanyy"},"content":"    public HousingType getHousingType() {","lastModifiedDate":"2024-04-01"},{"lineNumber":121,"author":{"gitId":"felixchanyy"},"content":"        return new HousingType(\"Condominium\");","lastModifiedDate":"2024-04-01"},{"lineNumber":122,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":123,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":124,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":125,"author":{"gitId":"redcolorbicycle"},"content":"     * Checks if this house is equal to another object.","lastModifiedDate":"2024-03-30"},{"lineNumber":126,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":127,"author":{"gitId":"redcolorbicycle"},"content":"     * @param other The object to compare to.","lastModifiedDate":"2024-03-30"},{"lineNumber":128,"author":{"gitId":"redcolorbicycle"},"content":"     * @return True if the objects are equal, false otherwise.","lastModifiedDate":"2024-03-30"},{"lineNumber":129,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":130,"author":{"gitId":"redcolorbicycle"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-30"},{"lineNumber":131,"author":{"gitId":"redcolorbicycle"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-30"},{"lineNumber":132,"author":{"gitId":"redcolorbicycle"},"content":"            return true;","lastModifiedDate":"2024-03-30"},{"lineNumber":133,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":134,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":135,"author":{"gitId":"redcolorbicycle"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-30"},{"lineNumber":136,"author":{"gitId":"redcolorbicycle"},"content":"        if (!(other instanceof Condominium)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":137,"author":{"gitId":"redcolorbicycle"},"content":"            return false;","lastModifiedDate":"2024-03-30"},{"lineNumber":138,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":139,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":140,"author":{"gitId":"redcolorbicycle"},"content":"        House otherCondominium \u003d (House) other;","lastModifiedDate":"2024-03-31"},{"lineNumber":141,"author":{"gitId":"redcolorbicycle"},"content":"        return this.toString().equals(otherCondominium.toString());","lastModifiedDate":"2024-03-31"},{"lineNumber":142,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":143,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":144,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":145,"author":{"gitId":"redcolorbicycle"},"content":"     * Returns a string representation of the hdb.","lastModifiedDate":"2024-03-30"},{"lineNumber":146,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":147,"author":{"gitId":"redcolorbicycle"},"content":"     * @return A string representation of the hdb.","lastModifiedDate":"2024-03-30"},{"lineNumber":148,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":149,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":150,"author":{"gitId":"redcolorbicycle"},"content":"    public String toString() {","lastModifiedDate":"2024-03-30"},{"lineNumber":151,"author":{"gitId":"redcolorbicycle"},"content":"        ToStringBuilder builder \u003d new ToStringBuilder(this);","lastModifiedDate":"2024-03-30"},{"lineNumber":152,"author":{"gitId":"felixchanyy"},"content":"        return \"Condominium: \" + builder.toString() + \", \" + new ToStringBuilder(this)","lastModifiedDate":"2024-04-01"},{"lineNumber":153,"author":{"gitId":"redcolorbicycle"},"content":"                .add(\"Street\", street)","lastModifiedDate":"2024-03-30"},{"lineNumber":154,"author":{"gitId":"redcolorbicycle"},"content":"                .add(\"Block\", block)","lastModifiedDate":"2024-03-30"},{"lineNumber":155,"author":{"gitId":"redcolorbicycle"},"content":"                .add(\"Level\", level)","lastModifiedDate":"2024-03-30"},{"lineNumber":156,"author":{"gitId":"redcolorbicycle"},"content":"                .add(\"Unit Number\", unitNumber)","lastModifiedDate":"2024-03-30"},{"lineNumber":157,"author":{"gitId":"redcolorbicycle"},"content":"                .add(\"Postal Code\", postalCode)","lastModifiedDate":"2024-03-30"},{"lineNumber":158,"author":{"gitId":"felixchanyy"},"content":"                .add(\"Price\", price)","lastModifiedDate":"2024-04-01"},{"lineNumber":159,"author":{"gitId":"redcolorbicycle"},"content":"                .toString();","lastModifiedDate":"2024-03-30"},{"lineNumber":160,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":161,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-03-30"},{"lineNumber":162,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":163,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"redcolorbicycle":133,"felixchanyy":30}},{"path":"src/main/java/seedu/address/model/house/Hdb.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":" * Represents a HDB.","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"public class Hdb implements House {","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"    public final PostalCode postalCode;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"    public final Street street;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"    public final UnitNumber unitNumber;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"    public final Block block;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"    public final Level level;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"    public final Price price;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"redcolorbicycle"},"content":"     * Constructs a HDB.","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"     * @param unitNumber The unit number of the house.","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"redcolorbicycle"},"content":"     * @param postalCode The postal code of the house.","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"     * @param street     The street of the house.","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"redcolorbicycle"},"content":"     * @param block      The block of the house.","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"redcolorbicycle"},"content":"     * @param level      The level of the house.","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"felixchanyy"},"content":"     * @param price      The price of the house.","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"felixchanyy"},"content":"    public Hdb(Level level, PostalCode postalCode, Street street, UnitNumber unitNumber, Block block, Price price) {","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"redcolorbicycle"},"content":"        this.postalCode \u003d postalCode;","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"redcolorbicycle"},"content":"        this.street \u003d street;","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"redcolorbicycle"},"content":"        this.unitNumber \u003d unitNumber;","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"redcolorbicycle"},"content":"        this.block \u003d block;","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"redcolorbicycle"},"content":"        this.level \u003d level;","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"felixchanyy"},"content":"        this.price \u003d price;","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"redcolorbicycle"},"content":"     * Retrieves the unit number of the HDB.","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"redcolorbicycle"},"content":"     * @return The unit number of the HDB.","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"redcolorbicycle"},"content":"    public UnitNumber getUnitNumber() {","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"redcolorbicycle"},"content":"        return this.unitNumber;","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"redcolorbicycle"},"content":"     * Retrieves the postal code of the HDB.","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"redcolorbicycle"},"content":"     * @return The postal code of the HDB.","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"redcolorbicycle"},"content":"    public PostalCode getPostalCode() {","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"redcolorbicycle"},"content":"        return this.postalCode;","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"redcolorbicycle"},"content":"     * Retrieves the street of the HDB.","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"redcolorbicycle"},"content":"     * @return The street of the HDB.","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"redcolorbicycle"},"content":"    public Street getStreet() {","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"redcolorbicycle"},"content":"        return this.street;","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"redcolorbicycle"},"content":"     * Retrieves the block of the HDB.","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"redcolorbicycle"},"content":"     * @return The block of the HDB.","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"redcolorbicycle"},"content":"    public Block getBlock() {","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"redcolorbicycle"},"content":"        return this.block;","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"redcolorbicycle"},"content":"     * Retrieves the level of the HDB.","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"redcolorbicycle"},"content":"     * @return The level of the HDB.","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"redcolorbicycle"},"content":"    public Level getLevel() {","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"redcolorbicycle"},"content":"        return this.level;","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"felixchanyy"},"content":"     * Retrieves the price of the HDB.","lastModifiedDate":"2024-04-01"},{"lineNumber":87,"author":{"gitId":"felixchanyy"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":88,"author":{"gitId":"felixchanyy"},"content":"     * @return The price of the HDB.","lastModifiedDate":"2024-04-01"},{"lineNumber":89,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":90,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":91,"author":{"gitId":"felixchanyy"},"content":"    public Price getPrice() {","lastModifiedDate":"2024-04-01"},{"lineNumber":92,"author":{"gitId":"felixchanyy"},"content":"        return price;","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":94,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":95,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":96,"author":{"gitId":"felixchanyy"},"content":"     * Retrieves the housing type of the HDB.","lastModifiedDate":"2024-04-01"},{"lineNumber":97,"author":{"gitId":"felixchanyy"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":98,"author":{"gitId":"felixchanyy"},"content":"     * @return The housing type of the HDB.","lastModifiedDate":"2024-04-01"},{"lineNumber":99,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":100,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":101,"author":{"gitId":"felixchanyy"},"content":"    public HousingType getHousingType() {","lastModifiedDate":"2024-04-01"},{"lineNumber":102,"author":{"gitId":"felixchanyy"},"content":"        return new HousingType(\"Hdb\");","lastModifiedDate":"2024-04-01"},{"lineNumber":103,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":104,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":105,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":106,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":107,"author":{"gitId":"redcolorbicycle"},"content":"     * Checks if this house is equal to another object.","lastModifiedDate":"2024-03-30"},{"lineNumber":108,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":109,"author":{"gitId":"redcolorbicycle"},"content":"     * @param other The object to compare to.","lastModifiedDate":"2024-03-30"},{"lineNumber":110,"author":{"gitId":"redcolorbicycle"},"content":"     * @return True if the objects are equal, false otherwise.","lastModifiedDate":"2024-03-30"},{"lineNumber":111,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":112,"author":{"gitId":"redcolorbicycle"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-30"},{"lineNumber":113,"author":{"gitId":"redcolorbicycle"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-30"},{"lineNumber":114,"author":{"gitId":"redcolorbicycle"},"content":"            return true;","lastModifiedDate":"2024-03-30"},{"lineNumber":115,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":116,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":117,"author":{"gitId":"redcolorbicycle"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-30"},{"lineNumber":118,"author":{"gitId":"redcolorbicycle"},"content":"        if (!(other instanceof Hdb)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":119,"author":{"gitId":"redcolorbicycle"},"content":"            return false;","lastModifiedDate":"2024-03-30"},{"lineNumber":120,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":121,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":122,"author":{"gitId":"redcolorbicycle"},"content":"        House otherHdb \u003d (House) other;","lastModifiedDate":"2024-03-31"},{"lineNumber":123,"author":{"gitId":"redcolorbicycle"},"content":"        return this.toString().equals(otherHdb.toString());","lastModifiedDate":"2024-03-31"},{"lineNumber":124,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":125,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":126,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":127,"author":{"gitId":"redcolorbicycle"},"content":"     * Returns a string representation of the hdb.","lastModifiedDate":"2024-03-30"},{"lineNumber":128,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":129,"author":{"gitId":"redcolorbicycle"},"content":"     * @return A string representation of the hdb.","lastModifiedDate":"2024-03-30"},{"lineNumber":130,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":131,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":132,"author":{"gitId":"redcolorbicycle"},"content":"    public String toString() {","lastModifiedDate":"2024-03-30"},{"lineNumber":133,"author":{"gitId":"redcolorbicycle"},"content":"        ToStringBuilder builder \u003d new ToStringBuilder(this);","lastModifiedDate":"2024-03-30"},{"lineNumber":134,"author":{"gitId":"redcolorbicycle"},"content":"        return \"Hdb: \" + builder.toString() + \", \" + new ToStringBuilder(this)","lastModifiedDate":"2024-03-30"},{"lineNumber":135,"author":{"gitId":"redcolorbicycle"},"content":"                .add(\"Street\", street)","lastModifiedDate":"2024-03-30"},{"lineNumber":136,"author":{"gitId":"redcolorbicycle"},"content":"                .add(\"Block\", block)","lastModifiedDate":"2024-03-30"},{"lineNumber":137,"author":{"gitId":"redcolorbicycle"},"content":"                .add(\"Level\", level)","lastModifiedDate":"2024-03-30"},{"lineNumber":138,"author":{"gitId":"redcolorbicycle"},"content":"                .add(\"Unit Number\", unitNumber)","lastModifiedDate":"2024-03-30"},{"lineNumber":139,"author":{"gitId":"redcolorbicycle"},"content":"                .add(\"Postal Code\", postalCode)","lastModifiedDate":"2024-03-30"},{"lineNumber":140,"author":{"gitId":"felixchanyy"},"content":"                .add(\"Price\", price)","lastModifiedDate":"2024-04-01"},{"lineNumber":141,"author":{"gitId":"redcolorbicycle"},"content":"                .toString();","lastModifiedDate":"2024-03-30"},{"lineNumber":142,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":143,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-03-30"},{"lineNumber":144,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":145,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"redcolorbicycle":119,"felixchanyy":26}},{"path":"src/main/java/seedu/address/model/house/House.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":" * Represents a House.","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"public interface House {","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"    public static final String[] VALIDATION_REGEX \u003d {\"Hdb\", \"Condominium\", \"Landed\"};","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"     * Retrieves the unit number of the house.","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"     * @return The unit number of the house.","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"    UnitNumber getUnitNumber();","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"redcolorbicycle"},"content":"     * Retrieves the postal code of the house.","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"     * @return The postal code of the house.","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"    PostalCode getPostalCode();","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"redcolorbicycle"},"content":"     * Retrieves the street of the house.","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"redcolorbicycle"},"content":"     * @return The street of the house.","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"redcolorbicycle"},"content":"    Street getStreet();","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":"     * Retrieves the price of the house.","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"felixchanyy"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"felixchanyy"},"content":"     * @return The price of the house.","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"felixchanyy"},"content":"    Price getPrice();","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"redcolorbicycle"},"content":"     * Checks if the given name is a valid housing type.","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"redcolorbicycle"},"content":"     * @param name The name to check.","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"redcolorbicycle"},"content":"     * @return True if the name is a valid housing type, false otherwise.","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"redcolorbicycle"},"content":"    public static boolean isValidName(String name) {","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"redcolorbicycle"},"content":"        for (String element : VALIDATION_REGEX) {","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"redcolorbicycle"},"content":"            if (element.equals(name)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"redcolorbicycle"},"content":"                return true;","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"redcolorbicycle"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"redcolorbicycle"},"content":"        return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"redcolorbicycle"},"content":"     * Checks if this house is equal to another object.","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"redcolorbicycle"},"content":"     * @param other The object to compare to.","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"redcolorbicycle"},"content":"     * @return True if the objects are equal, false otherwise.","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"redcolorbicycle"},"content":"    public boolean equals(Object other);","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"redcolorbicycle"},"content":"     * Returns a string representation of the house.","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"redcolorbicycle"},"content":"     * @return A string representation of the house.","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"redcolorbicycle"},"content":"    public String toString();","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"felixchanyy"},"content":"     * Retrieves the housing type of the house.","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"felixchanyy"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"felixchanyy"},"content":"     * @return The housing type of the house.","lastModifiedDate":"2024-04-01"},{"lineNumber":75,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":76,"author":{"gitId":"felixchanyy"},"content":"    HousingType getHousingType();","lastModifiedDate":"2024-04-01"},{"lineNumber":77,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"redcolorbicycle":61,"KhoonSun47":2,"felixchanyy":14}},{"path":"src/main/java/seedu/address/model/house/HousingType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":" * Represents a House\u0027s housing type.","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidHousingType(String)}","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"public class HousingType {","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"            \"HousingType should only be Landed, Hdb or Condominium\";","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"redcolorbicycle"},"content":"    public static final ArrayList\u003cString\u003e VALIDATION_REGEX \u003d new","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"redcolorbicycle"},"content":"            ArrayList\u003c\u003e(Arrays.asList(\"condominium\", \"hdb\", \"landed\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"redcolorbicycle"},"content":"    public final String value;","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"redcolorbicycle"},"content":"     * Constructs a {@code HousingType}.","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":"     * @param housingType A valid housing type.","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"redcolorbicycle"},"content":"    public HousingType(String housingType) {","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"redcolorbicycle"},"content":"        requireNonNull(housingType);","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"        checkArgument(isValidHousingType(housingType), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"redcolorbicycle"},"content":"        value \u003d housingType;","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"redcolorbicycle"},"content":"     * Returns true if a given string is a valid housing type.","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"    public static boolean isValidHousingType(String test) {","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"redcolorbicycle"},"content":"        return VALIDATION_REGEX.contains(test.toLowerCase());","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"redcolorbicycle"},"content":"    public String toString() {","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"redcolorbicycle"},"content":"        return value;","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"redcolorbicycle"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"redcolorbicycle"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"redcolorbicycle"},"content":"            return true;","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"redcolorbicycle"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"redcolorbicycle"},"content":"        if (!(other instanceof HousingType)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"redcolorbicycle"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"redcolorbicycle"},"content":"        HousingType otherHousingType \u003d (HousingType) other;","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"redcolorbicycle"},"content":"        return value.equals(otherHousingType.value);","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"redcolorbicycle"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"redcolorbicycle"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"redcolorbicycle":64,"KhoonSun47":3}},{"path":"src/main/java/seedu/address/model/house/Landed.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":" * Represents a landed house.","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"public class Landed implements House {","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"    public final PostalCode postalCode;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"    public final Street street;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"    public final UnitNumber unitNumber;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":"    public final Price price;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"     * Constructs a Landed house.","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"redcolorbicycle"},"content":"     * @param unitNumber The unit number of the house.","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"redcolorbicycle"},"content":"     * @param postalCode The postal code of the house.","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"     * @param street     The street of the house.","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"felixchanyy"},"content":"     * @param price      The price of the house.","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"felixchanyy"},"content":"    public Landed(UnitNumber unitNumber, PostalCode postalCode, Street street, Price price) {","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"redcolorbicycle"},"content":"        this.postalCode \u003d postalCode;","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"redcolorbicycle"},"content":"        this.street \u003d street;","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":"        this.unitNumber \u003d unitNumber;","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"felixchanyy"},"content":"        this.price \u003d price;","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"redcolorbicycle"},"content":"     * Retrieves the unit number of the landed house.","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"redcolorbicycle"},"content":"     * @return The unit number of the landed house.","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"redcolorbicycle"},"content":"    public UnitNumber getUnitNumber() {","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"redcolorbicycle"},"content":"        return this.unitNumber;","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"redcolorbicycle"},"content":"     * Retrieves the postal code of the landed house.","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"redcolorbicycle"},"content":"     * @return The postal code of the landed house.","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"redcolorbicycle"},"content":"    public PostalCode getPostalCode() {","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"redcolorbicycle"},"content":"        return this.postalCode;","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"redcolorbicycle"},"content":"     * Retrieves the street of the landed house.","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"redcolorbicycle"},"content":"     * @return The street of the landed house.","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"redcolorbicycle"},"content":"    public Street getStreet() {","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"redcolorbicycle"},"content":"        return this.street;","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"felixchanyy"},"content":"     * Retrieves the price of the landed house.","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"felixchanyy"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"felixchanyy"},"content":"     * @return The price of the landed house.","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"felixchanyy"},"content":"    public Price getPrice() {","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"felixchanyy"},"content":"        return price;","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"felixchanyy"},"content":"     * Retrieves the housing type of the landed house.","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"felixchanyy"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"felixchanyy"},"content":"     * @return The housing type of the landed house.","lastModifiedDate":"2024-04-01"},{"lineNumber":75,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":76,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":77,"author":{"gitId":"felixchanyy"},"content":"    public HousingType getHousingType() {","lastModifiedDate":"2024-04-01"},{"lineNumber":78,"author":{"gitId":"felixchanyy"},"content":"        return new HousingType(\"Landed\");","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"redcolorbicycle"},"content":"     * Checks if this house is equal to another object.","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"redcolorbicycle"},"content":"     * @param other The object to compare to.","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"redcolorbicycle"},"content":"     * @return True if the objects are equal, false otherwise.","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"redcolorbicycle"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"redcolorbicycle"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"redcolorbicycle"},"content":"            return true;","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"redcolorbicycle"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"redcolorbicycle"},"content":"        if (!(other instanceof Landed)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"redcolorbicycle"},"content":"            return false;","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"redcolorbicycle"},"content":"        House otherLanded \u003d (House) other;","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"redcolorbicycle"},"content":"        return this.toString().equals(otherLanded.toString());","lastModifiedDate":"2024-03-31"},{"lineNumber":99,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"redcolorbicycle"},"content":"     * Returns a string representation of the landed house.","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"redcolorbicycle"},"content":"     * @return A string representation of the landed house.","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"redcolorbicycle"},"content":"    public String toString() {","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"KhoonSun47"},"content":"        ToStringBuilder builder \u003d new ToStringBuilder(this);","lastModifiedDate":"2024-03-27"},{"lineNumber":109,"author":{"gitId":"redcolorbicycle"},"content":"        return \"Landed House: \" + builder.toString() + \", \" + new ToStringBuilder(this)","lastModifiedDate":"2024-03-30"},{"lineNumber":110,"author":{"gitId":"redcolorbicycle"},"content":"                .add(\"Unit Number\", unitNumber)","lastModifiedDate":"2024-03-30"},{"lineNumber":111,"author":{"gitId":"redcolorbicycle"},"content":"                .add(\"Street\", street)","lastModifiedDate":"2024-03-30"},{"lineNumber":112,"author":{"gitId":"redcolorbicycle"},"content":"                .add(\"Postal Code\", postalCode)","lastModifiedDate":"2024-03-30"},{"lineNumber":113,"author":{"gitId":"felixchanyy"},"content":"                .add(\"Price\", price)","lastModifiedDate":"2024-04-01"},{"lineNumber":114,"author":{"gitId":"redcolorbicycle"},"content":"                .toString();","lastModifiedDate":"2024-03-30"},{"lineNumber":115,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":117,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":118,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"redcolorbicycle":90,"KhoonSun47":3,"felixchanyy":25}},{"path":"src/main/java/seedu/address/model/house/Level.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":" * Represents a House\u0027s level.","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidLevel(String)}","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"public class Level {","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"            \"Level should only contain numbers, and it should only be at most 2 digits long\";","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{1,2}\";","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"    public static final String ZERO_REGEX \u003d \"^0+$\";","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"    public final String value;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"     * Constructs a {@code Level}.","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"     * @param level A valid level.","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"    public Level(String level) {","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"        requireNonNull(level);","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"        checkArgument(isValidLevel(level), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"        value \u003d level;","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"     * Returns true if a given string is a valid level.","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"    public static boolean isValidLevel(String test) {","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 !test.matches(ZERO_REGEX);","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"    public String toString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"        return value;","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"            return true;","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"        if (!(other instanceof Level)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"        Level otherLevel \u003d (Level) other;","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"        return value.equals(otherLevel.value);","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"lokidoki102"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"lokidoki102":63}},{"path":"src/main/java/seedu/address/model/house/PostalCode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":" * Represents a House\u0027s postal code in EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPostalCode(String)}","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"public class PostalCode {","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"            \"The postal code should only contain numbers, and it should be only 6 digits long\";","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{6}\";","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"    public final String value;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"     * Constructs a {@code PostalCode}.","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"     * @param postalCode A valid postal code.","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"    public PostalCode(String postalCode) {","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"        requireNonNull(postalCode);","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"        checkArgument(isValidPostalCode(postalCode), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"        value \u003d postalCode;","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"     * Returns true if a given string is a valid postal code.","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"    public static boolean isValidPostalCode(String test) {","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"    public String toString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"        return value;","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"            return true;","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"        if (!(other instanceof PostalCode)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"        PostalCode otherPostalCode \u003d (PostalCode) other;","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"        return value.equals(otherPostalCode.value);","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"KhoonSun47":58,"felixchanyy":1}},{"path":"src/main/java/seedu/address/model/house/Price.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"felixchanyy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"felixchanyy"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":" * Represents a House\u0027s Price amount.","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"felixchanyy"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPrice(String)}","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"felixchanyy"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"felixchanyy"},"content":"public class Price implements Comparable\u003cPrice\u003e {","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Price should be a positive number.\";","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"felixchanyy"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d+(\\\\.\\\\d+)?\";","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"    public final String value;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"     * Constructs a {@code Price}.","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"     * @param price A valid price amount.","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"    public Price(String price) {","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"felixchanyy"},"content":"        requireNonNull(price);","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"felixchanyy"},"content":"        checkArgument(isValidPrice(price), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"felixchanyy"},"content":"        value \u003d price;","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"felixchanyy"},"content":"     * Returns true if a given String is a valid price amount.","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"felixchanyy"},"content":"    public static boolean isValidPrice(String test) {","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"felixchanyy"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 Double.parseDouble(test) \u003e 0;","lastModifiedDate":"2024-04-08"},{"lineNumber":31,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"felixchanyy"},"content":"    public String toString() {","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"felixchanyy"},"content":"        return value;","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"felixchanyy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"felixchanyy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"felixchanyy"},"content":"            return true;","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"felixchanyy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"felixchanyy"},"content":"        if (!(other instanceof Price)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"felixchanyy"},"content":"            return false;","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"felixchanyy"},"content":"        Price otherPrice \u003d (Price) other;","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"felixchanyy"},"content":"        return value.equals(otherPrice.value);","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"felixchanyy"},"content":"    public int hashCode() {","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"felixchanyy"},"content":"        return value.hashCode();","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"felixchanyy"},"content":"    public int compareTo(Price other) {","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"felixchanyy"},"content":"        double thisValue \u003d Double.parseDouble(this.value);","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"felixchanyy"},"content":"        double otherValue \u003d Double.parseDouble(other.value);","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"felixchanyy"},"content":"        return Double.compare(thisValue, otherValue);","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"felixchanyy"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"felixchanyy":64}},{"path":"src/main/java/seedu/address/model/house/PriceAndHousingTypePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"felixchanyy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"felixchanyy"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"felixchanyy"},"content":" * Represents a predicate that checks if a house matches the given price and housing type criteria.","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"felixchanyy"},"content":"public class PriceAndHousingTypePredicate implements Predicate\u003cHouse\u003e {","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"felixchanyy"},"content":"    private final Price price;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"felixchanyy"},"content":"    private final HousingType housingType;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"     * Constructs a PriceAndHousingTypePredicate with the given price and housing type criteria.","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"     * @param price       The price criterion.","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"     * @param housingType The housing type criterion.","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"    public PriceAndHousingTypePredicate(Price price, HousingType housingType) {","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":"        this.price \u003d price;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"        this.housingType \u003d housingType;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"felixchanyy"},"content":"     * Tests if the given house matches the price and housing type criteria.","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"felixchanyy"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"felixchanyy"},"content":"     * @param house The house to test.","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"felixchanyy"},"content":"     * @return True if the house matches the criteria, false otherwise.","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"felixchanyy"},"content":"    public boolean test(House house) {","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"felixchanyy"},"content":"        boolean isPriceLessThanOrEqual \u003d house.getPrice().compareTo(price) \u003c\u003d 0;","lastModifiedDate":"2024-04-12"},{"lineNumber":32,"author":{"gitId":"felixchanyy"},"content":"        boolean isHousingTypeMatch \u003d house.getHousingType().equals(housingType);","lastModifiedDate":"2024-04-12"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":34,"author":{"gitId":"felixchanyy"},"content":"        return isPriceLessThanOrEqual \u0026\u0026 isHousingTypeMatch;","lastModifiedDate":"2024-04-12"},{"lineNumber":35,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"felixchanyy"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"felixchanyy":36}},{"path":"src/main/java/seedu/address/model/house/Street.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":" * Represents a House\u0027s street.","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidStreet(String)}","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"public class Street {","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"            \"Street should only contain alphanumeric characters and hyphens.\";","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(?\u003d.*[a-zA-Z0-9])[a-zA-Z0-9\\\\s-]+$\";","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"    public final String value;","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"     * Constructs a {@code Street}.","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"     * @param street A valid street.","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"    public Street(String street) {","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"        requireNonNull(street);","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"        checkArgument(isValidStreet(street), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"        value \u003d street;","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"     * Returns true if a given string is a valid street.","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"    public static boolean isValidStreet(String test) {","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"    public String toString() {","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"        return value;","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"            return true;","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"        if (!(other instanceof Street)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"            return false;","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"        Street otherStreet \u003d (Street) other;","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"        return value.equals(otherStreet.value);","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"lokidoki102"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"lokidoki102"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"lokidoki102":60}},{"path":"src/main/java/seedu/address/model/house/UniqueHouseList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"import java.util.List;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.exceptions.DuplicateHouseException;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.exceptions.HouseNotFoundException;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"redcolorbicycle"},"content":" * A list of houses that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"redcolorbicycle"},"content":" * A person is considered unique by comparing using {@code House#isSamePerson(House)}. As such, adding and updating of","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"redcolorbicycle"},"content":" * persons uses House#isSamePerson(House) for equality so as to ensure that the house being added or updated is","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":" * unique in terms of identity in the UniqueHouseList. However, the removal of a house uses Person#equals(Object) so","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"redcolorbicycle"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":" *","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"redcolorbicycle"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"redcolorbicycle"},"content":" *","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"redcolorbicycle"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":"public class UniqueHouseList implements Iterable\u003cHouse\u003e {","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"redcolorbicycle"},"content":"    private final ObservableList\u003cHouse\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"redcolorbicycle"},"content":"    private final ObservableList\u003cHouse\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"redcolorbicycle"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"redcolorbicycle"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"redcolorbicycle"},"content":"    public boolean contains(House toCheck) {","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"redcolorbicycle"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"redcolorbicycle"},"content":"        for (House h: internalList) {","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"felixchanyy"},"content":"            int addressOfHouseIndex \u003d toCheck.toString().toLowerCase().indexOf(\"street\");","lastModifiedDate":"2024-04-12"},{"lineNumber":40,"author":{"gitId":"felixchanyy"},"content":"            int addressOfHouseInListIndex \u003d h.toString().toLowerCase().indexOf(\"street\");","lastModifiedDate":"2024-04-12"},{"lineNumber":41,"author":{"gitId":"felixchanyy"},"content":"            int cutOffPriceOfHouseIndex \u003d toCheck.toString().toLowerCase().lastIndexOf(\"price\");","lastModifiedDate":"2024-04-12"},{"lineNumber":42,"author":{"gitId":"felixchanyy"},"content":"            int cutOffPriceOfHouseInListIndex \u003d h.toString().toLowerCase().lastIndexOf(\"price\");","lastModifiedDate":"2024-04-12"},{"lineNumber":43,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":44,"author":{"gitId":"felixchanyy"},"content":"            String firstAddress \u003d toCheck.toString().substring(addressOfHouseIndex + \"street\".length(),","lastModifiedDate":"2024-04-12"},{"lineNumber":45,"author":{"gitId":"felixchanyy"},"content":"                                                               cutOffPriceOfHouseIndex).toLowerCase();","lastModifiedDate":"2024-04-12"},{"lineNumber":46,"author":{"gitId":"felixchanyy"},"content":"            String secondAddress \u003d h.toString().substring(addressOfHouseInListIndex + \"street\".length(),","lastModifiedDate":"2024-04-12"},{"lineNumber":47,"author":{"gitId":"felixchanyy"},"content":"                                                          cutOffPriceOfHouseInListIndex).toLowerCase();","lastModifiedDate":"2024-04-12"},{"lineNumber":48,"author":{"gitId":"redcolorbicycle"},"content":"            if (firstAddress.equals(secondAddress)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"redcolorbicycle"},"content":"                return true;","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"redcolorbicycle"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"redcolorbicycle"},"content":"        return false;","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"redcolorbicycle"},"content":"     * Adds a house to the list.","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"redcolorbicycle"},"content":"     * The house must not already exist in the list.","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"redcolorbicycle"},"content":"    public void add(House toAdd) {","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"redcolorbicycle"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"redcolorbicycle"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"            Logger.getLogger(UniqueHouseList.class.getName()).log(Level.WARNING,","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"                    \"Duplicate house detected: \" + toAdd.toString());","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"            return;","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"redcolorbicycle"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"redcolorbicycle"},"content":"     * Removes the equivalent house from the list.","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"redcolorbicycle"},"content":"     * The house must exist in the list.","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"redcolorbicycle"},"content":"    public void remove(House toRemove) {","lastModifiedDate":"2024-04-01"},{"lineNumber":75,"author":{"gitId":"redcolorbicycle"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2024-04-01"},{"lineNumber":76,"author":{"gitId":"redcolorbicycle"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":77,"author":{"gitId":"redcolorbicycle"},"content":"            throw new HouseNotFoundException();","lastModifiedDate":"2024-04-01"},{"lineNumber":78,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"redcolorbicycle"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"redcolorbicycle"},"content":"    public ObservableList\u003cHouse\u003e asUnmodifiableObservableListHouse() {","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"redcolorbicycle"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":89,"author":{"gitId":"redcolorbicycle"},"content":"     * Replaces the contents of this list with {@code houses}.","lastModifiedDate":"2024-04-01"},{"lineNumber":90,"author":{"gitId":"redcolorbicycle"},"content":"     * {@code houses} must not contain duplicate houses.","lastModifiedDate":"2024-04-01"},{"lineNumber":91,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":92,"author":{"gitId":"redcolorbicycle"},"content":"    public void setHouses(List\u003cHouse\u003e houses) {","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"redcolorbicycle"},"content":"        requireAllNonNull(houses);","lastModifiedDate":"2024-04-01"},{"lineNumber":94,"author":{"gitId":"redcolorbicycle"},"content":"        if (!housesAreUnique(houses)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":95,"author":{"gitId":"redcolorbicycle"},"content":"            throw new DuplicateHouseException();","lastModifiedDate":"2024-04-01"},{"lineNumber":96,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":97,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":98,"author":{"gitId":"redcolorbicycle"},"content":"        internalList.setAll(houses);","lastModifiedDate":"2024-04-01"},{"lineNumber":99,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":100,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":101,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":102,"author":{"gitId":"redcolorbicycle"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2024-04-01"},{"lineNumber":103,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":104,"author":{"gitId":"redcolorbicycle"},"content":"    public ObservableList\u003cHouse\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2024-04-01"},{"lineNumber":105,"author":{"gitId":"redcolorbicycle"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2024-04-01"},{"lineNumber":106,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":107,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":108,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":109,"author":{"gitId":"redcolorbicycle"},"content":"    public Iterator\u003cHouse\u003e iterator() {","lastModifiedDate":"2024-04-01"},{"lineNumber":110,"author":{"gitId":"redcolorbicycle"},"content":"        return internalList.iterator();","lastModifiedDate":"2024-04-01"},{"lineNumber":111,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":112,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":113,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":114,"author":{"gitId":"redcolorbicycle"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-01"},{"lineNumber":115,"author":{"gitId":"redcolorbicycle"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-01"},{"lineNumber":116,"author":{"gitId":"redcolorbicycle"},"content":"            return true;","lastModifiedDate":"2024-04-01"},{"lineNumber":117,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":118,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":119,"author":{"gitId":"redcolorbicycle"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-01"},{"lineNumber":120,"author":{"gitId":"redcolorbicycle"},"content":"        if (!(other instanceof UniqueHouseList)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":121,"author":{"gitId":"redcolorbicycle"},"content":"            return false;","lastModifiedDate":"2024-04-01"},{"lineNumber":122,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":123,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":124,"author":{"gitId":"redcolorbicycle"},"content":"        UniqueHouseList otherUniqueHouseList \u003d (UniqueHouseList) other;","lastModifiedDate":"2024-04-01"},{"lineNumber":125,"author":{"gitId":"redcolorbicycle"},"content":"        return internalList.equals(otherUniqueHouseList.internalList);","lastModifiedDate":"2024-04-01"},{"lineNumber":126,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":127,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":128,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":129,"author":{"gitId":"redcolorbicycle"},"content":"    public int hashCode() {","lastModifiedDate":"2024-04-01"},{"lineNumber":130,"author":{"gitId":"redcolorbicycle"},"content":"        return internalList.hashCode();","lastModifiedDate":"2024-04-01"},{"lineNumber":131,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":132,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":133,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":134,"author":{"gitId":"redcolorbicycle"},"content":"    public String toString() {","lastModifiedDate":"2024-04-01"},{"lineNumber":135,"author":{"gitId":"redcolorbicycle"},"content":"        return internalList.toString();","lastModifiedDate":"2024-04-01"},{"lineNumber":136,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":137,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":138,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":139,"author":{"gitId":"redcolorbicycle"},"content":"     * Returns true if {@code houses} contains only unique houses.","lastModifiedDate":"2024-04-01"},{"lineNumber":140,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":141,"author":{"gitId":"redcolorbicycle"},"content":"    private boolean housesAreUnique(List\u003cHouse\u003e houses) {","lastModifiedDate":"2024-04-01"},{"lineNumber":142,"author":{"gitId":"redcolorbicycle"},"content":"        for (int i \u003d 0; i \u003c houses.size() - 1; i++) {","lastModifiedDate":"2024-04-01"},{"lineNumber":143,"author":{"gitId":"redcolorbicycle"},"content":"            for (int j \u003d i + 1; j \u003c houses.size(); j++) {","lastModifiedDate":"2024-04-01"},{"lineNumber":144,"author":{"gitId":"redcolorbicycle"},"content":"                if (houses.get(i).equals(houses.get(j))) {","lastModifiedDate":"2024-04-01"},{"lineNumber":145,"author":{"gitId":"redcolorbicycle"},"content":"                    return false;","lastModifiedDate":"2024-04-01"},{"lineNumber":146,"author":{"gitId":"redcolorbicycle"},"content":"                }","lastModifiedDate":"2024-04-01"},{"lineNumber":147,"author":{"gitId":"redcolorbicycle"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":148,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":149,"author":{"gitId":"redcolorbicycle"},"content":"        return true;","lastModifiedDate":"2024-04-01"},{"lineNumber":150,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":151,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"redcolorbicycle":137,"KhoonSun47":5,"felixchanyy":9}},{"path":"src/main/java/seedu/address/model/house/UnitNumber.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":" * Represents a House\u0027s unit number in EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidUnitNumber(String)}","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"public class UnitNumber {","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"            \"The unit number should only contain numbers, with or without a letter as the end. \"","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"                    + \"There can only be at most 3 digits long.\";","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{1,3}[a-zA-Z]?\";","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"    public static final String ZERO_REGEX \u003d \"^0+$\";","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"    public static final String ZERO_AND_ALPHABET_REGEX \u003d \"^0*[a-zA-Z]$\";","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"    public final String value;","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"     * Constructs a {@code UnitNumber}.","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"     * @param unitNumber A valid unit number.","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"    public UnitNumber(String unitNumber) {","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"        requireNonNull(unitNumber);","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"        checkArgument(isValidUnitNumber(unitNumber), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"        value \u003d unitNumber;","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"     * Returns true if a given string is a valid unit number.","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"     * @param test The string to test.","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"     * @return true if the test matches the VALIDATION_REGEX.","lastModifiedDate":"2024-04-12"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"    public static boolean isValidUnitNumber(String test) {","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 !test.matches(ZERO_REGEX) \u0026\u0026 !test.matches(ZERO_AND_ALPHABET_REGEX);","lastModifiedDate":"2024-04-12"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"    public String toString() {","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"        return value;","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"            return true;","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"        if (!(other instanceof UnitNumber)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"            return false;","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"        UnitNumber otherUnitNumber \u003d (UnitNumber) other;","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"        return value.equals(otherUnitNumber.value);","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"KhoonSun47":64,"felixchanyy":1}},{"path":"src/main/java/seedu/address/model/house/exceptions/DuplicateHouseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"package seedu.address.model.house.exceptions;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":" * Signals that the operation will result in duplicate Houses (Houses are considered duplicates if they have the same","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":" * identity).","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"public class DuplicateHouseException extends RuntimeException {","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"    public DuplicateHouseException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"        super(\"Operation would result in duplicate houses\");","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"redcolorbicycle":11}},{"path":"src/main/java/seedu/address/model/house/exceptions/HouseNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"package seedu.address.model.house.exceptions;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":" * Signals that the house is not found.","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"public class HouseNotFoundException extends RuntimeException {","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"    public HouseNotFoundException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"        super(\"House not found!\");","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"redcolorbicycle":10}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":" * Represents a Person\u0027s address in EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof Address)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Address otherAddress \u003d (Address) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return value.equals(otherAddress.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"felixchanyy":1,"-":64}},{"path":"src/main/java/seedu/address/model/person/Budget.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"felixchanyy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.house.Price;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"felixchanyy"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"felixchanyy"},"content":" * Represents a Buyer\u0027s budget in EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"felixchanyy"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidBudget(String)}","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"felixchanyy"},"content":"public class Budget {","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Budget should be a positive number.\";","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d+(\\\\.\\\\d+)?\";","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"    public final String value;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":"     * Constructs a {@code Budget}.","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"felixchanyy"},"content":"     * @param budget A valid budget amount.","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"felixchanyy"},"content":"    public Budget(String budget) {","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"felixchanyy"},"content":"        requireNonNull(budget);","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"felixchanyy"},"content":"        checkArgument(isValidBudget(budget), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"felixchanyy"},"content":"        value \u003d budget;","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"felixchanyy"},"content":"     * Returns true if a given string is a valid budget amount.","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"felixchanyy"},"content":"    public static boolean isValidBudget(String test) {","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 Double.parseDouble(test) \u003e 0;","lastModifiedDate":"2024-04-08"},{"lineNumber":34,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"felixchanyy"},"content":"     * Converts this budget to a Price.","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"felixchanyy"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"felixchanyy"},"content":"     * @return The Price equivalent of this budget.","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"felixchanyy"},"content":"    public Price toPrice() {","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"felixchanyy"},"content":"        return new Price(value);","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"felixchanyy"},"content":"    public String toString() {","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"felixchanyy"},"content":"        return value;","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"felixchanyy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"felixchanyy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"felixchanyy"},"content":"            return true;","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"felixchanyy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"felixchanyy"},"content":"        if (!(other instanceof Budget)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"felixchanyy"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"felixchanyy"},"content":"        Budget otherBudget \u003d (Budget) other;","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"felixchanyy"},"content":"        return value.equals(otherBudget.value);","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"felixchanyy"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"felixchanyy"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"felixchanyy"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"felixchanyy":69}},{"path":"src/main/java/seedu/address/model/person/Buyer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"felixchanyy"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.HousingType;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"felixchanyy"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"felixchanyy"},"content":" * Represents a buyer in EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"felixchanyy"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":"public class Buyer extends Person {","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"    private final Budget budget;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"    private final HousingType preferredHousingType;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"     * Constructs a new Buyer instance without specifying a house. Default constructor.","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":"     * @param name        The name of the buyer.","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"     * @param phone       The phone number of the buyer.","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"felixchanyy"},"content":"     * @param email       The email address of the buyer.","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"     * @param preferredHousingType The type of housing the buyer wants.","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"felixchanyy"},"content":"     * @param budget      The budget of the buyer.","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"    public Buyer(Name name, Phone phone, Email email, Budget budget, HousingType preferredHousingType) {","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"        super(name, phone, email);","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"        this.preferredHousingType \u003d preferredHousingType;","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"felixchanyy"},"content":"        this.budget \u003d budget;","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"felixchanyy"},"content":"    public Budget getBudget() {","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"felixchanyy"},"content":"        return budget;","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"    public HousingType getPreferredHousingType() {","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"        return preferredHousingType;","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"felixchanyy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"felixchanyy"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"felixchanyy"},"content":"            return true;","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"felixchanyy"},"content":"        if (!(other instanceof Buyer)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"felixchanyy"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"felixchanyy"},"content":"        if (!super.equals(other)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"felixchanyy"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"felixchanyy"},"content":"        Buyer buyer \u003d (Buyer) other;","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"        return Objects.equals(budget, buyer.budget)","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"                \u0026\u0026 Objects.equals(preferredHousingType, buyer.preferredHousingType);","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"felixchanyy"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"        return Objects.hash(super.hashCode(), budget, preferredHousingType);","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"felixchanyy"},"content":"    public String toString() {","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"felixchanyy"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"felixchanyy"},"content":"                .add(\"name\", getName())","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"felixchanyy"},"content":"                .add(\"phone\", getPhone())","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"felixchanyy"},"content":"                .add(\"email\", getEmail())","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"                .add(\"housingType\", preferredHousingType)","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"felixchanyy"},"content":"                .add(\"budget\", budget)","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"felixchanyy"},"content":"                .add(\"tags\", getTags())","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"felixchanyy"},"content":"                .toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"felixchanyy"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"redcolorbicycle":3,"felixchanyy":58,"KhoonSun47":11,"lokidoki102":2}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":" * Represents a Person\u0027s email in EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"felixchanyy":1,"-":78}},{"path":"src/main/java/seedu/address/model/person/FullNameEqualsKeywordPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"felixchanyy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"felixchanyy"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"felixchanyy"},"content":" * Tests that a {@code Person}\u0027s full name matches the keyword given.","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"felixchanyy"},"content":"public class FullNameEqualsKeywordPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"felixchanyy"},"content":"    private final String keyword;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":"    public FullNameEqualsKeywordPredicate(String keyword) {","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"felixchanyy"},"content":"        this.keyword \u003d keyword.toLowerCase();","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"        return person.getName().fullName.equalsIgnoreCase(keyword);","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"felixchanyy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"felixchanyy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"felixchanyy"},"content":"            return true;","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"felixchanyy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"felixchanyy"},"content":"        if (!(other instanceof FullNameEqualsKeywordPredicate)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"felixchanyy"},"content":"            return false;","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"felixchanyy"},"content":"        FullNameEqualsKeywordPredicate otherPredicate \u003d (FullNameEqualsKeywordPredicate) other;","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"felixchanyy"},"content":"        return keyword.equalsIgnoreCase(otherPredicate.keyword);","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"felixchanyy"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"felixchanyy":34}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":" * Represents a Person\u0027s name in EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"public class Name implements Comparable\u003cName\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"lokidoki102"},"content":"    public int compareTo(Name other) {","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"lokidoki102"},"content":"        return this.fullName.toLowerCase().compareTo(other.fullName.toLowerCase());","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"felixchanyy":1,"-":63,"lokidoki102":5}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":" * Represents a Person in EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"    public Person(Name name, Phone phone, Email email) {","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"        requireAllNonNull(name, phone, email, tags);","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"        if (this instanceof Seller) {","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"            this.tags.add(new Tag(\"Seller\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"        if (this instanceof Buyer) {","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"            this.tags.add(new Tag(\"Buyer\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"redcolorbicycle"},"content":"                \u0026\u0026 otherPerson.getName().toString().equalsIgnoreCase((getName().toString()));","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"KhoonSun47"},"content":"        return Objects.hash(name, phone, email, tags);","lastModifiedDate":"2024-04-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"redcolorbicycle":1,"felixchanyy":1,"KhoonSun47":2,"-":100,"lokidoki102":9}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":" * Represents a Person\u0027s phone number in EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"felixchanyy":1,"-":60}},{"path":"src/main/java/seedu/address/model/person/Seller.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"zengzihui"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"zengzihui"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.House;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"felixchanyy"},"content":" * Represents a seller in EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"felixchanyy"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"felixchanyy"},"content":"public class Seller extends Person {","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"zengzihui"},"content":"    private final ObservableList\u003cHouse\u003e houses;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":"     * Constructs a new Seller instance.","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"     * @param name        The name of the seller.","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"     * @param phone       The phone number of the seller.","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"     * @param email       The email address of the seller.","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"     * @param houses      The houses the seller has (modified to accept a list of houses)","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"zengzihui"},"content":"    public Seller(Name name, Phone phone, Email email, ObservableList\u003cHouse\u003e houses) {","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"        super(name, phone, email);","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"        this.houses \u003d houses;","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":"     * Adds a new house to the seller\u0027s list of houses.","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"     * @param house The new house to add.","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"    public void addHouse(House house) {","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"        this.houses.add(house);","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"redcolorbicycle"},"content":"     * Removes a house from the seller\u0027s list of houses.","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"redcolorbicycle"},"content":"     * @param house The house to remove.","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"redcolorbicycle"},"content":"    public void removeHouse(House house) {","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"redcolorbicycle"},"content":"        this.houses.remove(house);","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"redcolorbicycle"},"content":"     * Gets the seller\u0027s list of houses.","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"zengzihui"},"content":"    public ObservableList\u003cHouse\u003e getHouses() {","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"redcolorbicycle"},"content":"        return this.houses;","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"redcolorbicycle"},"content":"     * Check if the seller\u0027s list of houses contains the house","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"redcolorbicycle"},"content":"    public boolean hasHouse(House h) {","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"redcolorbicycle"},"content":"        return this.houses.contains(h);","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"felixchanyy"},"content":"     * Creates a copy of seller.","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"felixchanyy"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"felixchanyy"},"content":"     * @return An instance of seller.","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"felixchanyy"},"content":"    public Seller copy() {","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"felixchanyy"},"content":"        Name copyName \u003d new Name(this.getName().toString());","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"felixchanyy"},"content":"        Phone copyPhone \u003d new Phone(this.getPhone().toString());","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"felixchanyy"},"content":"        Email copyEmail \u003d new Email(this.getEmail().toString());","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"zengzihui"},"content":"        ObservableList\u003cHouse\u003e copyHouse \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"felixchanyy"},"content":"        return new Seller(copyName, copyPhone, copyEmail, copyHouse);","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"redcolorbicycle":28,"zengzihui":6,"felixchanyy":28,"KhoonSun47":6,"lokidoki102":1}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.House;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.person.exceptions.InvalidSellerException;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"redcolorbicycle"},"content":"     * Returns true if the list contains an equivalent person with the same name as the given argument.","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"redcolorbicycle"},"content":"    public boolean contains(Name toCheck) {","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"redcolorbicycle"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"redcolorbicycle"},"content":"        for (Person p: internalList) {","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"redcolorbicycle"},"content":"            if (p.getName().toString().equalsIgnoreCase(toCheck.toString())) {","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"redcolorbicycle"},"content":"                return true;","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"redcolorbicycle"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"redcolorbicycle"},"content":"        return false;","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"redcolorbicycle"},"content":"     * Returns the person whose name matches the given argument.","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"redcolorbicycle"},"content":"    public Person findPersonByName(Name toCheck) {","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"redcolorbicycle"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"redcolorbicycle"},"content":"        assert this.contains(toCheck) : \"Person with this name must exist in AddressBook.\";","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"redcolorbicycle"},"content":"        for (Person p: internalList) {","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"redcolorbicycle"},"content":"            if (p.getName().toString().equalsIgnoreCase(toCheck.toString())) {","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"redcolorbicycle"},"content":"                return p;","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"redcolorbicycle"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"redcolorbicycle"},"content":"        return null;","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"lokidoki102"},"content":"        sortInternalList();","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":83,"author":{"gitId":"redcolorbicycle"},"content":"     * Adds a house to the person.","lastModifiedDate":"2024-04-01"},{"lineNumber":84,"author":{"gitId":"redcolorbicycle"},"content":"     * The house must not already exist in the person\u0027s houses.","lastModifiedDate":"2024-04-01"},{"lineNumber":85,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"redcolorbicycle"},"content":"    public void addHouse(House toAdd, Person owner) {","lastModifiedDate":"2024-04-01"},{"lineNumber":87,"author":{"gitId":"redcolorbicycle"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2024-04-01"},{"lineNumber":88,"author":{"gitId":"redcolorbicycle"},"content":"        if (!(owner instanceof Seller)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":89,"author":{"gitId":"redcolorbicycle"},"content":"            throw new InvalidSellerException();","lastModifiedDate":"2024-04-01"},{"lineNumber":90,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":91,"author":{"gitId":"redcolorbicycle"},"content":"        Seller seller \u003d (Seller) owner;","lastModifiedDate":"2024-04-01"},{"lineNumber":92,"author":{"gitId":"redcolorbicycle"},"content":"        seller.addHouse(toAdd);","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"redcolorbicycle"},"content":"        remove(owner);","lastModifiedDate":"2024-04-01"},{"lineNumber":94,"author":{"gitId":"redcolorbicycle"},"content":"        add(seller);","lastModifiedDate":"2024-04-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"lokidoki102"},"content":"        sortInternalList();","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":130,"author":{"gitId":"redcolorbicycle"},"content":"     * Removes a house from the person.","lastModifiedDate":"2024-04-01"},{"lineNumber":131,"author":{"gitId":"redcolorbicycle"},"content":"     * The house must exist in the person\u0027s houses.","lastModifiedDate":"2024-04-01"},{"lineNumber":132,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":133,"author":{"gitId":"redcolorbicycle"},"content":"    public void removeHouse(House toAdd, Person owner) {","lastModifiedDate":"2024-04-01"},{"lineNumber":134,"author":{"gitId":"redcolorbicycle"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2024-04-01"},{"lineNumber":135,"author":{"gitId":"redcolorbicycle"},"content":"        Seller seller \u003d (Seller) owner;","lastModifiedDate":"2024-04-01"},{"lineNumber":136,"author":{"gitId":"redcolorbicycle"},"content":"        seller.removeHouse(toAdd);","lastModifiedDate":"2024-04-01"},{"lineNumber":137,"author":{"gitId":"redcolorbicycle"},"content":"        remove(owner);","lastModifiedDate":"2024-04-01"},{"lineNumber":138,"author":{"gitId":"redcolorbicycle"},"content":"        add(seller);","lastModifiedDate":"2024-04-01"},{"lineNumber":139,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":140,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":144,"author":{"gitId":"lokidoki102"},"content":"        sortInternalList();","lastModifiedDate":"2024-04-03"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":158,"author":{"gitId":"lokidoki102"},"content":"        sortInternalList();","lastModifiedDate":"2024-04-03"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":211,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":212,"author":{"gitId":"lokidoki102"},"content":"    private void sortInternalList() {","lastModifiedDate":"2024-04-03"},{"lineNumber":213,"author":{"gitId":"lokidoki102"},"content":"        internalList.sort(Comparator.comparing(Person::getName));","lastModifiedDate":"2024-04-03"},{"lineNumber":214,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"redcolorbicycle":54,"-":152,"lokidoki102":9}},{"path":"src/main/java/seedu/address/model/person/exceptions/InvalidSellerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":" * Signals that the Person is not a Seller.","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"public class InvalidSellerException extends RuntimeException {","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"    public InvalidSellerException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"        super(\"Person must be a Seller to add a house\");","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"redcolorbicycle":10}},{"path":"src/main/java/seedu/address/model/person/exceptions/MissingHouseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":" * Signals that the operation will result in Missing houses","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":" * identity).","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"public class MissingHouseException extends RuntimeException {","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"    public MissingHouseException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"        super(\"Seller does not own this house!\");","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"redcolorbicycle":11}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":" * Represents a Tag in EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"felixchanyy":1,"-":61}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"import java.util.List;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":9,"author":{"gitId":"zengzihui"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"zengzihui"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.Block;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.Condominium;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.Hdb;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.House;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.HousingType;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.Level;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.PostalCode;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.house.Price;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.Street;","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.UnitNumber;","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.person.Budget;","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Buyer;","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Seller;","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"    public static Buyer[] getSampleBuyers() {","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"        return new Buyer[]{","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"            new Buyer(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"                        new Email(\"alexyeoh@example.com\"), new Budget(\"100000\"),","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"                        new HousingType(\"Hdb\")),","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"            new Buyer(new Name(\"Cernice Yu\"), new Phone(\"99272758\"),","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"                        new Email(\"cerniceyu@example.com\"), new Budget(\"200000\"),","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"                        new HousingType(\"Condominium\")),","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"            new Buyer(new Name(\"Eharlotte Oliveiro\"), new Phone(\"93210283\"),","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"                        new Email(\"eharlotte@example.com\"), new Budget(\"300000\"),","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"                        new HousingType(\"Hdb\")),","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"    public static Seller[] getSampleSellers() {","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"zengzihui"},"content":"        ObservableList\u003cHouse\u003e bavidLiHouses \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"        bavidLiHouses.add(new Hdb(new Level(\"3\"), new PostalCode(\"098703\"),","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"felixchanyy"},"content":"                new Street(\"Ang Mo Kio Avenue 1\"), new UnitNumber(\"02\"), new Block(\"51\"), new Price(\"1111111\")));","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"zengzihui"},"content":"        ObservableList\u003cHouse\u003e drfanHouses \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"        drfanHouses.add(new Condominium(new Level(\"4\"), new PostalCode(\"098713\"),","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"felixchanyy"},"content":"                new Street(\"Ang Mo Kio Avenue 2\"), new UnitNumber(\"03\"), new Block(\"52\"), new Price(\"2222222\")));","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"zengzihui"},"content":"        ObservableList\u003cHouse\u003e foyHouses \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"        foyHouses.add(new Hdb(new Level(\"5\"), new PostalCode(\"098723\"),","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"felixchanyy"},"content":"                new Street(\"Ang Mo Kio Avenue 3\"), new UnitNumber(\"04\"), new Block(\"53\"), new Price(\"3333333\")));","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"        foyHouses.add(new Hdb(new Level(\"6\"), new PostalCode(\"098724\"),","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"felixchanyy"},"content":"                new Street(\"Toa Payoh Avenue 4\"), new UnitNumber(\"05\"), new Block(\"54\"), new Price(\"4444444\")));","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"        return new Seller[]{","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"            new Seller(new Name(\"Bavid Li\"), new Phone(\"91031282\"),","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"                        new Email(\"libavid@example.com\"), bavidLiHouses),","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"            new Seller(new Name(\"Drfan Ibrahim\"), new Phone(\"92492021\"),","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"                        new Email(\"Drfan@example.com\"), drfanHouses),","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"            new Seller(new Name(\"Foy Balakrishnan\"), new Phone(\"92624417\"),","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"                        new Email(\"foyb@example.com\"), foyHouses)","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":73,"author":{"gitId":"KhoonSun47"},"content":"    public static List\u003cPerson\u003e getSamplePersons() {","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"KhoonSun47"},"content":"        List\u003cPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"KhoonSun47"},"content":"        persons.addAll(Arrays.asList(getSampleBuyers()));","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"KhoonSun47"},"content":"        persons.addAll(Arrays.asList(getSampleSellers()));","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"KhoonSun47"},"content":"        return persons;","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":82,"author":{"gitId":"KhoonSun47"},"content":"        for (Person person: getSamplePersons()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"KhoonSun47"},"content":"            sampleAb.addPerson(person);","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"redcolorbicycle"},"content":"            if (person instanceof Seller) {","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"redcolorbicycle"},"content":"                for (House h: ((Seller) person).getHouses()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"redcolorbicycle"},"content":"                    sampleAb.addHouseToHouses(h);","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"redcolorbicycle"},"content":"                }","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"redcolorbicycle"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"redcolorbicycle":8,"zengzihui":5,"KhoonSun47":40,"felixchanyy":6,"-":40,"lokidoki102":3}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedBuyer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zengzihui"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"zengzihui"},"content":"import java.util.List;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"zengzihui"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"zengzihui"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"zengzihui"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.HousingType;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.person.Budget;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.person.Buyer;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"zengzihui"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"zengzihui"},"content":" * Jackson-friendly version of {@link Buyer}.","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"zengzihui"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"zengzihui"},"content":"public class JsonAdaptedBuyer extends JsonAdaptedPerson {","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":"    private final String budget;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"    private final String preferredHousingType;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"zengzihui"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"     * Constructs a {@code JsonAdaptedBuyer}, extends from JsonAdaptedPerson","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"zengzihui"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"zengzihui"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"zengzihui"},"content":"    public JsonAdaptedBuyer(@JsonProperty(\"name\") String name,","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"zengzihui"},"content":"                             @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"zengzihui"},"content":"                             @JsonProperty(\"email\") String email,","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"                             @JsonProperty(\"preferredHousingType\") String preferredHousingType,","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"felixchanyy"},"content":"                             @JsonProperty(\"budget\") String budget,","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"zengzihui"},"content":"                             @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"        super(name, phone, email, tags);","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":"        this.budget \u003d budget;","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"        this.preferredHousingType \u003d preferredHousingType;","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"zengzihui"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"zengzihui"},"content":"     * Converts a given {@code JsonAdaptedBuyer} into this class for Jackson use.","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"zengzihui"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"zengzihui"},"content":"    public JsonAdaptedBuyer(Buyer source) {","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"zengzihui"},"content":"        super(source);","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"felixchanyy"},"content":"        budget \u003d source.getBudget().value;","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"        preferredHousingType \u003d source.getPreferredHousingType().value;","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"zengzihui"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"     * Converts this Jackson-friendly adapted buyer object into the model\u0027s {@code Buyer} object.","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"zengzihui"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"zengzihui"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"zengzihui"},"content":"    public Buyer toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"felixchanyy"},"content":"        if (budget \u003d\u003d null) {","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"felixchanyy"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Budget.class.getSimpleName()));","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"felixchanyy"},"content":"        if (!Budget.isValidBudget(budget)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"felixchanyy"},"content":"            throw new IllegalValueException(Budget.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"felixchanyy"},"content":"        final Budget modelBudget \u003d new Budget(budget);","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"        if (preferredHousingType \u003d\u003d null) {","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"                    HousingType.class.getSimpleName()));","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"        if (!HousingType.isValidHousingType(preferredHousingType)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"            throw new IllegalValueException(HousingType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"        final HousingType modelHousingType \u003d new HousingType(preferredHousingType);","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"zengzihui"},"content":"        Person person \u003d super.toModelType();","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"zengzihui"},"content":"        return new Buyer(person.getName(), person.getPhone(), person.getEmail(),","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"lokidoki102"},"content":"                modelBudget, modelHousingType);","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"zengzihui"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"zengzihui":40,"KhoonSun47":17,"felixchanyy":15,"lokidoki102":1}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedHouse.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.Block;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.Condominium;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.Hdb;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.House;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.Landed;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.Level;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.PostalCode;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.house.Price;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.Street;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.UnitNumber;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":" * Jackson-friendly version of {@link House}.","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"public class JsonAdaptedHouse {","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"House\u0027s %s field is missing!\";","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(JsonAdaptedHouse.class.getName());","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"    private String housingType;","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"    private String block;","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"    private String level;","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"    private final String postalCode;","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"    private final String street;","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"    private final String unitNumber;","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"felixchanyy"},"content":"    private final String price;","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"     * Constructs a {@code JsonAdaptedHouse} with the given house details.","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"    public JsonAdaptedHouse(@JsonProperty(\"housingType\") String housingType,","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"                            @JsonProperty(\"block\") String block,","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"                            @JsonProperty(\"level\") String level,","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"                            @JsonProperty(\"postalCode\") String postalCode,","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"                            @JsonProperty(\"street\") String street,","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"felixchanyy"},"content":"                            @JsonProperty(\"unitNumber\") String unitNumber,","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"felixchanyy"},"content":"                            @JsonProperty(\"price\") String price) {","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"        assert housingType !\u003d null : \"housingType is required\";","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"        this.housingType \u003d housingType;","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"        this.block \u003d block;","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"        this.level \u003d level;","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"        this.postalCode \u003d postalCode;","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"        this.street \u003d street;","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"        this.unitNumber \u003d unitNumber;","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"felixchanyy"},"content":"        this.price \u003d price;","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"     * Converts a given {@code House} into this class for Jackson use.","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"    public JsonAdaptedHouse(House source) {","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"        LOGGER.info(\"Converting House to JsonAdaptedHouse\");","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"        extractHouseDetails(source);","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"        this.postalCode \u003d source.getPostalCode().value;","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"        this.street \u003d source.getStreet().value;","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"        this.unitNumber \u003d source.getUnitNumber().value;","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"        this.price \u003d source.getPrice().value;","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"    private void extractHouseDetails(House source) {","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"        assert source !\u003d null : \"source house is required!\";","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"redcolorbicycle"},"content":"        if (source instanceof Condominium) {","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"            extractCondominiumDetails((Condominium) source);","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"KhoonSun47"},"content":"        } else if (source instanceof Hdb) {","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"KhoonSun47"},"content":"            extractHdbDetails((Hdb) source);","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"KhoonSun47"},"content":"        } else {","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"felixchanyy"},"content":"            extractLandedDetails();","lastModifiedDate":"2024-04-12"},{"lineNumber":75,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"KhoonSun47"},"content":"    private void extractCondominiumDetails(Condominium condominium) {","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"KhoonSun47"},"content":"        assert condominium !\u003d null : \"Condominium is required!\";","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"KhoonSun47"},"content":"        if (condominium.getBlock() !\u003d null) {","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"KhoonSun47"},"content":"            this.block \u003d condominium.getBlock().value;","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"KhoonSun47"},"content":"        } else {","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"KhoonSun47"},"content":"            this.block \u003d null;","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"KhoonSun47"},"content":"        if (condominium.getLevel() !\u003d null) {","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"KhoonSun47"},"content":"            this.level \u003d condominium.getLevel().value;","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"KhoonSun47"},"content":"        } else {","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"KhoonSun47"},"content":"            this.level \u003d null;","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"KhoonSun47"},"content":"        this.housingType \u003d \"Condominium\";","lastModifiedDate":"2024-04-01"},{"lineNumber":91,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"KhoonSun47"},"content":"    private void extractHdbDetails(Hdb hdb) {","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"KhoonSun47"},"content":"        assert hdb !\u003d null : \"Hdb is required!\";","lastModifiedDate":"2024-04-04"},{"lineNumber":95,"author":{"gitId":"KhoonSun47"},"content":"        if (hdb.getBlock() !\u003d null) {","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"KhoonSun47"},"content":"            this.block \u003d hdb.getBlock().value;","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"KhoonSun47"},"content":"        } else {","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"KhoonSun47"},"content":"            this.block \u003d null;","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"KhoonSun47"},"content":"        if (hdb.getLevel() !\u003d null) {","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"KhoonSun47"},"content":"            this.level \u003d hdb.getLevel().value;","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"KhoonSun47"},"content":"        } else {","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"KhoonSun47"},"content":"            this.level \u003d null;","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"KhoonSun47"},"content":"        this.housingType \u003d \"Hdb\";","lastModifiedDate":"2024-04-01"},{"lineNumber":106,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"felixchanyy"},"content":"    private void extractLandedDetails() {","lastModifiedDate":"2024-04-12"},{"lineNumber":109,"author":{"gitId":"KhoonSun47"},"content":"        this.block \u003d null;","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"KhoonSun47"},"content":"        this.level \u003d null;","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"KhoonSun47"},"content":"        this.housingType \u003d \"Landed\";","lastModifiedDate":"2024-04-01"},{"lineNumber":112,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":113,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":114,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"KhoonSun47"},"content":"     * Converts this Jackson-friendly adapted house object into the model\u0027s {@code House} object.","lastModifiedDate":"2024-03-21"},{"lineNumber":116,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":117,"author":{"gitId":"KhoonSun47"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted house.","lastModifiedDate":"2024-03-21"},{"lineNumber":118,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":119,"author":{"gitId":"KhoonSun47"},"content":"    public House toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"KhoonSun47"},"content":"        LOGGER.info(\"Converting JsonAdaptedHouse to House model type\");","lastModifiedDate":"2024-04-04"},{"lineNumber":121,"author":{"gitId":"KhoonSun47"},"content":"        if (postalCode \u003d\u003d null) {","lastModifiedDate":"2024-03-27"},{"lineNumber":122,"author":{"gitId":"KhoonSun47"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-27"},{"lineNumber":123,"author":{"gitId":"KhoonSun47"},"content":"                    PostalCode.class.getSimpleName()));","lastModifiedDate":"2024-03-27"},{"lineNumber":124,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":125,"author":{"gitId":"KhoonSun47"},"content":"        if (!PostalCode.isValidPostalCode(postalCode)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":126,"author":{"gitId":"KhoonSun47"},"content":"            throw new IllegalValueException(PostalCode.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-27"},{"lineNumber":127,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":128,"author":{"gitId":"KhoonSun47"},"content":"        final PostalCode modelPostalCode \u003d new PostalCode(postalCode);","lastModifiedDate":"2024-03-27"},{"lineNumber":129,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":130,"author":{"gitId":"KhoonSun47"},"content":"        if (street \u003d\u003d null) {","lastModifiedDate":"2024-03-27"},{"lineNumber":131,"author":{"gitId":"KhoonSun47"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Street.class.getSimpleName()));","lastModifiedDate":"2024-03-27"},{"lineNumber":132,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":133,"author":{"gitId":"KhoonSun47"},"content":"        if (!Street.isValidStreet(street)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":134,"author":{"gitId":"KhoonSun47"},"content":"            throw new IllegalValueException(Street.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-27"},{"lineNumber":135,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":136,"author":{"gitId":"KhoonSun47"},"content":"        final Street modelStreet \u003d new Street(street);","lastModifiedDate":"2024-03-27"},{"lineNumber":137,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":138,"author":{"gitId":"KhoonSun47"},"content":"        if (unitNumber \u003d\u003d null) {","lastModifiedDate":"2024-03-27"},{"lineNumber":139,"author":{"gitId":"KhoonSun47"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-27"},{"lineNumber":140,"author":{"gitId":"KhoonSun47"},"content":"                    UnitNumber.class.getSimpleName()));","lastModifiedDate":"2024-03-27"},{"lineNumber":141,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":142,"author":{"gitId":"KhoonSun47"},"content":"        if (!UnitNumber.isValidUnitNumber(unitNumber)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":143,"author":{"gitId":"KhoonSun47"},"content":"            throw new IllegalValueException(UnitNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-27"},{"lineNumber":144,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":145,"author":{"gitId":"KhoonSun47"},"content":"        final UnitNumber modelUnitNumber \u003d new UnitNumber(unitNumber);","lastModifiedDate":"2024-03-27"},{"lineNumber":146,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":147,"author":{"gitId":"felixchanyy"},"content":"        if (price \u003d\u003d null) {","lastModifiedDate":"2024-04-01"},{"lineNumber":148,"author":{"gitId":"felixchanyy"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2024-04-01"},{"lineNumber":149,"author":{"gitId":"felixchanyy"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Price.class.getSimpleName()));","lastModifiedDate":"2024-04-01"},{"lineNumber":150,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":151,"author":{"gitId":"felixchanyy"},"content":"        if (!Price.isValidPrice(price)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":152,"author":{"gitId":"felixchanyy"},"content":"            throw new IllegalValueException(Price.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-01"},{"lineNumber":153,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":154,"author":{"gitId":"felixchanyy"},"content":"        final Price modelPrice \u003d new Price(price);","lastModifiedDate":"2024-04-01"},{"lineNumber":155,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":156,"author":{"gitId":"KhoonSun47"},"content":"        Block modelBlock \u003d null;","lastModifiedDate":"2024-04-03"},{"lineNumber":157,"author":{"gitId":"KhoonSun47"},"content":"        Level modelLevel \u003d null;","lastModifiedDate":"2024-04-03"},{"lineNumber":158,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":159,"author":{"gitId":"KhoonSun47"},"content":"        if (block !\u003d null) {","lastModifiedDate":"2024-04-03"},{"lineNumber":160,"author":{"gitId":"KhoonSun47"},"content":"            modelBlock \u003d new Block(block);","lastModifiedDate":"2024-04-03"},{"lineNumber":161,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":162,"author":{"gitId":"KhoonSun47"},"content":"        if (level !\u003d null) {","lastModifiedDate":"2024-04-03"},{"lineNumber":163,"author":{"gitId":"KhoonSun47"},"content":"            modelLevel \u003d new Level(level);","lastModifiedDate":"2024-04-03"},{"lineNumber":164,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":165,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":166,"author":{"gitId":"KhoonSun47"},"content":"        switch (housingType.toLowerCase()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":167,"author":{"gitId":"KhoonSun47"},"content":"        case \"condominium\":","lastModifiedDate":"2024-04-03"},{"lineNumber":168,"author":{"gitId":"KhoonSun47"},"content":"            if (modelBlock !\u003d null) {","lastModifiedDate":"2024-03-21"},{"lineNumber":169,"author":{"gitId":"KhoonSun47"},"content":"                return new Condominium(modelLevel, modelPostalCode, modelStreet, modelUnitNumber,","lastModifiedDate":"2024-04-03"},{"lineNumber":170,"author":{"gitId":"KhoonSun47"},"content":"                        modelBlock, modelPrice);","lastModifiedDate":"2024-04-03"},{"lineNumber":171,"author":{"gitId":"KhoonSun47"},"content":"            } else {","lastModifiedDate":"2024-03-21"},{"lineNumber":172,"author":{"gitId":"felixchanyy"},"content":"                return new Condominium(modelLevel, modelPostalCode, modelStreet, modelUnitNumber, modelPrice);","lastModifiedDate":"2024-04-01"},{"lineNumber":173,"author":{"gitId":"KhoonSun47"},"content":"            }","lastModifiedDate":"2024-03-21"},{"lineNumber":174,"author":{"gitId":"KhoonSun47"},"content":"        case \"hdb\":","lastModifiedDate":"2024-04-03"},{"lineNumber":175,"author":{"gitId":"felixchanyy"},"content":"            return new Hdb(modelLevel, modelPostalCode, modelStreet, modelUnitNumber, modelBlock, modelPrice);","lastModifiedDate":"2024-04-01"},{"lineNumber":176,"author":{"gitId":"KhoonSun47"},"content":"        case \"landed\":","lastModifiedDate":"2024-04-03"},{"lineNumber":177,"author":{"gitId":"felixchanyy"},"content":"            return new Landed(modelUnitNumber, modelPostalCode, modelStreet, modelPrice);","lastModifiedDate":"2024-04-01"},{"lineNumber":178,"author":{"gitId":"KhoonSun47"},"content":"        default:","lastModifiedDate":"2024-04-03"},{"lineNumber":179,"author":{"gitId":"KhoonSun47"},"content":"            LOGGER.severe(\"Unknown housing type in JsonAdaptedHouse\");","lastModifiedDate":"2024-04-04"},{"lineNumber":180,"author":{"gitId":"KhoonSun47"},"content":"            throw new IllegalValueException(\"Unknown House Type\");","lastModifiedDate":"2024-03-27"},{"lineNumber":181,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":182,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":183,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"redcolorbicycle":3,"KhoonSun47":161,"felixchanyy":19}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name,","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"                             @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"                             @JsonProperty(\"email\") String email,","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"lokidoki102"},"content":"        return new Person(modelName, modelPhone, modelEmail);","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"KhoonSun47":3,"-":89,"lokidoki102":1}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedSeller.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import java.util.List;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"zengzihui"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"zengzihui"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.House;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Seller;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":" * Jackson-friendly version of {@link Seller}.","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"public class JsonAdaptedSeller extends JsonAdaptedPerson {","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"    private final List\u003cJsonAdaptedHouse\u003e houses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"     * Constructs a {@code JsonAdaptedSeller}, extends from JsonAdaptedPerson.","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"    public JsonAdaptedSeller(@JsonProperty(\"name\") String name,","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"                             @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"                             @JsonProperty(\"email\") String email,","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"                             @JsonProperty(\"houses\") List\u003cJsonAdaptedHouse\u003e houses,","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"                             @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"        super(name, phone, email, tags);","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"        if (houses \u003d\u003d null) {","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"            throw new IllegalArgumentException(\"The \u0027houses\u0027 field is missing!\");","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"        this.houses.addAll(houses);","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"     * Converts a given {@code JsonAdaptedSeller} into this class for Jackson use.","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"    public JsonAdaptedSeller(Seller source) {","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"        super(source);","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"        houses.addAll(source.getHouses().stream()","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"                .map(JsonAdaptedHouse::new)","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"     * Converts this Jackson-friendly adapted seller object into the model\u0027s {@code Seller} object.","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"    public Seller toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"        Person person \u003d super.toModelType();","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"zengzihui"},"content":"        final ObservableList\u003cHouse\u003e sellerHouses \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"        for (JsonAdaptedHouse house : houses) {","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"            try {","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"                sellerHouses.add(house.toModelType());","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"            } catch (IllegalValueException ive) {","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"                throw ive;","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"                throw new IllegalValueException(\"Error when converting houses: \" + e.getMessage());","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"            }","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"        return new Seller(person.getName(), person.getPhone(),","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"lokidoki102"},"content":"                person.getEmail(), sellerHouses);","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"zengzihui":3,"KhoonSun47":66,"lokidoki102":1}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.commands.AddHouseCommand.MESSAGE_DUPLICATE_HOUSE;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.House;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Buyer;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Seller;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"    private final List\u003cJsonAdaptedSeller\u003e sellers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"    private final List\u003cJsonAdaptedBuyer\u003e buyers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"buyers\") List\u003cJsonAdaptedBuyer\u003e buyers,","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"                @JsonProperty(\"sellers\") List\u003cJsonAdaptedSeller\u003e sellers) {","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"        if (buyers !\u003d null) {","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"            this.buyers.addAll(buyers);","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"        if (sellers !\u003d null) {","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"            this.sellers.addAll(sellers);","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"        source.getPersonList().stream()","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"                .filter(Seller.class::isInstance)","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"                .map(Seller.class::cast)","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"                .map(JsonAdaptedSeller::new)","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"                .forEach(sellers::add);","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"        source.getPersonList().stream()","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"                .filter(Buyer.class::isInstance)","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"                .map(Buyer.class::cast)","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"                .map(JsonAdaptedBuyer::new)","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"                .forEach(buyers::add);","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"felixchanyy"},"content":"     * Converts this EstateEase into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2024-04-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"        for (JsonAdaptedSeller jsonAdaptedSeller : sellers) {","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"            Seller seller \u003d jsonAdaptedSeller.toModelType();","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"KhoonSun47"},"content":"            for (House house : seller.getHouses()) {","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"KhoonSun47"},"content":"                if (addressBook.hasHouse(house)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"KhoonSun47"},"content":"                    throw new IllegalValueException(MESSAGE_DUPLICATE_HOUSE);","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"KhoonSun47"},"content":"                }","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"KhoonSun47"},"content":"                addressBook.addHouseToHouses(house);","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"KhoonSun47"},"content":"            }","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":78,"author":{"gitId":"KhoonSun47"},"content":"            if (!addressBook.hasPerson(seller)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"KhoonSun47"},"content":"                addressBook.addPerson(seller);","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"KhoonSun47"},"content":"            } else {","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"KhoonSun47"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"redcolorbicycle"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"KhoonSun47"},"content":"        for (JsonAdaptedBuyer jsonAdaptedBuyer : buyers) {","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"KhoonSun47"},"content":"            Buyer buyer \u003d jsonAdaptedBuyer.toModelType();","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"KhoonSun47"},"content":"            if (!addressBook.hasPerson(buyer)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":88,"author":{"gitId":"KhoonSun47"},"content":"                addressBook.addPerson(buyer);","lastModifiedDate":"2024-04-04"},{"lineNumber":89,"author":{"gitId":"KhoonSun47"},"content":"            } else {","lastModifiedDate":"2024-04-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"redcolorbicycle":2,"KhoonSun47":44,"felixchanyy":2,"-":47}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s2-cs2103-f09-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":101,"lokidoki102":1}},{"path":"src/main/java/seedu/address/ui/HouseCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zengzihui"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"zengzihui"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"zengzihui"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"zengzihui"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"zengzihui"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.house.Condominium;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.house.Hdb;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.house.House;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"zengzihui"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"felixchanyy"},"content":" * An ui component that displays information of a {@code House}.","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"zengzihui"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"zengzihui"},"content":"public class HouseCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"zengzihui"},"content":"    private static final String FXML \u003d \"HouseListCard.fxml\";","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"zengzihui"},"content":"    public final House house;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"zengzihui"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"zengzihui"},"content":"    private VBox houseCard;","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"zengzihui"},"content":"    @FXML","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"zengzihui"},"content":"    private Label houseType;","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"zengzihui"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"zengzihui"},"content":"    private Label postalCode;","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"zengzihui"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"zengzihui"},"content":"    private Label street;","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"zengzihui"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"zengzihui"},"content":"    private Label unitNumber;","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"zengzihui"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"zengzihui"},"content":"    private Label block;","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"zengzihui"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"zengzihui"},"content":"    private Label level;","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"zengzihui"},"content":"    @FXML","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"zengzihui"},"content":"    private Label address;","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"zengzihui"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"zengzihui"},"content":"    private Label price;","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"zengzihui"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"zengzihui"},"content":"     * Creates a {@code HouseCard} with the given {@code Seller} to display.","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"zengzihui"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"zengzihui"},"content":"    public HouseCard(House house) {","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"zengzihui"},"content":"        super(FXML);","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"zengzihui"},"content":"        this.house \u003d house;","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":52,"author":{"gitId":"felixchanyy"},"content":"        setHouseType();","lastModifiedDate":"2024-04-12"},{"lineNumber":53,"author":{"gitId":"felixchanyy"},"content":"        setPostalCode();","lastModifiedDate":"2024-04-12"},{"lineNumber":54,"author":{"gitId":"felixchanyy"},"content":"        setPrice();","lastModifiedDate":"2024-04-12"},{"lineNumber":55,"author":{"gitId":"felixchanyy"},"content":"        setAddress();","lastModifiedDate":"2024-04-12"},{"lineNumber":56,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":57,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":58,"author":{"gitId":"zengzihui"},"content":"    //@@author zengzihui","lastModifiedDate":"2024-04-12"},{"lineNumber":59,"author":{"gitId":"zengzihui"},"content":"    private void setHouseType() {","lastModifiedDate":"2024-04-12"},{"lineNumber":60,"author":{"gitId":"zengzihui"},"content":"        houseType.setText(\"House Type: \" + house.getHousingType().value);","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":62,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":63,"author":{"gitId":"zengzihui"},"content":"    //@@author zengzihui","lastModifiedDate":"2024-04-12"},{"lineNumber":64,"author":{"gitId":"zengzihui"},"content":"    private void setPostalCode() {","lastModifiedDate":"2024-04-12"},{"lineNumber":65,"author":{"gitId":"zengzihui"},"content":"        postalCode.setText(\"Postal Code: \" + house.getPostalCode().value);","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":67,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":68,"author":{"gitId":"zengzihui"},"content":"    //@@author zengzihui","lastModifiedDate":"2024-04-12"},{"lineNumber":69,"author":{"gitId":"zengzihui"},"content":"    private void setPrice() {","lastModifiedDate":"2024-04-12"},{"lineNumber":70,"author":{"gitId":"zengzihui"},"content":"        price.setText(\"Price: $\" + house.getPrice().value);","lastModifiedDate":"2024-04-12"},{"lineNumber":71,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":72,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":73,"author":{"gitId":"zengzihui"},"content":"    //@@author zengzihui","lastModifiedDate":"2024-04-12"},{"lineNumber":74,"author":{"gitId":"zengzihui"},"content":"    private void setAddress() {","lastModifiedDate":"2024-04-12"},{"lineNumber":75,"author":{"gitId":"zengzihui"},"content":"        String addr \u003d house.getUnitNumber().value + \" \" + house.getStreet().value;","lastModifiedDate":"2024-04-12"},{"lineNumber":76,"author":{"gitId":"zengzihui"},"content":"        if (house instanceof Hdb) {","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"zengzihui"},"content":"            addr \u003d getAddressForHdb((Hdb) house);","lastModifiedDate":"2024-04-12"},{"lineNumber":78,"author":{"gitId":"zengzihui"},"content":"        } else if (house instanceof Condominium) {","lastModifiedDate":"2024-04-12"},{"lineNumber":79,"author":{"gitId":"zengzihui"},"content":"            addr \u003d getAddressForCondominium((Condominium) house);","lastModifiedDate":"2024-04-12"},{"lineNumber":80,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":81,"author":{"gitId":"zengzihui"},"content":"        address.setText(addr);","lastModifiedDate":"2024-04-12"},{"lineNumber":82,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":83,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":84,"author":{"gitId":"zengzihui"},"content":"    //@@author zengzihui","lastModifiedDate":"2024-04-12"},{"lineNumber":85,"author":{"gitId":"zengzihui"},"content":"    private String getAddressForHdb(Hdb hdb) {","lastModifiedDate":"2024-04-12"},{"lineNumber":86,"author":{"gitId":"zengzihui"},"content":"        String blockValue \u003d hdb.getBlock().value;","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"zengzihui"},"content":"        String levelValue \u003d hdb.getLevel().value;","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"zengzihui"},"content":"        return blockValue + \" \"","lastModifiedDate":"2024-04-12"},{"lineNumber":89,"author":{"gitId":"zengzihui"},"content":"                + hdb.getStreet().value + \" \"","lastModifiedDate":"2024-04-04"},{"lineNumber":90,"author":{"gitId":"zengzihui"},"content":"                + \"# \" + levelValue + \"-\" + hdb.getUnitNumber();","lastModifiedDate":"2024-04-04"},{"lineNumber":91,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":92,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":93,"author":{"gitId":"zengzihui"},"content":"    //@@author zengzihui","lastModifiedDate":"2024-04-12"},{"lineNumber":94,"author":{"gitId":"zengzihui"},"content":"    private String getAddressForCondominium(Condominium condominium) {","lastModifiedDate":"2024-04-12"},{"lineNumber":95,"author":{"gitId":"zengzihui"},"content":"        String blockValue \u003d condominium.getBlock().value;","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"zengzihui"},"content":"        String levelValue \u003d condominium.getLevel().value;","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"zengzihui"},"content":"        return blockValue + \" \" + condominium.getStreet().value + \" \"","lastModifiedDate":"2024-04-12"},{"lineNumber":98,"author":{"gitId":"zengzihui"},"content":"                + \"# \" + levelValue + \" - \" + condominium.getUnitNumber();","lastModifiedDate":"2024-04-08"},{"lineNumber":99,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":100,"author":{"gitId":"zengzihui"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"zengzihui":92,"felixchanyy":8}},{"path":"src/main/java/seedu/address/ui/HouseListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zengzihui"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"zengzihui"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"zengzihui"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"zengzihui"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"zengzihui"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"zengzihui"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"zengzihui"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"zengzihui"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.house.House;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"zengzihui"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"zengzihui"},"content":" * Panel containing the list of houses.","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"zengzihui"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"zengzihui"},"content":"public class HouseListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"zengzihui"},"content":"    private static final String FXML \u003d \"HouseListPanel.fxml\";","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"zengzihui"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(HouseListPanel.class);","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"zengzihui"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"zengzihui"},"content":"    private ListView\u003cHouse\u003e houseListView;","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"zengzihui"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"zengzihui"},"content":"     * Creates a {@code HouseListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"zengzihui"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"zengzihui"},"content":"    public HouseListPanel(ObservableList\u003cHouse\u003e houseList) {","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"zengzihui"},"content":"        super(FXML);","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"zengzihui"},"content":"        houseListView.setItems(houseList);","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"zengzihui"},"content":"        houseListView.setCellFactory(listView -\u003e new HouseListPanel.HouseListViewCell());","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"zengzihui"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"zengzihui"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code House} using a {@code HouseCard}.","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"zengzihui"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"zengzihui"},"content":"    class HouseListViewCell extends ListCell\u003cHouse\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"zengzihui"},"content":"        @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"zengzihui"},"content":"        protected void updateItem(House house, boolean empty) {","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"zengzihui"},"content":"            super.updateItem(house, empty);","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"zengzihui"},"content":"            if (empty || house \u003d\u003d null) {","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"zengzihui"},"content":"                setGraphic(null);","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"zengzihui"},"content":"                setText(null);","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"zengzihui"},"content":"            } else {","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"zengzihui"},"content":"                setGraphic(new HouseCard(house).getRoot());","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"zengzihui"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"zengzihui"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"zengzihui":49}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"zengzihui"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"zengzihui"},"content":"import javafx.scene.control.SplitPane;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"zengzihui"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.State;","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.person.Seller;","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"zengzihui"},"content":"    private PersonDetailsPanel personDetailsPanel;","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"zengzihui"},"content":"    private MatchResultListPanel matchResultListPanel;","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"zengzihui"},"content":"    @FXML","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"zengzihui"},"content":"    private VBox personList;","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"zengzihui"},"content":"    private VBox personDetails;","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"zengzihui"},"content":"    @FXML","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"zengzihui"},"content":"    private StackPane personDetailsPanelPlaceholder;","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"zengzihui"},"content":"    private VBox matchResultList;","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"zengzihui"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"zengzihui"},"content":"    private StackPane matchResultListPanelPlaceholder;","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"zengzihui"},"content":"    @FXML","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"zengzihui"},"content":"    private SplitPane contentBoxSplitPane;","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":142,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":143,"author":{"gitId":"zengzihui"},"content":"        personDetailsPanel \u003d new PersonDetailsPanel();","lastModifiedDate":"2024-04-02"},{"lineNumber":144,"author":{"gitId":"zengzihui"},"content":"        personDetailsPanelPlaceholder.getChildren().add(personDetailsPanel.getRoot());","lastModifiedDate":"2024-04-02"},{"lineNumber":145,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":146,"author":{"gitId":"zengzihui"},"content":"        matchResultListPanel \u003d new MatchResultListPanel();","lastModifiedDate":"2024-04-03"},{"lineNumber":147,"author":{"gitId":"zengzihui"},"content":"        matchResultListPanelPlaceholder.getChildren().add(matchResultListPanel.getRoot());","lastModifiedDate":"2024-04-03"},{"lineNumber":148,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":149,"author":{"gitId":"zengzihui"},"content":"        personDetails.setVisible(false);","lastModifiedDate":"2024-04-02"},{"lineNumber":150,"author":{"gitId":"zengzihui"},"content":"        matchResultList.setVisible(false);","lastModifiedDate":"2024-04-03"},{"lineNumber":151,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":152,"author":{"gitId":"zengzihui"},"content":"        contentBoxSplitPane.getItems().removeAll(personDetails, matchResultList);","lastModifiedDate":"2024-04-03"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":195,"author":{"gitId":"zengzihui"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":196,"author":{"gitId":"zengzihui"},"content":"     * Handles view a specific person request","lastModifiedDate":"2024-04-02"},{"lineNumber":197,"author":{"gitId":"zengzihui"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":198,"author":{"gitId":"zengzihui"},"content":"    public void handleViewPerson(Person person) {","lastModifiedDate":"2024-04-02"},{"lineNumber":199,"author":{"gitId":"zengzihui"},"content":"        if (person \u003d\u003d null) {","lastModifiedDate":"2024-04-02"},{"lineNumber":200,"author":{"gitId":"zengzihui"},"content":"            personDetails.setVisible(false);","lastModifiedDate":"2024-04-02"},{"lineNumber":201,"author":{"gitId":"zengzihui"},"content":"            return;","lastModifiedDate":"2024-04-02"},{"lineNumber":202,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":203,"author":{"gitId":"zengzihui"},"content":"        personDetails.setVisible(true);","lastModifiedDate":"2024-04-02"},{"lineNumber":204,"author":{"gitId":"zengzihui"},"content":"        personDetailsPanel.setPersonDetails(person);","lastModifiedDate":"2024-04-02"},{"lineNumber":205,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":206,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":207,"author":{"gitId":"zengzihui"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":208,"author":{"gitId":"zengzihui"},"content":"     * Handles displaying match results from the matchBuyer command.","lastModifiedDate":"2024-04-04"},{"lineNumber":209,"author":{"gitId":"zengzihui"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":210,"author":{"gitId":"zengzihui"},"content":"    public void handleDisplayMatchResults(ObservableList\u003cSeller\u003e sellers) {","lastModifiedDate":"2024-04-03"},{"lineNumber":211,"author":{"gitId":"zengzihui"},"content":"        if (sellers \u003d\u003d null) {","lastModifiedDate":"2024-04-03"},{"lineNumber":212,"author":{"gitId":"zengzihui"},"content":"            matchResultList.setVisible(false);","lastModifiedDate":"2024-04-03"},{"lineNumber":213,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":214,"author":{"gitId":"zengzihui"},"content":"        matchResultList.setVisible(true);","lastModifiedDate":"2024-04-03"},{"lineNumber":215,"author":{"gitId":"zengzihui"},"content":"        matchResultListPanel.setMatchResults(logic.getFilteredSellerList());","lastModifiedDate":"2024-04-03"},{"lineNumber":216,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":217,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":248,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":249,"author":{"gitId":"zengzihui"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":250,"author":{"gitId":"zengzihui"},"content":"     * Updates the ui layout for displaying.","lastModifiedDate":"2024-04-02"},{"lineNumber":251,"author":{"gitId":"zengzihui"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":252,"author":{"gitId":"zengzihui"},"content":"    public void updateUiLayout(State newState) {","lastModifiedDate":"2024-04-02"},{"lineNumber":253,"author":{"gitId":"zengzihui"},"content":"        contentBoxSplitPane.getItems().removeAll(personList, personDetails, matchResultList);","lastModifiedDate":"2024-04-03"},{"lineNumber":254,"author":{"gitId":"zengzihui"},"content":"        switch (newState) {","lastModifiedDate":"2024-04-02"},{"lineNumber":255,"author":{"gitId":"zengzihui"},"content":"        case PERSON_LIST:","lastModifiedDate":"2024-04-02"},{"lineNumber":256,"author":{"gitId":"zengzihui"},"content":"            contentBoxSplitPane.getItems().addAll(personList);","lastModifiedDate":"2024-04-02"},{"lineNumber":257,"author":{"gitId":"zengzihui"},"content":"            break;","lastModifiedDate":"2024-04-02"},{"lineNumber":258,"author":{"gitId":"zengzihui"},"content":"        case PERSON_DETAILS:","lastModifiedDate":"2024-04-02"},{"lineNumber":259,"author":{"gitId":"zengzihui"},"content":"            contentBoxSplitPane.getItems().addAll(personList, personDetails);","lastModifiedDate":"2024-04-02"},{"lineNumber":260,"author":{"gitId":"zengzihui"},"content":"            break;","lastModifiedDate":"2024-04-02"},{"lineNumber":261,"author":{"gitId":"zengzihui"},"content":"        case MATCH_RESULTS:","lastModifiedDate":"2024-04-02"},{"lineNumber":262,"author":{"gitId":"zengzihui"},"content":"            contentBoxSplitPane.getItems().addAll(matchResultList);","lastModifiedDate":"2024-04-03"},{"lineNumber":263,"author":{"gitId":"zengzihui"},"content":"            break;","lastModifiedDate":"2024-04-02"},{"lineNumber":264,"author":{"gitId":"zengzihui"},"content":"        default:","lastModifiedDate":"2024-04-02"},{"lineNumber":265,"author":{"gitId":"zengzihui"},"content":"            break;","lastModifiedDate":"2024-04-02"},{"lineNumber":266,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":267,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"zengzihui":73,"-":195}},{"path":"src/main/java/seedu/address/ui/MatchResultCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zengzihui"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"zengzihui"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"zengzihui"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"zengzihui"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"zengzihui"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"zengzihui"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.house.House;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.person.Seller;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"zengzihui"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"zengzihui"},"content":" * An UI component that displays information of a match result.","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"zengzihui"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"zengzihui"},"content":"public class MatchResultCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"zengzihui"},"content":"    private static final String FXML \u003d \"MatchResultListCard.fxml\";","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"zengzihui"},"content":"    private Seller seller;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"zengzihui"},"content":"    private ObservableList\u003cHouse\u003e filteredHouses;","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"zengzihui"},"content":"    private PersonCard sellerPanel;","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"zengzihui"},"content":"    private HouseListPanel houseListPanel;","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"zengzihui"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"zengzihui"},"content":"    private VBox sellerInfo;","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"zengzihui"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"zengzihui"},"content":"    private StackPane sellerInfoPanelPlaceholder;","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"zengzihui"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"zengzihui"},"content":"    private VBox houseList;","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"zengzihui"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"zengzihui"},"content":"    private StackPane houseListPanelPlaceholder;","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"zengzihui"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"zengzihui"},"content":"     * Creates a {@code MatchResultCard} with the given match result to display.","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"zengzihui"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"zengzihui"},"content":"    public MatchResultCard(Seller seller, int displayedIndex) {","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"zengzihui"},"content":"        super(FXML);","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"zengzihui"},"content":"        this.seller \u003d seller;","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"zengzihui"},"content":"        this.filteredHouses \u003d seller.getHouses();","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"zengzihui"},"content":"        sellerPanel \u003d new PersonCard();","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"zengzihui"},"content":"        sellerPanel.setPersonDetails(this.seller, displayedIndex);","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"zengzihui"},"content":"        sellerInfoPanelPlaceholder.getChildren().add(sellerPanel.getRoot());","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"zengzihui"},"content":"        houseListPanel \u003d new HouseListPanel(this.filteredHouses);","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"zengzihui"},"content":"        houseListPanelPlaceholder.getChildren().add(houseListPanel.getRoot());","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"zengzihui"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"zengzihui":46}},{"path":"src/main/java/seedu/address/ui/MatchResultListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zengzihui"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"zengzihui"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"zengzihui"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"zengzihui"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"zengzihui"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"zengzihui"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"zengzihui"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"zengzihui"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.person.Seller;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"zengzihui"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"zengzihui"},"content":" * Panel containing the list of match results.","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"zengzihui"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"zengzihui"},"content":"public class MatchResultListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"zengzihui"},"content":"    private static final String FXML \u003d \"MatchResultListPanel.fxml\";","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"zengzihui"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(MatchResultListPanel.class);","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"zengzihui"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"zengzihui"},"content":"    private ListView\u003cSeller\u003e matchResultListView;","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"zengzihui"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"zengzihui"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"zengzihui"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"zengzihui"},"content":"    public MatchResultListPanel() {","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"zengzihui"},"content":"        super(FXML);","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"zengzihui"},"content":"    public void setMatchResults(ObservableList\u003cSeller\u003e filteredSellerList) {","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"felixchanyy"},"content":"        logger.info(\"----------------[MATCH RESULT] setting match result\");","lastModifiedDate":"2024-04-12"},{"lineNumber":33,"author":{"gitId":"zengzihui"},"content":"        matchResultListView.setItems(filteredSellerList);","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"zengzihui"},"content":"        matchResultListView.setCellFactory(listView -\u003e new MatchResultListPanel.MatchResultListViewCell());","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"zengzihui"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"zengzihui"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Seller} using a {@code MatchResultCard}.","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"zengzihui"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"zengzihui"},"content":"    class MatchResultListViewCell extends ListCell\u003cSeller\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"zengzihui"},"content":"        @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"zengzihui"},"content":"        protected void updateItem(Seller seller, boolean empty) {","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"zengzihui"},"content":"            super.updateItem(seller, empty);","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"zengzihui"},"content":"            if (empty || seller \u003d\u003d null) {","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"zengzihui"},"content":"                setGraphic(null);","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"zengzihui"},"content":"                setText(null);","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"zengzihui"},"content":"            } else {","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"zengzihui"},"content":"                setGraphic(new MatchResultCard(seller, getIndex() + 1).getRoot());","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"zengzihui"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"zengzihui"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"zengzihui":53,"felixchanyy":1}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":" * An ui component that displays information of a {@code Person}.","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"zengzihui"},"content":"    private Person person;","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"    private Label preferredHousingType;","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":"    private Label budget;","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"    private Label postalCode;","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"    @FXML","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"    @FXML","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"    private VBox housesContainer;","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"     * Creates a {@code PersonCard} with the given {@code Person} and index to display.","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"zengzihui"},"content":"    public PersonCard() {","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"zengzihui"},"content":"    public void setPersonDetails(Person person, int displayedIndex) {","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":58,"author":{"gitId":"lokidoki102"},"content":"                .forEach(tag -\u003e {","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"                    Label tagLabel \u003d new Label(tag.tagName);","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"lokidoki102"},"content":"                    tagLabel.getStyleClass().add(\"label\");","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"lokidoki102"},"content":"                    if (\"Seller\".equals(tag.tagName)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"lokidoki102"},"content":"                        tagLabel.getStyleClass().add(\"tag-seller\");","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"zengzihui"},"content":"                        cardPane.setStyle(\"-fx-background-color: #75643D;\");","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"lokidoki102"},"content":"                    } else if (\"Buyer\".equals(tag.tagName)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"lokidoki102"},"content":"                        tagLabel.getStyleClass().add(\"tag-buyer\");","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"zengzihui"},"content":"                        cardPane.setStyle(\"-fx-background-color: #3D5175;\");","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"lokidoki102"},"content":"                    }","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"lokidoki102"},"content":"                    tags.getChildren().add(tagLabel);","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"lokidoki102"},"content":"                });","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"zengzihui":7,"KhoonSun47":7,"felixchanyy":2,"-":45,"lokidoki102":10}},{"path":"src/main/java/seedu/address/ui/PersonDetailsPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zengzihui"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"zengzihui"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"zengzihui"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"zengzihui"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"zengzihui"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"zengzihui"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"zengzihui"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"zengzihui"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"zengzihui"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.person.Buyer;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.person.Seller;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"zengzihui"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"zengzihui"},"content":" * Panel containing the details of the selected person.","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"zengzihui"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"zengzihui"},"content":"public class PersonDetailsPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"zengzihui"},"content":"    private static final String FXML \u003d \"PersonDetailsPanel.fxml\";","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"zengzihui"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonDetailsPanel.class);","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"zengzihui"},"content":"    private Person displayedPerson;","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"zengzihui"},"content":"    private HouseListPanel houseListPanel;","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"zengzihui"},"content":"    @FXML","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"zengzihui"},"content":"    private VBox personDetailsPane;","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"zengzihui"},"content":"    @FXML","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"zengzihui"},"content":"    private Label name;","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"zengzihui"},"content":"    @FXML","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"zengzihui"},"content":"    private Label phone;","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"zengzihui"},"content":"    @FXML","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"zengzihui"},"content":"    private Label email;","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"zengzihui"},"content":"    @FXML","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"zengzihui"},"content":"    private Label housingType;","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"zengzihui"},"content":"    @FXML","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"zengzihui"},"content":"    private Label budget;","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"zengzihui"},"content":"    @FXML","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"zengzihui"},"content":"    private FlowPane tags;","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"zengzihui"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"zengzihui"},"content":"    private VBox houseList;","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"zengzihui"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"zengzihui"},"content":"    private StackPane houseListPanelPlaceholder;","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"zengzihui"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"zengzihui"},"content":"     * Creates a {@code PersonDetailsPanel} with the given {@code ObservableList}.","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"zengzihui"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"zengzihui"},"content":"    public PersonDetailsPanel() {","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"zengzihui"},"content":"        super(FXML);","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"zengzihui"},"content":"    public void setPersonDetails(Person person) {","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"felixchanyy"},"content":"        logger.info(\"----------------[SET PERSON DETAILS] setting person details\");","lastModifiedDate":"2024-04-12"},{"lineNumber":56,"author":{"gitId":"zengzihui"},"content":"        this.displayedPerson \u003d person;","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"felixchanyy"},"content":"        setNameAndContactDetails();","lastModifiedDate":"2024-04-12"},{"lineNumber":58,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":59,"author":{"gitId":"felixchanyy"},"content":"        if (displayedPerson instanceof Buyer) {","lastModifiedDate":"2024-04-12"},{"lineNumber":60,"author":{"gitId":"felixchanyy"},"content":"            setBuyerDetails((Buyer) displayedPerson);","lastModifiedDate":"2024-04-12"},{"lineNumber":61,"author":{"gitId":"felixchanyy"},"content":"        } else if (displayedPerson instanceof Seller) {","lastModifiedDate":"2024-04-12"},{"lineNumber":62,"author":{"gitId":"felixchanyy"},"content":"            setSellerDetails((Seller) displayedPerson);","lastModifiedDate":"2024-04-12"},{"lineNumber":63,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":64,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":65,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":66,"author":{"gitId":"felixchanyy"},"content":"    private void setNameAndContactDetails() {","lastModifiedDate":"2024-04-12"},{"lineNumber":67,"author":{"gitId":"zengzihui"},"content":"        name.setText(displayedPerson.getName().fullName);","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"zengzihui"},"content":"        phone.setText(displayedPerson.getPhone().value);","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"zengzihui"},"content":"        email.setText(displayedPerson.getEmail().value);","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":71,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"zengzihui"},"content":"    //@@author zengzihui","lastModifiedDate":"2024-04-12"},{"lineNumber":73,"author":{"gitId":"zengzihui"},"content":"    private void setBuyerDetails(Buyer buyer) {","lastModifiedDate":"2024-04-12"},{"lineNumber":74,"author":{"gitId":"zengzihui"},"content":"        budget.setVisible(true);","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"zengzihui"},"content":"        housingType.setVisible(true);","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"zengzihui"},"content":"        houseList.setVisible(false);","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":78,"author":{"gitId":"zengzihui"},"content":"        housingType.setText(buyer.getPreferredHousingType().value);","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"zengzihui"},"content":"        budget.setText(\"$\" + buyer.getBudget().toString());","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":81,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":82,"author":{"gitId":"zengzihui"},"content":"    //@@author zengzihui","lastModifiedDate":"2024-04-12"},{"lineNumber":83,"author":{"gitId":"zengzihui"},"content":"    private void setSellerDetails(Seller seller) {","lastModifiedDate":"2024-04-12"},{"lineNumber":84,"author":{"gitId":"zengzihui"},"content":"        housingType.setVisible(false);","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"zengzihui"},"content":"        budget.setVisible(false);","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"zengzihui"},"content":"        houseList.setVisible(true);","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":88,"author":{"gitId":"zengzihui"},"content":"        houseListPanel \u003d new HouseListPanel(seller.getHouses());","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"zengzihui"},"content":"        houseListPanelPlaceholder.getChildren().add(houseListPanel.getRoot());","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":92,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"zengzihui"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"zengzihui":85,"felixchanyy":12}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"felixchanyy"},"content":"        logger.info(\"----------------[SET PERSON LIST] setting person list\");","lastModifiedDate":"2024-04-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"zengzihui"},"content":"                PersonCard personCard \u003d new PersonCard();","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"zengzihui"},"content":"                personCard.setPersonDetails(person, getIndex() + 1);","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"zengzihui"},"content":"                setGraphic(personCard.getRoot());","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"zengzihui":3,"felixchanyy":1,"-":47}},{"path":"src/main/java/seedu/address/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"zengzihui"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.State;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.person.Seller;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App). */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"    /** Displays Person details. */","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"zengzihui"},"content":"    void showPersonDetails(Person person);","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"    /** Displays list of filtered sellers. */","lastModifiedDate":"2024-04-12"},{"lineNumber":21,"author":{"gitId":"zengzihui"},"content":"    void showMatchResults(ObservableList\u003cSeller\u003e sellers);","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"felixchanyy"},"content":"    /** Updates the ui layout. */","lastModifiedDate":"2024-04-12"},{"lineNumber":24,"author":{"gitId":"zengzihui"},"content":"    void updateUiLayout(State newState);","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"zengzihui":10,"felixchanyy":3,"-":13}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"zengzihui"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.State;","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.person.Seller;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":27,"author":{"gitId":"zengzihui"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/real_estate_icon.png\";","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":92,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"zengzihui"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"zengzihui"},"content":"    public void showPersonDetails(Person person) {","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"zengzihui"},"content":"        mainWindow.handleViewPerson(person);","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"zengzihui"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"zengzihui"},"content":"    public void showMatchResults(ObservableList\u003cSeller\u003e sellers) {","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"zengzihui"},"content":"        mainWindow.handleDisplayMatchResults(sellers);","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"zengzihui"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"zengzihui"},"content":"    public void updateUiLayout(State newState) {","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"zengzihui"},"content":"        mainWindow.updateUiLayout(newState);","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"zengzihui":21,"-":87}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":7,"author":{"gitId":"zengzihui"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" styleClass\u003d\"custom-prompt-text\"","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"zengzihui"},"content":"             onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"zengzihui":2,"-":8}},{"path":"src/main/resources/view/CustomisedTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"zengzihui"},"content":".test {","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"zengzihui"},"content":"    -fx-background-color: derive(#D53B1A, 100%);","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"zengzihui"},"content":"    -fx-border-color: derive(#D53B1A, 100%);","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"zengzihui"},"content":"    -fx-border-top-width: 1px;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"zengzihui"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"zengzihui"},"content":"/* Set width to 50% for each VBox */","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"zengzihui"},"content":".vbox-width {","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"zengzihui"},"content":"    -fx-pref-width: 50%;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"zengzihui"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"zengzihui"},"content":".test-2 {","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"zengzihui"},"content":"    -fx-background-color: derive(#D53B1A, 100%);","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"zengzihui"},"content":"    -fx-border-color: derive(#000000, 100%);","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"zengzihui"},"content":"    -fx-border-top-width: 1px;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"zengzihui"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"zengzihui"},"content":".details-card {","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"zengzihui"},"content":"    -fx-background-color: #ADB7CA; /* Set your desired background color */","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"zengzihui"},"content":"    -fx-background-radius: 20px; /* Set border radius */","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"zengzihui"},"content":"    -fx-padding: 15px; /* Add padding for spacing inside the VBox */","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"zengzihui"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"zengzihui"},"content":".test-3 {","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"zengzihui"},"content":"    -fx-background-color: derive(#D53B1A, 100%);","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"zengzihui"},"content":"    -fx-border-color: derive(#D53B1A, 100%);","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"zengzihui"},"content":"    -fx-border-top-width: 1px;","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"zengzihui"},"content":"}","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"zengzihui"},"content":".big-label-details {","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"zengzihui"},"content":"    -fx-font-family: \"Segoe UI Black\";","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"zengzihui"},"content":"    -fx-font-size: 26px;","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"zengzihui"},"content":"    -fx-text-fill:#0A1833;","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"zengzihui"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"zengzihui"},"content":".medium-label-details {","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"zengzihui"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"zengzihui"},"content":"    -fx-font-size: 22px;","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"zengzihui"},"content":"    -fx-text-fill:#0A1833;","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"zengzihui"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"zengzihui"},"content":".small-label-details {","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"zengzihui"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"zengzihui"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"zengzihui"},"content":"    -fx-text-fill:#0A1833;","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"zengzihui"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"zengzihui"},"content":".big-label {","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"zengzihui"},"content":"    -fx-font-family: \"Segoe UI Bold\";","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"zengzihui"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"zengzihui"},"content":"    -fx-text-fill:#0A1833;","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"zengzihui"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"zengzihui"},"content":".medium-label {","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"zengzihui"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"zengzihui"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"zengzihui"},"content":"    -fx-text-fill:#0A1833;","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"zengzihui"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"zengzihui"},"content":".small-label {","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"zengzihui"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"zengzihui"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"zengzihui"},"content":"    -fx-text-fill:#0A1833;","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"zengzihui"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"zengzihui"},"content":".result-display-pane {","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"zengzihui"},"content":"    -fx-background-color: #0A1833;","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"zengzihui"},"content":"    background-color: #0A1833;","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"zengzihui"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"zengzihui"},"content":"/* TODO(UI): Change colour for seller and buyer tag */","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"zengzihui"},"content":".tag-seller {","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"zengzihui"},"content":"    -fx-background-color: #E3AE2D;","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"zengzihui"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"zengzihui"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"zengzihui"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"zengzihui"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"zengzihui"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"zengzihui"},"content":".tag-buyer {","lastModifiedDate":"2024-04-04"},{"lineNumber":83,"author":{"gitId":"zengzihui"},"content":"    -fx-background-color: #0848EB;","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"zengzihui"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"zengzihui"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2024-04-04"},{"lineNumber":86,"author":{"gitId":"zengzihui"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2024-04-04"},{"lineNumber":87,"author":{"gitId":"zengzihui"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2024-04-04"},{"lineNumber":88,"author":{"gitId":"zengzihui"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":89,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":90,"author":{"gitId":"zengzihui"},"content":".custom-prompt-text {","lastModifiedDate":"2024-04-04"},{"lineNumber":91,"author":{"gitId":"zengzihui"},"content":"    -fx-prompt-text-fill: derive(#0A1833, 80%);","lastModifiedDate":"2024-04-04"},{"lineNumber":92,"author":{"gitId":"zengzihui"},"content":"    -fx-font-size: 12;","lastModifiedDate":"2024-04-04"},{"lineNumber":93,"author":{"gitId":"zengzihui"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"zengzihui":93}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"zengzihui"},"content":"    -fx-background-color: #0A1833;","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"zengzihui"},"content":"    background-color: #0A1833; /* Used in the default.html file */","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"zengzihui"},"content":"    -fx-text-fill: #0A1833;","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"zengzihui"},"content":"    -fx-base: #0A1833;","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"zengzihui"},"content":"    -fx-control-inner-background: #0A1833;","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"zengzihui"},"content":"    -fx-background-color: #0A1833;","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"zengzihui"},"content":"    -fx-background-color: derive(#0A1833, 20%);","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"zengzihui"},"content":"    -fx-border-color: transparent transparent transparent #0A1833;","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"zengzihui"},"content":"    -fx-background-color: derive(#0A1833, 20%); /*ContentPane Border */","lastModifiedDate":"2024-04-04"},{"lineNumber":88,"author":{"gitId":"zengzihui"},"content":"} /* slight lighter color for border */","lastModifiedDate":"2024-04-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"zengzihui"},"content":"    -fx-background-color: #ADB7CA;","lastModifiedDate":"2024-04-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"zengzihui"},"content":"    -fx-background-color: derive(#0A1833, 20%);","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"zengzihui"},"content":"    -fx-background-color: derive(#0A1833, 50%);","lastModifiedDate":"2024-04-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"zengzihui"},"content":"    -fx-background-color: #3D5175;","lastModifiedDate":"2024-04-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"zengzihui"},"content":"    -fx-border-color: derive(#3D5175, 20%);","lastModifiedDate":"2024-04-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"zengzihui"},"content":"     -fx-background-color: #ADB7CA; /*CommandBox bg */","lastModifiedDate":"2024-04-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"zengzihui"},"content":".pane-with-border { /*Outer border */","lastModifiedDate":"2024-04-04"},{"lineNumber":140,"author":{"gitId":"zengzihui"},"content":"     -fx-background-color: #0A1833;","lastModifiedDate":"2024-04-04"},{"lineNumber":141,"author":{"gitId":"zengzihui"},"content":"     -fx-border-color: derive(#0A1833, 10%);","lastModifiedDate":"2024-04-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"zengzihui"},"content":"    -fx-background-color: derive(#0A1833, 10%);","lastModifiedDate":"2024-04-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"zengzihui"},"content":"    -fx-background-color: #0A1833;","lastModifiedDate":"2024-04-04"},{"lineNumber":179,"author":{"gitId":"zengzihui"},"content":"    -fx-border-color: #0A1833;","lastModifiedDate":"2024-04-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"zengzihui"},"content":"    -fx-background-color: #0A1833;","lastModifiedDate":"2024-04-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"zengzihui"},"content":"    -fx-background-color: #0A1833;","lastModifiedDate":"2024-04-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"zengzihui"},"content":"    -fx-background-color: #0A1833;","lastModifiedDate":"2024-04-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"zengzihui"},"content":"    -fx-background-color: white;","lastModifiedDate":"2024-04-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"zengzihui"},"content":"    -fx-background-color: #0A1833;","lastModifiedDate":"2024-04-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"zengzihui"},"content":"    -fx-background-color: #395A75;","lastModifiedDate":"2024-04-04"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"zengzihui"},"content":"    -fx-background-color: #395A75;","lastModifiedDate":"2024-04-04"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"zengzihui"},"content":"    -fx-background-color: derive(#395A75, 25%);","lastModifiedDate":"2024-04-04"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"zengzihui"},"content":"    -fx-background-color: derive(#0A1833, 20%);","lastModifiedDate":"2024-04-04"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"zengzihui"},"content":"    -fx-background-color: derive(#0A1833, 50%);","lastModifiedDate":"2024-04-04"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":320,"author":{"gitId":"zengzihui"},"content":"    -fx-background-color: transparent #0A1833 transparent #0A1833;","lastModifiedDate":"2024-04-04"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"zengzihui"},"content":"    -fx-border-color: #0A1833 #0A1833 #ffffff #0A1833;","lastModifiedDate":"2024-04-04"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":326,"author":{"gitId":"zengzihui"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2024-04-04"},{"lineNumber":327,"author":{"gitId":"zengzihui"},"content":"    -fx-text-fill: #0A1833;","lastModifiedDate":"2024-04-04"},{"lineNumber":328,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":331,"author":{"gitId":"zengzihui"},"content":"    -fx-effect: innershadow(gaussian, darkblue, 10, 0, 0, 0);","lastModifiedDate":"2024-04-04"},{"lineNumber":332,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":334,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"zengzihui"},"content":"    -fx-background-color: transparent, #0A1833, transparent, #0A1833;","lastModifiedDate":"2024-04-04"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"zengzihui":38,"-":305}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"zengzihui"},"content":"    -fx-background: #ADB7CA;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zengzihui":1,"-":19}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-01-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2022-01-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":18,"author":{"gitId":"zengzihui"},"content":"    -fx-background-color: derive(#0A1833, 20%);","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"zengzihui":1,"-":18}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"zengzihui"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\"","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"zengzihui"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2022-01-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"zengzihui":2,"-":43}},{"path":"src/main/resources/view/HouseListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zengzihui"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"zengzihui"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"zengzihui"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"zengzihui"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"zengzihui"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"zengzihui"},"content":"\u003cVBox id\u003d\"houseCard\" fx:id\u003d\"houseCard\"","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"zengzihui"},"content":"      xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"zengzihui"},"content":"    HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"zengzihui"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"zengzihui"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\"/\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"zengzihui"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"zengzihui"},"content":"    \u003cHBox\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"zengzihui"},"content":"        \u003cLabel fx:id\u003d\"houseType\" styleClass\u003d\"small-label\" text\u003d\"\\$houseType\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"zengzihui"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"zengzihui"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\"/\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"zengzihui"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"zengzihui"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"zengzihui"},"content":"        \u003cLabel fx:id\u003d\"postalCode\" styleClass\u003d\"small-label\" text\u003d\"\\$postalCode\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"zengzihui"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"zengzihui"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"5\"/\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"zengzihui"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"zengzihui"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"zengzihui"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"zengzihui"},"content":"    \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"small-label\" text\u003d\"\\$address\"\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":28,"author":{"gitId":"zengzihui"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"zengzihui"},"content":"            \u003cInsets top\u003d\"5\"  bottom\u003d\"5\"/\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"zengzihui"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"zengzihui"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"zengzihui"},"content":"\u003c!--    \u003cLabel fx:id\u003d\"street\" styleClass\u003d\"small-label\" text\u003d\"\\$street\"\u003e--\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"zengzihui"},"content":"\u003c!--        \u003cpadding\u003e--\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"zengzihui"},"content":"\u003c!--            \u003cInsets top\u003d\"5\"  bottom\u003d\"5\"/\u003e--\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"zengzihui"},"content":"\u003c!--        \u003c/padding\u003e--\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"zengzihui"},"content":"\u003c!--    \u003c/Label\u003e--\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"zengzihui"},"content":"\u003c!--    \u003cLabel fx:id\u003d\"unitNumber\" styleClass\u003d\"small-label\" text\u003d\"\\$unitNumber\"\u003e--\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"zengzihui"},"content":"\u003c!--        \u003cpadding\u003e--\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"zengzihui"},"content":"\u003c!--            \u003cInsets top\u003d\"5\"  bottom\u003d\"5\"/\u003e--\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"zengzihui"},"content":"\u003c!--        \u003c/padding\u003e--\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"zengzihui"},"content":"\u003c!--    \u003c/Label\u003e--\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"zengzihui"},"content":"\u003c!--    \u003cLabel fx:id\u003d\"block\" styleClass\u003d\"small-label\" text\u003d\"\\$block\"\u003e--\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"zengzihui"},"content":"\u003c!--        \u003cpadding\u003e--\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"zengzihui"},"content":"\u003c!--            \u003cInsets top\u003d\"5\"  bottom\u003d\"5\"/\u003e--\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"zengzihui"},"content":"\u003c!--        \u003c/padding\u003e--\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"zengzihui"},"content":"\u003c!--    \u003c/Label\u003e--\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"zengzihui"},"content":"\u003c!--    \u003cLabel fx:id\u003d\"level\" styleClass\u003d\"small-label\" text\u003d\"\\$level\"\u003e--\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"zengzihui"},"content":"\u003c!--        \u003cpadding\u003e--\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"zengzihui"},"content":"\u003c!--            \u003cInsets top\u003d\"5\"  bottom\u003d\"5\"/\u003e--\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"zengzihui"},"content":"\u003c!--        \u003c/padding\u003e--\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"zengzihui"},"content":"\u003c!--    \u003c/Label\u003e--\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"zengzihui"},"content":"    \u003cLabel fx:id\u003d\"price\" styleClass\u003d\"small-label\" text\u003d\"\\$price\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"zengzihui"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"zengzihui"},"content":"            \u003cInsets top\u003d\"5\"  bottom\u003d\"5\"/\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"zengzihui"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"zengzihui"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"zengzihui"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"zengzihui":58}},{"path":"src/main/resources/view/HouseListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zengzihui"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"zengzihui"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"zengzihui"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"zengzihui"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"zengzihui"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"zengzihui"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"zengzihui"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"zengzihui"},"content":"      HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"zengzihui"},"content":"    \u003cLabel styleClass\u003d\"medium-label-details\" text\u003d\"Houses\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"zengzihui"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"zengzihui"},"content":"            \u003cInsets bottom\u003d\"15\"/\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"zengzihui"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"zengzihui"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"zengzihui"},"content":"    \u003cListView fx:id\u003d\"houseListView\" HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"zengzihui"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"zengzihui":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":15,"author":{"gitId":"zengzihui"},"content":"         title\u003d\"EstateEase\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"zengzihui"},"content":"    \u003cImage url\u003d\"@/images/real_estate_icon2.png\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"zengzihui"},"content":"        \u003cURL value\u003d\"@CustomisedTheme.css\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"zengzihui"},"content":"      \u003cVBox styleClass\u003d\"result-display-pane\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"zengzihui"},"content":"        \u003cSplitPane fx:id\u003d\"contentBoxSplitPane\" dividerPositions\u003d\"0.66, 0.33\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"zengzihui"},"content":"          \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"zengzihui"},"content":"                VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"zengzihui"},"content":"            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\"","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"zengzihui"},"content":"                       VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":59,"author":{"gitId":"zengzihui"},"content":"          \u003cVBox fx:id\u003d\"personDetails\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"zengzihui"},"content":"                VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"zengzihui"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"zengzihui"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"20\" bottom\u003d\"10\" left\u003d\"20\"/\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"zengzihui"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"zengzihui"},"content":"            \u003cStackPane fx:id\u003d\"personDetailsPanelPlaceholder\"","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"zengzihui"},"content":"                       VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"zengzihui"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"zengzihui"},"content":"          \u003cVBox fx:id\u003d\"matchResultList\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"zengzihui"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"zengzihui"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"zengzihui"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"zengzihui"},"content":"            \u003cStackPane fx:id\u003d\"matchResultListPanelPlaceholder\"","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"zengzihui"},"content":"                       VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"zengzihui"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"zengzihui"},"content":"        \u003c/SplitPane\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"zengzihui":25,"-":54}},{"path":"src/main/resources/view/MatchResultListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zengzihui"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"zengzihui"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"zengzihui"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"zengzihui"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"zengzihui"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"zengzihui"},"content":"\u003cHBox id\u003d\"matchResultCard\" fx:id\u003d\"matchResultCard\"","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"zengzihui"},"content":"      xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"zengzihui"},"content":"        HBox.hgrow\u003d\"ALWAYS\"","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"zengzihui"},"content":"        maxHeight\u003d\"200\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"zengzihui"},"content":"    \u003cVBox fx:id\u003d\"sellerInfo\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"zengzihui"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"zengzihui"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"zengzihui"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"zengzihui"},"content":"        \u003cStackPane fx:id\u003d\"sellerInfoPanelPlaceholder\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"zengzihui"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"zengzihui"},"content":"    \u003cVBox fx:id\u003d\"houseList\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"zengzihui"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"zengzihui"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"zengzihui"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"zengzihui"},"content":"        \u003cStackPane fx:id\u003d\"houseListPanelPlaceholder\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"zengzihui"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"zengzihui"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"zengzihui":25}},{"path":"src/main/resources/view/MatchResultListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zengzihui"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"zengzihui"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"zengzihui"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"zengzihui"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"zengzihui"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"zengzihui"},"content":"      HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"zengzihui"},"content":"    \u003cListView fx:id\u003d\"matchResultListView\" VBox.vgrow\u003d\"ALWAYS\"","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"zengzihui"},"content":"              HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"zengzihui"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"zengzihui":11}},{"path":"src/main/resources/view/PersonDetailsPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zengzihui"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"zengzihui"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"zengzihui"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"zengzihui"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"zengzihui"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"zengzihui"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"zengzihui"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"zengzihui"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"zengzihui"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"zengzihui"},"content":"\u003cVBox id\u003d\"personDetailsPane\" fx:id\u003d\"personDetailsPane\"","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"zengzihui"},"content":"      xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"zengzihui"},"content":"      xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"zengzihui"},"content":"      styleClass\u003d\"details-card\"","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"zengzihui"},"content":"      alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"zengzihui"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"zengzihui"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"15\" bottom\u003d\"5\" left\u003d\"15\"/\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"zengzihui"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"zengzihui"},"content":"    \u003cVBox\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"zengzihui"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\" \u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"zengzihui"},"content":"            \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"big-label-details\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"zengzihui"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"zengzihui"},"content":"                \u003cInsets top\u003d\"15\" left\u003d\"15\" bottom\u003d\"5\"/\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"zengzihui"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"zengzihui"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"zengzihui"},"content":"        \u003cFlowPane fx:id\u003d\"tags\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"zengzihui"},"content":"        \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"small-label-details\" text\u003d\"\\$phone\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"zengzihui"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"zengzihui"},"content":"                \u003cInsets top\u003d\"5\" left\u003d\"15\" bottom\u003d\"5\"/\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"zengzihui"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"zengzihui"},"content":"            \u003cgraphic\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"zengzihui"},"content":"                \u003cImageView fitWidth\u003d\"16\" fitHeight\u003d\"16\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"zengzihui"},"content":"                    \u003cImage url\u003d\"@/images/phone_icon.png\"/\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"zengzihui"},"content":"                \u003c/ImageView\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"zengzihui"},"content":"            \u003c/graphic\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"zengzihui"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"zengzihui"},"content":"        \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"small-label-details\" text\u003d\"\\$email\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"zengzihui"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"zengzihui"},"content":"                \u003cInsets top\u003d\"5\" left\u003d\"15\" bottom\u003d\"5\"/\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"zengzihui"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"zengzihui"},"content":"            \u003cgraphic\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"zengzihui"},"content":"                \u003cImageView fitWidth\u003d\"16\" fitHeight\u003d\"16\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"zengzihui"},"content":"                    \u003cImage url\u003d\"@/images/email_icon.png\"/\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"zengzihui"},"content":"                \u003c/ImageView\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"zengzihui"},"content":"            \u003c/graphic\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"zengzihui"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"zengzihui"},"content":"        \u003cLabel fx:id\u003d\"housingType\" styleClass\u003d\"small-label-details\" text\u003d\"\\$housingType\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"zengzihui"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"zengzihui"},"content":"                \u003cInsets top\u003d\"5\" left\u003d\"15\" bottom\u003d\"5\"/\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"zengzihui"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"zengzihui"},"content":"            \u003cgraphic\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"zengzihui"},"content":"                \u003cImageView fitWidth\u003d\"16\" fitHeight\u003d\"16\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"zengzihui"},"content":"                    \u003cImage url\u003d\"@/images/house_icon.png\"/\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"zengzihui"},"content":"                \u003c/ImageView\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"zengzihui"},"content":"            \u003c/graphic\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"zengzihui"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"zengzihui"},"content":"        \u003cLabel fx:id\u003d\"budget\" styleClass\u003d\"small-label-details\" text\u003d\"\\$budget\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"zengzihui"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"zengzihui"},"content":"                \u003cInsets top\u003d\"5\" left\u003d\"15\" bottom\u003d\"5\"/\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"zengzihui"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"zengzihui"},"content":"            \u003cgraphic\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"zengzihui"},"content":"                \u003cImageView fitWidth\u003d\"16\" fitHeight\u003d\"16\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"zengzihui"},"content":"                    \u003cImage url\u003d\"@/images/budget_icon.png\"/\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"zengzihui"},"content":"                \u003c/ImageView\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"zengzihui"},"content":"            \u003c/graphic\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"zengzihui"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"zengzihui"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"zengzihui"},"content":"    \u003cVBox fx:id\u003d\"houseList\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"zengzihui"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"zengzihui"},"content":"            \u003cInsets left\u003d\"15\" bottom\u003d\"10\"/\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"zengzihui"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"zengzihui"},"content":"        \u003cStackPane fx:id\u003d\"houseListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"zengzihui"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"zengzihui"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"zengzihui":78}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"zengzihui"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"zengzihui"},"content":"      spacing\u003d\"10\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"zengzihui"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"zengzihui"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\"/\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"zengzihui"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"zengzihui"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" \u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                    \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                    \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\"/\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cFlowPane fx:id\u003d\"tags\"/\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\"/\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\"/\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zengzihui":6,"-":26}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"zengzihui"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"zengzihui"},"content":"\u003c?import java.lang.String?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-07-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"           xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\"/\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"zengzihui":2,"-":9}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"zengzihui"},"content":"        assertNotNull(AppUtil.getImage(\"/images/real_estate_icon.png\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"zengzihui":1,"-":35}},{"path":"src/test/java/seedu/address/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.testutil.SerializableTestClass;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TestUtil;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"    public void jsonUtil_readJsonStringToObjectInstance_correctObject() throws IOException {","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"        String jsonString \u003d SerializableTestClass.JSON_STRING_REPRESENTATION;","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"        SerializableTestClass actualClassInstance \u003d JsonUtil.fromJsonString(jsonString, SerializableTestClass.class);","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"        assertEquals(SerializableTestClass.getNameTestValue(), actualClassInstance.getName());","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"        assertEquals(SerializableTestClass.getListTestValues(), actualClassInstance.getListOfLocalDateTimes());","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"        assertEquals(SerializableTestClass.getHashMapTestValues(), actualClassInstance.getMapOfIntegerToString());","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"    public void jsonUtil_writeThenReadObjectToJson_correctObject() throws IOException {","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"        SerializableTestClass originalClassInstance \u003d new SerializableTestClass();","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"        originalClassInstance.setTestValues();","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"        String jsonString \u003d JsonUtil.toJsonString(originalClassInstance);","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"        SerializableTestClass deserializedClassInstance \u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"                JsonUtil.fromJsonString(jsonString, SerializableTestClass.class);","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"        assertEquals(originalClassInstance.getName(), deserializedClassInstance.getName());","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"        assertEquals(originalClassInstance.getListOfLocalDateTimes(),","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"                deserializedClassInstance.getListOfLocalDateTimes());","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"        assertEquals(originalClassInstance.getMapOfIntegerToString(),","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"                deserializedClassInstance.getMapOfIntegerToString());","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KhoonSun47":25,"-":45}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BLOCK_DESC_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.logic.commands.CommandTestUtil.HOUSING_TYPE_DESC_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LEVEL_DESC_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POSTAL_CODE_DESC_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PRICE_DESC_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STREET_DESC_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.commands.CommandTestUtil.UNIT_NUMBER_DESC_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.TypicalPersons.AMY_SELLER;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.logic.commands.AddSellerCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Seller;","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.testutil.SellerBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"KhoonSun47"},"content":"        assertCommandFailureForExceptionFromStorageForSeller(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":85,"author":{"gitId":"KhoonSun47"},"content":"        assertCommandFailureForExceptionFromStorageForSeller(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"KhoonSun47"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component","lastModifiedDate":"2024-03-21"},{"lineNumber":149,"author":{"gitId":"KhoonSun47"},"content":"     * when taking in a Seller.","lastModifiedDate":"2024-03-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"KhoonSun47"},"content":"    private void assertCommandFailureForExceptionFromStorageForSeller(IOException e, String expectedMessage) {","lastModifiedDate":"2024-03-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"KhoonSun47"},"content":"        String addSellerCommand \u003d AddSellerCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2024-03-21"},{"lineNumber":174,"author":{"gitId":"zengzihui"},"content":"                + EMAIL_DESC_AMY + HOUSING_TYPE_DESC_AMY","lastModifiedDate":"2024-03-21"},{"lineNumber":175,"author":{"gitId":"felixchanyy"},"content":"                + STREET_DESC_AMY + BLOCK_DESC_AMY + LEVEL_DESC_AMY + UNIT_NUMBER_DESC_AMY + POSTAL_CODE_DESC_AMY","lastModifiedDate":"2024-04-01"},{"lineNumber":176,"author":{"gitId":"felixchanyy"},"content":"                + PRICE_DESC_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":177,"author":{"gitId":"KhoonSun47"},"content":"        Seller expectedSeller \u003d new SellerBuilder(AMY_SELLER).withTags().build();","lastModifiedDate":"2024-04-01"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":179,"author":{"gitId":"KhoonSun47"},"content":"        expectedModel.addPerson(expectedSeller);","lastModifiedDate":"2024-04-01"},{"lineNumber":180,"author":{"gitId":"KhoonSun47"},"content":"        assertCommandFailure(addSellerCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"zengzihui":2,"KhoonSun47":18,"felixchanyy":3,"-":159}},{"path":"src/test/java/seedu/address/logic/commands/AddBuyerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zengzihui"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"zengzihui"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"zengzihui"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"zengzihui"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"zengzihui"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.testutil.TypicalPersons.ALI_BUYER;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"zengzihui"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"zengzihui"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"zengzihui"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"zengzihui"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"zengzihui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"zengzihui"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"zengzihui"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"zengzihui"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"zengzihui"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.State;","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.House;","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.house.PriceAndHousingTypePredicate;","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.person.Seller;","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"zengzihui"},"content":"import seedu.address.testutil.BuyerBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"zengzihui"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"zengzihui"},"content":"public class AddBuyerCommandTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"zengzihui"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"zengzihui"},"content":"    public void constructor_nullBuyer_throwsNullPointerException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"zengzihui"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddBuyerCommand(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"zengzihui"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"zengzihui"},"content":"    public void execute_buyerAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"zengzihui"},"content":"        ModelStubAcceptingBuyerAdded modelStub \u003d new ModelStubAcceptingBuyerAdded();","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"zengzihui"},"content":"        Person validBuyer \u003d new BuyerBuilder().build();","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"zengzihui"},"content":"        CommandResult commandResult \u003d new AddBuyerCommand(validBuyer).execute(modelStub);","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"zengzihui"},"content":"        assertEquals(String.format(AddBuyerCommand.MESSAGE_SUCCESS, Messages.format(validBuyer)),","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"zengzihui"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"zengzihui"},"content":"        assertEquals(Arrays.asList(validBuyer), modelStub.buyersAdded);","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"zengzihui"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"    public void execute_duplicateBuyer_throwsCommandException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"zengzihui"},"content":"        Person validPerson \u003d new BuyerBuilder().build();","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"zengzihui"},"content":"        AddBuyerCommand addBuyerCommand \u003d new AddBuyerCommand(validPerson);","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"zengzihui"},"content":"        ModelStub modelStub \u003d new ModelStubWithBuyer(validPerson);","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"                AddBuyerCommand.MESSAGE_DUPLICATE_BUYER, () -\u003e addBuyerCommand.execute(modelStub));","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"zengzihui"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"zengzihui"},"content":"    public void equals() {","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"zengzihui"},"content":"        Person ali \u003d new BuyerBuilder().withName(\"Ali\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"zengzihui"},"content":"        Person bob \u003d new BuyerBuilder().withName(\"Bob\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"zengzihui"},"content":"        AddBuyerCommand addAliceCommand \u003d new AddBuyerCommand(ali);","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"zengzihui"},"content":"        AddBuyerCommand addBobCommand \u003d new AddBuyerCommand(bob);","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"zengzihui"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"zengzihui"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"zengzihui"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"zengzihui"},"content":"        AddBuyerCommand addAliceCommandCopy \u003d new AddBuyerCommand(ali);","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"zengzihui"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"zengzihui"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"zengzihui"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"zengzihui"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"zengzihui"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"zengzihui"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"zengzihui"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"zengzihui"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"zengzihui"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"felixchanyy"},"content":"        AddBuyerCommand addBuyerCommand \u003d new AddBuyerCommand(ALI_BUYER);","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"felixchanyy"},"content":"        String expected \u003d AddBuyerCommand.class.getCanonicalName() + \"{buyerToAdd\u003d\" + ALI_BUYER + \"}\";","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"zengzihui"},"content":"        assertEquals(expected, addBuyerCommand.toString());","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"zengzihui"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"zengzihui"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"zengzihui"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"zengzihui"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"zengzihui"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"zengzihui"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"zengzihui"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"zengzihui"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"zengzihui"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"zengzihui"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"zengzihui"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":108,"author":{"gitId":"zengzihui"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"zengzihui"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":112,"author":{"gitId":"zengzihui"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":113,"author":{"gitId":"zengzihui"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2024-03-21"},{"lineNumber":114,"author":{"gitId":"zengzihui"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":116,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":117,"author":{"gitId":"zengzihui"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":118,"author":{"gitId":"zengzihui"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2024-03-21"},{"lineNumber":119,"author":{"gitId":"zengzihui"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":121,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":122,"author":{"gitId":"zengzihui"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":123,"author":{"gitId":"zengzihui"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2024-03-21"},{"lineNumber":124,"author":{"gitId":"zengzihui"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":125,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":126,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":127,"author":{"gitId":"zengzihui"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":128,"author":{"gitId":"zengzihui"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2024-03-21"},{"lineNumber":129,"author":{"gitId":"zengzihui"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":130,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":131,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":132,"author":{"gitId":"redcolorbicycle"},"content":"        @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":133,"author":{"gitId":"redcolorbicycle"},"content":"        public void addHouse(House house, Person person) {","lastModifiedDate":"2024-04-01"},{"lineNumber":134,"author":{"gitId":"redcolorbicycle"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":135,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":136,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":137,"author":{"gitId":"redcolorbicycle"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"redcolorbicycle"},"content":"        public void addHouseToHouses(House house) {","lastModifiedDate":"2024-04-02"},{"lineNumber":139,"author":{"gitId":"redcolorbicycle"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":140,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":142,"author":{"gitId":"zengzihui"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":143,"author":{"gitId":"zengzihui"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2024-03-21"},{"lineNumber":144,"author":{"gitId":"zengzihui"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":145,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":146,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":147,"author":{"gitId":"zengzihui"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":148,"author":{"gitId":"zengzihui"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2024-03-21"},{"lineNumber":149,"author":{"gitId":"zengzihui"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":150,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":151,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":152,"author":{"gitId":"redcolorbicycle"},"content":"        @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":153,"author":{"gitId":"redcolorbicycle"},"content":"        public Person findPersonByName(Name name) {","lastModifiedDate":"2024-04-01"},{"lineNumber":154,"author":{"gitId":"redcolorbicycle"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":155,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":156,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":157,"author":{"gitId":"zengzihui"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":158,"author":{"gitId":"zengzihui"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2024-03-21"},{"lineNumber":159,"author":{"gitId":"zengzihui"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":160,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":161,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":162,"author":{"gitId":"redcolorbicycle"},"content":"        @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":163,"author":{"gitId":"redcolorbicycle"},"content":"        public boolean hasPerson(Name name) {","lastModifiedDate":"2024-04-01"},{"lineNumber":164,"author":{"gitId":"redcolorbicycle"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":165,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":166,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":167,"author":{"gitId":"redcolorbicycle"},"content":"        @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":168,"author":{"gitId":"redcolorbicycle"},"content":"        public boolean hasHouse(House house) {","lastModifiedDate":"2024-04-01"},{"lineNumber":169,"author":{"gitId":"redcolorbicycle"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":170,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":171,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":172,"author":{"gitId":"zengzihui"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":173,"author":{"gitId":"zengzihui"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2024-03-21"},{"lineNumber":174,"author":{"gitId":"zengzihui"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":175,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":176,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":177,"author":{"gitId":"KhoonSun47"},"content":"        @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":178,"author":{"gitId":"KhoonSun47"},"content":"        public void deletePersonFromPersons(Person target) {","lastModifiedDate":"2024-04-03"},{"lineNumber":179,"author":{"gitId":"KhoonSun47"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-03"},{"lineNumber":180,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":181,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":182,"author":{"gitId":"redcolorbicycle"},"content":"        @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":183,"author":{"gitId":"redcolorbicycle"},"content":"        public void deleteHouse(House house, Person owner) {","lastModifiedDate":"2024-04-01"},{"lineNumber":184,"author":{"gitId":"redcolorbicycle"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":185,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":186,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":187,"author":{"gitId":"zengzihui"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":188,"author":{"gitId":"zengzihui"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2024-03-21"},{"lineNumber":189,"author":{"gitId":"zengzihui"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":190,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":191,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":192,"author":{"gitId":"zengzihui"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":193,"author":{"gitId":"zengzihui"},"content":"        public State getState() {","lastModifiedDate":"2024-04-02"},{"lineNumber":194,"author":{"gitId":"zengzihui"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":195,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":196,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":197,"author":{"gitId":"zengzihui"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":198,"author":{"gitId":"zengzihui"},"content":"        public void setState(State newState) {","lastModifiedDate":"2024-04-02"},{"lineNumber":199,"author":{"gitId":"zengzihui"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":200,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":201,"author":{"gitId":"zengzihui"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":202,"author":{"gitId":"zengzihui"},"content":"        public boolean isSameState(State newState) {","lastModifiedDate":"2024-04-02"},{"lineNumber":203,"author":{"gitId":"zengzihui"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":204,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":205,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":206,"author":{"gitId":"zengzihui"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":207,"author":{"gitId":"zengzihui"},"content":"        public void setUi(Ui ui) {","lastModifiedDate":"2024-04-02"},{"lineNumber":208,"author":{"gitId":"zengzihui"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":209,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":210,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":211,"author":{"gitId":"zengzihui"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":212,"author":{"gitId":"zengzihui"},"content":"        public void showPerson(Person target) {","lastModifiedDate":"2024-04-02"},{"lineNumber":213,"author":{"gitId":"zengzihui"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":214,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":215,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":216,"author":{"gitId":"zengzihui"},"content":"        @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":217,"author":{"gitId":"zengzihui"},"content":"        public void showMatchResults(ObservableList\u003cSeller\u003e seller) {","lastModifiedDate":"2024-04-04"},{"lineNumber":218,"author":{"gitId":"zengzihui"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-04"},{"lineNumber":219,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":220,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":221,"author":{"gitId":"zengzihui"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":222,"author":{"gitId":"zengzihui"},"content":"        public Person getPerson() {","lastModifiedDate":"2024-04-02"},{"lineNumber":223,"author":{"gitId":"zengzihui"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":224,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":225,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":226,"author":{"gitId":"zengzihui"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":227,"author":{"gitId":"zengzihui"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2024-03-21"},{"lineNumber":228,"author":{"gitId":"zengzihui"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":229,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":230,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":231,"author":{"gitId":"zengzihui"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":232,"author":{"gitId":"zengzihui"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2024-03-21"},{"lineNumber":233,"author":{"gitId":"zengzihui"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":234,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":235,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":236,"author":{"gitId":"felixchanyy"},"content":"        @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":237,"author":{"gitId":"zengzihui"},"content":"        public ObservableList\u003cHouse\u003e getAllFilteredHouseList(PriceAndHousingTypePredicate predicate) {","lastModifiedDate":"2024-04-03"},{"lineNumber":238,"author":{"gitId":"felixchanyy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":239,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":240,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":241,"author":{"gitId":"felixchanyy"},"content":"        @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":242,"author":{"gitId":"felixchanyy"},"content":"        public void updateFilteredSellerList(PriceAndHousingTypePredicate predicate) {","lastModifiedDate":"2024-04-01"},{"lineNumber":243,"author":{"gitId":"felixchanyy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":244,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":245,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":246,"author":{"gitId":"felixchanyy"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":247,"author":{"gitId":"zengzihui"},"content":"        public ObservableList\u003cSeller\u003e getFilteredSellerList() {","lastModifiedDate":"2024-04-03"},{"lineNumber":248,"author":{"gitId":"felixchanyy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":249,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":250,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":251,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":252,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":253,"author":{"gitId":"zengzihui"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":254,"author":{"gitId":"zengzihui"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2024-03-21"},{"lineNumber":255,"author":{"gitId":"zengzihui"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":256,"author":{"gitId":"zengzihui"},"content":"    private class ModelStubWithBuyer extends ModelStub {","lastModifiedDate":"2024-03-21"},{"lineNumber":257,"author":{"gitId":"zengzihui"},"content":"        private final Person buyer;","lastModifiedDate":"2024-03-21"},{"lineNumber":258,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":259,"author":{"gitId":"zengzihui"},"content":"        ModelStubWithBuyer(Person person) {","lastModifiedDate":"2024-03-21"},{"lineNumber":260,"author":{"gitId":"zengzihui"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-03-21"},{"lineNumber":261,"author":{"gitId":"zengzihui"},"content":"            this.buyer \u003d person;","lastModifiedDate":"2024-03-21"},{"lineNumber":262,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":263,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":264,"author":{"gitId":"zengzihui"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":265,"author":{"gitId":"zengzihui"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2024-03-21"},{"lineNumber":266,"author":{"gitId":"zengzihui"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-03-21"},{"lineNumber":267,"author":{"gitId":"zengzihui"},"content":"            return this.buyer.isSamePerson(person);","lastModifiedDate":"2024-03-21"},{"lineNumber":268,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":269,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":270,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":271,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":272,"author":{"gitId":"zengzihui"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":273,"author":{"gitId":"zengzihui"},"content":"     * A Model stub that always accept the buyer being added.","lastModifiedDate":"2024-03-21"},{"lineNumber":274,"author":{"gitId":"zengzihui"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":275,"author":{"gitId":"zengzihui"},"content":"    private class ModelStubAcceptingBuyerAdded extends ModelStub {","lastModifiedDate":"2024-03-21"},{"lineNumber":276,"author":{"gitId":"zengzihui"},"content":"        final ArrayList\u003cPerson\u003e buyersAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":277,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":278,"author":{"gitId":"zengzihui"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":279,"author":{"gitId":"zengzihui"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2024-03-21"},{"lineNumber":280,"author":{"gitId":"zengzihui"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-03-21"},{"lineNumber":281,"author":{"gitId":"zengzihui"},"content":"            return buyersAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2024-03-21"},{"lineNumber":282,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":283,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":284,"author":{"gitId":"zengzihui"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":285,"author":{"gitId":"zengzihui"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2024-03-21"},{"lineNumber":286,"author":{"gitId":"zengzihui"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-03-21"},{"lineNumber":287,"author":{"gitId":"zengzihui"},"content":"            buyersAdded.add(person);","lastModifiedDate":"2024-03-21"},{"lineNumber":288,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":289,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":290,"author":{"gitId":"zengzihui"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":291,"author":{"gitId":"zengzihui"},"content":"        public void setState(State newState) {","lastModifiedDate":"2024-04-02"},{"lineNumber":292,"author":{"gitId":"zengzihui"},"content":"            requireNonNull(newState);","lastModifiedDate":"2024-04-02"},{"lineNumber":293,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":294,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":295,"author":{"gitId":"zengzihui"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":296,"author":{"gitId":"zengzihui"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2024-03-21"},{"lineNumber":297,"author":{"gitId":"zengzihui"},"content":"            return new AddressBook();","lastModifiedDate":"2024-03-21"},{"lineNumber":298,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":299,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":300,"author":{"gitId":"zengzihui"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"redcolorbicycle":32,"zengzihui":241,"felixchanyy":18,"KhoonSun47":9}},{"path":"src/test/java/seedu/address/logic/commands/AddSellerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE_SELLER;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.State;","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.House;","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.house.PriceAndHousingTypePredicate;","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Seller;","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.testutil.SellerBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"zengzihui"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"class AddSellerCommandTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"    public void constructor_nullSeller_throwsNullPointerException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddSellerCommand(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"    public void execute_duplicateSeller_throwsCommandException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"        Seller validSeller \u003d new SellerBuilder().build();","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"        AddSellerCommand addSellerCommand \u003d new AddSellerCommand(validSeller);","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"        ModelStub modelStub \u003d new ModelStubWithSeller(validSeller);","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"                AddSellerCommand.MESSAGE_DUPLICATE_SELLER, () -\u003e addSellerCommand.execute(modelStub));","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"        Seller alice \u003d new SellerBuilder().withName(\"Alice\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"        Seller bob \u003d new SellerBuilder().withName(\"Bob\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"        AddSellerCommand addAliceCommand \u003d new AddSellerCommand(alice);","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"        AddSellerCommand addBobCommand \u003d new AddSellerCommand(bob);","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"        AddSellerCommand addAliceCommandCopy \u003d new AddSellerCommand(alice);","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"KhoonSun47"},"content":"        AddSellerCommand addCommand \u003d new AddSellerCommand(ALICE_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"KhoonSun47"},"content":"        String expected \u003d AddSellerCommand.class.getCanonicalName() + \"{sellerToAdd\u003d\" + ALICE_SELLER + \"}\";","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"KhoonSun47"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2024-03-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"redcolorbicycle"},"content":"        @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":120,"author":{"gitId":"redcolorbicycle"},"content":"        public void addHouse(House house, Person person) {","lastModifiedDate":"2024-04-01"},{"lineNumber":121,"author":{"gitId":"redcolorbicycle"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":124,"author":{"gitId":"redcolorbicycle"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"redcolorbicycle"},"content":"        public void addHouseToHouses(House house) {","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"redcolorbicycle"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":127,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":128,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"redcolorbicycle"},"content":"        @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":140,"author":{"gitId":"redcolorbicycle"},"content":"        public Person findPersonByName(Name name) {","lastModifiedDate":"2024-04-01"},{"lineNumber":141,"author":{"gitId":"redcolorbicycle"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":142,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":143,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"KhoonSun47"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2024-03-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"redcolorbicycle"},"content":"        @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":150,"author":{"gitId":"redcolorbicycle"},"content":"        public boolean hasPerson(Name name) {","lastModifiedDate":"2024-04-01"},{"lineNumber":151,"author":{"gitId":"redcolorbicycle"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":152,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":153,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":154,"author":{"gitId":"redcolorbicycle"},"content":"        @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":155,"author":{"gitId":"redcolorbicycle"},"content":"        public boolean hasHouse(House house) {","lastModifiedDate":"2024-04-01"},{"lineNumber":156,"author":{"gitId":"redcolorbicycle"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":157,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":158,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"KhoonSun47"},"content":"        @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":165,"author":{"gitId":"KhoonSun47"},"content":"        public void deletePersonFromPersons(Person target) {","lastModifiedDate":"2024-04-03"},{"lineNumber":166,"author":{"gitId":"KhoonSun47"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-03"},{"lineNumber":167,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":168,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":169,"author":{"gitId":"redcolorbicycle"},"content":"        @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":170,"author":{"gitId":"redcolorbicycle"},"content":"        public void deleteHouse(House house, Person owner) {","lastModifiedDate":"2024-04-01"},{"lineNumber":171,"author":{"gitId":"redcolorbicycle"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":172,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":173,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"KhoonSun47"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2024-03-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"zengzihui"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":180,"author":{"gitId":"zengzihui"},"content":"        public State getState() {","lastModifiedDate":"2024-04-02"},{"lineNumber":181,"author":{"gitId":"zengzihui"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":182,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":183,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":184,"author":{"gitId":"zengzihui"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":185,"author":{"gitId":"zengzihui"},"content":"        public void setState(State newState) {","lastModifiedDate":"2024-04-02"},{"lineNumber":186,"author":{"gitId":"zengzihui"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":187,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":188,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":189,"author":{"gitId":"zengzihui"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":190,"author":{"gitId":"zengzihui"},"content":"        public boolean isSameState(State newState) {","lastModifiedDate":"2024-04-02"},{"lineNumber":191,"author":{"gitId":"zengzihui"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":192,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":193,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":194,"author":{"gitId":"zengzihui"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":195,"author":{"gitId":"zengzihui"},"content":"        public void setUi(Ui ui) {","lastModifiedDate":"2024-04-02"},{"lineNumber":196,"author":{"gitId":"zengzihui"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":197,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":198,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":199,"author":{"gitId":"zengzihui"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":200,"author":{"gitId":"zengzihui"},"content":"        public void showPerson(Person target) {","lastModifiedDate":"2024-04-02"},{"lineNumber":201,"author":{"gitId":"zengzihui"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":202,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":203,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":204,"author":{"gitId":"zengzihui"},"content":"        @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":205,"author":{"gitId":"zengzihui"},"content":"        public void showMatchResults(ObservableList\u003cSeller\u003e seller) {","lastModifiedDate":"2024-04-04"},{"lineNumber":206,"author":{"gitId":"zengzihui"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-04"},{"lineNumber":207,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":208,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":209,"author":{"gitId":"zengzihui"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":210,"author":{"gitId":"zengzihui"},"content":"        public Person getPerson() {","lastModifiedDate":"2024-04-02"},{"lineNumber":211,"author":{"gitId":"zengzihui"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":212,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":213,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":224,"author":{"gitId":"felixchanyy"},"content":"        @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":225,"author":{"gitId":"zengzihui"},"content":"        public ObservableList\u003cHouse\u003e getAllFilteredHouseList(PriceAndHousingTypePredicate predicate) {","lastModifiedDate":"2024-04-03"},{"lineNumber":226,"author":{"gitId":"felixchanyy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":227,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":228,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":229,"author":{"gitId":"felixchanyy"},"content":"        @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":230,"author":{"gitId":"felixchanyy"},"content":"        public void updateFilteredSellerList(PriceAndHousingTypePredicate predicate) {","lastModifiedDate":"2024-04-01"},{"lineNumber":231,"author":{"gitId":"felixchanyy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":232,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":233,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":234,"author":{"gitId":"zengzihui"},"content":"        public ObservableList\u003cSeller\u003e getFilteredSellerList() {","lastModifiedDate":"2024-04-03"},{"lineNumber":235,"author":{"gitId":"felixchanyy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":236,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":240,"author":{"gitId":"KhoonSun47"},"content":"     * A Model stub that contains a single seller.","lastModifiedDate":"2024-03-21"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":242,"author":{"gitId":"KhoonSun47"},"content":"    private class ModelStubWithSeller extends ModelStub {","lastModifiedDate":"2024-03-21"},{"lineNumber":243,"author":{"gitId":"KhoonSun47"},"content":"        private final Person seller;","lastModifiedDate":"2024-03-27"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":245,"author":{"gitId":"KhoonSun47"},"content":"        ModelStubWithSeller(Person seller) {","lastModifiedDate":"2024-03-27"},{"lineNumber":246,"author":{"gitId":"KhoonSun47"},"content":"            requireNonNull(seller);","lastModifiedDate":"2024-03-21"},{"lineNumber":247,"author":{"gitId":"KhoonSun47"},"content":"            this.seller \u003d seller;","lastModifiedDate":"2024-03-21"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":251,"author":{"gitId":"KhoonSun47"},"content":"        public boolean hasPerson(Person seller) {","lastModifiedDate":"2024-03-21"},{"lineNumber":252,"author":{"gitId":"KhoonSun47"},"content":"            requireNonNull(seller);","lastModifiedDate":"2024-03-21"},{"lineNumber":253,"author":{"gitId":"KhoonSun47"},"content":"            return this.seller.isSamePerson(seller);","lastModifiedDate":"2024-03-27"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":258,"author":{"gitId":"KhoonSun47"},"content":"     * A Model stub that always accept the seller being added.","lastModifiedDate":"2024-03-21"},{"lineNumber":259,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":260,"author":{"gitId":"KhoonSun47"},"content":"    private class ModelStubAcceptingSellerAdded extends ModelStub {","lastModifiedDate":"2024-03-21"},{"lineNumber":261,"author":{"gitId":"KhoonSun47"},"content":"        final ArrayList\u003cPerson\u003e sellersAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":264,"author":{"gitId":"KhoonSun47"},"content":"        public boolean hasPerson(Person seller) {","lastModifiedDate":"2024-03-21"},{"lineNumber":265,"author":{"gitId":"KhoonSun47"},"content":"            requireNonNull(seller);","lastModifiedDate":"2024-03-21"},{"lineNumber":266,"author":{"gitId":"KhoonSun47"},"content":"            return sellersAdded.stream().anyMatch(seller::isSamePerson);","lastModifiedDate":"2024-03-27"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":269,"author":{"gitId":"KhoonSun47"},"content":"        public void addPerson(Person seller) {","lastModifiedDate":"2024-03-21"},{"lineNumber":270,"author":{"gitId":"KhoonSun47"},"content":"            requireNonNull(seller);","lastModifiedDate":"2024-03-21"},{"lineNumber":271,"author":{"gitId":"KhoonSun47"},"content":"            sellersAdded.add(seller);","lastModifiedDate":"2024-03-21"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":274,"author":{"gitId":"zengzihui"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":275,"author":{"gitId":"zengzihui"},"content":"        public void setState(State newState) {","lastModifiedDate":"2024-04-02"},{"lineNumber":276,"author":{"gitId":"zengzihui"},"content":"            requireNonNull(newState);","lastModifiedDate":"2024-04-02"},{"lineNumber":277,"author":{"gitId":"zengzihui"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":278,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"redcolorbicycle":32,"zengzihui":44,"KhoonSun47":45,"felixchanyy":13,"-":150}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BLOCK;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BUDGET;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOUSING_TYPE;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LEVEL;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSTALCODE;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STREET;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UNITNUMBER;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.testutil.EditBuyerDescriptorBuilder;","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.testutil.EditSellerDescriptorBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"redcolorbicycle"},"content":"    public static final String VALID_NAME_KHOONSUN \u003d \"Yek KhoonSun\";","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"zengzihui"},"content":"    public static final String VALID_NAME_BEN \u003d \"Ben Ten\";","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"felixchanyy"},"content":"    public static final String VALID_PHONE_BEN \u003d \"33333333\";","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"redcolorbicycle"},"content":"    public static final String VALID_PHONE_KHOONSUN \u003d \"44444444\";","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"felixchanyy"},"content":"    public static final String VALID_EMAIL_BEN \u003d \"ben@example.com\";","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"redcolorbicycle"},"content":"    public static final String VALID_EMAIL_KHOONSUN \u003d \"khoonsun@example.com\";","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"redcolorbicycle"},"content":"    public static final String VALID_HOUSING_TYPE_AMY \u003d \"Hdb\";","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"zengzihui"},"content":"    public static final String VALID_HOUSING_TYPE_BOB \u003d \"Condominium\";","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"felixchanyy"},"content":"    public static final String VALID_HOUSING_TYPE_BEN \u003d \"Condominium\";","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"redcolorbicycle"},"content":"    public static final String VALID_HOUSING_TYPE_KHOONSUN \u003d \"Landed\";","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"felixchanyy"},"content":"    public static final String VALID_BUDGET_AMY \u003d \"999000\";","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"felixchanyy"},"content":"    public static final String VALID_BUDGET_BOB \u003d \"1000000\";","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"felixchanyy"},"content":"    public static final String VALID_BUDGET_BEN \u003d \"123000\";","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"    public static final String VALID_TAG_BUYER \u003d \"Buyer\";","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"lokidoki102"},"content":"    public static final String VALID_TAG_SELLER \u003d \"Seller\";","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"    public static final String VALID_BLOCK_AMY \u003d \"99B\";","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"    public static final String VALID_BLOCK_BOB \u003d \"99A\";","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"    public static final String VALID_LEVEL_AMY \u003d \"10\";","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"    public static final String VALID_LEVEL_BOB \u003d \"11\";","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"    public static final String VALID_POSTAL_CODE_AMY \u003d \"654321\";","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"    public static final String VALID_POSTAL_CODE_BOB \u003d \"654321\";","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"    public static final String VALID_STREET_AMY \u003d \"Orchard Road\";","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"    public static final String VALID_STREET_BOB \u003d \"Toa Payoh Road\";","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"    public static final String VALID_UNIT_NUMBER_AMY \u003d \"38\";","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"    public static final String VALID_UNIT_NUMBER_BOB \u003d \"38\";","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"felixchanyy"},"content":"    public static final String VALID_PRICE_AMY \u003d \"3000000\";","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"felixchanyy"},"content":"    public static final String VALID_PRICE_BOB \u003d \"4000000\";","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"lokidoki102"},"content":"    public static final String TAG_DESC_BUYER \u003d \" \" + PREFIX_TAG + VALID_TAG_BUYER;","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"lokidoki102"},"content":"    public static final String TAG_DESC_SELLER \u003d \" \" + PREFIX_TAG + VALID_TAG_SELLER;","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"zengzihui"},"content":"    public static final String HOUSING_TYPE_DESC_AMY \u003d \" \" + PREFIX_HOUSING_TYPE + VALID_HOUSING_TYPE_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"zengzihui"},"content":"    public static final String HOUSING_TYPE_DESC_BOB \u003d \" \" + PREFIX_HOUSING_TYPE + VALID_HOUSING_TYPE_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"KhoonSun47"},"content":"    public static final String BLOCK_DESC_AMY \u003d \" \" + PREFIX_BLOCK + VALID_BLOCK_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"KhoonSun47"},"content":"    public static final String BLOCK_DESC_BOB \u003d \" \" + PREFIX_BLOCK + VALID_BLOCK_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"KhoonSun47"},"content":"    public static final String LEVEL_DESC_AMY \u003d \" \" + PREFIX_LEVEL + VALID_LEVEL_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"KhoonSun47"},"content":"    public static final String LEVEL_DESC_BOB \u003d \" \" + PREFIX_LEVEL + VALID_LEVEL_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"KhoonSun47"},"content":"    public static final String POSTAL_CODE_DESC_AMY \u003d \" \" + PREFIX_POSTALCODE + VALID_POSTAL_CODE_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"KhoonSun47"},"content":"    public static final String POSTAL_CODE_DESC_BOB \u003d \" \" + PREFIX_POSTALCODE + VALID_POSTAL_CODE_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"KhoonSun47"},"content":"    public static final String STREET_DESC_AMY \u003d \" \" + PREFIX_STREET + VALID_STREET_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"KhoonSun47"},"content":"    public static final String STREET_DESC_BOB \u003d \" \" + PREFIX_STREET + VALID_STREET_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"KhoonSun47"},"content":"    public static final String UNIT_NUMBER_DESC_AMY \u003d \" \" + PREFIX_UNITNUMBER + VALID_UNIT_NUMBER_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"KhoonSun47"},"content":"    public static final String UNIT_NUMBER_DESC_BOB \u003d \" \" + PREFIX_UNITNUMBER + VALID_UNIT_NUMBER_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"felixchanyy"},"content":"    public static final String PRICE_DESC_AMY \u003d \" \" + PREFIX_PRICE + VALID_PRICE_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":95,"author":{"gitId":"felixchanyy"},"content":"    public static final String PRICE_DESC_BOB \u003d \" \" + PREFIX_PRICE + VALID_PRICE_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":96,"author":{"gitId":"KhoonSun47"},"content":"    public static final String VALID_BUDGET_DESC_AMY \u003d \" \" + PREFIX_BUDGET + VALID_BUDGET_AMY;","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":100,"author":{"gitId":"zengzihui"},"content":"    public static final String INVALID_HOUSING_TYPE_DESC \u003d \" \" + PREFIX_HOUSING_TYPE;","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"felixchanyy"},"content":"    public static final String INVALID_BUDGET_DESC \u003d \" \" + PREFIX_BUDGET; // \"\" not allowed in budget","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"felixchanyy"},"content":"    public static final String INVALID_PRICE_DESC \u003d \" \" + PREFIX_PRICE; // \"\" not allowed in price","lastModifiedDate":"2024-04-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"lokidoki102"},"content":"    public static final EditSellerCommand.EditSellerDescriptor DESC_SELLER_AMY;","lastModifiedDate":"2024-04-02"},{"lineNumber":109,"author":{"gitId":"lokidoki102"},"content":"    public static final EditSellerCommand.EditSellerDescriptor DESC_SELLER_BOB;","lastModifiedDate":"2024-04-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":111,"author":{"gitId":"lokidoki102"},"content":"    public static final EditBuyerCommand.EditBuyerDescriptor DESC_BUYER_AMY;","lastModifiedDate":"2024-03-28"},{"lineNumber":112,"author":{"gitId":"lokidoki102"},"content":"    public static final EditBuyerCommand.EditBuyerDescriptor DESC_BUYER_BOB;","lastModifiedDate":"2024-03-28"},{"lineNumber":113,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":116,"author":{"gitId":"lokidoki102"},"content":"        DESC_SELLER_AMY \u003d new EditSellerDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"lokidoki102"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"lokidoki102"},"content":"                .withTags(VALID_TAG_SELLER).build();","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"lokidoki102"},"content":"        DESC_SELLER_BOB \u003d new EditSellerDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"lokidoki102"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"lokidoki102"},"content":"                .withTags(VALID_TAG_SELLER).build();","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"lokidoki102"},"content":"        DESC_BUYER_AMY \u003d new EditBuyerDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2024-03-28"},{"lineNumber":123,"author":{"gitId":"lokidoki102"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"lokidoki102"},"content":"                .withTags(VALID_TAG_BUYER).build();","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"lokidoki102"},"content":"        DESC_BUYER_BOB \u003d new EditBuyerDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2024-03-28"},{"lineNumber":126,"author":{"gitId":"lokidoki102"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2024-04-02"},{"lineNumber":127,"author":{"gitId":"lokidoki102"},"content":"                .withTags(VALID_TAG_BUYER).build();","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":160,"author":{"gitId":"felixchanyy"},"content":"     * - EstateEase, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2024-04-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":174,"author":{"gitId":"felixchanyy"},"content":"     * {@code model}\u0027s EstateEase.","lastModifiedDate":"2024-04-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"redcolorbicycle":8,"zengzihui":6,"KhoonSun47":26,"felixchanyy":16,"-":106,"lokidoki102":24}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"redcolorbicycle"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get((INDEX_SECOND_PERSON).getZeroBased());","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"redcolorbicycle"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"redcolorbicycle"},"content":"        showPersonAtIndex(model, INDEX_SECOND_PERSON);","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"redcolorbicycle":3,"-":116}},{"path":"src/test/java/seedu/address/logic/commands/EditBuyerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BUYER_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BUYER_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.logic.commands.EditBuyerCommand.EditBuyerDescriptor;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.person.Buyer;","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.testutil.BuyerBuilder;","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.testutil.EditBuyerDescriptorBuilder;","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditBuyerCommand.","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"public class EditBuyerCommandTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"    private final Index indexLastBuyer \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"    private final Index indexSecondLastBuyer \u003d Index.fromOneBased(model.getFilteredPersonList().size() - 1);","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"        Buyer editedBuyer \u003d new BuyerBuilder().build();","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerDescriptor descriptor \u003d new EditBuyerDescriptorBuilder(editedBuyer).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerCommand editBuyerCommand \u003d new EditBuyerCommand(indexLastBuyer, descriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"        String expectedMessage \u003d String.format(EditBuyerCommand.MESSAGE_EDIT_BUYER_SUCCESS,","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"                Messages.format(editedBuyer));","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(indexLastBuyer.getZeroBased()), editedBuyer);","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"        assertCommandSuccess(editBuyerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"    public void execute_notBuyerType_failure() {","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"lokidoki102"},"content":"        Buyer editedBuyer \u003d new BuyerBuilder().build();","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerDescriptor descriptor \u003d new EditBuyerDescriptorBuilder(editedBuyer).build();","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerCommand editBuyerCommand \u003d new EditBuyerCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"lokidoki102"},"content":"        String expectedMessage \u003d String.format(EditBuyerCommand.MESSAGE_WRONG_TYPE,","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"lokidoki102"},"content":"                Messages.format(editedBuyer));","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"lokidoki102"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"lokidoki102"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(indexLastBuyer.getZeroBased()), editedBuyer);","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"lokidoki102"},"content":"        assertCommandFailure(editBuyerCommand, model, expectedMessage);","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"lokidoki102"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"lokidoki102"},"content":"        Index indexLastBuyer \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"lokidoki102"},"content":"        // In this dummy model, buyers are guaranteed to be at the end of the list.","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"lokidoki102"},"content":"        Buyer lastBuyer \u003d (Buyer) model.getFilteredPersonList().get(indexLastBuyer.getZeroBased());","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"lokidoki102"},"content":"        BuyerBuilder buyerInList \u003d new BuyerBuilder(lastBuyer);","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"lokidoki102"},"content":"        Buyer editedBuyer \u003d buyerInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerDescriptor descriptor \u003d new EditBuyerDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"lokidoki102"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerCommand editBuyerCommand \u003d new EditBuyerCommand(indexLastBuyer, descriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"lokidoki102"},"content":"        String expectedMessage \u003d String.format(EditBuyerCommand.MESSAGE_EDIT_BUYER_SUCCESS,","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"lokidoki102"},"content":"                Messages.format(editedBuyer));","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"lokidoki102"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"lokidoki102"},"content":"        expectedModel.setPerson(lastBuyer, editedBuyer);","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"lokidoki102"},"content":"        assertCommandSuccess(editBuyerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"lokidoki102"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerCommand editBuyerCommand \u003d new EditBuyerCommand(indexLastBuyer, new EditBuyerDescriptor());","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"lokidoki102"},"content":"        Buyer editedBuyer \u003d (Buyer) model.getFilteredPersonList().get(indexLastBuyer.getZeroBased());","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"lokidoki102"},"content":"        String expectedMessage \u003d String.format(EditBuyerCommand.MESSAGE_EDIT_BUYER_SUCCESS,","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"lokidoki102"},"content":"                Messages.format(editedBuyer));","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"lokidoki102"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"lokidoki102"},"content":"        assertCommandSuccess(editBuyerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"lokidoki102"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"lokidoki102"},"content":"        showPersonAtIndex(model, indexLastBuyer);","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"lokidoki102"},"content":"        Buyer buyerInFilteredList \u003d (Buyer) model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"lokidoki102"},"content":"        Buyer editedBuyer \u003d new BuyerBuilder(buyerInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerCommand editBuyerCommand \u003d new EditBuyerCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"lokidoki102"},"content":"                new EditBuyerDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"lokidoki102"},"content":"        String expectedMessage \u003d String.format(EditBuyerCommand.MESSAGE_EDIT_BUYER_SUCCESS,","lastModifiedDate":"2024-03-29"},{"lineNumber":113,"author":{"gitId":"lokidoki102"},"content":"                Messages.format(editedBuyer));","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"lokidoki102"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"lokidoki102"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedBuyer);","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"lokidoki102"},"content":"        assertCommandSuccess(editBuyerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":120,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":121,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":122,"author":{"gitId":"lokidoki102"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2024-03-29"},{"lineNumber":123,"author":{"gitId":"lokidoki102"},"content":"        Buyer lastBuyer \u003d (Buyer) model.getFilteredPersonList().get(indexLastBuyer.getZeroBased());","lastModifiedDate":"2024-03-29"},{"lineNumber":124,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerDescriptor descriptor \u003d new EditBuyerDescriptorBuilder(lastBuyer).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":125,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerCommand editBuyerCommand \u003d new EditBuyerCommand(indexSecondLastBuyer, descriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":126,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":127,"author":{"gitId":"lokidoki102"},"content":"        assertCommandFailure(editBuyerCommand, model, EditBuyerCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-29"},{"lineNumber":128,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":129,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":130,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":131,"author":{"gitId":"lokidoki102"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2024-03-29"},{"lineNumber":132,"author":{"gitId":"lokidoki102"},"content":"        showPersonAtIndex(model, indexLastBuyer);","lastModifiedDate":"2024-03-29"},{"lineNumber":133,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":134,"author":{"gitId":"lokidoki102"},"content":"        Buyer buyerInList \u003d (Buyer) model.getAddressBook().getPersonList().get(indexSecondLastBuyer.getZeroBased());","lastModifiedDate":"2024-03-29"},{"lineNumber":135,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerCommand editBuyerCommand \u003d new EditBuyerCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-29"},{"lineNumber":136,"author":{"gitId":"lokidoki102"},"content":"                new EditBuyerDescriptorBuilder(buyerInList).build());","lastModifiedDate":"2024-03-29"},{"lineNumber":137,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":138,"author":{"gitId":"lokidoki102"},"content":"        assertCommandFailure(editBuyerCommand, model, EditBuyerCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-29"},{"lineNumber":139,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":140,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":141,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":142,"author":{"gitId":"lokidoki102"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2024-03-29"},{"lineNumber":143,"author":{"gitId":"lokidoki102"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-03-29"},{"lineNumber":144,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerDescriptor descriptor \u003d new EditBuyerDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":145,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerCommand editBuyerCommand \u003d new EditBuyerCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":146,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":147,"author":{"gitId":"lokidoki102"},"content":"        assertCommandFailure(editBuyerCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-29"},{"lineNumber":148,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":149,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":150,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":151,"author":{"gitId":"lokidoki102"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2024-03-29"},{"lineNumber":152,"author":{"gitId":"felixchanyy"},"content":"     * but smaller than size of EstateEase","lastModifiedDate":"2024-04-12"},{"lineNumber":153,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":154,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":155,"author":{"gitId":"lokidoki102"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2024-03-29"},{"lineNumber":156,"author":{"gitId":"lokidoki102"},"content":"        showPersonAtIndex(model, indexLastBuyer);","lastModifiedDate":"2024-03-29"},{"lineNumber":157,"author":{"gitId":"lokidoki102"},"content":"        Index outOfBoundIndex \u003d indexSecondLastBuyer;","lastModifiedDate":"2024-03-29"},{"lineNumber":158,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":159,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-03-29"},{"lineNumber":160,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":161,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerCommand editBuyerCommand \u003d new EditBuyerCommand(outOfBoundIndex,","lastModifiedDate":"2024-03-29"},{"lineNumber":162,"author":{"gitId":"lokidoki102"},"content":"                new EditBuyerDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2024-03-29"},{"lineNumber":163,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":164,"author":{"gitId":"lokidoki102"},"content":"        assertCommandFailure(editBuyerCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-29"},{"lineNumber":165,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":166,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":167,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":168,"author":{"gitId":"lokidoki102"},"content":"    public void equals() {","lastModifiedDate":"2024-03-29"},{"lineNumber":169,"author":{"gitId":"lokidoki102"},"content":"        final EditBuyerCommand standardCommand \u003d new EditBuyerCommand(indexLastBuyer, DESC_BUYER_AMY);","lastModifiedDate":"2024-03-29"},{"lineNumber":170,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":171,"author":{"gitId":"lokidoki102"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-29"},{"lineNumber":172,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerDescriptor copyDescriptor \u003d new EditBuyerDescriptor(DESC_BUYER_AMY);","lastModifiedDate":"2024-03-29"},{"lineNumber":173,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerCommand commandWithSameValues \u003d new EditBuyerCommand(indexLastBuyer, copyDescriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":174,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2024-03-29"},{"lineNumber":175,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":176,"author":{"gitId":"lokidoki102"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-29"},{"lineNumber":177,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2024-03-29"},{"lineNumber":178,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":179,"author":{"gitId":"lokidoki102"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-29"},{"lineNumber":180,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2024-03-29"},{"lineNumber":181,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":182,"author":{"gitId":"lokidoki102"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-29"},{"lineNumber":183,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2024-03-29"},{"lineNumber":184,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":185,"author":{"gitId":"lokidoki102"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2024-03-29"},{"lineNumber":186,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(standardCommand.equals(new EditBuyerCommand(indexSecondLastBuyer, DESC_BUYER_AMY)));","lastModifiedDate":"2024-03-29"},{"lineNumber":187,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":188,"author":{"gitId":"lokidoki102"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2024-03-29"},{"lineNumber":189,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(standardCommand.equals(new EditBuyerCommand(indexLastBuyer, DESC_BUYER_BOB)));","lastModifiedDate":"2024-03-29"},{"lineNumber":190,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":191,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":192,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":193,"author":{"gitId":"lokidoki102"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-29"},{"lineNumber":194,"author":{"gitId":"lokidoki102"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-29"},{"lineNumber":195,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerDescriptor editBuyerDescriptor \u003d new EditBuyerDescriptor();","lastModifiedDate":"2024-03-29"},{"lineNumber":196,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerCommand editBuyerCommand \u003d new EditBuyerCommand(index, editBuyerDescriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":197,"author":{"gitId":"lokidoki102"},"content":"        String expected \u003d EditBuyerCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editBuyerDescriptor\u003d\"","lastModifiedDate":"2024-03-29"},{"lineNumber":198,"author":{"gitId":"lokidoki102"},"content":"                + editBuyerDescriptor + \"}\";","lastModifiedDate":"2024-03-29"},{"lineNumber":199,"author":{"gitId":"lokidoki102"},"content":"        assertEquals(expected, editBuyerCommand.toString());","lastModifiedDate":"2024-03-29"},{"lineNumber":200,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":201,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":202,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"felixchanyy":2,"lokidoki102":200}},{"path":"src/test/java/seedu/address/logic/commands/EditBuyerDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BUYER_AMY;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BUYER_BOB;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HOUSING_TYPE_BOB;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_SELLER;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.logic.commands.EditBuyerCommand.EditBuyerDescriptor;","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.testutil.EditBuyerDescriptorBuilder;","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"public class EditBuyerDescriptorTest {","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"    public void equals() {","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerDescriptor descriptorWithSameValues \u003d new EditBuyerDescriptor(DESC_BUYER_AMY);","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(DESC_BUYER_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(DESC_BUYER_AMY.equals(DESC_BUYER_AMY));","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(DESC_BUYER_AMY.equals(null));","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(DESC_BUYER_AMY.equals(5));","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(DESC_BUYER_AMY.equals(DESC_BUYER_BOB));","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerDescriptor editedAmy \u003d new EditBuyerDescriptorBuilder(DESC_BUYER_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(DESC_BUYER_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"        editedAmy \u003d new EditBuyerDescriptorBuilder(DESC_BUYER_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(DESC_BUYER_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"        editedAmy \u003d new EditBuyerDescriptorBuilder(DESC_BUYER_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(DESC_BUYER_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"        editedAmy \u003d new EditBuyerDescriptorBuilder(DESC_BUYER_AMY).withHousingType(VALID_HOUSING_TYPE_BOB).build();","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(DESC_BUYER_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"lokidoki102"},"content":"        editedAmy \u003d new EditBuyerDescriptorBuilder(DESC_BUYER_AMY).withTags(VALID_TAG_SELLER).build();","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(DESC_BUYER_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"lokidoki102"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerDescriptor editBuyerDescriptor \u003d new EditBuyerDescriptor();","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"lokidoki102"},"content":"        String expected \u003d EditBuyerDescriptor.class.getCanonicalName()","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"lokidoki102"},"content":"                + \"{name\u003d\" + editBuyerDescriptor.getName().orElse(null)","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"lokidoki102"},"content":"                + \", phone\u003d\" + editBuyerDescriptor.getPhone().orElse(null)","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"lokidoki102"},"content":"                + \", email\u003d\" + editBuyerDescriptor.getEmail().orElse(null)","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"lokidoki102"},"content":"                + \", housingType\u003d\" + editBuyerDescriptor.getHousingType().orElse(null)","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"lokidoki102"},"content":"                + \", budget\u003d\" + editBuyerDescriptor.getBudget().orElse(null)","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"lokidoki102"},"content":"                + \", tags\u003d\" + editBuyerDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"lokidoki102"},"content":"        assertEquals(expected, editBuyerDescriptor.toString());","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"lokidoki102":72}},{"path":"src/test/java/seedu/address/logic/commands/EditSellerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_SELLER_AMY;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_SELLER_BOB;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_SELLER;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.logic.commands.EditSellerCommand.EditSellerDescriptor;","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.person.Seller;","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.testutil.EditSellerDescriptorBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.testutil.SellerBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"public class EditSellerCommandTest {","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"        Seller editedSeller \u003d new SellerBuilder().build();","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"        EditSellerDescriptor descriptor \u003d new EditSellerDescriptorBuilder(editedSeller).build();","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"        EditSellerCommand editCommand \u003d new EditSellerCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"        String expectedMessage \u003d String.format(EditSellerCommand.MESSAGE_EDIT_SELLER_SUCCESS,","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"            Messages.format(editedSeller));","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedSeller);","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"    public void execute_notSellerType_failure() {","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"lokidoki102"},"content":"        Seller editedSeller \u003d new SellerBuilder().build();","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"lokidoki102"},"content":"        EditSellerDescriptor descriptor \u003d new EditSellerDescriptorBuilder(editedSeller).build();","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"lokidoki102"},"content":"        // INDEX_SECOND_PERSON: second person in the dummy is a buyer","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"        EditSellerCommand editSellerCommand \u003d new EditSellerCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"lokidoki102"},"content":"        String expectedMessage \u003d String.format(EditSellerCommand.MESSAGE_WRONG_TYPE,","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"lokidoki102"},"content":"                Messages.format(editedSeller));","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"lokidoki102"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"lokidoki102"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()), editedSeller);","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"lokidoki102"},"content":"        assertCommandFailure(editSellerCommand, model, expectedMessage);","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"lokidoki102"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"lokidoki102"},"content":"        // In this dummy model, sellers are guaranteed to be at the start of the list.","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"lokidoki102"},"content":"        Seller firstSeller \u003d (Seller) model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"lokidoki102"},"content":"        SellerBuilder sellerInList \u003d new SellerBuilder(firstSeller);","lastModifiedDate":"2024-04-01"},{"lineNumber":75,"author":{"gitId":"lokidoki102"},"content":"        Seller editedSeller \u003d sellerInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-04-01"},{"lineNumber":76,"author":{"gitId":"lokidoki102"},"content":"                .withTags(VALID_TAG_SELLER).build();","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":78,"author":{"gitId":"lokidoki102"},"content":"        EditSellerDescriptor descriptor \u003d new EditSellerDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"lokidoki102"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_SELLER).build();","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"lokidoki102"},"content":"        EditSellerCommand editSellerCommand \u003d new EditSellerCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":82,"author":{"gitId":"lokidoki102"},"content":"        String expectedMessage \u003d String.format(EditSellerCommand.MESSAGE_EDIT_SELLER_SUCCESS,","lastModifiedDate":"2024-04-01"},{"lineNumber":83,"author":{"gitId":"lokidoki102"},"content":"            Messages.format(editedSeller));","lastModifiedDate":"2024-04-01"},{"lineNumber":84,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":85,"author":{"gitId":"lokidoki102"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"lokidoki102"},"content":"        expectedModel.setPerson(firstSeller, editedSeller);","lastModifiedDate":"2024-04-01"},{"lineNumber":87,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":88,"author":{"gitId":"lokidoki102"},"content":"        assertCommandSuccess(editSellerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-01"},{"lineNumber":89,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":90,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":91,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":92,"author":{"gitId":"lokidoki102"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"lokidoki102"},"content":"        EditSellerCommand editSellerCommand \u003d new EditSellerCommand(INDEX_FIRST_PERSON, new EditSellerDescriptor());","lastModifiedDate":"2024-04-01"},{"lineNumber":94,"author":{"gitId":"lokidoki102"},"content":"        // Safe to cast because sellers are guaranteed to be at the start of the list.","lastModifiedDate":"2024-04-01"},{"lineNumber":95,"author":{"gitId":"lokidoki102"},"content":"        Seller editedSeller \u003d (Seller) model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-01"},{"lineNumber":96,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":97,"author":{"gitId":"lokidoki102"},"content":"        String expectedMessage \u003d String.format(EditSellerCommand.MESSAGE_EDIT_SELLER_SUCCESS,","lastModifiedDate":"2024-04-01"},{"lineNumber":98,"author":{"gitId":"lokidoki102"},"content":"            Messages.format(editedSeller));","lastModifiedDate":"2024-04-01"},{"lineNumber":99,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":100,"author":{"gitId":"lokidoki102"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-01"},{"lineNumber":101,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":102,"author":{"gitId":"lokidoki102"},"content":"        assertCommandSuccess(editSellerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-01"},{"lineNumber":103,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":104,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":105,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":106,"author":{"gitId":"lokidoki102"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2024-04-01"},{"lineNumber":107,"author":{"gitId":"lokidoki102"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-01"},{"lineNumber":108,"author":{"gitId":"lokidoki102"},"content":"        // Safe to cast because sellers are guaranteed to be at the start of the list.","lastModifiedDate":"2024-04-01"},{"lineNumber":109,"author":{"gitId":"lokidoki102"},"content":"        Seller personInFilteredList \u003d (Seller) model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-01"},{"lineNumber":110,"author":{"gitId":"lokidoki102"},"content":"        Seller editedPerson \u003d new SellerBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-04-01"},{"lineNumber":111,"author":{"gitId":"lokidoki102"},"content":"        EditSellerCommand editSellerCommand \u003d new EditSellerCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-04-01"},{"lineNumber":112,"author":{"gitId":"lokidoki102"},"content":"                new EditSellerDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2024-04-01"},{"lineNumber":113,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":114,"author":{"gitId":"lokidoki102"},"content":"        String expectedMessage \u003d String.format(EditSellerCommand.MESSAGE_EDIT_SELLER_SUCCESS,","lastModifiedDate":"2024-04-01"},{"lineNumber":115,"author":{"gitId":"lokidoki102"},"content":"            Messages.format(editedPerson));","lastModifiedDate":"2024-04-01"},{"lineNumber":116,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":117,"author":{"gitId":"lokidoki102"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-01"},{"lineNumber":118,"author":{"gitId":"lokidoki102"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-04-01"},{"lineNumber":119,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":120,"author":{"gitId":"lokidoki102"},"content":"        assertCommandSuccess(editSellerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-01"},{"lineNumber":121,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":122,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":123,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":124,"author":{"gitId":"lokidoki102"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2024-04-01"},{"lineNumber":125,"author":{"gitId":"lokidoki102"},"content":"        // Safe to cast because sellers are guaranteed to be at the start of the list.","lastModifiedDate":"2024-04-01"},{"lineNumber":126,"author":{"gitId":"lokidoki102"},"content":"        Seller firstPerson \u003d (Seller) model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-01"},{"lineNumber":127,"author":{"gitId":"lokidoki102"},"content":"        EditSellerDescriptor descriptor \u003d new EditSellerDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2024-04-01"},{"lineNumber":128,"author":{"gitId":"lokidoki102"},"content":"        EditSellerCommand editCommand \u003d new EditSellerCommand(INDEX_THIRD_PERSON, descriptor);","lastModifiedDate":"2024-04-01"},{"lineNumber":129,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":130,"author":{"gitId":"lokidoki102"},"content":"        assertCommandFailure(editCommand, model, EditSellerCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-04-01"},{"lineNumber":131,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":132,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":133,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":134,"author":{"gitId":"lokidoki102"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2024-04-01"},{"lineNumber":135,"author":{"gitId":"lokidoki102"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-01"},{"lineNumber":136,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":137,"author":{"gitId":"lokidoki102"},"content":"        Seller personInList \u003d (Seller) model.getAddressBook().getPersonList().get(INDEX_THIRD_PERSON.getZeroBased());","lastModifiedDate":"2024-04-01"},{"lineNumber":138,"author":{"gitId":"lokidoki102"},"content":"        EditSellerCommand editCommand \u003d new EditSellerCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-04-01"},{"lineNumber":139,"author":{"gitId":"lokidoki102"},"content":"                new EditSellerDescriptorBuilder(personInList).build());","lastModifiedDate":"2024-04-01"},{"lineNumber":140,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":141,"author":{"gitId":"lokidoki102"},"content":"        assertCommandFailure(editCommand, model, EditSellerCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-04-01"},{"lineNumber":142,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":143,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":144,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":145,"author":{"gitId":"lokidoki102"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2024-04-01"},{"lineNumber":146,"author":{"gitId":"lokidoki102"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-04-01"},{"lineNumber":147,"author":{"gitId":"lokidoki102"},"content":"        EditSellerDescriptor descriptor \u003d new EditSellerDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-04-01"},{"lineNumber":148,"author":{"gitId":"lokidoki102"},"content":"        EditSellerCommand editCommand \u003d new EditSellerCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2024-04-01"},{"lineNumber":149,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":150,"author":{"gitId":"lokidoki102"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-01"},{"lineNumber":151,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":152,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":153,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":154,"author":{"gitId":"lokidoki102"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2024-04-01"},{"lineNumber":155,"author":{"gitId":"felixchanyy"},"content":"     * but smaller than size of EstateEase","lastModifiedDate":"2024-04-12"},{"lineNumber":156,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":157,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":158,"author":{"gitId":"lokidoki102"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2024-04-01"},{"lineNumber":159,"author":{"gitId":"lokidoki102"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-01"},{"lineNumber":160,"author":{"gitId":"lokidoki102"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-04-01"},{"lineNumber":161,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":162,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-04-01"},{"lineNumber":163,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":164,"author":{"gitId":"lokidoki102"},"content":"        EditSellerCommand editCommand \u003d new EditSellerCommand(outOfBoundIndex,","lastModifiedDate":"2024-04-01"},{"lineNumber":165,"author":{"gitId":"lokidoki102"},"content":"                new EditSellerDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2024-04-01"},{"lineNumber":166,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":167,"author":{"gitId":"lokidoki102"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-01"},{"lineNumber":168,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":169,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":170,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":171,"author":{"gitId":"lokidoki102"},"content":"    public void equals() {","lastModifiedDate":"2024-04-01"},{"lineNumber":172,"author":{"gitId":"lokidoki102"},"content":"        final EditSellerCommand standardCommand \u003d new EditSellerCommand(INDEX_FIRST_PERSON, DESC_SELLER_AMY);","lastModifiedDate":"2024-04-02"},{"lineNumber":173,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":174,"author":{"gitId":"lokidoki102"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-01"},{"lineNumber":175,"author":{"gitId":"lokidoki102"},"content":"        EditSellerDescriptor copyDescriptor \u003d new EditSellerDescriptor(DESC_SELLER_AMY);","lastModifiedDate":"2024-04-02"},{"lineNumber":176,"author":{"gitId":"lokidoki102"},"content":"        EditSellerCommand commandWithSameValues \u003d new EditSellerCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2024-04-01"},{"lineNumber":177,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2024-04-01"},{"lineNumber":178,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":179,"author":{"gitId":"lokidoki102"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-01"},{"lineNumber":180,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2024-04-01"},{"lineNumber":181,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":182,"author":{"gitId":"lokidoki102"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-01"},{"lineNumber":183,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2024-04-01"},{"lineNumber":184,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":185,"author":{"gitId":"lokidoki102"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-01"},{"lineNumber":186,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2024-04-01"},{"lineNumber":187,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":188,"author":{"gitId":"lokidoki102"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2024-04-01"},{"lineNumber":189,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(standardCommand.equals(new EditSellerCommand(INDEX_SECOND_PERSON, DESC_SELLER_AMY)));","lastModifiedDate":"2024-04-02"},{"lineNumber":190,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":191,"author":{"gitId":"lokidoki102"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2024-04-01"},{"lineNumber":192,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(standardCommand.equals(new EditSellerCommand(INDEX_FIRST_PERSON, DESC_SELLER_BOB)));","lastModifiedDate":"2024-04-02"},{"lineNumber":193,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":194,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":195,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":196,"author":{"gitId":"lokidoki102"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-04-01"},{"lineNumber":197,"author":{"gitId":"lokidoki102"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-04-01"},{"lineNumber":198,"author":{"gitId":"lokidoki102"},"content":"        EditSellerDescriptor editSellerDescriptor \u003d new EditSellerDescriptor();","lastModifiedDate":"2024-04-01"},{"lineNumber":199,"author":{"gitId":"lokidoki102"},"content":"        EditSellerCommand editCommand \u003d new EditSellerCommand(index, editSellerDescriptor);","lastModifiedDate":"2024-04-01"},{"lineNumber":200,"author":{"gitId":"lokidoki102"},"content":"        String expected \u003d EditSellerCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editSellerDescriptor\u003d\"","lastModifiedDate":"2024-04-01"},{"lineNumber":201,"author":{"gitId":"lokidoki102"},"content":"                + editSellerDescriptor + \"}\";","lastModifiedDate":"2024-04-01"},{"lineNumber":202,"author":{"gitId":"lokidoki102"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2024-04-01"},{"lineNumber":203,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":204,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":205,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"felixchanyy":2,"lokidoki102":203}},{"path":"src/test/java/seedu/address/logic/commands/EditSellerDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_SELLER_AMY;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_SELLER_BOB;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_BUYER;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.logic.commands.EditSellerCommand.EditSellerDescriptor;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.testutil.EditSellerDescriptorBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"public class EditSellerDescriptorTest {","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"        EditSellerDescriptor descriptorWithSameValues \u003d new EditSellerDescriptor(DESC_SELLER_AMY);","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(DESC_SELLER_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(DESC_SELLER_AMY.equals(DESC_SELLER_AMY));","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(DESC_SELLER_AMY.equals(null));","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(DESC_SELLER_AMY.equals(5));","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(DESC_SELLER_AMY.equals(DESC_SELLER_BOB));","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"        EditSellerDescriptor editedAmy \u003d new EditSellerDescriptorBuilder(DESC_SELLER_AMY)","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"                .withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(DESC_SELLER_AMY.equals(editedAmy));","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"        editedAmy \u003d new EditSellerDescriptorBuilder(DESC_SELLER_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(DESC_SELLER_AMY.equals(editedAmy));","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"        editedAmy \u003d new EditSellerDescriptorBuilder(DESC_SELLER_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(DESC_SELLER_AMY.equals(editedAmy));","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"        editedAmy \u003d new EditSellerDescriptorBuilder(DESC_SELLER_AMY).withTags(VALID_TAG_BUYER).build();","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(DESC_SELLER_AMY.equals(editedAmy));","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"lokidoki102"},"content":"        EditSellerDescriptor editSellerDescriptor \u003d new EditSellerDescriptor();","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"        String expected \u003d EditSellerDescriptor.class.getCanonicalName()","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"lokidoki102"},"content":"                + \"{name\u003d\" + editSellerDescriptor.getName().orElse(null)","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"lokidoki102"},"content":"                + \", phone\u003d\" + editSellerDescriptor.getPhone().orElse(null)","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"lokidoki102"},"content":"                + \", email\u003d\" + editSellerDescriptor.getEmail().orElse(null)","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"lokidoki102"},"content":"                + \", tags\u003d\" + editSellerDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"lokidoki102"},"content":"        assertEquals(expected, editSellerDescriptor.toString());","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"-":38,"lokidoki102":28}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.TypicalPersons.CARL_SELLER;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE_SELLER;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA_SELLER;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"KhoonSun47"},"content":"        assertEquals(Arrays.asList(CARL_SELLER, ELLE_SELLER, FIONA_SELLER), model.getFilteredPersonList());","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"KhoonSun47":4,"-":87}},{"path":"src/test/java/seedu/address/logic/parser/AddSellerCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BLOCK_DESC_AMY;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.commands.CommandTestUtil.HOUSING_TYPE_DESC_AMY;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LEVEL_DESC_AMY;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POSTAL_CODE_DESC_AMY;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PRICE_DESC_AMY;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STREET_DESC_AMY;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_SELLER;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.commands.CommandTestUtil.UNIT_NUMBER_DESC_AMY;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.TypicalHouses.HOUSE2;","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.TypicalPersons.AMY_SELLER;","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.logic.commands.AddSellerCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Seller;","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.testutil.SellerBuilder;","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"public class AddSellerCommandParserTest {","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"    private AddSellerCommandParser parser \u003d new AddSellerCommandParser();","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"        Seller expectedSeller \u003d new SellerBuilder(AMY_SELLER).withHouses(HOUSE2).build();","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"                + HOUSING_TYPE_DESC_AMY + STREET_DESC_AMY + BLOCK_DESC_AMY","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"                + LEVEL_DESC_AMY + UNIT_NUMBER_DESC_AMY + POSTAL_CODE_DESC_AMY","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"                + PRICE_DESC_AMY , new AddSellerCommand(expectedSeller));","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"        Seller expectedSeller \u003d new SellerBuilder(AMY_SELLER).withTags().build();","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"                + HOUSING_TYPE_DESC_AMY + STREET_DESC_AMY + BLOCK_DESC_AMY","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"                + LEVEL_DESC_AMY + UNIT_NUMBER_DESC_AMY + POSTAL_CODE_DESC_AMY","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"                + PRICE_DESC_AMY, new AddSellerCommand(expectedSeller));","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"    public void parse_missingNamePrefix_failure() {","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddSellerCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"        String commandWithMissingName \u003d PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"                + HOUSING_TYPE_DESC_AMY + STREET_DESC_AMY + BLOCK_DESC_AMY","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"                + LEVEL_DESC_AMY + UNIT_NUMBER_DESC_AMY + POSTAL_CODE_DESC_AMY","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"                + PRICE_DESC_AMY + TAG_DESC_SELLER;","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"        assertParseFailure(parser, commandWithMissingName, expectedMessage);","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"    public void parse_missingPhonePrefix_failure() {","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddSellerCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"        String commandWithMissingPhone \u003d NAME_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"                + HOUSING_TYPE_DESC_AMY + STREET_DESC_AMY + BLOCK_DESC_AMY","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"                + LEVEL_DESC_AMY + UNIT_NUMBER_DESC_AMY + POSTAL_CODE_DESC_AMY","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"                + PRICE_DESC_AMY + TAG_DESC_SELLER;","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"        assertParseFailure(parser, commandWithMissingPhone, expectedMessage);","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"KhoonSun47"},"content":"    public void parse_missingEmailPrefix_failure() {","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddSellerCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"KhoonSun47"},"content":"        String commandWithMissingEmail \u003d NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"KhoonSun47"},"content":"                + HOUSING_TYPE_DESC_AMY + STREET_DESC_AMY + BLOCK_DESC_AMY","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"KhoonSun47"},"content":"                + LEVEL_DESC_AMY + UNIT_NUMBER_DESC_AMY + POSTAL_CODE_DESC_AMY","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"KhoonSun47"},"content":"                + PRICE_DESC_AMY + TAG_DESC_SELLER;","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"KhoonSun47"},"content":"        assertParseFailure(parser, commandWithMissingEmail, expectedMessage);","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"KhoonSun47"},"content":"    public void parse_missingHousingTypePrefix_failure() {","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddSellerCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"KhoonSun47"},"content":"        String commandWithMissingHousingType \u003d NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"KhoonSun47"},"content":"                + STREET_DESC_AMY + BLOCK_DESC_AMY","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"KhoonSun47"},"content":"                + LEVEL_DESC_AMY + UNIT_NUMBER_DESC_AMY + POSTAL_CODE_DESC_AMY","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"KhoonSun47"},"content":"                + PRICE_DESC_AMY + TAG_DESC_SELLER;","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"KhoonSun47"},"content":"        assertParseFailure(parser, commandWithMissingHousingType, expectedMessage);","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"KhoonSun47"},"content":"    public void parse_missingPostalCodePrefix_failure() {","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddSellerCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"KhoonSun47"},"content":"        String commandWithMissingPostalCode \u003d NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"KhoonSun47"},"content":"                + HOUSING_TYPE_DESC_AMY + STREET_DESC_AMY + BLOCK_DESC_AMY","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"KhoonSun47"},"content":"                + LEVEL_DESC_AMY + UNIT_NUMBER_DESC_AMY","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"KhoonSun47"},"content":"                + PRICE_DESC_AMY + TAG_DESC_SELLER;","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"KhoonSun47"},"content":"        assertParseFailure(parser, commandWithMissingPostalCode, expectedMessage);","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":109,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":110,"author":{"gitId":"KhoonSun47"},"content":"    public void parse_missingStreetPrefix_failure() {","lastModifiedDate":"2024-04-02"},{"lineNumber":111,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddSellerCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"KhoonSun47"},"content":"        String commandWithMissingStreet \u003d NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"KhoonSun47"},"content":"                + HOUSING_TYPE_DESC_AMY + BLOCK_DESC_AMY","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"KhoonSun47"},"content":"                + LEVEL_DESC_AMY + UNIT_NUMBER_DESC_AMY + POSTAL_CODE_DESC_AMY","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"KhoonSun47"},"content":"                + PRICE_DESC_AMY + TAG_DESC_SELLER;","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"KhoonSun47"},"content":"        assertParseFailure(parser, commandWithMissingStreet, expectedMessage);","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"KhoonSun47"},"content":"    public void parse_missingUnitNumberPrefix_failure() {","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddSellerCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"KhoonSun47"},"content":"        String commandWithMissingUnitNumber \u003d NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"KhoonSun47"},"content":"                + HOUSING_TYPE_DESC_AMY + STREET_DESC_AMY + BLOCK_DESC_AMY","lastModifiedDate":"2024-04-02"},{"lineNumber":127,"author":{"gitId":"KhoonSun47"},"content":"                + LEVEL_DESC_AMY + POSTAL_CODE_DESC_AMY","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"KhoonSun47"},"content":"                + PRICE_DESC_AMY + TAG_DESC_SELLER;","lastModifiedDate":"2024-04-02"},{"lineNumber":129,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":130,"author":{"gitId":"KhoonSun47"},"content":"        assertParseFailure(parser, commandWithMissingUnitNumber, expectedMessage);","lastModifiedDate":"2024-04-02"},{"lineNumber":131,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":132,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":133,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":134,"author":{"gitId":"KhoonSun47"},"content":"    public void parse_missingPricePrefix_failure() {","lastModifiedDate":"2024-04-02"},{"lineNumber":135,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddSellerCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"KhoonSun47"},"content":"        String commandWithMissingPrice \u003d NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"KhoonSun47"},"content":"                + HOUSING_TYPE_DESC_AMY + STREET_DESC_AMY + BLOCK_DESC_AMY","lastModifiedDate":"2024-04-02"},{"lineNumber":139,"author":{"gitId":"KhoonSun47"},"content":"                + LEVEL_DESC_AMY + UNIT_NUMBER_DESC_AMY + POSTAL_CODE_DESC_AMY","lastModifiedDate":"2024-04-02"},{"lineNumber":140,"author":{"gitId":"KhoonSun47"},"content":"                + TAG_DESC_SELLER;","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":142,"author":{"gitId":"KhoonSun47"},"content":"        assertParseFailure(parser, commandWithMissingPrice, expectedMessage);","lastModifiedDate":"2024-04-02"},{"lineNumber":143,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":144,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"KhoonSun47":144}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.logic.commands.AddBuyerCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.logic.commands.EditBuyerCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.logic.commands.EditBuyerCommand.EditBuyerDescriptor;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.logic.commands.EditSellerCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.logic.commands.EditSellerCommand.EditSellerDescriptor;","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.person.Buyer;","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.person.Seller;","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.testutil.BuyerBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.testutil.EditBuyerDescriptorBuilder;","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.testutil.EditSellerDescriptorBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.testutil.SellerBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"    public void parseCommand_addBuyer() throws Exception {","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"felixchanyy"},"content":"        Buyer buyer \u003d new BuyerBuilder().build();","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"        AddBuyerCommand command \u003d (AddBuyerCommand) parser.parseCommand(PersonUtil.getAddBuyerCommand(buyer));","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"        assertEquals(new AddBuyerCommand(buyer), command);","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"lokidoki102"},"content":"    public void parseCommand_editSeller() throws Exception {","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"lokidoki102"},"content":"        Seller seller \u003d new SellerBuilder().build();","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"lokidoki102"},"content":"        EditSellerDescriptor descriptor \u003d new EditSellerDescriptorBuilder(seller).build();","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"lokidoki102"},"content":"        EditSellerCommand command \u003d (EditSellerCommand) parser.parseCommand(EditSellerCommand.COMMAND_WORD","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"lokidoki102"},"content":"                + \" \" + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditSellerDescriptorDetails(descriptor));","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"lokidoki102"},"content":"        assertEquals(new EditSellerCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"lokidoki102"},"content":"    public void parseCommand_editBuyer() throws Exception {","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"lokidoki102"},"content":"        Buyer buyer \u003d new BuyerBuilder().build();","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerDescriptor descriptor \u003d new EditBuyerDescriptorBuilder(buyer).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerCommand command \u003d (EditBuyerCommand) parser.parseCommand(EditBuyerCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"lokidoki102"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditBuyerDescriptorDetails(descriptor));","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"lokidoki102"},"content":"        assertEquals(new EditBuyerCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"KhoonSun47":6,"felixchanyy":1,"-":87,"lokidoki102":21}},{"path":"src/test/java/seedu/address/logic/parser/EditBuyerCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.HOUSING_TYPE_DESC_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.HOUSING_TYPE_DESC_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_HOUSING_TYPE_DESC;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HOUSING_TYPE_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_BUYER;","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOUSING_TYPE;","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.logic.commands.EditBuyerCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.logic.commands.EditBuyerCommand.EditBuyerDescriptor;","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.HousingType;","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.testutil.EditBuyerDescriptorBuilder;","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"public class EditBuyerCommandParserTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditBuyerCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"    private EditBuyerCommandParser parser \u003d new EditBuyerCommandParser();","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"        assertParseFailure(parser, \"1\", EditBuyerCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"KhoonSun47"},"content":"        assertParseFailure(parser, \"1\" + INVALID_HOUSING_TYPE_DESC, HousingType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"lokidoki102"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_HOUSING_TYPE_AMY","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"lokidoki102"},"content":"                        + VALID_PHONE_AMY,","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"lokidoki102"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"lokidoki102"},"content":"                + HOUSING_TYPE_DESC_AMY + NAME_DESC_AMY;","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerDescriptor descriptor \u003d new EditBuyerDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"lokidoki102"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withHousingType(VALID_HOUSING_TYPE_AMY).build();","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerCommand expectedCommand \u003d new EditBuyerCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerDescriptor descriptor \u003d new EditBuyerDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerCommand expectedCommand \u003d new EditBuyerCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2024-03-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":121,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerDescriptor descriptor \u003d new EditBuyerDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":122,"author":{"gitId":"lokidoki102"},"content":"        EditBuyerCommand expectedCommand \u003d new EditBuyerCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2024-03-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":127,"author":{"gitId":"lokidoki102"},"content":"        descriptor \u003d new EditBuyerDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":128,"author":{"gitId":"lokidoki102"},"content":"        expectedCommand \u003d new EditBuyerCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2024-03-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":133,"author":{"gitId":"lokidoki102"},"content":"        descriptor \u003d new EditBuyerDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":134,"author":{"gitId":"lokidoki102"},"content":"        expectedCommand \u003d new EditBuyerCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":137,"author":{"gitId":"lokidoki102"},"content":"        // housingType","lastModifiedDate":"2024-03-29"},{"lineNumber":138,"author":{"gitId":"lokidoki102"},"content":"        userInput \u003d targetIndex.getOneBased() + HOUSING_TYPE_DESC_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":139,"author":{"gitId":"lokidoki102"},"content":"        descriptor \u003d new EditBuyerDescriptorBuilder().withHousingType(VALID_HOUSING_TYPE_AMY).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":140,"author":{"gitId":"lokidoki102"},"content":"        expectedCommand \u003d new EditBuyerCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2024-03-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2024-03-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2024-03-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2024-03-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2024-03-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2024-03-29"},{"lineNumber":161,"author":{"gitId":"lokidoki102"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + HOUSING_TYPE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-03-29"},{"lineNumber":162,"author":{"gitId":"lokidoki102"},"content":"                + VALID_TAG_BUYER + PHONE_DESC_AMY + HOUSING_TYPE_DESC_AMY + EMAIL_DESC_AMY + VALID_TAG_BUYER","lastModifiedDate":"2024-04-02"},{"lineNumber":163,"author":{"gitId":"lokidoki102"},"content":"                + PHONE_DESC_BOB + HOUSING_TYPE_DESC_BOB + EMAIL_DESC_BOB + VALID_TAG_BUYER;","lastModifiedDate":"2024-04-02"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2024-03-29"},{"lineNumber":166,"author":{"gitId":"lokidoki102"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_HOUSING_TYPE));","lastModifiedDate":"2024-03-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2024-03-29"},{"lineNumber":169,"author":{"gitId":"lokidoki102"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_HOUSING_TYPE_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2024-03-29"},{"lineNumber":170,"author":{"gitId":"lokidoki102"},"content":"                + INVALID_PHONE_DESC + INVALID_HOUSING_TYPE_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2024-03-29"},{"lineNumber":173,"author":{"gitId":"lokidoki102"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_HOUSING_TYPE));","lastModifiedDate":"2024-03-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"KhoonSun47":2,"-":134,"lokidoki102":39}},{"path":"src/test/java/seedu/address/logic/parser/EditSellerCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_SELLER;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HOUSING_TYPE_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.logic.commands.EditSellerCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.logic.commands.EditSellerCommand.EditSellerDescriptor;","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.testutil.EditSellerDescriptorBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"public class EditSellerCommandParserTest {","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditSellerCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"    private EditSellerCommandParser parser \u003d new EditSellerCommandParser();","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"        assertParseFailure(parser, \"1\", EditSellerCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"zengzihui"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_HOUSING_TYPE_AMY","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"redcolorbicycle"},"content":"                        + VALID_PHONE_AMY,","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":89,"author":{"gitId":"lokidoki102"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"lokidoki102"},"content":"                + EMAIL_DESC_AMY + NAME_DESC_AMY;","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"lokidoki102"},"content":"        EditSellerDescriptor descriptor \u003d new EditSellerDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"lokidoki102"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"lokidoki102"},"content":"        EditSellerCommand expectedCommand \u003d new EditSellerCommand(targetIndex, descriptor);","lastModifiedDate":"2024-04-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"lokidoki102"},"content":"        EditSellerCommand.EditSellerDescriptor descriptor \u003d new EditSellerDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-04-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"lokidoki102"},"content":"        EditSellerCommand expectedCommand \u003d new EditSellerCommand(targetIndex, descriptor);","lastModifiedDate":"2024-04-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":116,"author":{"gitId":"lokidoki102"},"content":"        EditSellerCommand.EditSellerDescriptor descriptor \u003d new EditSellerDescriptorBuilder()","lastModifiedDate":"2024-04-01"},{"lineNumber":117,"author":{"gitId":"lokidoki102"},"content":"                .withName(VALID_NAME_AMY)","lastModifiedDate":"2024-04-01"},{"lineNumber":118,"author":{"gitId":"lokidoki102"},"content":"                .build();","lastModifiedDate":"2024-04-01"},{"lineNumber":119,"author":{"gitId":"lokidoki102"},"content":"        EditSellerCommand expectedCommand \u003d new EditSellerCommand(targetIndex, descriptor);","lastModifiedDate":"2024-04-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":124,"author":{"gitId":"lokidoki102"},"content":"        descriptor \u003d new EditSellerDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2024-04-01"},{"lineNumber":125,"author":{"gitId":"lokidoki102"},"content":"        expectedCommand \u003d new EditSellerCommand(targetIndex, descriptor);","lastModifiedDate":"2024-04-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":130,"author":{"gitId":"lokidoki102"},"content":"        descriptor \u003d new EditSellerDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2024-04-01"},{"lineNumber":131,"author":{"gitId":"lokidoki102"},"content":"        expectedCommand \u003d new EditSellerCommand(targetIndex, descriptor);","lastModifiedDate":"2024-04-01"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":152,"author":{"gitId":"lokidoki102"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-04-02"},{"lineNumber":153,"author":{"gitId":"lokidoki102"},"content":"                + TAG_DESC_SELLER + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-04-02"},{"lineNumber":154,"author":{"gitId":"lokidoki102"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB;","lastModifiedDate":"2024-04-02"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":157,"author":{"gitId":"lokidoki102"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL));","lastModifiedDate":"2024-04-02"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":160,"author":{"gitId":"lokidoki102"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2024-04-02"},{"lineNumber":161,"author":{"gitId":"lokidoki102"},"content":"                + INVALID_PHONE_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2024-04-02"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":164,"author":{"gitId":"lokidoki102"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL));","lastModifiedDate":"2024-04-02"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"redcolorbicycle":13,"zengzihui":2,"-":121,"lokidoki102":30}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.house.Block;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.house.Level;","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.PostalCode;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.house.Street;","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.house.UnitNumber;","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"    private static final String INVALID_STREET \u003d \"t3$t!ng\";","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"    private static final String INVALID_LEVEL \u003d \"aa\";","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"    private static final String INVALID_UNIT_NUMBER \u003d \"1234A\";","lastModifiedDate":"2024-04-12"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"    private static final String INVALID_BLOCK \u003d \"12a34\";","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"    private static final String INVALID_POSTAL_CODE \u003d \"5678990\";","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"    private static final String VALID_POSTAL_CODE \u003d \"654321\";","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"    private static final String VALID_STREET \u003d \"292A East Coast Rd\";","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"    private static final String VALID_LEVEL \u003d \"10\";","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"    private static final String VALID_UNIT_NUMBER \u003d \"123\";","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"    private static final String VALID_BLOCK \u003d \"205A\";","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":140,"author":{"gitId":"KhoonSun47"},"content":"    public void parsePostalCode_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":141,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePostalCode((String) null));","lastModifiedDate":"2024-03-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":145,"author":{"gitId":"KhoonSun47"},"content":"    public void parsePostalCode_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":146,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePostalCode(INVALID_POSTAL_CODE));","lastModifiedDate":"2024-03-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":150,"author":{"gitId":"KhoonSun47"},"content":"    public void parsePostalCode_validValueWithoutWhitespace_returnsPostalCode() throws Exception {","lastModifiedDate":"2024-03-12"},{"lineNumber":151,"author":{"gitId":"KhoonSun47"},"content":"        PostalCode expectedPostalCode \u003d new PostalCode(VALID_POSTAL_CODE);","lastModifiedDate":"2024-03-21"},{"lineNumber":152,"author":{"gitId":"KhoonSun47"},"content":"        assertEquals(expectedPostalCode, ParserUtil.parsePostalCode(VALID_POSTAL_CODE));","lastModifiedDate":"2024-03-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":156,"author":{"gitId":"KhoonSun47"},"content":"    public void parsePostalCode_validValueWithWhitespace_returnsTrimmedPostalCode() throws Exception {","lastModifiedDate":"2024-03-15"},{"lineNumber":157,"author":{"gitId":"KhoonSun47"},"content":"        String postalCodeWithWhitespace \u003d WHITESPACE + VALID_POSTAL_CODE + WHITESPACE;","lastModifiedDate":"2024-03-21"},{"lineNumber":158,"author":{"gitId":"KhoonSun47"},"content":"        PostalCode expectedPostalCode \u003d new PostalCode(VALID_POSTAL_CODE);","lastModifiedDate":"2024-03-21"},{"lineNumber":159,"author":{"gitId":"KhoonSun47"},"content":"        assertEquals(expectedPostalCode, ParserUtil.parsePostalCode(postalCodeWithWhitespace));","lastModifiedDate":"2024-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":207,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":208,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":209,"author":{"gitId":"lokidoki102"},"content":"    public void parseStreet_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":210,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseStreet((String) null));","lastModifiedDate":"2024-03-14"},{"lineNumber":211,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":212,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":213,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":214,"author":{"gitId":"lokidoki102"},"content":"    public void parseStreet_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":215,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseStreet(INVALID_STREET));","lastModifiedDate":"2024-03-14"},{"lineNumber":216,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":217,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":218,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":219,"author":{"gitId":"lokidoki102"},"content":"    public void parseStreet_validValueWithoutWhitespace_returnsStreet() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":220,"author":{"gitId":"lokidoki102"},"content":"        Street expectedStreet \u003d new Street(VALID_STREET);","lastModifiedDate":"2024-03-14"},{"lineNumber":221,"author":{"gitId":"lokidoki102"},"content":"        assertEquals(expectedStreet, ParserUtil.parseStreet(VALID_STREET));","lastModifiedDate":"2024-03-14"},{"lineNumber":222,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":223,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":224,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":225,"author":{"gitId":"lokidoki102"},"content":"    public void parseStreet_validValueWithWhitespace_returnsTrimmedStreet() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":226,"author":{"gitId":"lokidoki102"},"content":"        String streetWithWhitespace \u003d WHITESPACE + VALID_STREET + WHITESPACE;","lastModifiedDate":"2024-03-14"},{"lineNumber":227,"author":{"gitId":"lokidoki102"},"content":"        Street expectedStreet \u003d new Street(VALID_STREET);","lastModifiedDate":"2024-03-14"},{"lineNumber":228,"author":{"gitId":"lokidoki102"},"content":"        assertEquals(expectedStreet, ParserUtil.parseStreet(streetWithWhitespace));","lastModifiedDate":"2024-03-14"},{"lineNumber":229,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":230,"author":{"gitId":"lokidoki102"},"content":"    public void parseLevel_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":231,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseLevel((String) null));","lastModifiedDate":"2024-03-14"},{"lineNumber":232,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":233,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":234,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":235,"author":{"gitId":"lokidoki102"},"content":"    public void parseLevel_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":236,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseLevel(INVALID_LEVEL));","lastModifiedDate":"2024-03-14"},{"lineNumber":237,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":238,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":239,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":240,"author":{"gitId":"lokidoki102"},"content":"    public void parseLevel_validValueWithoutWhitespace_returnsLevel() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":241,"author":{"gitId":"lokidoki102"},"content":"        Level expectedLevel \u003d new Level(VALID_LEVEL);","lastModifiedDate":"2024-03-14"},{"lineNumber":242,"author":{"gitId":"lokidoki102"},"content":"        assertEquals(expectedLevel, ParserUtil.parseLevel(VALID_LEVEL));","lastModifiedDate":"2024-03-14"},{"lineNumber":243,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":244,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":245,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":246,"author":{"gitId":"lokidoki102"},"content":"    public void parseLevel_validValueWithWhitespace_returnsTrimmedLevel() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":247,"author":{"gitId":"lokidoki102"},"content":"        String levelWithWhitespace \u003d WHITESPACE + VALID_LEVEL + WHITESPACE;","lastModifiedDate":"2024-03-14"},{"lineNumber":248,"author":{"gitId":"lokidoki102"},"content":"        Level expectedLevel \u003d new Level(VALID_LEVEL);","lastModifiedDate":"2024-03-14"},{"lineNumber":249,"author":{"gitId":"lokidoki102"},"content":"        assertEquals(expectedLevel, ParserUtil.parseLevel(levelWithWhitespace));","lastModifiedDate":"2024-03-14"},{"lineNumber":250,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":251,"author":{"gitId":"KhoonSun47"},"content":"    public void parseUnitNumber_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":252,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseUnitNumber((String) null));","lastModifiedDate":"2024-03-14"},{"lineNumber":253,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":254,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":255,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":256,"author":{"gitId":"KhoonSun47"},"content":"    public void parseUnitNumber_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":257,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseUnitNumber(INVALID_UNIT_NUMBER));","lastModifiedDate":"2024-03-14"},{"lineNumber":258,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":259,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":260,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":261,"author":{"gitId":"KhoonSun47"},"content":"    public void parseUnitNumber_validValueWithoutWhitespace_returnsUnitNumber() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":262,"author":{"gitId":"KhoonSun47"},"content":"        UnitNumber expectedUnitNumber \u003d new UnitNumber(VALID_UNIT_NUMBER);","lastModifiedDate":"2024-03-14"},{"lineNumber":263,"author":{"gitId":"KhoonSun47"},"content":"        assertEquals(expectedUnitNumber, ParserUtil.parseUnitNumber(VALID_UNIT_NUMBER));","lastModifiedDate":"2024-03-14"},{"lineNumber":264,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":265,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":266,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":267,"author":{"gitId":"KhoonSun47"},"content":"    public void parseUnitNumber_validValueWithWhitespace_returnsTrimmedUnitNumber() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":268,"author":{"gitId":"KhoonSun47"},"content":"        String unitNumberWithWhitespace \u003d WHITESPACE + VALID_UNIT_NUMBER + WHITESPACE;","lastModifiedDate":"2024-03-14"},{"lineNumber":269,"author":{"gitId":"KhoonSun47"},"content":"        UnitNumber expectedUnitNumber \u003d new UnitNumber(VALID_UNIT_NUMBER);","lastModifiedDate":"2024-03-14"},{"lineNumber":270,"author":{"gitId":"KhoonSun47"},"content":"        assertEquals(expectedUnitNumber, ParserUtil.parseUnitNumber(unitNumberWithWhitespace));","lastModifiedDate":"2024-03-14"},{"lineNumber":271,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":272,"author":{"gitId":"lokidoki102"},"content":"    public void parseBlock_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":273,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseBlock((String) null));","lastModifiedDate":"2024-03-14"},{"lineNumber":274,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":275,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":276,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":277,"author":{"gitId":"lokidoki102"},"content":"    public void parseBlock_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":278,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseBlock(INVALID_BLOCK));","lastModifiedDate":"2024-03-14"},{"lineNumber":279,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":280,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":281,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":282,"author":{"gitId":"lokidoki102"},"content":"    public void parseBlock_validValueWithoutWhitespace_returnsBlock() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":283,"author":{"gitId":"lokidoki102"},"content":"        Block expectedBlock \u003d new Block(VALID_BLOCK);","lastModifiedDate":"2024-03-14"},{"lineNumber":284,"author":{"gitId":"lokidoki102"},"content":"        assertEquals(expectedBlock, ParserUtil.parseBlock(VALID_BLOCK));","lastModifiedDate":"2024-03-14"},{"lineNumber":285,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":286,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":287,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":288,"author":{"gitId":"lokidoki102"},"content":"    public void parseBlock_validValueWithWhitespace_returnsTrimmedBlock() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":289,"author":{"gitId":"lokidoki102"},"content":"        String blockWithWhitespace \u003d WHITESPACE + VALID_BLOCK + WHITESPACE;","lastModifiedDate":"2024-03-14"},{"lineNumber":290,"author":{"gitId":"lokidoki102"},"content":"        Block expectedBlock \u003d new Block(VALID_BLOCK);","lastModifiedDate":"2024-03-14"},{"lineNumber":291,"author":{"gitId":"lokidoki102"},"content":"        assertEquals(expectedBlock, ParserUtil.parseBlock(blockWithWhitespace));","lastModifiedDate":"2024-03-14"},{"lineNumber":292,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"felixchanyy":3,"KhoonSun47":37,"-":181,"lokidoki102":72}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_SELLER;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE_BUYER;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE_SELLER;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.House;","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.testutil.BuyerBuilder;","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.testutil.SellerBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"        Person editedAlice \u003d new SellerBuilder(ALICE_SELLER)","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"                .withTags(VALID_TAG_SELLER)","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE_SELLER, editedAlice);","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"    public void resetDate_withDuplicateBuyerAndSeller_throwsDuplicatePersonException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"        Person editedBuyer \u003d new BuyerBuilder(ALICE_BUYER)","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"                .build();","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"        Person editedSeller \u003d new SellerBuilder(ALICE_SELLER)","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"                .withTags(VALID_TAG_SELLER)","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"                .build();","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(editedSeller, editedBuyer);","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"redcolorbicycle"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson((Person) null));","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(addressBook.hasPerson(ALICE_SELLER));","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"KhoonSun47"},"content":"        addressBook.addPerson(ALICE_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(addressBook.hasPerson(ALICE_SELLER));","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"KhoonSun47"},"content":"    public void hasSeller_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"KhoonSun47"},"content":"        addressBook.addPerson(ALICE_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"KhoonSun47"},"content":"        Person editedAlice \u003d new SellerBuilder(ALICE_SELLER)","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"lokidoki102"},"content":"                .withTags(VALID_TAG_SELLER)","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"KhoonSun47"},"content":"                .build();","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"KhoonSun47"},"content":"    public void hasBuyer_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"KhoonSun47"},"content":"        addressBook.addPerson(ALICE_BUYER);","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"KhoonSun47"},"content":"        Person editedAlice \u003d new BuyerBuilder(ALICE_BUYER)","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"redcolorbicycle"},"content":"        private final ObservableList\u003cHouse\u003e houses \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":130,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"redcolorbicycle"},"content":"        @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"redcolorbicycle"},"content":"        public ObservableList\u003cHouse\u003e getHouseList() {","lastModifiedDate":"2024-04-03"},{"lineNumber":133,"author":{"gitId":"redcolorbicycle"},"content":"            return houses;","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"redcolorbicycle":8,"KhoonSun47":27,"-":99,"lokidoki102":3}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE_SELLER;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON_SELLER;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"redcolorbicycle"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson((Person) null));","lastModifiedDate":"2024-04-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(modelManager.hasPerson(ALICE_SELLER));","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"KhoonSun47"},"content":"        modelManager.addPerson(ALICE_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(modelManager.hasPerson(ALICE_SELLER));","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"KhoonSun47"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE_SELLER).withPerson(BENSON_SELLER).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"KhoonSun47"},"content":"        String[] keywords \u003d ALICE_SELLER.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2024-03-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"redcolorbicycle":2,"KhoonSun47":7,"-":123}},{"path":"src/test/java/seedu/address/model/house/BlockTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"public class BlockTest {","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Block(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"    public void constructor_invalidBlock_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"        String invalidBlock \u003d \"\";","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Block(invalidBlock));","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"    public void isValidBlock() {","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"        // null block number","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(NullPointerException.class, () -\u003e Block.isValidBlock(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"        // invalid block numbers","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Block.isValidBlock(\"0\")); // 1 zero only","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Block.isValidBlock(\"00\")); // 2 zeroes only","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Block.isValidBlock(\"000\")); // 3 zeroes only","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Block.isValidBlock(\"0A\")); // 1 zero + alphabet","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Block.isValidBlock(\"00A\")); // 2 zeroes + alphabet","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Block.isValidBlock(\"000A\")); // 3 zeroes + alphabet","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Block.isValidBlock(\"\")); // empty string","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Block.isValidBlock(\" \")); // spaces only","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Block.isValidBlock(\"A\")); // letter only","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Block.isValidBlock(\"blocknumber\")); // non-numeric","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Block.isValidBlock(\"10A9\")); // alphabet within digits","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Block.isValidBlock(\"A109\")); // alphabet at the start","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Block.isValidBlock(\"14 1\")); // spaces within digits","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Block.isValidBlock(\"9999\")); // more than 3 digits","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"        // valid phone numbers","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(Block.isValidBlock(\"777\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(Block.isValidBlock(\"777A\")); // block number with alphabet at the end","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(Block.isValidBlock(\"1A\")); // short block number with alphabet at the end","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(Block.isValidBlock(\"1\")); // short block number","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"    public void equals() {","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"        Block block \u003d new Block(\"234A\");","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(block.equals(new Block(\"234A\")));","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"lokidoki102"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(block.equals(block));","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"lokidoki102"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(block.equals(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"lokidoki102"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(block.equals(5.0f));","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"lokidoki102"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(block.equals(new Block(\"995\")));","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"lokidoki102":69}},{"path":"src/test/java/seedu/address/model/house/HousingTypeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"public class HousingTypeTest {","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(NullPointerException.class, () -\u003e new HousingType(null));","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"    public void constructor_invalidHousingType_throwsIllegalArgumentException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"        String invalidHousingType \u003d \"bungalow\";","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new HousingType(invalidHousingType));","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"    public void isValidHousingType() {","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"        // null housing type","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(NullPointerException.class, () -\u003e HousingType.isValidHousingType(null));","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"        // invalid housing types","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(HousingType.isValidHousingType(\"bungalow\")); // Invalid types","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(HousingType.isValidHousingType(\"\")); // Empty string","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(HousingType.isValidHousingType(\" \")); // Spaces only","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"        // valid housing types","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(HousingType.isValidHousingType(\"condominium\")); // Exact match","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(HousingType.isValidHousingType(\"Condominium\")); // Case insensitive","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(HousingType.isValidHousingType(\"hdb\")); // Exact match","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(HousingType.isValidHousingType(\"HDB\")); // Case insensitive","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(HousingType.isValidHousingType(\"landed\")); // Exact match","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(HousingType.isValidHousingType(\"Landed\")); // Case insensitive","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"    public void equals() {","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"        HousingType housingType \u003d new HousingType(\"condominium\");","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(housingType.equals(new HousingType(\"condominium\")));","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(housingType.equals(housingType));","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(housingType.equals(null));","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(housingType.equals(5));","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(housingType.equals(new HousingType(\"hdb\")));","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"    public void hashCodeTest() {","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"        HousingType housingType1 \u003d new HousingType(\"condominium\");","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"        HousingType housingType2 \u003d new HousingType(\"condominium\");","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"        HousingType housingType3 \u003d new HousingType(\"hdb\");","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"        assertEquals(housingType1.hashCode(), housingType2.hashCode());","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(housingType1.hashCode() \u003d\u003d housingType3.hashCode());","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"KhoonSun47":72}},{"path":"src/test/java/seedu/address/model/house/LevelTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"public class LevelTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Level(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"    public void constructor_invalidLevel_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"        String invalidLevel \u003d \"\";","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Level(invalidLevel));","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"    public void isValidLevel() {","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"        // null level","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(NullPointerException.class, () -\u003e Level.isValidLevel(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"        // blank levels","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Level.isValidLevel(\"\")); // empty string","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Level.isValidLevel(\" \")); // spaces only","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"        // invalid levels","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Level.isValidLevel(\"0\")); // 1 zero only","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Level.isValidLevel(\"00\")); // 2 zeroes only","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Level.isValidLevel(\"a\")); // non-digit only","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Level.isValidLevel(\"aa\")); // non-digit only","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Level.isValidLevel(\"###\")); // non-digit only","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Level.isValidLevel(\"!@#\")); // non-digit only","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Level.isValidLevel(\"a1\")); // digit + non-digit","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Level.isValidLevel(\"1a\")); // non-digit + digit","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Level.isValidLevel(\"111\")); // number of digits \u003e 2","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Level.isValidLevel(\"44aa\")); // number of digits \u003e\u003d 2 with letters","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Level.isValidLevel(\"44aaaaa\")); // number of digits \u003e\u003d 2 with letters","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"        // valid levels","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(Level.isValidLevel(\"1\")); // one digit","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(Level.isValidLevel(\"11\")); // two digits","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(Level.isValidLevel(\"01\")); // two digits","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"    public void equals() {","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"        Level level \u003d new Level(\"99\");","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(level.equals(new Level(\"99\")));","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"lokidoki102"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(level.equals(level));","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"lokidoki102"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(level.equals(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"lokidoki102"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(level.equals(5.0f));","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"lokidoki102"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(level.equals(new Level(\"11\")));","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"lokidoki102":69}},{"path":"src/test/java/seedu/address/model/house/PostalCodeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"public class PostalCodeTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(NullPointerException.class, () -\u003e new PostalCode(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"    public void constructor_invalidPostalCode_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"        String invalidPostalCode \u003d \"12345\"; // Not 6 digits","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new PostalCode(invalidPostalCode));","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"    public void isValidPostalCode() {","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"        // null postal code","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(NullPointerException.class, () -\u003e PostalCode.isValidPostalCode(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"        // invalid postal codes","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(PostalCode.isValidPostalCode(\"\")); // empty string","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(PostalCode.isValidPostalCode(\" \")); // spaces only","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(PostalCode.isValidPostalCode(\"12345\")); // less than 6 numbers","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(PostalCode.isValidPostalCode(\"postal\")); // non-numeric","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(PostalCode.isValidPostalCode(\"1234p6\")); // alphabets within digits","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(PostalCode.isValidPostalCode(\"123 456\")); // spaces within digits","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"        // valid postal codes","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(PostalCode.isValidPostalCode(\"123456\")); // exactly 6 numbers","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"    public void equals() {","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"        PostalCode postalCode \u003d new PostalCode(\"654321\");","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(postalCode.equals(new PostalCode(\"654321\")));","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(postalCode.equals(postalCode));","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(postalCode.equals(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(postalCode.equals(5.0f));","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(postalCode.equals(new PostalCode(\"123456\")));","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"KhoonSun47":58}},{"path":"src/test/java/seedu/address/model/house/StreetTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"public class StreetTest {","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Street(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"    public void constructor_invalidBlock_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"        String invalidStreet \u003d \"\";","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Street(invalidStreet));","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"    public void isValidStreet() {","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"        // null street","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(NullPointerException.class, () -\u003e Street.isValidStreet(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"        // invalid street","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Street.isValidStreet(\"\")); // empty string","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Street.isValidStreet(\" \")); // spaces only","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Street.isValidStreet(\"-\")); // hyphen only","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Street.isValidStreet(\"@!^\u0026*%\u0026^\")); // non-alphanumeric","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Street.isValidStreet(\"qwe!@#ert$%\")); // non-alphanumeric + alphabets","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Street.isValidStreet(\"!@#123\")); // non-alphanumeric + numbers","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(Street.isValidStreet(\"t3$t!ng\")); // non-alphanumeric + alphanumerics","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"        // valid street","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(Street.isValidStreet(\"292A East Coast Rd\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(Street.isValidStreet(\"350 Orchard Rd Sshaw House 13-01\")); // with dash","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(Street.isValidStreet(\"46 PANDAN LOOP BLK 3 PANDAN LIGHT IND PARK\")); // all caps","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"    public void equals() {","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"        Street street \u003d new Street(\"15 Kaki Bukit View 01-00\");","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(street.equals(new Street(\"15 Kaki Bukit View 01-00\")));","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(street.equals(street));","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(street.equals(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(street.equals(5.0f));","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"lokidoki102"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(street.equals(new Street(\"3 Sungei Kadut Street 6 Sungei Kadut Industrial Estate\")));","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"lokidoki102":60}},{"path":"src/test/java/seedu/address/model/house/UnitNumberTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package seedu.address.model.house;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"public class UnitNumberTest {","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(NullPointerException.class, () -\u003e new UnitNumber(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"    public void constructor_invalidUnitNumber_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"        String invalidUnitNumber \u003d \"abcd\";","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new UnitNumber(invalidUnitNumber));","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"    public void isValidUnitNumber() {","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"        // null unit number","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(NullPointerException.class, () -\u003e UnitNumber.isValidUnitNumber(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"        // invalid unit numbers","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(UnitNumber.isValidUnitNumber(\"0\")); // \u00270\u0027 alone is invalid","lastModifiedDate":"2024-04-12"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(UnitNumber.isValidUnitNumber(\"00\")); // multiple zeros invalid","lastModifiedDate":"2024-04-12"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(UnitNumber.isValidUnitNumber(\"0000\")); // four digits are invalid","lastModifiedDate":"2024-04-12"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(UnitNumber.isValidUnitNumber(\"0A\")); // 1 zero + alphabet","lastModifiedDate":"2024-04-12"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(UnitNumber.isValidUnitNumber(\"00A\")); // 2 zeroes + alphabet","lastModifiedDate":"2024-04-12"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(UnitNumber.isValidUnitNumber(\"000A\")); // 3 zeroes + alphabet","lastModifiedDate":"2024-04-12"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(UnitNumber.isValidUnitNumber(\"\")); // empty string","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(UnitNumber.isValidUnitNumber(\" \")); // spaces only","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(UnitNumber.isValidUnitNumber(\"A\")); // character only","lastModifiedDate":"2024-04-12"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(UnitNumber.isValidUnitNumber(\"1000\")); // four digits without a letter are invalid","lastModifiedDate":"2024-04-12"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(UnitNumber.isValidUnitNumber(\"14 1\")); // spaces within digits","lastModifiedDate":"2024-04-12"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(UnitNumber.isValidUnitNumber(\"1a2b\")); // invalid mixed letters and numbers","lastModifiedDate":"2024-04-12"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"        // valid unit numbers","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(UnitNumber.isValidUnitNumber(\"1\")); // single digit","lastModifiedDate":"2024-04-12"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(UnitNumber.isValidUnitNumber(\"10\")); // two digits","lastModifiedDate":"2024-04-12"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(UnitNumber.isValidUnitNumber(\"100\")); // three digits","lastModifiedDate":"2024-04-12"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(UnitNumber.isValidUnitNumber(\"10A\")); // two digits followed by a letter","lastModifiedDate":"2024-04-12"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(UnitNumber.isValidUnitNumber(\"100A\")); // three digits followed by a letter","lastModifiedDate":"2024-04-12"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(UnitNumber.isValidUnitNumber(\"1A\")); // one digit followed by a letter","lastModifiedDate":"2024-04-12"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"    public void equals() {","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"        UnitNumber unitNumber \u003d new UnitNumber(\"12\");","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(unitNumber.equals(new UnitNumber(\"12\")));","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(unitNumber.equals(unitNumber));","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(unitNumber.equals(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(unitNumber.equals(5.0f));","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"        // different unit number -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(unitNumber.equals(new UnitNumber(\"34\")));","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"KhoonSun47":69}},{"path":"src/test/java/seedu/address/model/person/BuyerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"zengzihui"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"zengzihui"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"zengzihui"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"zengzihui"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HOUSING_TYPE_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BEN;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.testutil.TypicalPersons.ALI_BUYER;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.testutil.TypicalPersons.BEN_BUYER;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"zengzihui"},"content":"import seedu.address.testutil.BuyerBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"public class BuyerTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"zengzihui"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"zengzihui"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"        Buyer buyer \u003d new BuyerBuilder().build();","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"zengzihui"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e buyer.getTags().remove(0));","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"zengzihui"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"zengzihui"},"content":"    public void isSamePerson() {","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"zengzihui"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"felixchanyy"},"content":"        assertTrue(ALI_BUYER.isSamePerson(ALI_BUYER));","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"zengzihui"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"felixchanyy"},"content":"        assertFalse(ALI_BUYER.isSamePerson(null));","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"zengzihui"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"felixchanyy"},"content":"        Person editedAli \u003d new BuyerBuilder(ALI_BUYER).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"                .withHousingType(VALID_HOUSING_TYPE_BOB).build();","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"felixchanyy"},"content":"        assertTrue(ALI_BUYER.isSamePerson(editedAli));","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"zengzihui"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"felixchanyy"},"content":"        editedAli \u003d new BuyerBuilder(ALI_BUYER).withName(VALID_NAME_BEN).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"felixchanyy"},"content":"        assertFalse(ALI_BUYER.isSamePerson(editedAli));","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"redcolorbicycle"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"felixchanyy"},"content":"        Person editedBen \u003d new BuyerBuilder(BEN_BUYER).withName(VALID_NAME_BEN.toLowerCase()).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"redcolorbicycle"},"content":"        assertTrue(BEN_BUYER.isSamePerson(editedBen));","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"zengzihui"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"zengzihui"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BEN + \" \";","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"felixchanyy"},"content":"        editedBen \u003d new BuyerBuilder(BEN_BUYER).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"felixchanyy"},"content":"        assertFalse(BEN_BUYER.isSamePerson(editedBen));","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"felixchanyy"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"felixchanyy"},"content":"    public void equals() {","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"felixchanyy"},"content":"        Person buyerAliCopy \u003d new BuyerBuilder(ALI_BUYER).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"felixchanyy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"felixchanyy"},"content":"        assertTrue(ALI_BUYER.equals(buyerAliCopy));","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"zengzihui"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"felixchanyy"},"content":"        assertTrue(ALI_BUYER.equals(ALI_BUYER));","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"felixchanyy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"felixchanyy"},"content":"        assertFalse(ALI_BUYER.equals(null));","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"felixchanyy"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"felixchanyy"},"content":"        assertFalse(ALI_BUYER.equals(5));","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"felixchanyy"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"felixchanyy"},"content":"        assertFalse(ALI_BUYER.equals(BOB));","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"zengzihui"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"felixchanyy"},"content":"        Person editedAli \u003d new BuyerBuilder(ALI_BUYER).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"felixchanyy"},"content":"        assertFalse(ALI_BUYER.equals(editedAli));","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"zengzihui"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"felixchanyy"},"content":"        editedAli \u003d new BuyerBuilder(ALI_BUYER).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"felixchanyy"},"content":"        assertFalse(ALI_BUYER.equals(editedAli));","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"zengzihui"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"felixchanyy"},"content":"        editedAli \u003d new BuyerBuilder(ALI_BUYER).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"felixchanyy"},"content":"        assertFalse(ALI_BUYER.equals(editedAli));","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"zengzihui"},"content":"        // different housingtype -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"felixchanyy"},"content":"        editedAli \u003d new BuyerBuilder(ALI_BUYER).withHousingType(VALID_HOUSING_TYPE_BOB).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"felixchanyy"},"content":"        assertFalse(ALI_BUYER.equals(editedAli));","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"zengzihui"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"zengzihui"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"felixchanyy"},"content":"        String expected \u003d Buyer.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"felixchanyy"},"content":"                + ALI_BUYER.getName() + \", phone\u003d\" + ALI_BUYER.getPhone()","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"KhoonSun47"},"content":"                + \", email\u003d\" + ALI_BUYER.getEmail() + \", housingType\u003d\" + ALI_BUYER.getPreferredHousingType()","lastModifiedDate":"2024-04-01"},{"lineNumber":97,"author":{"gitId":"felixchanyy"},"content":"                + \", budget\u003d\" + ALI_BUYER.getBudget()","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"felixchanyy"},"content":"                + \", tags\u003d\" + ALI_BUYER.getTags() + \"}\";","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"felixchanyy"},"content":"        assertEquals(expected, ALI_BUYER.toString());","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"felixchanyy"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"redcolorbicycle":2,"zengzihui":48,"felixchanyy":48,"KhoonSun47":2,"lokidoki102":1}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.testutil.SellerBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(predicate.test(new SellerBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(predicate.test(new SellerBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(predicate.test(new SellerBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(predicate.test(new SellerBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(predicate.test(new SellerBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(predicate.test(new SellerBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(predicate.test(new SellerBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"KhoonSun47"},"content":"                .withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2024-04-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"KhoonSun47":9,"-":76}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HOUSING_TYPE_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_BUYER;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"                .withHousingType(VALID_HOUSING_TYPE_BOB).withTags(VALID_TAG_BUYER).build();","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"redcolorbicycle"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"redcolorbicycle"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"KhoonSun47"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", tags\u003d\" + ALICE.getTags() + \"}\";","lastModifiedDate":"2024-04-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"redcolorbicycle":2,"zengzihui":1,"KhoonSun47":1,"-":85,"lokidoki102":2}},{"path":"src/test/java/seedu/address/model/person/SellerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"felixchanyy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_KHOONSUN;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_SELLER;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.TypicalHouses.HOUSE2;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.TypicalHouses.HOUSE3;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE_SELLER;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.TypicalPersons.BOB_SELLER;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.testutil.TypicalPersons.KHOONSUN_SELLER;","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"zengzihui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"zengzihui"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"zengzihui"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.House;","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.testutil.SellerBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"felixchanyy"},"content":"public class SellerTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"        Seller seller \u003d new SellerBuilder().build();","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e seller.getTags().remove(0));","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"    public void isSameSeller() {","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(ALICE_SELLER.isSamePerson(ALICE_SELLER));","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(ALICE_SELLER.isSamePerson(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"        Person editedAlice \u003d new SellerBuilder(ALICE_SELLER).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"                .withTags(VALID_TAG_SELLER).build();","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(ALICE_SELLER.isSamePerson(editedAlice));","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"        editedAlice \u003d new SellerBuilder(ALICE_SELLER).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(ALICE_SELLER.isSamePerson(editedAlice));","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"redcolorbicycle"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"        Person editedBob \u003d new SellerBuilder(BOB_SELLER).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"redcolorbicycle"},"content":"        assertTrue(BOB_SELLER.isSamePerson(editedBob));","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"redcolorbicycle"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_KHOONSUN + \" \";","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"redcolorbicycle"},"content":"        editedBob \u003d new SellerBuilder(KHOONSUN_SELLER).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"redcolorbicycle"},"content":"        assertFalse(KHOONSUN_SELLER.isSamePerson(editedBob));","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"felixchanyy"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"felixchanyy"},"content":"    public void equals() {","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"        // Initialize with houses for ALICE and BOB","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"zengzihui"},"content":"        ObservableList\u003cHouse\u003e aliceHouses \u003d FXCollections.observableArrayList(HOUSE3);","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"zengzihui"},"content":"        ObservableList\u003cHouse\u003e bobHouses \u003d FXCollections.observableArrayList(HOUSE2);","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"        // Create new Seller instances with houses","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"        Seller sellerAlice \u003d new Seller(ALICE_SELLER.getName(), ALICE_SELLER.getPhone(), ALICE_SELLER.getEmail(),","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"lokidoki102"},"content":"                aliceHouses);","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"        Seller sellerBob \u003d new Seller(BOB_SELLER.getName(), BOB_SELLER.getPhone(), BOB_SELLER.getEmail(),","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"lokidoki102"},"content":"                bobHouses);","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"felixchanyy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"felixchanyy"},"content":"        assertTrue(sellerAlice.equals(sellerAlice));","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"felixchanyy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"felixchanyy"},"content":"        assertFalse(sellerAlice.equals(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"felixchanyy"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"felixchanyy"},"content":"        assertFalse(sellerAlice.equals(5));","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"KhoonSun47"},"content":"        // different seller -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"felixchanyy"},"content":"        assertFalse(sellerAlice.equals(sellerBob));","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"KhoonSun47"},"content":"        // Same details, different houses -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"KhoonSun47"},"content":"        Seller sellerAliceCloneWithDifferentHouses \u003d new Seller(ALICE_SELLER.getName(), ALICE_SELLER.getPhone(),","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"lokidoki102"},"content":"                ALICE_SELLER.getEmail(), bobHouses);","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(sellerAlice.getHouses().get(0).toString()","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"KhoonSun47"},"content":"                .equals(sellerAliceCloneWithDifferentHouses.getHouses().get(0).toString()));","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"KhoonSun47"},"content":"        // Same details, same houses -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"KhoonSun47"},"content":"        Seller sellerAliceClone \u003d new Seller(ALICE_SELLER.getName(), ALICE_SELLER.getPhone(), ALICE_SELLER.getEmail(),","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"lokidoki102"},"content":"                aliceHouses);","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(sellerAlice.getHouses().get(0).toString().equals(sellerAliceClone.getHouses().get(0).toString()));","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"KhoonSun47"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"KhoonSun47"},"content":"        String expected \u003d Seller.class.getCanonicalName()","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"KhoonSun47"},"content":"                + \"{name\u003d\" + ALICE_SELLER.getName() + \", phone\u003d\" + ALICE_SELLER.getPhone()","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"KhoonSun47"},"content":"                + \", email\u003d\" + ALICE_SELLER.getEmail()","lastModifiedDate":"2024-04-01"},{"lineNumber":101,"author":{"gitId":"KhoonSun47"},"content":"                + \", tags\u003d\" + ALICE_SELLER.getTags() + \"}\";","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"KhoonSun47"},"content":"        assertEquals(expected, ALICE_SELLER.toString());","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"felixchanyy"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"redcolorbicycle":8,"zengzihui":5,"felixchanyy":22,"KhoonSun47":63,"lokidoki102":6}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_SELLER;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE_SELLER;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.TypicalPersons.BOB_SELLER;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.testutil.SellerBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains((Person) null));","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(uniquePersonList.contains(ALICE_SELLER));","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"        uniquePersonList.add(ALICE_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(uniquePersonList.contains(ALICE_SELLER));","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"zengzihui"},"content":"        // TODO: For v1.3, add in Buyer","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"        uniquePersonList.add(ALICE_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"        Person editedAlice \u003d new SellerBuilder(ALICE_SELLER).withTags(VALID_TAG_SELLER)","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"        uniquePersonList.add(ALICE_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE_SELLER));","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE_SELLER));","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE_SELLER, null));","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE_SELLER, ALICE_SELLER));","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"KhoonSun47"},"content":"        uniquePersonList.add(ALICE_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"KhoonSun47"},"content":"        uniquePersonList.setPerson(ALICE_SELLER, ALICE_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"KhoonSun47"},"content":"        expectedUniquePersonList.add(ALICE_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"zengzihui"},"content":"        // TODO: do for buyer as well","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"KhoonSun47"},"content":"        uniquePersonList.add(ALICE_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"lokidoki102"},"content":"        Person editedAlice \u003d new SellerBuilder(ALICE_SELLER).withTags(VALID_TAG_SELLER)","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"KhoonSun47"},"content":"        uniquePersonList.setPerson(ALICE_SELLER, editedAlice);","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"KhoonSun47"},"content":"        uniquePersonList.add(ALICE_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"KhoonSun47"},"content":"        uniquePersonList.setPerson(ALICE_SELLER, BOB_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"KhoonSun47"},"content":"        expectedUniquePersonList.add(BOB_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"KhoonSun47"},"content":"        uniquePersonList.add(ALICE_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"KhoonSun47"},"content":"        uniquePersonList.add(BOB_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE_SELLER, BOB_SELLER));","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE_SELLER));","lastModifiedDate":"2024-03-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"KhoonSun47"},"content":"        uniquePersonList.add(ALICE_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":126,"author":{"gitId":"KhoonSun47"},"content":"        uniquePersonList.remove(ALICE_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"KhoonSun47"},"content":"        uniquePersonList.add(ALICE_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"KhoonSun47"},"content":"        expectedUniquePersonList.add(BOB_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"KhoonSun47"},"content":"        uniquePersonList.add(ALICE_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":153,"author":{"gitId":"KhoonSun47"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"KhoonSun47"},"content":"        expectedUniquePersonList.add(BOB_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"KhoonSun47"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE_SELLER, ALICE_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"redcolorbicycle":1,"zengzihui":2,"KhoonSun47":32,"-":138,"lokidoki102":3}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedBuyerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.storage.JsonAdaptedBuyer.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE_BUYER;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"import java.util.List;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.HousingType;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.person.Budget;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"public class JsonAdaptedBuyerTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"    private static final String INVALID_HOUSING_TYPE \u003d \"AAA\";","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"felixchanyy"},"content":"    private static final String INVALID_BUDGET \u003d \" \";","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"    private static final String VALID_NAME \u003d ALICE_BUYER.getName().toString();","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"    private static final String VALID_PHONE \u003d ALICE_BUYER.getPhone().toString();","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"    private static final String VALID_EMAIL \u003d ALICE_BUYER.getEmail().toString();","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"    private static final String VALID_HOUSING_TYPE \u003d ALICE_BUYER.getPreferredHousingType().toString();","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":"    private static final String VALID_BUDGET \u003d ALICE_BUYER.getBudget().toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d ALICE_BUYER.getTags().stream()","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_validBuyerDetails_returnsBuyer() throws Exception {","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedBuyer buyer \u003d new JsonAdaptedBuyer(ALICE_BUYER);","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"        assertEquals(ALICE_BUYER, buyer.toModelType());","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedBuyer buyer \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"felixchanyy"},"content":"                new JsonAdaptedBuyer(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_HOUSING_TYPE,","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"felixchanyy"},"content":"                        VALID_BUDGET, VALID_TAGS);","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, buyer::toModelType);","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedBuyer buyer \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"felixchanyy"},"content":"                new JsonAdaptedBuyer(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_HOUSING_TYPE,","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"felixchanyy"},"content":"                        VALID_BUDGET, VALID_TAGS);","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, buyer::toModelType);","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedBuyer buyer \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"felixchanyy"},"content":"                new JsonAdaptedBuyer(VALID_NAME, null, VALID_EMAIL, VALID_HOUSING_TYPE,","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"felixchanyy"},"content":"                        VALID_BUDGET, VALID_TAGS);","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, buyer::toModelType);","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedBuyer buyer \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"felixchanyy"},"content":"                new JsonAdaptedBuyer(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_HOUSING_TYPE,","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"felixchanyy"},"content":"                        VALID_BUDGET, VALID_TAGS);","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, buyer::toModelType);","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedBuyer buyer \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"felixchanyy"},"content":"                new JsonAdaptedBuyer(VALID_NAME, VALID_PHONE, null, VALID_HOUSING_TYPE,","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"felixchanyy"},"content":"                        VALID_BUDGET, VALID_TAGS);","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, buyer::toModelType);","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_invalidHousingType_throwsIllegalValueException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedBuyer buyer \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"felixchanyy"},"content":"                new JsonAdaptedBuyer(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_HOUSING_TYPE,","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"felixchanyy"},"content":"                        VALID_BUDGET, VALID_TAGS);","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d HousingType.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-04-01"},{"lineNumber":96,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, buyer::toModelType);","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":98,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":99,"author":{"gitId":"felixchanyy"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"felixchanyy"},"content":"    public void toModelType_invalidBudget_throwsIllegalValueException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"felixchanyy"},"content":"        JsonAdaptedBuyer buyer \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"felixchanyy"},"content":"                new JsonAdaptedBuyer(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_HOUSING_TYPE,","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"felixchanyy"},"content":"                        INVALID_BUDGET, VALID_TAGS);","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"felixchanyy"},"content":"        String expectedMessage \u003d Budget.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"felixchanyy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, buyer::toModelType);","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"felixchanyy"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"felixchanyy"},"content":"    public void toModelType_nullBudget_throwsIllegalValueException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"felixchanyy"},"content":"        JsonAdaptedBuyer buyer \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"felixchanyy"},"content":"                new JsonAdaptedBuyer(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_HOUSING_TYPE,","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"felixchanyy"},"content":"                null, VALID_TAGS);","lastModifiedDate":"2024-03-29"},{"lineNumber":113,"author":{"gitId":"felixchanyy"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Budget.class.getSimpleName());","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"felixchanyy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, buyer::toModelType);","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_nullHousingType_throwsIllegalValueException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedBuyer buyer \u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"KhoonSun47"},"content":"                new JsonAdaptedBuyer(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"KhoonSun47"},"content":"                        VALID_BUDGET, VALID_TAGS);","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, HousingType.class.getSimpleName());","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, buyer::toModelType);","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":127,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":128,"author":{"gitId":"KhoonSun47"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2024-03-27"},{"lineNumber":129,"author":{"gitId":"KhoonSun47"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2024-03-27"},{"lineNumber":130,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedBuyer buyer \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":131,"author":{"gitId":"felixchanyy"},"content":"                new JsonAdaptedBuyer(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_HOUSING_TYPE,","lastModifiedDate":"2024-03-29"},{"lineNumber":132,"author":{"gitId":"felixchanyy"},"content":"                        VALID_BUDGET, invalidTags);","lastModifiedDate":"2024-03-29"},{"lineNumber":133,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, buyer::toModelType);","lastModifiedDate":"2024-03-27"},{"lineNumber":134,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":135,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-03-27"},{"lineNumber":136,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"KhoonSun47":101,"felixchanyy":35}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedHouseTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.storage.JsonAdaptedHouse.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.Block;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.Condominium;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.Hdb;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.Landed;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.Level;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.PostalCode;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.house.Price;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.Street;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.UnitNumber;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"public class JsonAdaptedHouseTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"    private static final String INVALID_POSTAL_CODE \u003d \"Postal\";","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"    private static final String INVALID_STREET \u003d \"\";","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"    private static final String INVALID_UNIT_NUMBER \u003d \"Unit 23\";","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"felixchanyy"},"content":"    private static final String INVALID_PRICE \u003d \"-1\";","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"redcolorbicycle"},"content":"    private static final String VALID_TYPE_CONDOMINIUM \u003d \"Condominium\";","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"redcolorbicycle"},"content":"    private static final String VALID_TYPE_HDB \u003d \"Hdb\";","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"    private static final String VALID_TYPE_LANDED \u003d \"Landed\";","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"    private static final String VALID_BLOCK \u003d \"10A\";","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"    private static final String VALID_LEVEL \u003d \"15\";","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"    private static final String VALID_POSTAL_CODE \u003d \"654321\";","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"    private static final String VALID_STREET \u003d \"Orchid Street\";","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"    private static final String VALID_UNIT_NUMBER \u003d \"150\";","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":"    private static final String VALID_PRICE \u003d \"1500000\";","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"redcolorbicycle"},"content":"    public void toModelType_validCondominiumDetails_returnsCondominium() throws Exception {","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"redcolorbicycle"},"content":"        JsonAdaptedHouse house \u003d new JsonAdaptedHouse(VALID_TYPE_CONDOMINIUM, VALID_BLOCK,","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"                VALID_LEVEL, VALID_POSTAL_CODE,","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"felixchanyy"},"content":"                VALID_STREET, VALID_UNIT_NUMBER, VALID_PRICE);","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"redcolorbicycle"},"content":"        Condominium expectedHouse \u003d new Condominium(new Level(VALID_LEVEL),","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"                new PostalCode(VALID_POSTAL_CODE),","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"felixchanyy"},"content":"                new Street(VALID_STREET), new UnitNumber(VALID_UNIT_NUMBER), new Block(VALID_BLOCK),","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"felixchanyy"},"content":"                new Price(VALID_PRICE));","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"redcolorbicycle"},"content":"        assertEquals(expectedHouse, house.toModelType());","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"redcolorbicycle"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"redcolorbicycle"},"content":"    public void toModelType_validHdbDetails_returnsHdb() throws Exception {","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"redcolorbicycle"},"content":"        JsonAdaptedHouse house \u003d new JsonAdaptedHouse(VALID_TYPE_HDB, VALID_BLOCK,","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"redcolorbicycle"},"content":"                VALID_LEVEL, VALID_POSTAL_CODE,","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"felixchanyy"},"content":"                VALID_STREET, VALID_UNIT_NUMBER, VALID_PRICE);","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"redcolorbicycle"},"content":"        Hdb expectedHouse \u003d new Hdb(new Level(VALID_LEVEL),","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"redcolorbicycle"},"content":"                new PostalCode(VALID_POSTAL_CODE),","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"felixchanyy"},"content":"                new Street(VALID_STREET), new UnitNumber(VALID_UNIT_NUMBER), new Block(VALID_BLOCK),","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"felixchanyy"},"content":"                new Price(VALID_PRICE));","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"        assertEquals(expectedHouse, house.toModelType());","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"redcolorbicycle"},"content":"    public void toModelType_validLandedDetails_returnsLanded() throws Exception {","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedHouse house \u003d new JsonAdaptedHouse(VALID_TYPE_LANDED, null, null,","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"felixchanyy"},"content":"                VALID_POSTAL_CODE, VALID_STREET, VALID_UNIT_NUMBER, VALID_PRICE);","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"        Landed expectedHouse \u003d new Landed(new UnitNumber(VALID_UNIT_NUMBER),","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"felixchanyy"},"content":"                new PostalCode(VALID_POSTAL_CODE), new Street(VALID_STREET), new Price(VALID_PRICE));","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"        assertEquals(expectedHouse, house.toModelType());","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_nullPostalCode_throwsIllegalValueException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"redcolorbicycle"},"content":"        JsonAdaptedHouse house \u003d new JsonAdaptedHouse(\"Hdb\", VALID_BLOCK, VALID_LEVEL,","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"felixchanyy"},"content":"                null, VALID_STREET, VALID_UNIT_NUMBER, VALID_PRICE);","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedHouse.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"KhoonSun47"},"content":"                PostalCode.class.getSimpleName());","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, house::toModelType, expectedMessage);","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_invalidPostalCode_throwsIllegalValueException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"redcolorbicycle"},"content":"        JsonAdaptedHouse house \u003d new JsonAdaptedHouse(\"Hdb\", VALID_BLOCK, VALID_LEVEL,","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"felixchanyy"},"content":"                INVALID_POSTAL_CODE, VALID_STREET, VALID_UNIT_NUMBER, VALID_PRICE);","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedHouse.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"KhoonSun47"},"content":"                PostalCode.class.getSimpleName());","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, house::toModelType, expectedMessage);","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_nullStreet_throwsIllegalValueException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"redcolorbicycle"},"content":"        JsonAdaptedHouse house \u003d new JsonAdaptedHouse(\"Hdb\", VALID_BLOCK, VALID_LEVEL,","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"felixchanyy"},"content":"                VALID_POSTAL_CODE, null, VALID_UNIT_NUMBER, VALID_PRICE);","lastModifiedDate":"2024-04-01"},{"lineNumber":90,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedHouse.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"KhoonSun47"},"content":"                Street.class.getSimpleName());","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, house::toModelType, expectedMessage);","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":96,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_invalidStreet_throwsIllegalValueException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"redcolorbicycle"},"content":"        JsonAdaptedHouse house \u003d new JsonAdaptedHouse(\"Hdb\", VALID_BLOCK, VALID_LEVEL,","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"felixchanyy"},"content":"                VALID_POSTAL_CODE, INVALID_STREET, VALID_UNIT_NUMBER, VALID_PRICE);","lastModifiedDate":"2024-04-01"},{"lineNumber":99,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedHouse.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-27"},{"lineNumber":100,"author":{"gitId":"KhoonSun47"},"content":"                Street.class.getSimpleName());","lastModifiedDate":"2024-03-27"},{"lineNumber":101,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, house::toModelType, expectedMessage);","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":103,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":105,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_nullUnitNumber_throwsIllegalValueException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"redcolorbicycle"},"content":"        JsonAdaptedHouse house \u003d new JsonAdaptedHouse(\"Hdb\", VALID_BLOCK, VALID_LEVEL,","lastModifiedDate":"2024-03-30"},{"lineNumber":107,"author":{"gitId":"felixchanyy"},"content":"                VALID_POSTAL_CODE, VALID_STREET, null, VALID_PRICE);","lastModifiedDate":"2024-04-01"},{"lineNumber":108,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedHouse.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-27"},{"lineNumber":109,"author":{"gitId":"KhoonSun47"},"content":"                UnitNumber.class.getSimpleName());","lastModifiedDate":"2024-03-27"},{"lineNumber":110,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, house::toModelType, expectedMessage);","lastModifiedDate":"2024-03-27"},{"lineNumber":111,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":112,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":113,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":114,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_invalidUnitNumber_throwsIllegalValueException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":115,"author":{"gitId":"redcolorbicycle"},"content":"        JsonAdaptedHouse house \u003d new JsonAdaptedHouse(\"Hdb\", VALID_BLOCK, VALID_LEVEL,","lastModifiedDate":"2024-03-30"},{"lineNumber":116,"author":{"gitId":"felixchanyy"},"content":"                VALID_POSTAL_CODE, VALID_STREET, INVALID_UNIT_NUMBER, VALID_PRICE);","lastModifiedDate":"2024-04-01"},{"lineNumber":117,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d UnitNumber.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-27"},{"lineNumber":118,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, house::toModelType, expectedMessage);","lastModifiedDate":"2024-03-27"},{"lineNumber":119,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":120,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":121,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":122,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_unknownType_throwsIllegalValueException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":123,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedHouse house \u003d new JsonAdaptedHouse(\"Treehouse\", VALID_BLOCK, VALID_LEVEL,","lastModifiedDate":"2024-03-27"},{"lineNumber":124,"author":{"gitId":"felixchanyy"},"content":"                VALID_POSTAL_CODE, VALID_STREET, VALID_UNIT_NUMBER, VALID_PRICE);","lastModifiedDate":"2024-04-01"},{"lineNumber":125,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d \"Unknown House Type\";","lastModifiedDate":"2024-03-27"},{"lineNumber":126,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, house::toModelType, expectedMessage);","lastModifiedDate":"2024-03-27"},{"lineNumber":127,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":128,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":129,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":130,"author":{"gitId":"redcolorbicycle"},"content":"    public void toModelType_condominiumNoBlockWithLevel_returnsCondominium() throws Exception {","lastModifiedDate":"2024-03-30"},{"lineNumber":131,"author":{"gitId":"redcolorbicycle"},"content":"        JsonAdaptedHouse house \u003d new JsonAdaptedHouse(VALID_TYPE_CONDOMINIUM, null, VALID_LEVEL,","lastModifiedDate":"2024-03-30"},{"lineNumber":132,"author":{"gitId":"felixchanyy"},"content":"                VALID_POSTAL_CODE, VALID_STREET, VALID_UNIT_NUMBER, VALID_PRICE);","lastModifiedDate":"2024-04-01"},{"lineNumber":133,"author":{"gitId":"redcolorbicycle"},"content":"        Condominium expectedHouse \u003d new Condominium(new Level(VALID_LEVEL), new PostalCode(VALID_POSTAL_CODE),","lastModifiedDate":"2024-03-30"},{"lineNumber":134,"author":{"gitId":"felixchanyy"},"content":"                new Street(VALID_STREET), new UnitNumber(VALID_UNIT_NUMBER), new Price(VALID_PRICE));","lastModifiedDate":"2024-04-01"},{"lineNumber":135,"author":{"gitId":"KhoonSun47"},"content":"        assertEquals(expectedHouse, house.toModelType());","lastModifiedDate":"2024-03-21"},{"lineNumber":136,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":137,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":138,"author":{"gitId":"felixchanyy"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":139,"author":{"gitId":"felixchanyy"},"content":"    public void toModelType_invalidPrice_throwsIllegalValueException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":140,"author":{"gitId":"felixchanyy"},"content":"        JsonAdaptedHouse house \u003d new JsonAdaptedHouse(VALID_TYPE_CONDOMINIUM, VALID_BLOCK,","lastModifiedDate":"2024-04-01"},{"lineNumber":141,"author":{"gitId":"felixchanyy"},"content":"                VALID_LEVEL, VALID_POSTAL_CODE,","lastModifiedDate":"2024-04-01"},{"lineNumber":142,"author":{"gitId":"felixchanyy"},"content":"                VALID_STREET, VALID_UNIT_NUMBER, INVALID_PRICE);","lastModifiedDate":"2024-04-01"},{"lineNumber":143,"author":{"gitId":"felixchanyy"},"content":"        String expectedMessage \u003d Price.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-04-01"},{"lineNumber":144,"author":{"gitId":"felixchanyy"},"content":"        assertThrows(IllegalValueException.class, house::toModelType, expectedMessage);","lastModifiedDate":"2024-04-01"},{"lineNumber":145,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":146,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":147,"author":{"gitId":"felixchanyy"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":148,"author":{"gitId":"felixchanyy"},"content":"    public void toModelType_nullPrice_throwsIllegalValueException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":149,"author":{"gitId":"felixchanyy"},"content":"        JsonAdaptedHouse house \u003d new JsonAdaptedHouse(VALID_TYPE_CONDOMINIUM, VALID_BLOCK,","lastModifiedDate":"2024-04-01"},{"lineNumber":150,"author":{"gitId":"felixchanyy"},"content":"                VALID_LEVEL, VALID_POSTAL_CODE,","lastModifiedDate":"2024-04-01"},{"lineNumber":151,"author":{"gitId":"felixchanyy"},"content":"                VALID_STREET, VALID_UNIT_NUMBER, null);","lastModifiedDate":"2024-04-01"},{"lineNumber":152,"author":{"gitId":"felixchanyy"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Price.class.getSimpleName());","lastModifiedDate":"2024-04-01"},{"lineNumber":153,"author":{"gitId":"felixchanyy"},"content":"        assertThrows(IllegalValueException.class, house::toModelType, expectedMessage);","lastModifiedDate":"2024-04-01"},{"lineNumber":154,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":155,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"redcolorbicycle":26,"KhoonSun47":90,"felixchanyy":39}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedSellerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.storage.JsonAdaptedSeller.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.TypicalPersons.BOB_SELLER;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"import java.util.List;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"public class JsonAdaptedSellerTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"    private static final String VALID_NAME \u003d BOB_SELLER.getName().toString();","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"    private static final String VALID_PHONE \u003d BOB_SELLER.getPhone().toString();","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"    private static final String VALID_EMAIL \u003d BOB_SELLER.getEmail().toString();","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"    private static final List\u003cJsonAdaptedHouse\u003e VALID_HOUSES \u003d BOB_SELLER.getHouses().stream()","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"            .map(JsonAdaptedHouse::new)","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BOB_SELLER.getTags().stream()","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_validSellerDetails_returnsSeller() throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedSeller seller \u003d new JsonAdaptedSeller(BOB_SELLER);","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"        assertEquals(BOB_SELLER, seller.toModelType());","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedSeller seller \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"                new JsonAdaptedSeller(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_HOUSES, VALID_TAGS);","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, seller::toModelType);","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedSeller seller \u003d new JsonAdaptedSeller(null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"                VALID_HOUSES, VALID_TAGS);","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, seller::toModelType);","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedSeller seller \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"                new JsonAdaptedSeller(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_HOUSES, VALID_TAGS);","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, seller::toModelType);","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedSeller seller \u003d new JsonAdaptedSeller(VALID_NAME, null, VALID_EMAIL, VALID_HOUSES, VALID_TAGS);","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, seller::toModelType);","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedSeller seller \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"KhoonSun47"},"content":"                new JsonAdaptedSeller(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_HOUSES, VALID_TAGS);","lastModifiedDate":"2024-04-01"},{"lineNumber":76,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, seller::toModelType);","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedSeller seller \u003d new JsonAdaptedSeller(VALID_NAME, VALID_PHONE, null, VALID_HOUSES, VALID_TAGS);","lastModifiedDate":"2024-04-01"},{"lineNumber":83,"author":{"gitId":"KhoonSun47"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, seller::toModelType);","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"KhoonSun47"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"KhoonSun47"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedSeller seller \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"KhoonSun47"},"content":"                new JsonAdaptedSeller(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_HOUSES, invalidTags);","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, seller::toModelType);","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_invalidHouses_throwsIllegalValueException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"KhoonSun47"},"content":"        List\u003cJsonAdaptedHouse\u003e invalidHouses \u003d new ArrayList\u003c\u003e(VALID_HOUSES);","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"redcolorbicycle"},"content":"        invalidHouses.add(new JsonAdaptedHouse(\"InvalidType\", \"InvalidBlock\", \"InvalidLevel\",","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"felixchanyy"},"content":"                \"123456\", \"Maple Street\", \"120A\", \"12300000\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":101,"author":{"gitId":"KhoonSun47"},"content":"        JsonAdaptedSeller seller \u003d new JsonAdaptedSeller(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-04-01"},{"lineNumber":102,"author":{"gitId":"KhoonSun47"},"content":"                invalidHouses, VALID_TAGS);","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"KhoonSun47"},"content":"        assertThrows(IllegalValueException.class, seller::toModelType);","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"redcolorbicycle":1,"KhoonSun47":103,"felixchanyy":1}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.testutil.TypicalPersons.ALI_BUYER;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.testutil.TypicalPersons.ZURI_BUYER;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"import static seedu.address.testutil.TypicalPersons.ZYRA_BUYER;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"lokidoki102"},"content":"        original.addPerson(ZURI_BUYER);","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"lokidoki102"},"content":"        original.addPerson(ALI_BUYER);","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"lokidoki102"},"content":"        original.removePerson(ALI_BUYER);","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"lokidoki102"},"content":"        original.addPerson(ZYRA_BUYER);","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":104,"lokidoki102":7}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"import java.util.List;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"    public void toModelType_sortedByName_success() throws Exception {","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"        List\u003cPerson\u003e personList \u003d new ArrayList\u003c\u003e(addressBookFromFile.getPersonList());","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"        // Verify the list is sorted alphabetically by name","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"        for (int i \u003d 0; i \u003c personList.size() - 1; i++) {","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"            String currentName \u003d personList.get(i).getName().fullName;","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"            String nextName \u003d personList.get(i + 1).getName().fullName;","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"            assertTrue(currentName.compareToIgnoreCase(nextName) \u003c\u003d 0);","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"KhoonSun47":18,"-":47}},{"path":"src/test/java/seedu/address/testutil/BuyerBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zengzihui"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.HousingType;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.person.Budget;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.person.Buyer;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"zengzihui"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"zengzihui"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"zengzihui"},"content":" * A Utility class to help with building Buyer objects.","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"zengzihui"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"zengzihui"},"content":"public class BuyerBuilder {","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"zengzihui"},"content":"    public static final String DEFAULT_NAME \u003d \"James Lim\";","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"zengzihui"},"content":"    public static final String DEFAULT_PHONE \u003d \"93840172\";","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"zengzihui"},"content":"    public static final String DEFAULT_EMAIL \u003d \"james@gmail.com\";","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"    public static final String DEFAULT_BUDGET \u003d \"666000\";","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"redcolorbicycle"},"content":"    public static final String DEFAULT_HOUSING_TYPE \u003d \"Hdb\";","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"zengzihui"},"content":"    private Name name;","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"zengzihui"},"content":"    private Phone phone;","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"zengzihui"},"content":"    private Email email;","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"    private HousingType preferredHousingType;","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"felixchanyy"},"content":"    private Budget budget;","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"zengzihui"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"zengzihui"},"content":"     * Creates a {@code BuyerBuilder} with the default information.","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"zengzihui"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"zengzihui"},"content":"    public BuyerBuilder() {","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"zengzihui"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"zengzihui"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"zengzihui"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"        preferredHousingType \u003d new HousingType(DEFAULT_HOUSING_TYPE);","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"felixchanyy"},"content":"        budget \u003d new Budget(DEFAULT_BUDGET);","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"zengzihui"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"zengzihui"},"content":"     * Initializes the BuyerBuilder with the data of {@code personToCopy}","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"zengzihui"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"    public BuyerBuilder(Buyer personToCopy) {","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"zengzihui"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"zengzihui"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"zengzihui"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"        preferredHousingType \u003d personToCopy.getPreferredHousingType();","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"felixchanyy"},"content":"        budget \u003d personToCopy.getBudget();","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"zengzihui"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"     * Sets the {@code Name} of the {@code Buyer} that we are building.","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"zengzihui"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"zengzihui"},"content":"    public BuyerBuilder withName(String name) {","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"zengzihui"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"zengzihui"},"content":"        return this;","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"zengzihui"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"     * Sets the {@code Phone} of the {@code Buyer} that we are building.","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"zengzihui"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"zengzihui"},"content":"    public BuyerBuilder withPhone(String phone) {","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"zengzihui"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"zengzihui"},"content":"        return this;","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"zengzihui"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"     * Sets the {@code Email} of the {@code Buyer} that we are building.","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"zengzihui"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"zengzihui"},"content":"    public BuyerBuilder withEmail(String email) {","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"zengzihui"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"zengzihui"},"content":"        return this;","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"zengzihui"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"KhoonSun47"},"content":"     * Sets the {@code Address} of the {@code Buyer} that we are building.","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"zengzihui"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"zengzihui"},"content":"    public BuyerBuilder withHousingType(String housingType) {","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"KhoonSun47"},"content":"        this.preferredHousingType \u003d new HousingType(housingType);","lastModifiedDate":"2024-04-01"},{"lineNumber":78,"author":{"gitId":"zengzihui"},"content":"        return this;","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"felixchanyy"},"content":"     * Sets the {@code Budget} of the {@code Buyer} that we are building.","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"felixchanyy"},"content":"    public BuyerBuilder withBudget(String budget) {","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"felixchanyy"},"content":"        this.budget \u003d new Budget(budget.trim());","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"felixchanyy"},"content":"        return this;","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"KhoonSun47"},"content":"    public Buyer build() {","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"lokidoki102"},"content":"        return new Buyer(name, phone, email, budget, preferredHousingType);","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"zengzihui"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"zengzihui"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"redcolorbicycle":2,"zengzihui":66,"felixchanyy":13,"KhoonSun47":10,"lokidoki102":1}},{"path":"src/test/java/seedu/address/testutil/EditBuyerDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.logic.commands.EditBuyerCommand.EditBuyerDescriptor;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.house.HousingType;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.person.Buyer;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":" * A utility class to help with building EditBuyerDescriptor objects.","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"public class EditBuyerDescriptorBuilder {","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"    private EditBuyerDescriptor descriptor;","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"    public EditBuyerDescriptorBuilder() {","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"        this.descriptor \u003d new EditBuyerDescriptor();","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"    public EditBuyerDescriptorBuilder(EditBuyerDescriptor descriptor) {","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"        this.descriptor \u003d new EditBuyerDescriptor(descriptor);","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"     * Returns an {@code EditBuyerDescriptor} with fields containing {@code buyer}\u0027s details","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"    public EditBuyerDescriptorBuilder(Buyer buyer) {","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"        this.descriptor \u003d new EditBuyerDescriptor();","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"        this.descriptor.setName(buyer.getName());","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"        this.descriptor.setPhone(buyer.getPhone());","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"        this.descriptor.setEmail(buyer.getEmail());","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"        this.descriptor.setHousingType(buyer.getPreferredHousingType());","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"        this.descriptor.setBudget(buyer.getBudget());","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"     * Sets the {@code Name} of the {@code EditBuyerDescriptor} that we are building.","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"    public EditBuyerDescriptorBuilder withName(String name) {","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"        this.descriptor.setName(new Name(name));","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"        return this;","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"     * Sets the {@code Phone} of the {@code EditBuyerDescriptor} that we are building.","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"    public EditBuyerDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"        this.descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"        return this;","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"     * Sets the {@code Email} of the {@code EditBuyerDescriptor} that we are building.","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"lokidoki102"},"content":"    public EditBuyerDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"lokidoki102"},"content":"        this.descriptor.setEmail(new Email(email));","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"lokidoki102"},"content":"        return this;","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"lokidoki102"},"content":"     * Sets the Housing Type of the {@code EditBuyerDescriptor} that we are building.","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"lokidoki102"},"content":"    public EditBuyerDescriptorBuilder withHousingType(String housingType) {","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"lokidoki102"},"content":"        this.descriptor.setHousingType(new HousingType(housingType));","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"lokidoki102"},"content":"        return this;","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"lokidoki102"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditBuyerDescriptor}","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"lokidoki102"},"content":"     * that we are building.","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"lokidoki102"},"content":"    public EditBuyerDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"lokidoki102"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"lokidoki102"},"content":"        this.descriptor.setTags(tagSet);","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"lokidoki102"},"content":"        return this;","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"lokidoki102"},"content":"    public EditBuyerDescriptor build() {","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"lokidoki102"},"content":"        return this.descriptor;","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"KhoonSun47":1,"lokidoki102":87}},{"path":"src/test/java/seedu/address/testutil/EditSellerDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.logic.commands.EditSellerCommand.EditSellerDescriptor;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"public class EditSellerDescriptorBuilder {","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"    private EditSellerDescriptor descriptor;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"    public EditSellerDescriptorBuilder() {","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"        descriptor \u003d new EditSellerDescriptor();","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"    public EditSellerDescriptorBuilder(EditSellerDescriptor descriptor) {","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"        this.descriptor \u003d new EditSellerDescriptor(descriptor);","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"    public EditSellerDescriptorBuilder(Person person) {","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"        descriptor \u003d new EditSellerDescriptor();","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"    public EditSellerDescriptorBuilder withName(String name) {","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"    public EditSellerDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"lokidoki102"},"content":"    public EditSellerDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"lokidoki102"},"content":"    public EditSellerDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"lokidoki102"},"content":"    public EditSellerDescriptor build() {","lastModifiedDate":"2024-04-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"-":63,"lokidoki102":14}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":13,"author":{"gitId":"zengzihui"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"zengzihui"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"zengzihui"},"content":"    public PersonBuilder withHousingType(String housingType) {","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"lokidoki102"},"content":"        return new Person(name, phone, email);","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"zengzihui":3,"-":86,"lokidoki102":1}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BLOCK;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BUDGET;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOUSING_TYPE;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LEVEL;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSTALCODE;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STREET;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UNITNUMBER;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.logic.commands.AddBuyerCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.logic.commands.AddSellerCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.logic.commands.EditBuyerCommand.EditBuyerDescriptor;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"import seedu.address.logic.commands.EditSellerCommand.EditSellerDescriptor;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.Condominium;","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.Hdb;","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.House;","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.person.Buyer;","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Seller;","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"zengzihui"},"content":"     * Returns an add command string for adding the {@code buyer}.","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"felixchanyy"},"content":"    public static String getAddBuyerCommand(Buyer buyer) {","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"felixchanyy"},"content":"        return AddBuyerCommand.COMMAND_WORD + \" \" + getBuyerDetails(buyer);","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"     * Returns an add seller command string for adding the {@code seller}.","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"    public static String getAddSellerCommand(Seller seller) {","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"        return AddSellerCommand.COMMAND_WORD + \" \" + getSellerDetails(seller);","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"felixchanyy"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"felixchanyy"},"content":"     * Returns the part of command string for the given {@code buyer}\u0027s details.","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"felixchanyy"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"felixchanyy"},"content":"    public static String getBuyerDetails(Buyer buyer) {","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"felixchanyy"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"felixchanyy"},"content":"        sb.append(PREFIX_NAME + buyer.getName().fullName + \" \");","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"felixchanyy"},"content":"        sb.append(PREFIX_PHONE + buyer.getPhone().value + \" \");","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"felixchanyy"},"content":"        sb.append(PREFIX_EMAIL + buyer.getEmail().value + \" \");","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"        sb.append(PREFIX_HOUSING_TYPE + buyer.getPreferredHousingType().value + \" \");","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"felixchanyy"},"content":"        sb.append(PREFIX_BUDGET + buyer.getBudget().value + \" \");","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"felixchanyy"},"content":"        return sb.toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":76,"author":{"gitId":"KhoonSun47"},"content":"     * Returns the part of the command string for the given {@code seller}\u0027s details, including houses.","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"KhoonSun47"},"content":"    public static String getSellerDetails(Seller seller) {","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"KhoonSun47"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"KhoonSun47"},"content":"        sb.append(PREFIX_NAME + seller.getName().fullName + \" \");","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"KhoonSun47"},"content":"        sb.append(PREFIX_PHONE + seller.getPhone().value + \" \");","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"KhoonSun47"},"content":"        sb.append(PREFIX_EMAIL + seller.getEmail().value + \" \");","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"KhoonSun47"},"content":"        // Append house details","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"KhoonSun47"},"content":"        for (House house : seller.getHouses()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"KhoonSun47"},"content":"            sb.append(PREFIX_STREET + house.getStreet().value + \" \");","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"redcolorbicycle"},"content":"            if (house instanceof Hdb) {","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"redcolorbicycle"},"content":"                Hdb hdb \u003d (Hdb) house;","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"redcolorbicycle"},"content":"                if (hdb.getBlock() !\u003d null) {","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"redcolorbicycle"},"content":"                    sb.append(PREFIX_BLOCK).append(hdb.getBlock().value).append(\" \");","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"KhoonSun47"},"content":"                }","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"redcolorbicycle"},"content":"                if (hdb.getLevel() !\u003d null) {","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"redcolorbicycle"},"content":"                    sb.append(PREFIX_LEVEL).append(hdb.getLevel().value).append(\" \");","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"redcolorbicycle"},"content":"                }","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"redcolorbicycle"},"content":"            } else if (house instanceof Condominium) {","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"redcolorbicycle"},"content":"                Condominium condominium \u003d (Condominium) house;","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"redcolorbicycle"},"content":"                if (condominium.getBlock() !\u003d null) {","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"redcolorbicycle"},"content":"                    sb.append(PREFIX_BLOCK).append(condominium.getBlock().value).append(\" \");","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"redcolorbicycle"},"content":"                }","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"redcolorbicycle"},"content":"                if (condominium.getLevel() !\u003d null) {","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"redcolorbicycle"},"content":"                    sb.append(PREFIX_LEVEL).append(condominium.getLevel().value).append(\" \");","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"KhoonSun47"},"content":"                }","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"KhoonSun47"},"content":"            }","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"KhoonSun47"},"content":"            sb.append(PREFIX_UNITNUMBER + house.getUnitNumber().value + \" \");","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"KhoonSun47"},"content":"            sb.append(PREFIX_POSTALCODE + house.getPostalCode().value + \" \");","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"KhoonSun47"},"content":"        seller.getTags().stream().forEach(","lastModifiedDate":"2024-03-27"},{"lineNumber":108,"author":{"gitId":"KhoonSun47"},"content":"                s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2024-03-27"},{"lineNumber":109,"author":{"gitId":"KhoonSun47"},"content":"        );","lastModifiedDate":"2024-03-27"},{"lineNumber":110,"author":{"gitId":"KhoonSun47"},"content":"        return sb.toString().trim();","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":112,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":116,"author":{"gitId":"lokidoki102"},"content":"    public static String getEditSellerDescriptorDetails(EditSellerDescriptor descriptor) {","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":131,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":132,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":133,"author":{"gitId":"lokidoki102"},"content":"     * Returns the part of command string for the given {@code EditBuyerDescriptor}\u0027s details.","lastModifiedDate":"2024-03-29"},{"lineNumber":134,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":135,"author":{"gitId":"lokidoki102"},"content":"    public static String getEditBuyerDescriptorDetails(EditBuyerDescriptor descriptor) {","lastModifiedDate":"2024-03-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-03-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2024-03-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2024-03-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2024-03-29"},{"lineNumber":140,"author":{"gitId":"lokidoki102"},"content":"        descriptor.getHousingType().ifPresent(housingType -\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":141,"author":{"gitId":"lokidoki102"},"content":"                sb.append(PREFIX_HOUSING_TYPE).append(housingType).append(\" \"));","lastModifiedDate":"2024-03-29"},{"lineNumber":142,"author":{"gitId":"lokidoki102"},"content":"        descriptor.getBudget().ifPresent(budget -\u003e sb.append(PREFIX_BUDGET).append(budget.value).append(\" \"));","lastModifiedDate":"2024-03-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2024-03-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2024-03-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2024-03-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2024-03-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-03-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"redcolorbicycle":17,"zengzihui":2,"KhoonSun47":37,"felixchanyy":16,"-":70,"lokidoki102":11}},{"path":"src/test/java/seedu/address/testutil/SellerBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"zengzihui"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"zengzihui"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.House;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Seller;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":" * A utility class to help with building Seller objects.","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"public class SellerBuilder {","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmaidasdasl.com\";","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"    public static final String DEFAULT_SELLER_TAG \u003d \"Seller\";","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"    private Name name;","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"    private Phone phone;","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"    private Email email;","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"zengzihui"},"content":"    private ObservableList\u003cHouse\u003e houses;","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"     * Creates a {@code SellerBuilder} with the default details.","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"    public SellerBuilder() {","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"zengzihui"},"content":"        houses \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"        tags.add(new Tag(DEFAULT_SELLER_TAG));","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"     * Initializes the SellerBuilder with the data of {@code sellerToCopy}.","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"    public SellerBuilder(Seller sellerToCopy) {","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"        name \u003d sellerToCopy.getName();","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"        phone \u003d sellerToCopy.getPhone();","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"        email \u003d sellerToCopy.getEmail();","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"zengzihui"},"content":"        houses \u003d FXCollections.observableArrayList(sellerToCopy.getHouses());","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"        tags \u003d new HashSet\u003c\u003e(sellerToCopy.getTags());","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"     * Sets the {@code Name} of the {@code Seller} that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"    public SellerBuilder withName(String name) {","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"        return this;","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"     * Sets the {@code Phone} of the {@code Seller} that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"    public SellerBuilder withPhone(String phone) {","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"        return this;","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"KhoonSun47"},"content":"     * Sets the {@code Email} of the {@code Seller} that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"KhoonSun47"},"content":"    public SellerBuilder withEmail(String email) {","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"KhoonSun47"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"KhoonSun47"},"content":"        return this;","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"KhoonSun47"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Seller} that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"KhoonSun47"},"content":"    public SellerBuilder withTags(String... tags) {","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"KhoonSun47"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"KhoonSun47"},"content":"        return this;","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"KhoonSun47"},"content":"     * Sets the {@code houses} of the {@code Seller} that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"KhoonSun47"},"content":"    public SellerBuilder withHouses(House... houses) {","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"zengzihui"},"content":"        this.houses \u003d FXCollections.observableArrayList(houses);","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"KhoonSun47"},"content":"        return this;","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"KhoonSun47"},"content":"    public Seller build() {","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"lokidoki102"},"content":"        return new Seller(name, phone, email, houses);","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"zengzihui":6,"KhoonSun47":88,"lokidoki102":4}},{"path":"src/test/java/seedu/address/testutil/TypicalHouses.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.Block;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.Condominium;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.Hdb;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.Landed;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.Level;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.PostalCode;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.house.Price;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.Street;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.UnitNumber;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":" * A utility class containing a list of {@code House} objects to be used in tests.","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"public class TypicalHouses {","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"    // Landed house example: This will only be used when house have validation","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"    public static final Landed HOUSE1 \u003d new Landed(","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"            new UnitNumber(\"1\"),","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"            new PostalCode(\"123456\"),","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"felixchanyy"},"content":"            new Street(\"Acacia Avenue\"),","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"felixchanyy"},"content":"            new Price(\"9999999\")","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"    );","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"    // Non-landed house example (e.g., HDB Flat)","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":"    public static final Hdb HOUSE2 \u003d new Hdb(","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"            new Level(\"10\"),","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"            new PostalCode(\"654321\"),","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"            new Street(\"Orchard Road\"),","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"redcolorbicycle"},"content":"            new UnitNumber(\"38\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"felixchanyy"},"content":"            new Block(\"99B\"),","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":"            new Price(\"8888888\")","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"    );","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"    // Non-landed house example (e.g., Condominium)","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"redcolorbicycle"},"content":"    public static final Condominium HOUSE3 \u003d new Condominium(","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"            new Level(\"11\"),","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"            new PostalCode(\"654321\"),","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"            new Street(\"Toa Payoh Road\"),","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"redcolorbicycle"},"content":"            new UnitNumber(\"38\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"felixchanyy"},"content":"            new Block(\"99A\"),","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"felixchanyy"},"content":"            new Price(\"7777777\")","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"    );","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"redcolorbicycle":6,"KhoonSun47":32,"felixchanyy":7}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BUDGET_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BUDGET_BEN;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BUDGET_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BEN;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_KHOONSUN;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HOUSING_TYPE_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HOUSING_TYPE_BEN;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HOUSING_TYPE_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"zengzihui"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BEN;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_KHOONSUN;","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BEN;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_KHOONSUN;","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"import static seedu.address.testutil.TypicalHouses.HOUSE1;","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.TypicalHouses.HOUSE2;","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"import static seedu.address.testutil.TypicalHouses.HOUSE3;","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.Block;","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.Hdb;","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"redcolorbicycle"},"content":"import seedu.address.model.house.Landed;","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.Level;","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.PostalCode;","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"felixchanyy"},"content":"import seedu.address.model.house.Price;","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.Street;","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.house.UnitNumber;","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Buyer;","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"import seedu.address.model.person.Seller;","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"    public static final Seller ALICE_SELLER \u003d new SellerBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"redcolorbicycle"},"content":"            .withPhone(\"94351253\").withHouses(new Hdb(new Level(\"15\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"felixchanyy"},"content":"                    new PostalCode(\"654321\"), new Street(\"Orchard Street\"), new UnitNumber(\"150\"), new Block(\"10A\"),","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"felixchanyy"},"content":"                    new Price(\"123456\")))","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"            .build();","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"    public static final Seller BENSON_SELLER \u003d new SellerBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"            .withEmail(\"johnd@example.com\")","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"redcolorbicycle"},"content":"            .withPhone(\"94351253\").withHouses(new Hdb(new Level(\"16\"), new PostalCode(\"654321\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"felixchanyy"},"content":"                    new Street(\"Orchard Street\"), new UnitNumber(\"150\"), new Block(\"9A\"), new Price(\"789101112\")))","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"            .build();","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"    public static final Seller CARL_SELLER \u003d new SellerBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"            .withEmail(\"heinz@example.com\").withHouses(new Hdb(new Level(\"17\"),","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"felixchanyy"},"content":"                    new PostalCode(\"654322\"), new Street(\"Orchard Street 1\"), new UnitNumber(\"150\"), new Block(\"10B\"),","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"felixchanyy"},"content":"                    new Price(\"43146141\")))","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"lokidoki102"},"content":"            .build();","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"    public static final Seller DANIEL_SELLER \u003d new SellerBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"redcolorbicycle"},"content":"            .withEmail(\"cornelia@example.com\").withHouses(new Hdb(new Level(\"18\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"                    new PostalCode(\"654323\"), new Street(\"Orchard Street 2\"),","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"lokidoki102"},"content":"                    new UnitNumber(\"150\"), new Block(\"10C\"), new Price(\"3123123\")))","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"lokidoki102"},"content":"            .build();","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"    public static final Seller ELLE_SELLER \u003d new SellerBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"redcolorbicycle"},"content":"            .withEmail(\"heinz@example.com\").withHouses(new Hdb(new Level(\"19\"), new PostalCode(\"654324\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"felixchanyy"},"content":"                    new Street(\"Orchard Street 3\"), new UnitNumber(\"150\"), new Block(\"10D\"),","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"lokidoki102"},"content":"                    new Price(\"3453465\")))","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"lokidoki102"},"content":"            .build();","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"KhoonSun47"},"content":"    public static final Seller FIONA_SELLER \u003d new SellerBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"redcolorbicycle"},"content":"            .withEmail(\"heinz@example.com\").withHouses(new Hdb(new Level(\"20\"), new PostalCode(\"654325\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"felixchanyy"},"content":"                    new Street(\"Orchard Street 4\"), new UnitNumber(\"150\"), new Block(\"10E\"),","lastModifiedDate":"2024-04-01"},{"lineNumber":78,"author":{"gitId":"lokidoki102"},"content":"                    new Price(\"55555555\")))","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"lokidoki102"},"content":"            .build();","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"KhoonSun47"},"content":"    public static final Seller GEORGE_SELLER \u003d new SellerBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"redcolorbicycle"},"content":"            .withEmail(\"heinz@example.com\").withHouses(new Landed(new UnitNumber(\"150\"), new PostalCode(\"654326\"),","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"lokidoki102"},"content":"                    new Street(\"Orchard Street 5\"), new Price(\"8945939\")))","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"lokidoki102"},"content":"            .build();","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"KhoonSun47"},"content":"    public static final Buyer ALICE_BUYER \u003d new BuyerBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"lokidoki102"},"content":"            .withEmail(\"heinz@example.com\").withBudget(\"333000\").withHousingType(\"Hdb\")","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"lokidoki102"},"content":"            .build();","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":89,"author":{"gitId":"KhoonSun47"},"content":"    public static final Seller HOON_SELLER \u003d new SellerBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"redcolorbicycle"},"content":"            .withEmail(\"stefan@example.com\").withEmail(\"heinz@example.com\").withHouses(new Hdb(new Level(\"22\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"redcolorbicycle"},"content":"                    new PostalCode(\"654327\"), new Street(\"Orchard Street 6\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"lokidoki102"},"content":"                    new UnitNumber(\"150\"), new Block(\"3\"), new Price(\"7777777\")))","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"lokidoki102"},"content":"            .build();","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"KhoonSun47"},"content":"    public static final Seller IDA_SELLER \u003d new SellerBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"redcolorbicycle"},"content":"            .withEmail(\"hans@example.com\").withEmail(\"heinz@example.com\").withHouses(new Hdb(new Level(\"23\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"redcolorbicycle"},"content":"                    new PostalCode(\"654328\"), new Street(\"Orchard Street 7\"), new UnitNumber(\"150\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"lokidoki102"},"content":"                    new Block(\"4\"), new Price(\"9876372\")))","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"lokidoki102"},"content":"            .build();","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":100,"author":{"gitId":"KhoonSun47"},"content":"    // Manually added - Seller\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"KhoonSun47"},"content":"    public static final Seller AMY_SELLER \u003d new SellerBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"KhoonSun47"},"content":"            .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2024-04-01"},{"lineNumber":103,"author":{"gitId":"KhoonSun47"},"content":"            .withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"lokidoki102"},"content":"            .withHouses(HOUSE2)","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"lokidoki102"},"content":"            .build();","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"redcolorbicycle"},"content":"    public static final Seller KHOONSUN_SELLER \u003d new SellerBuilder().withName(VALID_NAME_KHOONSUN)","lastModifiedDate":"2024-03-31"},{"lineNumber":108,"author":{"gitId":"KhoonSun47"},"content":"            .withEmail(VALID_EMAIL_KHOONSUN)","lastModifiedDate":"2024-04-01"},{"lineNumber":109,"author":{"gitId":"redcolorbicycle"},"content":"            .withPhone(VALID_PHONE_KHOONSUN)","lastModifiedDate":"2024-03-31"},{"lineNumber":110,"author":{"gitId":"lokidoki102"},"content":"            .withHouses(HOUSE1)","lastModifiedDate":"2024-04-02"},{"lineNumber":111,"author":{"gitId":"lokidoki102"},"content":"            .build();","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"KhoonSun47"},"content":"    public static final Seller BOB_SELLER \u003d new SellerBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2024-03-21"},{"lineNumber":113,"author":{"gitId":"KhoonSun47"},"content":"            .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2024-04-01"},{"lineNumber":114,"author":{"gitId":"KhoonSun47"},"content":"            .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"lokidoki102"},"content":"            .withHouses(HOUSE3)","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"lokidoki102"},"content":"            .build();","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":118,"author":{"gitId":"KhoonSun47"},"content":"    // Manually added - Buyer\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2024-03-27"},{"lineNumber":119,"author":{"gitId":"lokidoki102"},"content":"    public static final Buyer ALI_BUYER \u003d new BuyerBuilder().withName(\"Ali York\")","lastModifiedDate":"2024-03-29"},{"lineNumber":120,"author":{"gitId":"felixchanyy"},"content":"            .withPhone(\"82937163\").withEmail(\"ali@gmail.com\").withBudget(\"400000\")","lastModifiedDate":"2024-03-29"},{"lineNumber":121,"author":{"gitId":"lokidoki102"},"content":"            .withHousingType(\"Hdb\")","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"lokidoki102"},"content":"            .build();","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"felixchanyy"},"content":"    public static final Buyer BEN_BUYER \u003d new BuyerBuilder().withName(VALID_NAME_BEN).withPhone(VALID_PHONE_BEN)","lastModifiedDate":"2024-03-29"},{"lineNumber":124,"author":{"gitId":"felixchanyy"},"content":"            .withEmail(VALID_EMAIL_BEN).withBudget(VALID_BUDGET_BEN).withHousingType(VALID_HOUSING_TYPE_BEN)","lastModifiedDate":"2024-03-29"},{"lineNumber":125,"author":{"gitId":"felixchanyy"},"content":"            .build();","lastModifiedDate":"2024-03-29"},{"lineNumber":126,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":127,"author":{"gitId":"felixchanyy"},"content":"    public static final Buyer AMY_BUYER \u003d new BuyerBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2024-03-29"},{"lineNumber":128,"author":{"gitId":"felixchanyy"},"content":"            .withEmail(VALID_EMAIL_AMY).withBudget(VALID_BUDGET_AMY).withHousingType(VALID_HOUSING_TYPE_AMY)","lastModifiedDate":"2024-03-29"},{"lineNumber":129,"author":{"gitId":"felixchanyy"},"content":"            .build();","lastModifiedDate":"2024-03-29"},{"lineNumber":130,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":131,"author":{"gitId":"felixchanyy"},"content":"    public static final Buyer BOB_BUYER \u003d new BuyerBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-29"},{"lineNumber":132,"author":{"gitId":"felixchanyy"},"content":"            .withEmail(VALID_EMAIL_BOB).withBudget(VALID_BUDGET_BOB).withHousingType(VALID_HOUSING_TYPE_BOB)","lastModifiedDate":"2024-03-29"},{"lineNumber":133,"author":{"gitId":"zengzihui"},"content":"            .build();","lastModifiedDate":"2024-03-21"},{"lineNumber":134,"author":{"gitId":"lokidoki102"},"content":"    public static final Buyer ZACK_BUYER \u003d new BuyerBuilder().withName(\"Zack York\")","lastModifiedDate":"2024-03-29"},{"lineNumber":135,"author":{"gitId":"lokidoki102"},"content":"            .withPhone(\"82937163\").withEmail(\"zack@gmail.com\").withBudget(\"400000\")","lastModifiedDate":"2024-03-29"},{"lineNumber":136,"author":{"gitId":"lokidoki102"},"content":"            .withHousingType(\"Hdb\")","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"lokidoki102"},"content":"            .build();","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"lokidoki102"},"content":"    public static final Buyer ZANE_BUYER \u003d new BuyerBuilder().withName(\"Zane York\")","lastModifiedDate":"2024-03-29"},{"lineNumber":139,"author":{"gitId":"lokidoki102"},"content":"            .withPhone(\"82937163\").withEmail(\"zack@gmail.com\").withBudget(\"500000\")","lastModifiedDate":"2024-03-29"},{"lineNumber":140,"author":{"gitId":"lokidoki102"},"content":"            .withHousingType(\"Hdb\")","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"lokidoki102"},"content":"            .build();","lastModifiedDate":"2024-04-02"},{"lineNumber":142,"author":{"gitId":"lokidoki102"},"content":"    public static final Buyer ZURI_BUYER \u003d new BuyerBuilder().withName(\"Zuri\")","lastModifiedDate":"2024-03-29"},{"lineNumber":143,"author":{"gitId":"lokidoki102"},"content":"            .withPhone(\"63936234\").withEmail(\"Zuri@gmail.com\").withBudget(\"600000\")","lastModifiedDate":"2024-03-29"},{"lineNumber":144,"author":{"gitId":"lokidoki102"},"content":"            .withHousingType(\"Hdb\")","lastModifiedDate":"2024-04-02"},{"lineNumber":145,"author":{"gitId":"lokidoki102"},"content":"            .build();","lastModifiedDate":"2024-04-02"},{"lineNumber":146,"author":{"gitId":"lokidoki102"},"content":"    public static final Buyer ZYRA_BUYER \u003d new BuyerBuilder().withName(\"Zyra Moore\")","lastModifiedDate":"2024-03-29"},{"lineNumber":147,"author":{"gitId":"lokidoki102"},"content":"            .withPhone(\"82936234\").withEmail(\"zyra@gmail.com\").withBudget(\"700000\")","lastModifiedDate":"2024-03-29"},{"lineNumber":148,"author":{"gitId":"lokidoki102"},"content":"            .withHousingType(\"Hdb\")","lastModifiedDate":"2024-04-02"},{"lineNumber":149,"author":{"gitId":"lokidoki102"},"content":"            .build();","lastModifiedDate":"2024-04-02"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2024-03-27"},{"lineNumber":152,"author":{"gitId":"zengzihui"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2024-03-21"},{"lineNumber":153,"author":{"gitId":"zengzihui"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2024-03-21"},{"lineNumber":154,"author":{"gitId":"lokidoki102"},"content":"            .withPhone(\"94351253\").withHousingType(\"Hdb\")","lastModifiedDate":"2024-04-01"},{"lineNumber":155,"author":{"gitId":"lokidoki102"},"content":"            .build();","lastModifiedDate":"2024-04-02"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-21"},{"lineNumber":157,"author":{"gitId":"zengzihui"},"content":"            .withEmail(VALID_EMAIL_BOB).withHousingType(VALID_HOUSING_TYPE_BOB)","lastModifiedDate":"2024-03-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":172,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":177,"author":{"gitId":"lokidoki102"},"content":"        List\u003cPerson\u003e typicalPersons \u003d Arrays.asList(ALICE_SELLER, BEN_BUYER, BENSON_SELLER,","lastModifiedDate":"2024-03-29"},{"lineNumber":178,"author":{"gitId":"lokidoki102"},"content":"                CARL_SELLER, DANIEL_SELLER, ELLE_SELLER, FIONA_SELLER, GEORGE_SELLER, ZACK_BUYER, ZANE_BUYER);","lastModifiedDate":"2024-03-29"},{"lineNumber":179,"author":{"gitId":"KhoonSun47"},"content":"        List\u003cPerson\u003e sortedTypicalPersons \u003d typicalPersons.stream()","lastModifiedDate":"2024-03-27"},{"lineNumber":180,"author":{"gitId":"KhoonSun47"},"content":"                .sorted(Comparator.comparing(person -\u003e person.getName().toString()))","lastModifiedDate":"2024-03-27"},{"lineNumber":181,"author":{"gitId":"KhoonSun47"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-03-27"},{"lineNumber":182,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":183,"author":{"gitId":"KhoonSun47"},"content":"        return new ArrayList\u003c\u003e(sortedTypicalPersons);","lastModifiedDate":"2024-03-27"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"redcolorbicycle":18,"zengzihui":7,"felixchanyy":25,"KhoonSun47":41,"-":48,"lokidoki102":46}}]
