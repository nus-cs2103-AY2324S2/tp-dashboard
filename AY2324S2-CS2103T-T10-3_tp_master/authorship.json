[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ChocoRagdoll"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-T10-3/tp/actions)","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103T-T10-3/tp/graph/badge.svg?token\u003dGBPS86G6DT)](https://codecov.io/gh/AY2324S2-CS2103T-T10-3/tp)","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"ChocoRagdoll"},"content":"### Eventy","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"ChocoRagdoll"},"content":"* This CLI application serves as an event planner tailored for event planners in halls, facilitating efficient management of participants and events. This is a CLI application that is desgined for users who type fast\u003cbr\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    * as a starting point of a course project (as opposed to writing everything from scratch)","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    * as a case study","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"ChocoRagdoll"},"content":"### What does this do","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"ChocoRagdoll"},"content":"* The project is tailored specifically for student event organizers and offers a new standard of convenient and easy event planning.","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"ChocoRagdoll"},"content":"* The application is targeted towards users who type fast and are used to CLI application.","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"* The project simulates an ongoing software project for a desktop application (called _AddressBook_) used for managing contact details.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"ChocoRagdoll"},"content":"* It is named `Eventy` (`ET` for short) because we want to insert playfulness and efficiency into event planning. Plus it reminds you of a certain character! doesn\u0027t it :)","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* For the detailed documentation of this project, see the **[Address Book Product Website](https://se-education.org/addressbook-level3)**.","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* This project is a **part of the se-education.org** initiative. If you would like to contribute code to this project, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"ChocoRagdoll"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"ChocoRagdoll":10,"-":12}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"ChocoRagdoll"},"content":"run {","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"ChocoRagdoll"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"ChocoRagdoll"},"content":"}","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"nusliuyifan"},"content":"    archiveFileName \u003d \u0027eventy.jar\u0027","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"nusliuyifan":1,"ChocoRagdoll":4,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"We are the developer team of event management app Eventy, based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"### Nigel Lee","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":"\u003cimg src\u003d\"images/apzure.png\" width\u003d\"200px\" height\u003d\"250px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"myang2020"},"content":"[[github](https://github.com/Apzure)]","lastModifiedDate":"2024-02-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"myang2020"},"content":"* Roles: Team Lead and Scheduling and Tracking, in charge of Model","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"### Han Taeweon","lastModifiedDate":"2024-02-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"\u003cimg src\u003d\"images/taeewonnn.png\" width\u003d\"200px\" height\u003d\"250px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"[[github](https://github.com/taeewonnn)]","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"* Roles: Documentation, Deliverables and Deadlines, Git Expert","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"### Max Yang","lastModifiedDate":"2024-02-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"\u003cimg src\u003d\"images/myang2020.png\" width\u003d\"200px\" height\u003d\"250px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"[[github](https://github.com/myang2020)]","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"myang2020"},"content":"* Roles: Testing, in charge of Logic","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"myang2020"},"content":"### Liu Yifan","lastModifiedDate":"2024-02-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"myang2020"},"content":"\u003cimg src\u003d\"images/nusliuyifan.png\" width\u003d\"200px\" height\u003d\"250px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"myang2020"},"content":"[[github](https://github.com/nusliuyifan)]","lastModifiedDate":"2024-02-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"myang2020"},"content":"* Roles: Integration, in charge of Storage","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"myang2020"},"content":"### Yichao Song","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"myang2020"},"content":"\u003cimg src\u003d\"images/chocoragdoll.png\" width\u003d\"200px\" height\u003d\"250px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"myang2020"},"content":"[[github](https://github.com/ChocoRagdoll)]","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"myang2020"},"content":"* Roles: Code Quality, in charge of UI","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"-":25,"myang2020":21}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"nusliuyifan"},"content":"# Eventy Developer Guide","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well }_","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"ChocoRagdoll"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delp 1\")` API call as an example.","lastModifiedDate":"2024-04-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"ChocoRagdoll"},"content":"\u003cpuml src\u003d\"diagrams/DeleteParticipantSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"ChocoRagdoll"},"content":"**Note:** The lifeline for `DeletePersonCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-04-10"},{"lineNumber":100,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"ChocoRagdoll"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeletePersonCommandParser`) and uses it to parse the command.","lastModifiedDate":"2024-04-10"},{"lineNumber":106,"author":{"gitId":"ChocoRagdoll"},"content":"2. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeletePersonCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2024-04-10"},{"lineNumber":107,"author":{"gitId":"ChocoRagdoll"},"content":"3. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":109,"author":{"gitId":"ChocoRagdoll"},"content":"4. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2024-04-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"ChocoRagdoll"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeletePersonCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2024-04-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"nusliuyifan"},"content":"**API** : [`Storage.java`](https://github.com/AY2324S2-CS2103T-T10-3/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2024-03-28"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"nusliuyifan"},"content":"* can save global participant list data, event list data, participant list data of all added events in JSON format, and read it back into corresponding objects.","lastModifiedDate":"2024-04-08"},{"lineNumber":149,"author":{"gitId":"nusliuyifan"},"content":"* inherits from`AddressBookStorage` `EventBook Storage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2024-03-28"},{"lineNumber":150,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2024-03-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":162,"author":{"gitId":"taeewonnn"},"content":"### Add person to Global Participant List","lastModifiedDate":"2024-04-10"},{"lineNumber":163,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":164,"author":{"gitId":"taeewonnn"},"content":"The `AddPersonCommand` allows users to add a person to the global participant list","lastModifiedDate":"2024-04-10"},{"lineNumber":165,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":166,"author":{"gitId":"taeewonnn"},"content":"#### Implementation Details","lastModifiedDate":"2024-04-10"},{"lineNumber":167,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":168,"author":{"gitId":"taeewonnn"},"content":"The `AddPersonCommand` is implemented by extending the base `Command` class. It uses prefixes such as `/n`, `/p`, `/a`, `/e`, `/t`, specifying ","lastModifiedDate":"2024-04-10"},{"lineNumber":169,"author":{"gitId":"taeewonnn"},"content":"required data fields `participant name`, `phone number`, `address`, `email`, `tags` respectively. Once the data fields are filled, ","lastModifiedDate":"2024-04-10"},{"lineNumber":170,"author":{"gitId":"taeewonnn"},"content":"a new person is added. It implements the following operations:","lastModifiedDate":"2024-04-10"},{"lineNumber":171,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":172,"author":{"gitId":"taeewonnn"},"content":"* `execute(Model)` — Checks the current address book state by calling `hasPerson(toAdd)`, and throws a `CommandException` if a duplicate person is found.","lastModifiedDate":"2024-04-10"},{"lineNumber":173,"author":{"gitId":"taeewonnn"},"content":"* `addPerson(toAdd)` — Adds the person to the global participant list. This operation is exposed in the `Model` interface as `Model#addPerson(Person)`.","lastModifiedDate":"2024-04-10"},{"lineNumber":174,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":175,"author":{"gitId":"taeewonnn"},"content":"The add command is initiated by firstly checking the filtered person list to ensure no duplicate is found, after which `Model#addPerson(Person)` is called to complete the actual addition.","lastModifiedDate":"2024-04-10"},{"lineNumber":176,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":177,"author":{"gitId":"taeewonnn"},"content":"Given below is an example usage scenario of how the addition mechanism behaves when the user tries to add a person to the global participant list.","lastModifiedDate":"2024-04-10"},{"lineNumber":178,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":179,"author":{"gitId":"taeewonnn"},"content":"Step 1. The user launches the application, with some events and participants added to the address book already. ","lastModifiedDate":"2024-04-10"},{"lineNumber":180,"author":{"gitId":"taeewonnn"},"content":"The `AddressBook` will be initialized with the previously saved address book state.","lastModifiedDate":"2024-04-10"},{"lineNumber":181,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":182,"author":{"gitId":"taeewonnn"},"content":"Step 2. The user executes `addp` command with the specific data at each prefix to specify the person to be added.","lastModifiedDate":"2024-04-10"},{"lineNumber":183,"author":{"gitId":"taeewonnn"},"content":"The `AddCommand` will then call `excecute()`, which checks whether there is a duplicate person in the global participant list before calling `addPerson(Person)`.","lastModifiedDate":"2024-04-10"},{"lineNumber":184,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":185,"author":{"gitId":"taeewonnn"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":186,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":187,"author":{"gitId":"taeewonnn"},"content":"**Note:** All prefixes are compulsory to fill up except tags.","lastModifiedDate":"2024-04-10"},{"lineNumber":188,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":189,"author":{"gitId":"taeewonnn"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":190,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":191,"author":{"gitId":"taeewonnn"},"content":"#### Sequence Diagram","lastModifiedDate":"2024-04-10"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":193,"author":{"gitId":"taeewonnn"},"content":"\u003cpuml src\u003d\"diagrams/AddPersonSequenceDiagram.puml\" /\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":195,"author":{"gitId":"taeewonnn"},"content":"### Invite Person to Event","lastModifiedDate":"2024-03-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":197,"author":{"gitId":"taeewonnn"},"content":"The `InvitePersonCommand` allows users to invite a person to the selected event from the global address book.","lastModifiedDate":"2024-03-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":199,"author":{"gitId":"taeewonnn"},"content":"#### Implementation Details","lastModifiedDate":"2024-03-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":201,"author":{"gitId":"taeewonnn"},"content":"The `InvitePersonCommand` is implemented by extending the base `Command` class. It uses a `targetIndex`, specifying the desired person\u0027s global list index, to identify the person to be added to the selected event. It implements the following operations:","lastModifiedDate":"2024-03-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":203,"author":{"gitId":"taeewonnn"},"content":"* `execute(Model)` — Checks the current address book state by calling `isAnEventSelected()`, and throws a `CommandException` if no event is selected.","lastModifiedDate":"2024-03-31"},{"lineNumber":204,"author":{"gitId":"taeewonnn"},"content":"  It also calls `isPersonInSelectedEvent` to ensure the invitee is not already added to the event by throwing a `CommandException` if he is already on the invitee list.","lastModifiedDate":"2024-03-31"},{"lineNumber":205,"author":{"gitId":"taeewonnn"},"content":"* `addPersonToSelectedEvent(Person)` — Adds the participant to the selected event from the filtered global participant list. This operation is exposed in the `Model` interface as `Model#addPersonToSelectedEvent(Person)`.","lastModifiedDate":"2024-04-10"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":207,"author":{"gitId":"taeewonnn"},"content":"The invite command is initiated by firstly retrieving the filtered person list and locating the `personToInvite` object in it, after which `Model#addPersonToSelectedEvent(Person)(Person)` is called to complete the actual invitation.","lastModifiedDate":"2024-03-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":209,"author":{"gitId":"taeewonnn"},"content":"Given below is an example usage scenario of how the invitation mechanism behaves when the user tries to invite a participant from the global participant list.","lastModifiedDate":"2024-04-10"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":211,"author":{"gitId":"taeewonnn"},"content":"Step 1. The user launches the application, with some events and participants added to the address book already. The `AddressBook` will be initialized with the previously saved address book state, and the `selectedEvent` in the `EventBook` will initially be `null`.","lastModifiedDate":"2024-03-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":213,"author":{"gitId":"taeewonnn"},"content":"Step 2. The user executes `sel 1` command to select the first event to be modified","lastModifiedDate":"2024-03-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":215,"author":{"gitId":"taeewonnn"},"content":"Step 3. The user executes `inv 3` command to invite the 5th person in the global list to the selected event. The `InviteCommand` will then call `excecute()`, which checks that an event is selected and the user doesn\u0027t already exist in the selected event invitee list before calling `addPersonToSelectedEvent(Person)`.","lastModifiedDate":"2024-03-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":219,"author":{"gitId":"taeewonnn"},"content":"**Note:** If the `targetIndex` provided is invalid, a `CommandException` will be thrown.","lastModifiedDate":"2024-03-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":223,"author":{"gitId":"taeewonnn"},"content":"#### Sequence Diagram","lastModifiedDate":"2024-03-31"},{"lineNumber":224,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":225,"author":{"gitId":"taeewonnn"},"content":"![Sequence diagram](images/InviteSequenceDiagram.png)","lastModifiedDate":"2024-03-31"},{"lineNumber":226,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":227,"author":{"gitId":"taeewonnn"},"content":"#### Design Considerations:","lastModifiedDate":"2024-03-31"},{"lineNumber":228,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":229,"author":{"gitId":"taeewonnn"},"content":"**Aspect 1: How to specify the event the person should be added to:**","lastModifiedDate":"2024-03-31"},{"lineNumber":230,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":231,"author":{"gitId":"taeewonnn"},"content":"* **Alternative 1 (current choice):** Select an event first, then use the `index` in the filtered list","lastModifiedDate":"2024-03-31"},{"lineNumber":232,"author":{"gitId":"taeewonnn"},"content":"    * Pros: Easier to implement.  Immediate visual reference.","lastModifiedDate":"2024-03-31"},{"lineNumber":233,"author":{"gitId":"taeewonnn"},"content":"    * Cons: Extra select command is needed before participant can be added","lastModifiedDate":"2024-03-31"},{"lineNumber":234,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":235,"author":{"gitId":"taeewonnn"},"content":"* **Alternative 2:** Specify event and person indices in one command","lastModifiedDate":"2024-03-31"},{"lineNumber":236,"author":{"gitId":"taeewonnn"},"content":"    * Pros: Action can be performed in one command","lastModifiedDate":"2024-03-31"},{"lineNumber":237,"author":{"gitId":"taeewonnn"},"content":"    * Cons: Requires more complex input parsing, makes the user input longer, and may be confusing for the user","lastModifiedDate":"2024-03-31"},{"lineNumber":238,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":239,"author":{"gitId":"taeewonnn"},"content":"**Rationale:**","lastModifiedDate":"2024-03-31"},{"lineNumber":240,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":241,"author":{"gitId":"taeewonnn"},"content":"The primary rationale for selecting an event first is it lets the user have a clear sense that a certain event is currently being modified.","lastModifiedDate":"2024-03-31"},{"lineNumber":242,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":243,"author":{"gitId":"taeewonnn"},"content":"This will prevent future errors where the user confuses `invite` and `add` commands.","lastModifiedDate":"2024-03-31"},{"lineNumber":244,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":245,"author":{"gitId":"taeewonnn"},"content":"### Delete Participant","lastModifiedDate":"2024-03-31"},{"lineNumber":246,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":247,"author":{"gitId":"taeewonnn"},"content":"The `DeletePersonCommand` allows users to delete a person either from the global address book or from a specific event, depending on whether an event is selected.","lastModifiedDate":"2024-03-31"},{"lineNumber":248,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":249,"author":{"gitId":"taeewonnn"},"content":"#### Implementation Details","lastModifiedDate":"2024-03-31"},{"lineNumber":250,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":251,"author":{"gitId":"taeewonnn"},"content":"The `DeletePersonCommand` is implemented by extending the base `Command` class. It uses a `targetIndex` to identify the person to be deleted in the filtered person list. It implements the following operations:","lastModifiedDate":"2024-03-31"},{"lineNumber":252,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":253,"author":{"gitId":"taeewonnn"},"content":"* `execute(Model)` — Checks the current address book state by calling `isAnEventSelected()`, and call `deleteFromGlobal` or `deleteFromEvent` accordingly.","lastModifiedDate":"2024-03-31"},{"lineNumber":254,"author":{"gitId":"taeewonnn"},"content":"* `deleteFromGlobal(Model)` — Deletes the participant in the filtered global participant list. This operation is exposed in the `Model` interface as `Model#deletePerson(Person)`.","lastModifiedDate":"2024-03-31"},{"lineNumber":255,"author":{"gitId":"taeewonnn"},"content":"* `deleteFromEvent(Model)` — Deletes the participant in the filtered selected event participant list. This operation is exposed in the `Model` interface as `deletePersonFromSelectedEvent(Person)`.","lastModifiedDate":"2024-03-31"},{"lineNumber":256,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":257,"author":{"gitId":"taeewonnn"},"content":"The deletion is initiated by firstly retrieving the filtered person list and locating the `personToDelete` object in it, after which `Model#deletePerson(Person)` /  `Model#deletePersonFromSelectedEvent(Person)` is called to complete the actual deletion.","lastModifiedDate":"2024-03-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":259,"author":{"gitId":"taeewonnn"},"content":"Given below is an example usage scenario of how the deletion mechanism behaves when the user tries to delete a participant from the global participant list.","lastModifiedDate":"2024-03-31"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":261,"author":{"gitId":"taeewonnn"},"content":"Step 1. The user launches the application, with some events and participants added to the address book already. The `AddressBook` will be initialized with the previously saved address book state, and the `selectedEvent` in the `EventBook` will initially be `null`.","lastModifiedDate":"2024-03-31"},{"lineNumber":262,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":263,"author":{"gitId":"taeewonnn"},"content":"Step 2. The user executes `delp 5` command to delete the 5th person in the address book. The `deletePersonCommand` will then call `excecute()`, which checks that no event is being selected before calling `deleteFromGlobal()`.","lastModifiedDate":"2024-03-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":265,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":267,"author":{"gitId":"taeewonnn"},"content":"**Note:** If the `targetIndex` provided is invalid, a `CommandException` will be thrown.","lastModifiedDate":"2024-03-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":269,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":271,"author":{"gitId":"taeewonnn"},"content":"Step 3. The `deleteFromGlobal()` function calls `Model#deletePerson()` to complete the deletion, and the state of the filtered person list is thereby changed.","lastModifiedDate":"2024-03-31"},{"lineNumber":272,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":273,"author":{"gitId":"taeewonnn"},"content":"#### Sequence Diagram","lastModifiedDate":"2024-03-31"},{"lineNumber":274,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":275,"author":{"gitId":"taeewonnn"},"content":"![Sequence diagram](images/DeleteParticipantSequenceDiagram.png)","lastModifiedDate":"2024-03-31"},{"lineNumber":276,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":277,"author":{"gitId":"taeewonnn"},"content":"#### Design Considerations:","lastModifiedDate":"2024-03-31"},{"lineNumber":278,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":279,"author":{"gitId":"taeewonnn"},"content":"**Aspect 1: How to structure the 2 Delete Participant Commands:**","lastModifiedDate":"2024-03-31"},{"lineNumber":280,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":281,"author":{"gitId":"taeewonnn"},"content":"* **Alternative 1 (current choice):** Same command for global and event-specific deletion","lastModifiedDate":"2024-03-31"},{"lineNumber":282,"author":{"gitId":"taeewonnn"},"content":"    * Pros: Shorter code. The unified `DeletePersonCommand` is easier to learn.","lastModifiedDate":"2024-03-31"},{"lineNumber":283,"author":{"gitId":"taeewonnn"},"content":"    * Cons: Slightly harder to implement.","lastModifiedDate":"2024-03-31"},{"lineNumber":284,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":285,"author":{"gitId":"taeewonnn"},"content":"* **Alternative 2:** Separate commands for global and event-specific deletion","lastModifiedDate":"2024-03-31"},{"lineNumber":286,"author":{"gitId":"taeewonnn"},"content":"    * Pros: Simplifies the implementation of each command.","lastModifiedDate":"2024-03-31"},{"lineNumber":287,"author":{"gitId":"taeewonnn"},"content":"    * Pros: Shorter code. The unified `DeletePersonCommand` is easier to learn.","lastModifiedDate":"2024-03-31"},{"lineNumber":288,"author":{"gitId":"taeewonnn"},"content":"    * Cons: Slightly harder to implement.","lastModifiedDate":"2024-03-31"},{"lineNumber":289,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":290,"author":{"gitId":"taeewonnn"},"content":"**Rationale:**","lastModifiedDate":"2024-03-31"},{"lineNumber":291,"author":{"gitId":"taeewonnn"},"content":"The choice to unify the deletion process under a single `DeletePersonCommand` stems from a desire to streamline the user experience and reduce the learning curve associated with the application. By minimizing the number of commands a user needs to learn, the application becomes more intuitive, especially for new or infrequent users. The unified command approach emphasizes simplicity from the user\u0027s perspective, even if it introduces additional complexity behind the scenes.","lastModifiedDate":"2024-03-31"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":293,"author":{"gitId":"taeewonnn"},"content":"**Aspect 2: How to specify the person to be deleted:**","lastModifiedDate":"2024-03-31"},{"lineNumber":294,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":295,"author":{"gitId":"taeewonnn"},"content":"* **Alternative 1 (current choice):** Use the `index` in the filtered list","lastModifiedDate":"2024-03-31"},{"lineNumber":296,"author":{"gitId":"taeewonnn"},"content":"    * Pros: Easier to implement.  Immediate visual reference.","lastModifiedDate":"2024-03-31"},{"lineNumber":297,"author":{"gitId":"taeewonnn"},"content":"    * Cons: Limited by Viewport. When the participant list is long and paginated or requires scrolling, users might find it cumbersome to scroll through and find the index of the person they wish to delete.","lastModifiedDate":"2024-03-31"},{"lineNumber":298,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":299,"author":{"gitId":"taeewonnn"},"content":"* **Alternative 2:** Use the `name` of the participant","lastModifiedDate":"2024-03-31"},{"lineNumber":300,"author":{"gitId":"taeewonnn"},"content":"    * Pros: Direct and intuitive, and can avoid indexing issues.","lastModifiedDate":"2024-03-31"},{"lineNumber":301,"author":{"gitId":"taeewonnn"},"content":"    * Cons: Requires more complex input parsing, and makes the user input longer.","lastModifiedDate":"2024-03-31"},{"lineNumber":302,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":303,"author":{"gitId":"taeewonnn"},"content":"**Rationale:**","lastModifiedDate":"2024-03-31"},{"lineNumber":304,"author":{"gitId":"taeewonnn"},"content":"The primary rationale for using an `index` as the specifier is its simplicity and direct mapping to the user interface. Users can easily locate and specify a contact for deletion based on their position in a list, making the command straightforward to implement and understand. This approach is particularly effective in scenarios where users work with relatively short lists where the viewport limitations are minimal. In the scenario where the participant list gets longer, the user can always use the `find` command to filter out the contact they want to delete before making the actual deletion.","lastModifiedDate":"2024-03-31"},{"lineNumber":305,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":306,"author":{"gitId":"taeewonnn"},"content":"### Select Event Feature","lastModifiedDate":"2024-03-31"},{"lineNumber":307,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":308,"author":{"gitId":"Apzure"},"content":"The Select Event mechanism is a pivotal part of Eventy\u0027s functionality, serving two main purposes:","lastModifiedDate":"2024-04-09"},{"lineNumber":309,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":310,"author":{"gitId":"Apzure"},"content":"1. A number of commands within Eventy are designed to target the selected event, while some commands also have","lastModifiedDate":"2024-04-09"},{"lineNumber":311,"author":{"gitId":"Apzure"},"content":"differing behaviours based on whether an event is selected or not:","lastModifiedDate":"2024-04-09"},{"lineNumber":312,"author":{"gitId":"Apzure"},"content":"- An example of the former is the `Invite Person to Event`\u003c/a\u003e command,","lastModifiedDate":"2024-04-09"},{"lineNumber":313,"author":{"gitId":"Apzure"},"content":"which adds a person to the **selected event**. ","lastModifiedDate":"2024-04-09"},{"lineNumber":314,"author":{"gitId":"Apzure"},"content":"- An example of the latter is the `Delete a Person` command. If **an event is not selected**, it will delete the person ","lastModifiedDate":"2024-04-09"},{"lineNumber":315,"author":{"gitId":"Apzure"},"content":"from Eventy as a whole, else if **an event is selected**, it will delete the person only from the selected event.","lastModifiedDate":"2024-04-09"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":317,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-04-09"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":319,"author":{"gitId":"Apzure"},"content":"**Note:** For more details on how this functionality is implemented, you may refer to the developer guide documentation","lastModifiedDate":"2024-04-09"},{"lineNumber":320,"author":{"gitId":"Apzure"},"content":"for these two examples: the \u003ca href\u003d\"#Invite Person to Event\"\u003e Invite Person to Event \u003c/a\u003e and ","lastModifiedDate":"2024-04-09"},{"lineNumber":321,"author":{"gitId":"Apzure"},"content":"\u003ca href\u003d\"#delete-participant\"\u003e DeletePerson \u003c/a\u003e commands.","lastModifiedDate":"2024-04-09"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":323,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-09"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":325,"author":{"gitId":"Apzure"},"content":"2. Users of Eventy can select an event and deselect the currently selected event, using the `Selecting an event` and ","lastModifiedDate":"2024-04-09"},{"lineNumber":326,"author":{"gitId":"Apzure"},"content":"`Deselecting an event` commands respectively.","lastModifiedDate":"2024-04-09"},{"lineNumber":327,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":328,"author":{"gitId":"Apzure"},"content":"#### Implementation Details","lastModifiedDate":"2024-04-09"},{"lineNumber":329,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":330,"author":{"gitId":"Apzure"},"content":"The Select Event mechanism is facilitated by the `EventBook`, which implements `ReadOnlyEventBook`. `EventBook` serves as the ","lastModifiedDate":"2024-04-09"},{"lineNumber":331,"author":{"gitId":"Apzure"},"content":"counterpart to the `AddressBook`, focusing on Event-related functionality, while `AddressBook` handles People-related ","lastModifiedDate":"2024-04-09"},{"lineNumber":332,"author":{"gitId":"Apzure"},"content":"functionality.","lastModifiedDate":"2024-04-09"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":334,"author":{"gitId":"taeewonnn"},"content":"To implement the Select Event mechanism, `EventBook` stores internally:","lastModifiedDate":"2024-03-31"},{"lineNumber":335,"author":{"gitId":"Apzure"},"content":"* `events` \u0026thinsp;—\u0026thinsp; The list that contains the unique events that are in Eventy.","lastModifiedDate":"2024-04-09"},{"lineNumber":336,"author":{"gitId":"Apzure"},"content":"* `selectedEvent` \u0026thinsp;—\u0026thinsp; The event that is currently selected. If no event is selected, it is set to `null`.","lastModifiedDate":"2024-04-09"},{"lineNumber":337,"author":{"gitId":"Apzure"},"content":"* `personsOfSelectedEvent` \u0026thinsp;—\u0026thinsp; The list that contains the unique people in the selected event. If no ","lastModifiedDate":"2024-04-09"},{"lineNumber":338,"author":{"gitId":"Apzure"},"content":"event is selected, it is an empty list.","lastModifiedDate":"2024-04-09"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":340,"author":{"gitId":"Apzure"},"content":"Additionally, it implements the following operations (not exhaustive):","lastModifiedDate":"2024-04-09"},{"lineNumber":341,"author":{"gitId":"Apzure"},"content":"* `EventBook#isAnEventSelected()` \u0026thinsp;—\u0026thinsp; Returns `true` if an event is selected, else returns `false`","lastModifiedDate":"2024-04-09"},{"lineNumber":342,"author":{"gitId":"taeewonnn"},"content":"* `EventBook#selectEvent(Event event)` \u0026thinsp;—\u0026thinsp; Selects the given event","lastModifiedDate":"2024-03-31"},{"lineNumber":343,"author":{"gitId":"taeewonnn"},"content":"* `EventBook#deselectEvent()` \u0026thinsp;—\u0026thinsp; Deselect the currently selected event, if any, so that no event is","lastModifiedDate":"2024-03-31"},{"lineNumber":344,"author":{"gitId":"taeewonnn"},"content":"  selected","lastModifiedDate":"2024-03-31"},{"lineNumber":345,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":346,"author":{"gitId":"Apzure"},"content":"These operations are exposed to other components through `ModelManager`.","lastModifiedDate":"2024-04-09"},{"lineNumber":347,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":348,"author":{"gitId":"Apzure"},"content":"#### Sequence Diagram","lastModifiedDate":"2024-04-09"},{"lineNumber":349,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":350,"author":{"gitId":"Apzure"},"content":"In order to select an event and deselect an event, we have the `Selecting an event` command and `Deselecting an event` ","lastModifiedDate":"2024-04-09"},{"lineNumber":351,"author":{"gitId":"Apzure"},"content":"command respectively. Both commands function similarly, and so we will only be explaining the `Selecting an event` command.","lastModifiedDate":"2024-04-09"},{"lineNumber":352,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":353,"author":{"gitId":"Apzure"},"content":"The following sequence diagram shows how the `Selecting an event` command works through the `Logic` component.","lastModifiedDate":"2024-04-09"},{"lineNumber":354,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":355,"author":{"gitId":"Apzure"},"content":"![Sequence diagram](images/SelectEventSequenceDiagram-Logic.png)","lastModifiedDate":"2024-04-09"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":357,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-04-09"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":359,"author":{"gitId":"Apzure"},"content":"**Note:** The lifeline for `SelectCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-04-09"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":361,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-09"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":363,"author":{"gitId":"Apzure"},"content":"How the `Selecting an event` command works in the `Logic` component:","lastModifiedDate":"2024-04-09"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":365,"author":{"gitId":"Apzure"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates the `SelectCommandParser`, which is used to parse the command.","lastModifiedDate":"2024-04-09"},{"lineNumber":366,"author":{"gitId":"Apzure"},"content":"1. This results in a `SelectCommand` object, which contains the parsed value - the index of the event to select. In this example, the index is of value `1`.","lastModifiedDate":"2024-04-09"},{"lineNumber":367,"author":{"gitId":"Apzure"},"content":"1. The `SelectCommand` communicates with the `Model` when it is executed. \u003c/br\u003e","lastModifiedDate":"2024-04-09"},{"lineNumber":368,"author":{"gitId":"Apzure"},"content":"    It first uses `getFilteredEventList()`, to retrieve the list of events shown to the user (`shownEventList`).","lastModifiedDate":"2024-04-09"},{"lineNumber":369,"author":{"gitId":"Apzure"},"content":"    Then, it gets the event to be selected from that list (based on the index provided by the user), then calls `selectEvent(eventToSelect)` to select that event.","lastModifiedDate":"2024-04-09"},{"lineNumber":370,"author":{"gitId":"Apzure"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2024-04-09"},{"lineNumber":371,"author":{"gitId":"Apzure"},"content":"The result of the command execution is encapsulated as a CommandResult object which is returned back from Logic.","lastModifiedDate":"2024-04-09"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":373,"author":{"gitId":"Apzure"},"content":"#### Design considerations:","lastModifiedDate":"2024-04-09"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":375,"author":{"gitId":"Apzure"},"content":"**Aspect: How an event is selected:**","lastModifiedDate":"2024-04-09"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":377,"author":{"gitId":"Apzure"},"content":"* **Alternative 1 (current choice):** Stores the event that is selected as a variable.","lastModifiedDate":"2024-04-09"},{"lineNumber":378,"author":{"gitId":"Apzure"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2024-04-09"},{"lineNumber":379,"author":{"gitId":"Apzure"},"content":"    * Cons: Limited Scalability, as it may be difficult to manage the selected event state solely through a variable as complexity increases.","lastModifiedDate":"2024-04-09"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":381,"author":{"gitId":"Apzure"},"content":"* **Alternative 2:** Every event includes a field indicating its selection status.","lastModifiedDate":"2024-04-09"},{"lineNumber":382,"author":{"gitId":"Apzure"},"content":"    * Pros: Multiple Events can be selected at the same time, which may be useful for future expansion.","lastModifiedDate":"2024-04-09"},{"lineNumber":383,"author":{"gitId":"Apzure"},"content":"    * Cons: May have more overhead.","lastModifiedDate":"2024-04-09"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":386,"author":{"gitId":"taeewonnn"},"content":"### Delete Event Feature","lastModifiedDate":"2024-03-31"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":388,"author":{"gitId":"taeewonnn"},"content":"The `DeleteEventCommand` allows users to delete an event from the event book,","lastModifiedDate":"2024-03-28"},{"lineNumber":389,"author":{"gitId":"taeewonnn"},"content":"depending on whether an event is selected.","lastModifiedDate":"2024-03-28"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"taeewonnn"},"content":"#### Implementation Details","lastModifiedDate":"2024-03-28"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"taeewonnn"},"content":"The `DeleteEventCommand` is implemented by extending the base `Command` class.","lastModifiedDate":"2024-03-28"},{"lineNumber":394,"author":{"gitId":"taeewonnn"},"content":"It uses a `targetIndex` to identify the event to be deleted in the filtered event list.","lastModifiedDate":"2024-03-28"},{"lineNumber":395,"author":{"gitId":"taeewonnn"},"content":"It implements the following operations:","lastModifiedDate":"2024-03-28"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"taeewonnn"},"content":"* `execute(Model)`— Checks the current address book state by calling `isSameEventSelected()`, and call `deleteEvent`","lastModifiedDate":"2024-03-28"},{"lineNumber":398,"author":{"gitId":"taeewonnn"},"content":"* `deleteEvent(Model)` — Deletes the event in the filtered event list. This operation is exposed in the `Model` interface as `Model#deleteEvent(Event)`.","lastModifiedDate":"2024-03-28"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"taeewonnn"},"content":"Given below is an example usage scenario and how the delete event mechanism behaves","lastModifiedDate":"2024-03-28"},{"lineNumber":401,"author":{"gitId":"taeewonnn"},"content":"when the user tries to delete an event from the event list.","lastModifiedDate":"2024-03-28"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"taeewonnn"},"content":"Step 1. The user launches the application for the first time. The `EventBook` will be","lastModifiedDate":"2024-03-28"},{"lineNumber":404,"author":{"gitId":"taeewonnn"},"content":"initialized with the initial event book state.","lastModifiedDate":"2024-03-28"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"taeewonnn"},"content":"Step 2. The user executes `delev 1` command to delete the 1st event in the event book.","lastModifiedDate":"2024-03-28"},{"lineNumber":407,"author":{"gitId":"taeewonnn"},"content":"The `delev` command calls `Model#deleteEvent()`, causing the modified state of the event book after the","lastModifiedDate":"2024-03-28"},{"lineNumber":408,"author":{"gitId":"taeewonnn"},"content":"`delev 1` command executes to be saved in the event book.","lastModifiedDate":"2024-03-28"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":412,"author":{"gitId":"taeewonnn"},"content":"**Note:** If the event to be deleted is currently selected,","lastModifiedDate":"2024-03-28"},{"lineNumber":413,"author":{"gitId":"taeewonnn"},"content":"it will not call `Model#deleteEvent()`, so there will be no state change in","lastModifiedDate":"2024-03-28"},{"lineNumber":414,"author":{"gitId":"taeewonnn"},"content":"the event book.","lastModifiedDate":"2024-03-28"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"taeewonnn"},"content":"#### Sequence Diagram","lastModifiedDate":"2024-03-28"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"taeewonnn"},"content":"\u003cpuml src\u003d\"diagrams/DeleteEventSequenceDiagram.puml\" /\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"taeewonnn"},"content":"**Aspect: How delete event executes:**","lastModifiedDate":"2024-03-28"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"taeewonnn"},"content":"* **Alternative 1 (current choice):** Compares event and selected event with equals.","lastModifiedDate":"2024-03-28"},{"lineNumber":427,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"taeewonnn"},"content":"    * Cons: May not be very specific.","lastModifiedDate":"2024-03-28"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":435,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":436,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":437,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":438,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"taeewonnn"},"content":"* Active members of university clubs and societies or school event committees","lastModifiedDate":"2024-03-21"},{"lineNumber":449,"author":{"gitId":"taeewonnn"},"content":"* Tech-savvy and reasonably comfortable with digital tools","lastModifiedDate":"2024-03-21"},{"lineNumber":450,"author":{"gitId":"taeewonnn"},"content":"* Fast typer","lastModifiedDate":"2024-03-21"},{"lineNumber":451,"author":{"gitId":"taeewonnn"},"content":"* Managing multiple events that range from small-scale meetings to large school-wide events","lastModifiedDate":"2024-03-21"},{"lineNumber":452,"author":{"gitId":"taeewonnn"},"content":"* Frequently communicating and coordinating with a variety of contacts including vendors, participants, volunteers, and school administrators","lastModifiedDate":"2024-03-21"},{"lineNumber":453,"author":{"gitId":"taeewonnn"},"content":"* Task driven with a need to balance multiple deadlines and responsibilities simultaneously","lastModifiedDate":"2024-03-21"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"taeewonnn"},"content":"**Value proposition**:","lastModifiedDate":"2024-03-21"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":457,"author":{"gitId":"taeewonnn"},"content":"The evolved AB3 contact management application, tailored specifically for student event organizers, offers a new standard of streamlined and automated contact organization. It serves as your single source of truth for storing,","lastModifiedDate":"2024-03-21"},{"lineNumber":458,"author":{"gitId":"taeewonnn"},"content":"managing, and retrieving all contact-related information.","lastModifiedDate":"2024-03-21"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                 | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"|----------|--------------------------------------------|------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2023-09-12"},{"lineNumber":467,"author":{"gitId":"taeewonnn"},"content":"| `* * *`  | user                                       | create a new event           | plan and manage all the events that in one place                       |","lastModifiedDate":"2024-03-21"},{"lineNumber":468,"author":{"gitId":"taeewonnn"},"content":"| `* * *`  | user                                       | add a new person             | manage all my contacts in one place                                    |","lastModifiedDate":"2024-03-21"},{"lineNumber":469,"author":{"gitId":"taeewonnn"},"content":"| `* * *`  | user                                       | add participant to an event  | manage and plan all the participant for a specific event               |","lastModifiedDate":"2024-03-21"},{"lineNumber":470,"author":{"gitId":"taeewonnn"},"content":"| `* * *`  | user                                       | delete a person              | remove contacts that I no longer need                                  |","lastModifiedDate":"2024-03-21"},{"lineNumber":471,"author":{"gitId":"taeewonnn"},"content":"| `* * *`  | user                                       | remove specific participant  | remove a specific participant from a specific event                    |","lastModifiedDate":"2024-03-21"},{"lineNumber":472,"author":{"gitId":"taeewonnn"},"content":"| `* *`    | diligent user                              | edit contact information     | update contact information whenever necessary                          |","lastModifiedDate":"2024-03-21"},{"lineNumber":473,"author":{"gitId":"taeewonnn"},"content":"| `* *`    | user                                       | select a specific event      | search events by name without having to manually search","lastModifiedDate":"2024-03-21"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"taeewonnn"},"content":"--------------------------------------------------------","lastModifiedDate":"2024-03-21"},{"lineNumber":479,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":480,"author":{"gitId":"taeewonnn"},"content":"### Creating an Event","lastModifiedDate":"2024-03-21"},{"lineNumber":481,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":482,"author":{"gitId":"taeewonnn"},"content":"**Use Case: UC01 - Create an event**","lastModifiedDate":"2024-03-21"},{"lineNumber":483,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":484,"author":{"gitId":"taeewonnn"},"content":"**Actor:** User","lastModifiedDate":"2024-03-21"},{"lineNumber":485,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":486,"author":{"gitId":"taeewonnn"},"content":"**MSS:**","lastModifiedDate":"2024-03-21"},{"lineNumber":487,"author":{"gitId":"taeewonnn"},"content":"1. User provides the details of an event to be created.","lastModifiedDate":"2024-03-21"},{"lineNumber":488,"author":{"gitId":"taeewonnn"},"content":"2. Eventy displays the details of the event added by the User in the Event List.","lastModifiedDate":"2024-03-21"},{"lineNumber":489,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":490,"author":{"gitId":"taeewonnn"},"content":"*Use case ends*","lastModifiedDate":"2024-03-21"},{"lineNumber":491,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":492,"author":{"gitId":"taeewonnn"},"content":"**Extensions:**","lastModifiedDate":"2024-03-21"},{"lineNumber":493,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":494,"author":{"gitId":"taeewonnn"},"content":"1a. Details provided by User are incomplete or invalid.","lastModifiedDate":"2024-03-21"},{"lineNumber":495,"author":{"gitId":"taeewonnn"},"content":"- 1a1. Eventy displays an error message to alert the User. \u003c/br\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":496,"author":{"gitId":"taeewonnn"},"content":"  *Use case ends*","lastModifiedDate":"2024-03-21"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"taeewonnn"},"content":"1b. Event to be added already exists in Eventy.","lastModifiedDate":"2024-03-21"},{"lineNumber":499,"author":{"gitId":"taeewonnn"},"content":"- 1b1. Eventy displays an error message to alert the User. \u003c/br\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":500,"author":{"gitId":"taeewonnn"},"content":"  *Use case ends*","lastModifiedDate":"2024-03-21"},{"lineNumber":501,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":502,"author":{"gitId":"taeewonnn"},"content":"### Deleting an event","lastModifiedDate":"2024-03-21"},{"lineNumber":503,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":504,"author":{"gitId":"taeewonnn"},"content":"**Use case: UC02 - Delete an event**","lastModifiedDate":"2024-03-21"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":506,"author":{"gitId":"taeewonnn"},"content":"**Actor:** User","lastModifiedDate":"2024-03-21"},{"lineNumber":507,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":508,"author":{"gitId":"taeewonnn"},"content":"**Preconditions:** User has added at least one event.","lastModifiedDate":"2024-03-21"},{"lineNumber":509,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":510,"author":{"gitId":"taeewonnn"},"content":"**Guarantees:**","lastModifiedDate":"2024-03-21"},{"lineNumber":511,"author":{"gitId":"taeewonnn"},"content":"A successful deletion deletes an event from the event list.","lastModifiedDate":"2024-03-21"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"taeewonnn"},"content":"1.  Eventy shows a list of events.","lastModifiedDate":"2024-03-21"},{"lineNumber":516,"author":{"gitId":"taeewonnn"},"content":"2.  User requests to delete a specific event in the list.","lastModifiedDate":"2024-03-21"},{"lineNumber":517,"author":{"gitId":"taeewonnn"},"content":"3.  Eventy deletes the event.","lastModifiedDate":"2024-03-21"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"taeewonnn"},"content":"*Use case ends*","lastModifiedDate":"2024-03-21"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"taeewonnn"},"content":"**Extensions:**","lastModifiedDate":"2024-03-21"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"taeewonnn"},"content":"1a. The list is empty. \u003c/br\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":524,"author":{"gitId":"taeewonnn"},"content":"- 1a1. Eventy displays an error message to alert the User. \u003c/br\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":525,"author":{"gitId":"taeewonnn"},"content":"  *Use case ends*","lastModifiedDate":"2024-03-21"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"taeewonnn"},"content":"2a.  Details provided by User are incomplete or invalid.","lastModifiedDate":"2024-03-21"},{"lineNumber":528,"author":{"gitId":"taeewonnn"},"content":"- 2a1. Eventy displays an error message to alert the User. \u003c/br\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":529,"author":{"gitId":"taeewonnn"},"content":"  *Use case resumes at step 2.*","lastModifiedDate":"2024-03-21"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"taeewonnn"},"content":"### Adding participants contact to the global list","lastModifiedDate":"2024-03-21"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"taeewonnn"},"content":"**Use case: UC03 - Add participants contact**","lastModifiedDate":"2024-03-21"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"taeewonnn"},"content":"**Actor:** User","lastModifiedDate":"2024-03-21"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"taeewonnn"},"content":"**Guarantees:**","lastModifiedDate":"2024-03-21"},{"lineNumber":538,"author":{"gitId":"taeewonnn"},"content":"A successful addition adds a participant to the global list.","lastModifiedDate":"2024-03-21"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"taeewonnn"},"content":"**MSS**","lastModifiedDate":"2024-03-21"},{"lineNumber":541,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":542,"author":{"gitId":"taeewonnn"},"content":"1.  User provides the detail of the contact to be added.","lastModifiedDate":"2024-03-21"},{"lineNumber":543,"author":{"gitId":"taeewonnn"},"content":"2.  Eventy displays the details of the contact added by the user. \u003c/br\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":544,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":545,"author":{"gitId":"taeewonnn"},"content":"*Use case ends*","lastModifiedDate":"2024-03-21"},{"lineNumber":546,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":547,"author":{"gitId":"taeewonnn"},"content":"**Extensions:**","lastModifiedDate":"2024-03-21"},{"lineNumber":548,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":549,"author":{"gitId":"taeewonnn"},"content":"1a.  Details provided by User are incomplete or invalid","lastModifiedDate":"2024-03-21"},{"lineNumber":550,"author":{"gitId":"taeewonnn"},"content":"- 1a1. Eventy displays an error message to alert the User. \u003c/br\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":551,"author":{"gitId":"taeewonnn"},"content":"  *Use case ends*","lastModifiedDate":"2024-03-21"},{"lineNumber":552,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":553,"author":{"gitId":"taeewonnn"},"content":"### Deleting participant","lastModifiedDate":"2024-03-21"},{"lineNumber":554,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":555,"author":{"gitId":"taeewonnn"},"content":"**Use Case: UC04 - Delete a participant from the global participant list**","lastModifiedDate":"2024-03-21"},{"lineNumber":556,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":557,"author":{"gitId":"taeewonnn"},"content":"**Actor:** User","lastModifiedDate":"2024-03-21"},{"lineNumber":558,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":559,"author":{"gitId":"taeewonnn"},"content":"**Preconditions:**","lastModifiedDate":"2024-03-21"},{"lineNumber":560,"author":{"gitId":"taeewonnn"},"content":"User has added one or more participant to the global participant list.","lastModifiedDate":"2024-03-21"},{"lineNumber":561,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":562,"author":{"gitId":"taeewonnn"},"content":"**Guarantees:**","lastModifiedDate":"2024-03-21"},{"lineNumber":563,"author":{"gitId":"taeewonnn"},"content":"A successful deletion deletes the participant from both the global list and all the events he participates in.","lastModifiedDate":"2024-03-21"},{"lineNumber":564,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":565,"author":{"gitId":"taeewonnn"},"content":"**MSS:**","lastModifiedDate":"2024-03-21"},{"lineNumber":566,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":567,"author":{"gitId":"taeewonnn"},"content":"1. User deletes a participant.","lastModifiedDate":"2024-03-21"},{"lineNumber":568,"author":{"gitId":"taeewonnn"},"content":"2. Eventy displays the updated global participant list. \u003c/br\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":569,"author":{"gitId":"taeewonnn"},"content":"   *Use case ends*","lastModifiedDate":"2024-03-21"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":571,"author":{"gitId":"taeewonnn"},"content":"**Extensions:**","lastModifiedDate":"2024-03-21"},{"lineNumber":572,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":573,"author":{"gitId":"taeewonnn"},"content":"1a. Participant index provided by the User is invalid.","lastModifiedDate":"2024-03-21"},{"lineNumber":574,"author":{"gitId":"taeewonnn"},"content":"- 1a1. Eventy displays an error message to alert the User. \u003c/br\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":575,"author":{"gitId":"taeewonnn"},"content":"  *Use case resumes at step 2.*","lastModifiedDate":"2024-03-21"},{"lineNumber":576,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":577,"author":{"gitId":"taeewonnn"},"content":"### Removing participants from a specific event","lastModifiedDate":"2024-03-21"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"taeewonnn"},"content":"**Use case: UC05 - Remove a participant from the specified event**","lastModifiedDate":"2024-03-21"},{"lineNumber":580,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":581,"author":{"gitId":"taeewonnn"},"content":"**Actor:** User","lastModifiedDate":"2024-03-21"},{"lineNumber":582,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":583,"author":{"gitId":"taeewonnn"},"content":"**Preconditions:** User has added one or more participant to the specified event.","lastModifiedDate":"2024-03-21"},{"lineNumber":584,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":585,"author":{"gitId":"taeewonnn"},"content":"**MSS:**","lastModifiedDate":"2024-03-21"},{"lineNumber":586,"author":{"gitId":"taeewonnn"},"content":"1. User requests to remove a participant from a certain event.","lastModifiedDate":"2024-03-21"},{"lineNumber":587,"author":{"gitId":"taeewonnn"},"content":"2. Eventy remove the participant from the event. \u003c/br\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":588,"author":{"gitId":"taeewonnn"},"content":"   *Use case ends*","lastModifiedDate":"2024-03-21"},{"lineNumber":589,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":590,"author":{"gitId":"taeewonnn"},"content":"**Extensions:**","lastModifiedDate":"2024-03-21"},{"lineNumber":591,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":592,"author":{"gitId":"taeewonnn"},"content":"1a. The event index provided by the User is invalid.","lastModifiedDate":"2024-03-21"},{"lineNumber":593,"author":{"gitId":"taeewonnn"},"content":"- 1a1. Eventy displays an error message to alert the User. \u003c/br\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":594,"author":{"gitId":"taeewonnn"},"content":"  *Use case ends*","lastModifiedDate":"2024-03-21"},{"lineNumber":595,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":596,"author":{"gitId":"taeewonnn"},"content":"1b. Participant index provided by the User is invalid.","lastModifiedDate":"2024-03-21"},{"lineNumber":597,"author":{"gitId":"taeewonnn"},"content":"- 1a1. Eventy displays an error message to alert the User. \u003c/br\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":598,"author":{"gitId":"taeewonnn"},"content":"  *Use case ends*","lastModifiedDate":"2024-03-21"},{"lineNumber":599,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":600,"author":{"gitId":"taeewonnn"},"content":"### Selecting an event","lastModifiedDate":"2024-03-21"},{"lineNumber":601,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":602,"author":{"gitId":"taeewonnn"},"content":"**Use Case: UC06 - Select an event from the event list**","lastModifiedDate":"2024-03-21"},{"lineNumber":603,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":604,"author":{"gitId":"taeewonnn"},"content":"**Actor:** User","lastModifiedDate":"2024-03-21"},{"lineNumber":605,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":606,"author":{"gitId":"taeewonnn"},"content":"**Preconditions:** User has added one or more events to the event list.","lastModifiedDate":"2024-03-21"},{"lineNumber":607,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":608,"author":{"gitId":"taeewonnn"},"content":"**Guarantees:**","lastModifiedDate":"2024-03-21"},{"lineNumber":609,"author":{"gitId":"taeewonnn"},"content":"A successful selection displays the event details.","lastModifiedDate":"2024-03-21"},{"lineNumber":610,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":611,"author":{"gitId":"taeewonnn"},"content":"**MSS:**","lastModifiedDate":"2024-03-21"},{"lineNumber":612,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":613,"author":{"gitId":"taeewonnn"},"content":"1. User selects an event.","lastModifiedDate":"2024-03-21"},{"lineNumber":614,"author":{"gitId":"taeewonnn"},"content":"2. Eventy displays the details of the selected event. \u003c/br\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":615,"author":{"gitId":"taeewonnn"},"content":"   *Use case ends*","lastModifiedDate":"2024-03-21"},{"lineNumber":616,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":617,"author":{"gitId":"taeewonnn"},"content":"**Extensions:**","lastModifiedDate":"2024-03-21"},{"lineNumber":618,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":619,"author":{"gitId":"taeewonnn"},"content":"1a. Event index provided by User is invalid.","lastModifiedDate":"2024-03-21"},{"lineNumber":620,"author":{"gitId":"taeewonnn"},"content":"- 1a1. Eventy displays an error message to alert the User. \u003c/br\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":621,"author":{"gitId":"taeewonnn"},"content":"  *Use case ends*","lastModifiedDate":"2024-03-21"},{"lineNumber":622,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":623,"author":{"gitId":"taeewonnn"},"content":"### Add a participant to an event","lastModifiedDate":"2024-03-21"},{"lineNumber":624,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":625,"author":{"gitId":"taeewonnn"},"content":"**Use Case: UC07 - Add a participant to an event**","lastModifiedDate":"2024-03-21"},{"lineNumber":626,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":627,"author":{"gitId":"taeewonnn"},"content":"**Actor:** User","lastModifiedDate":"2024-03-21"},{"lineNumber":628,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":629,"author":{"gitId":"taeewonnn"},"content":"**Preconditions:**","lastModifiedDate":"2024-03-21"},{"lineNumber":630,"author":{"gitId":"taeewonnn"},"content":"User has added one or more contacts to the global contact list.","lastModifiedDate":"2024-03-21"},{"lineNumber":631,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":632,"author":{"gitId":"taeewonnn"},"content":"**Guarantees:**","lastModifiedDate":"2024-03-21"},{"lineNumber":633,"author":{"gitId":"taeewonnn"},"content":"A successful addition adds a participant from the global list to the selected event.","lastModifiedDate":"2024-03-21"},{"lineNumber":634,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":635,"author":{"gitId":"taeewonnn"},"content":"**MSS:**","lastModifiedDate":"2024-03-21"},{"lineNumber":636,"author":{"gitId":"taeewonnn"},"content":"1. User inputs the index of participant to be added.","lastModifiedDate":"2024-03-21"},{"lineNumber":637,"author":{"gitId":"taeewonnn"},"content":"2. Eventy displays the added participant in the panel showing list of participants in selected event. \u003c/br\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":638,"author":{"gitId":"taeewonnn"},"content":"   *Use case ends*","lastModifiedDate":"2024-03-21"},{"lineNumber":639,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":640,"author":{"gitId":"taeewonnn"},"content":"**Extensions:**","lastModifiedDate":"2024-03-21"},{"lineNumber":641,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":642,"author":{"gitId":"taeewonnn"},"content":"1a. Index provided by user is invalid/out of range of global contact list.","lastModifiedDate":"2024-03-21"},{"lineNumber":643,"author":{"gitId":"taeewonnn"},"content":"- 1a1. Eventy displays an error message to alert the User. \u003c/br\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":644,"author":{"gitId":"taeewonnn"},"content":"  *Use case ends*","lastModifiedDate":"2024-03-21"},{"lineNumber":645,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":646,"author":{"gitId":"taeewonnn"},"content":"1b. Contact to be added already exists in selected event.","lastModifiedDate":"2024-03-21"},{"lineNumber":647,"author":{"gitId":"taeewonnn"},"content":"- 1b1. Eventy displays an error message to alert the User. \u003c/br\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":648,"author":{"gitId":"taeewonnn"},"content":"  *Use case ends*","lastModifiedDate":"2024-03-21"},{"lineNumber":649,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":650,"author":{"gitId":"taeewonnn"},"content":"1b. User does not provide an index.","lastModifiedDate":"2024-03-21"},{"lineNumber":651,"author":{"gitId":"taeewonnn"},"content":"- 1b1. Eventy displays an error message to alert the User. \u003c/br\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":652,"author":{"gitId":"taeewonnn"},"content":"  *Use case ends*","lastModifiedDate":"2024-03-21"},{"lineNumber":653,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":654,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":655,"author":{"gitId":"taeewonnn"},"content":"### Non-Functional Requirements","lastModifiedDate":"2024-03-21"},{"lineNumber":656,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":657,"author":{"gitId":"taeewonnn"},"content":"1. The user should be able to use the application smoothly with a device running mainstream OS with Java 11 or above installed.","lastModifiedDate":"2024-03-21"},{"lineNumber":658,"author":{"gitId":"taeewonnn"},"content":"2. The application should be able to store up to 1000 participants and 50 events without a reduction in speed.","lastModifiedDate":"2024-03-21"},{"lineNumber":659,"author":{"gitId":"taeewonnn"},"content":"3. A user familiar with CLI applications with a reasonable typing speed should be able to navigate commands faster than using the mouse.","lastModifiedDate":"2024-03-21"},{"lineNumber":660,"author":{"gitId":"taeewonnn"},"content":"4. The user interface should be simple, clear, easily understandable and fast to navigate.","lastModifiedDate":"2024-03-21"},{"lineNumber":661,"author":{"gitId":"taeewonnn"},"content":"5. The application should gracefully handle errors by displaying error messages to prevent system crashes and data corruption.","lastModifiedDate":"2024-03-21"},{"lineNumber":662,"author":{"gitId":"taeewonnn"},"content":"6. The application should be released as a free application to the general public.","lastModifiedDate":"2024-03-21"},{"lineNumber":663,"author":{"gitId":"taeewonnn"},"content":"7. The average command response time of Eventy should be less than a second.","lastModifiedDate":"2024-03-21"},{"lineNumber":664,"author":{"gitId":"taeewonnn"},"content":"8. The application should consume no more than 200Mb of memory when holding less than 1000 participants and 50 events.","lastModifiedDate":"2024-03-21"},{"lineNumber":665,"author":{"gitId":"taeewonnn"},"content":"9. The application should launch in less than 5 seconds.","lastModifiedDate":"2024-03-21"},{"lineNumber":666,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":668,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"taeewonnn"},"content":"* **Mainstream OS:** Windows, Linux, Unix, OS-X","lastModifiedDate":"2024-03-21"},{"lineNumber":670,"author":{"gitId":"taeewonnn"},"content":"* **Eventy:** Name of the application.","lastModifiedDate":"2024-03-21"},{"lineNumber":671,"author":{"gitId":"taeewonnn"},"content":"* **Global participant list:** List of participants that are saved in the application.","lastModifiedDate":"2024-03-21"},{"lineNumber":672,"author":{"gitId":"taeewonnn"},"content":"* **Event list:** List of events created in the application to be managed.","lastModifiedDate":"2024-03-21"},{"lineNumber":673,"author":{"gitId":"taeewonnn"},"content":"* **Event participant list:** List of participants in the specific event.","lastModifiedDate":"2024-03-21"},{"lineNumber":674,"author":{"gitId":"taeewonnn"},"content":"* **Participant:** The contact whose information is stored in the application storage.","lastModifiedDate":"2024-03-21"},{"lineNumber":675,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":676,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":677,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":678,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":679,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":680,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":681,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":682,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":683,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":684,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":685,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":686,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":687,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":688,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":689,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":690,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":691,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":692,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":693,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":694,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":695,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":696,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":697,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":698,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":699,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":700,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":701,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":702,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":703,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":704,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":705,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":706,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":707,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":708,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":709,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":710,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":711,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":712,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":713,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":714,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":715,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":716,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":717,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":718,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":719,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":720,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":721,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":722,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":723,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":724,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":725,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":726,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":727,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":728,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":729,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Apzure":51,"nusliuyifan":4,"ChocoRagdoll":9,"-":322,"taeewonnn":343}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"User Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"taeewonnn"},"content":"# Eventy User Guide","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"taeewonnn"},"content":"## Introduction ","lastModifiedDate":"2024-04-10"},{"lineNumber":10,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":11,"author":{"gitId":"taeewonnn"},"content":"**Eventy** is a contact management application which offers a new standard of streamlined and automated contact organization.","lastModifiedDate":"2024-04-10"},{"lineNumber":12,"author":{"gitId":"taeewonnn"},"content":"Eventy is a combination of Command Line Interface(CLI) and Graphical User Interface(GUI), which entails both fast typing","lastModifiedDate":"2024-04-10"},{"lineNumber":13,"author":{"gitId":"taeewonnn"},"content":"and visual representation.","lastModifiedDate":"2024-04-10"},{"lineNumber":14,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":15,"author":{"gitId":"taeewonnn"},"content":"The application is **tailored specifically for student event organizers**, providing great benefits to event planning.","lastModifiedDate":"2024-04-10"},{"lineNumber":16,"author":{"gitId":"taeewonnn"},"content":"However, with the versatility and flexibility of the application, anyone can use it with ease.","lastModifiedDate":"2024-04-10"},{"lineNumber":17,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":18,"author":{"gitId":"taeewonnn"},"content":"**Bid farewell to troublesome event management** as Eventy will serve as your single source of truth ","lastModifiedDate":"2024-04-10"},{"lineNumber":19,"author":{"gitId":"taeewonnn"},"content":"for storing, managing, planning and retrieving all contact-related information.","lastModifiedDate":"2024-04-10"},{"lineNumber":20,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":21,"author":{"gitId":"taeewonnn"},"content":"## Table of Contents","lastModifiedDate":"2024-04-10"},{"lineNumber":22,"author":{"gitId":"taeewonnn"},"content":"* [Introduction](#introduction)","lastModifiedDate":"2024-04-10"},{"lineNumber":23,"author":{"gitId":"taeewonnn"},"content":"* [Table of Contents](#table-of-contents)","lastModifiedDate":"2024-04-10"},{"lineNumber":24,"author":{"gitId":"taeewonnn"},"content":"* [1. Quick start](#1-quick-start)","lastModifiedDate":"2024-04-10"},{"lineNumber":25,"author":{"gitId":"taeewonnn"},"content":"* [2. UI Layout Description](#2-ui-layout-description)","lastModifiedDate":"2024-04-10"},{"lineNumber":26,"author":{"gitId":"taeewonnn"},"content":"* [3. Features](#3-features)","lastModifiedDate":"2024-04-10"},{"lineNumber":27,"author":{"gitId":"taeewonnn"},"content":"    * [3.1 Event Management](#31-event-management)","lastModifiedDate":"2024-04-10"},{"lineNumber":28,"author":{"gitId":"taeewonnn"},"content":"        * [3.1.1 Creating an event](#311-creating-an-event-addev)","lastModifiedDate":"2024-04-10"},{"lineNumber":29,"author":{"gitId":"taeewonnn"},"content":"        * [3.1.2 Editing an event](#312-editing-an-event-editev)","lastModifiedDate":"2024-04-10"},{"lineNumber":30,"author":{"gitId":"taeewonnn"},"content":"        * [3.1.3 Deleting an event](#313-deleting-an-event-delev)","lastModifiedDate":"2024-04-10"},{"lineNumber":31,"author":{"gitId":"taeewonnn"},"content":"        * [3.1.4 Selecting an event](#314-selecting-an-event-sel)","lastModifiedDate":"2024-04-10"},{"lineNumber":32,"author":{"gitId":"taeewonnn"},"content":"        * [3.1.5 Deselecting an event](#315-deselecting-an-event-desel)","lastModifiedDate":"2024-04-10"},{"lineNumber":33,"author":{"gitId":"taeewonnn"},"content":"    * [3.2 Contact Management](#32-contact-management)","lastModifiedDate":"2024-04-10"},{"lineNumber":34,"author":{"gitId":"taeewonnn"},"content":"        * [3.2.1 Adding person and their information to the global participant list](#321-adding-person-and-their-information-to-the-global-participant-list-addp)","lastModifiedDate":"2024-04-10"},{"lineNumber":35,"author":{"gitId":"taeewonnn"},"content":"        * [3.2.2 Inviting person to selected event](#322-inviting-person-to-selected-event-inv)","lastModifiedDate":"2024-04-10"},{"lineNumber":36,"author":{"gitId":"taeewonnn"},"content":"        * [3.2.3 Deleting a participant from the global participant list or an event participant list](#323-deleting-a-participant-from-the-global-participant-list-or-an-event-participant-list-delp)","lastModifiedDate":"2024-04-10"},{"lineNumber":37,"author":{"gitId":"taeewonnn"},"content":"        * [3.2.4 Editing existing participant](#324-editing-existing-participant-editp)","lastModifiedDate":"2024-04-10"},{"lineNumber":38,"author":{"gitId":"taeewonnn"},"content":"    * [3.3 Export function](#33-export-function)","lastModifiedDate":"2024-04-10"},{"lineNumber":39,"author":{"gitId":"taeewonnn"},"content":"        * [3.3.1 Exporting the chosen details of all the filtered persons to a CSV file](#331-exporting-the-chosen-details-of-all-the-filtered-persons-to-a-csv-file-export)","lastModifiedDate":"2024-04-10"},{"lineNumber":40,"author":{"gitId":"taeewonnn"},"content":"    * [3.4 Other commands](#34-other-commands)","lastModifiedDate":"2024-04-10"},{"lineNumber":41,"author":{"gitId":"taeewonnn"},"content":"        * [3.4.1 Clearing all entries](#341-clearing-all-entries-clear)","lastModifiedDate":"2024-04-10"},{"lineNumber":42,"author":{"gitId":"taeewonnn"},"content":"        * [3.4.2 Locating persons by name](#342-locating-persons-by-name-find)","lastModifiedDate":"2024-04-10"},{"lineNumber":43,"author":{"gitId":"taeewonnn"},"content":"        * [3.4.3 Viewing help](#343-viewing-help-help)","lastModifiedDate":"2024-04-10"},{"lineNumber":44,"author":{"gitId":"taeewonnn"},"content":"        * [3.4.4 Listing all persons](#344-listing-all-persons-list)","lastModifiedDate":"2024-04-10"},{"lineNumber":45,"author":{"gitId":"taeewonnn"},"content":"        * [3.4.5 Exiting the program](#345-exiting-the-program-exit)","lastModifiedDate":"2024-04-10"},{"lineNumber":46,"author":{"gitId":"taeewonnn"},"content":"* [4. FAQ](#4-faq)","lastModifiedDate":"2024-04-10"},{"lineNumber":47,"author":{"gitId":"taeewonnn"},"content":"* [5. Known issues](#5-known-issues)","lastModifiedDate":"2024-04-10"},{"lineNumber":48,"author":{"gitId":"taeewonnn"},"content":"* [6. Command summary](#6-command-summary)","lastModifiedDate":"2024-04-10"},{"lineNumber":49,"author":{"gitId":"taeewonnn"},"content":"* [7. Prefix translation table](#7-prefix-translation-table)","lastModifiedDate":"2024-04-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"taeewonnn"},"content":"## 1. Quick start","lastModifiedDate":"2024-04-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"taeewonnn"},"content":"2. Download the latest `eventy.jar` from [here](https://github.com/AY2324S2-CS2103T-T10-3/tp/releases).","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"nusliuyifan"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your Eventy.","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"nusliuyifan"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar eventy.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"taeewonnn"},"content":"5. Refer to the [Features](#3-features) below for details of each command.","lastModifiedDate":"2024-04-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"taeewonnn"},"content":"## 2. UI Layout Description","lastModifiedDate":"2024-04-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"taeewonnn"},"content":"![UiLayout](images/UILayout.png)","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"taeewonnn"},"content":"1. **Command Box:** Box for users to input the command to be executed by Eventy.","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"taeewonnn"},"content":"2. **Result Display Box:** Box that displays the result of executing the entered command.","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"taeewonnn"},"content":"3. **Event List:** Box that displays the all the events being planned.","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"taeewonnn"},"content":"4. **Event Participant List:** Box that displays all the participants in the selected event.","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"taeewonnn"},"content":"5. **Global Participant List:** Box that displays all the contacts saved.","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"taeewonnn"},"content":"## 3. Features","lastModifiedDate":"2024-04-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":81,"author":{"gitId":"taeewonnn"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":83,"author":{"gitId":"taeewonnn"},"content":"**Notes about the command format:**","lastModifiedDate":"2024-04-10"},{"lineNumber":84,"author":{"gitId":"taeewonnn"},"content":"* Words in `\u003cUPPER_CASE\u003e` are the parameters to be supplied by the user.","lastModifiedDate":"2024-04-10"},{"lineNumber":85,"author":{"gitId":"taeewonnn"},"content":"  e.g. in addp `n/\u003cNAME\u003e`, `\u003cNAME\u003e` is a parameter which can be used as `addp n/John Doe`.","lastModifiedDate":"2024-04-10"},{"lineNumber":86,"author":{"gitId":"taeewonnn"},"content":"* Items in square brackets are optional.","lastModifiedDate":"2024-04-10"},{"lineNumber":87,"author":{"gitId":"taeewonnn"},"content":"  e.g `n/\u003cNAME\u003e [t/\u003cTAG\u003e]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2024-04-10"},{"lineNumber":88,"author":{"gitId":"taeewonnn"},"content":"* Items with …​ after them can be used multiple times including zero times.","lastModifiedDate":"2024-04-10"},{"lineNumber":89,"author":{"gitId":"taeewonnn"},"content":"  e.g. `[t/\u003cTAG\u003e]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2024-04-10"},{"lineNumber":90,"author":{"gitId":"taeewonnn"},"content":"* Parameters can be in any order.","lastModifiedDate":"2024-04-10"},{"lineNumber":91,"author":{"gitId":"taeewonnn"},"content":"  e.g. if the command specifies `n/\u003cNAME\u003e p/\u003cPHONE_NUMBER\u003e`, `p/\u003cPHONE_NUMBER\u003e n/\u003cNAME\u003e` is also acceptable.","lastModifiedDate":"2024-04-10"},{"lineNumber":92,"author":{"gitId":"taeewonnn"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.","lastModifiedDate":"2024-04-10"},{"lineNumber":93,"author":{"gitId":"taeewonnn"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2024-04-10"},{"lineNumber":94,"author":{"gitId":"taeewonnn"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines","lastModifiedDate":"2024-04-10"},{"lineNumber":95,"author":{"gitId":"taeewonnn"},"content":"  as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2024-04-10"},{"lineNumber":96,"author":{"gitId":"ChocoRagdoll"},"content":"  ","lastModifiedDate":"2024-04-10"},{"lineNumber":97,"author":{"gitId":"taeewonnn"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":99,"author":{"gitId":"taeewonnn"},"content":"### 3.1 Event Management","lastModifiedDate":"2024-04-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"taeewonnn"},"content":"#### 3.1.1 Creating an event: `addev`","lastModifiedDate":"2024-04-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"taeewonnn"},"content":"**Format:** `addev ev/\u003cEVENT NAME\u003e d/\u003cDATE\u003e`","lastModifiedDate":"2024-04-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"Apzure"},"content":"**Description:**","lastModifiedDate":"2024-03-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"myang2020"},"content":"Adds a new event with the specified name and date for the Event List.","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":112,"author":{"gitId":"taeewonnn"},"content":"* `\u003cEVENT NAME\u003e` should only contain **alphanumeric** characters and **spaces**, and be **non-empty**.","lastModifiedDate":"2024-04-10"},{"lineNumber":113,"author":{"gitId":"taeewonnn"},"content":"* `\u003cDATE\u003e` should be in the **dd-MM-yyyy** format. E.g.`29-08-2024`","lastModifiedDate":"2024-04-10"},{"lineNumber":114,"author":{"gitId":"Apzure"},"content":"* You **cannot** add an event with the same case-sensitive name and date as an event that already exists in Eventy. ","lastModifiedDate":"2024-04-08"},{"lineNumber":115,"author":{"gitId":"ChocoRagdoll"},"content":"  ","lastModifiedDate":"2024-04-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":118,"author":{"gitId":"Apzure"},"content":"**Examples:**","lastModifiedDate":"2024-03-05"},{"lineNumber":119,"author":{"gitId":"Apzure"},"content":"- `addev ev/Hall dining d/07-08-2024` adds a new event with the name `Hall Dining`, with the date August 7th, 2024.","lastModifiedDate":"2024-04-08"},{"lineNumber":120,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":121,"author":{"gitId":"taeewonnn"},"content":"Before(event list box):","lastModifiedDate":"2024-04-10"},{"lineNumber":122,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":123,"author":{"gitId":"taeewonnn"},"content":"![before adding event](images/beforeaddev.png)","lastModifiedDate":"2024-04-04"},{"lineNumber":124,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":125,"author":{"gitId":"taeewonnn"},"content":"After(event list box):","lastModifiedDate":"2024-04-10"},{"lineNumber":126,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":127,"author":{"gitId":"taeewonnn"},"content":"![after adding event](images/addev.png)","lastModifiedDate":"2024-04-04"},{"lineNumber":128,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":129,"author":{"gitId":"taeewonnn"},"content":"#### 3.1.2 Editing an event: `editev`","lastModifiedDate":"2024-04-10"},{"lineNumber":130,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"taeewonnn"},"content":"**Format:** `editev \u003cEVENT INDEX\u003e [ev/\u003cEVENT NAME\u003e] [d/\u003cDATE\u003e]`","lastModifiedDate":"2024-04-10"},{"lineNumber":132,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":133,"author":{"gitId":"myang2020"},"content":"**Description:**","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":135,"author":{"gitId":"myang2020"},"content":"Edits an existing event based on index.","lastModifiedDate":"2024-04-03"},{"lineNumber":136,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":137,"author":{"gitId":"myang2020"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":138,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":139,"author":{"gitId":"myang2020"},"content":"**Caution:**","lastModifiedDate":"2024-04-03"},{"lineNumber":140,"author":{"gitId":"taeewonnn"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2024-04-10"},{"lineNumber":141,"author":{"gitId":"taeewonnn"},"content":"* Editing data fields with the same input is **allowed**.","lastModifiedDate":"2024-04-10"},{"lineNumber":142,"author":{"gitId":"taeewonnn"},"content":"* `\u003cEVENT INDEX\u003e` should be **non-empty**, a **positive integer** no larger than the number of events in the event list.","lastModifiedDate":"2024-04-10"},{"lineNumber":143,"author":{"gitId":"taeewonnn"},"content":"* `\u003cEVENT NAME\u003e` should only contain **alphanumeric** characters and **spaces**, and be **non-empty**.","lastModifiedDate":"2024-04-10"},{"lineNumber":144,"author":{"gitId":"taeewonnn"},"content":"* `\u003cDATE\u003e` should be in **dd-MM-yyyy** format","lastModifiedDate":"2024-04-10"},{"lineNumber":145,"author":{"gitId":"taeewonnn"},"content":"* Events are **not** to be edited to have an `\u003cEVENT NAME\u003e` and `\u003cDATE\u003e` that matches another event with the","lastModifiedDate":"2024-04-10"},{"lineNumber":146,"author":{"gitId":"taeewonnn"},"content":"  same case-sensitive `\u003cEVENT NAME\u003e` and `\u003cDATE\u003e` to avoid duplicate events.","lastModifiedDate":"2024-04-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":150,"author":{"gitId":"myang2020"},"content":"**Examples:**","lastModifiedDate":"2024-04-03"},{"lineNumber":151,"author":{"gitId":"myang2020"},"content":"- `editev 1 ev/Orientation camp` changes the event name of event indexed 1 to `Orientation camp`.","lastModifiedDate":"2024-04-03"},{"lineNumber":152,"author":{"gitId":"Apzure"},"content":"- `editev 3 d/08-09-2024` changes the event date of event indexed 3 to September 8th, 2024.","lastModifiedDate":"2024-04-08"},{"lineNumber":153,"author":{"gitId":"Apzure"},"content":"- `editev 7 ev/Party d/08-09-2024` changes the event name and date of event indexed 7 to Party and September 8th, 2024.","lastModifiedDate":"2024-04-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":155,"author":{"gitId":"taeewonnn"},"content":"#### 3.1.3 Deleting an event: `delev`","lastModifiedDate":"2024-04-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"taeewonnn"},"content":"**Format:** `delev \u003cEVENT INDEX\u003e`","lastModifiedDate":"2024-04-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"taeewonnn"},"content":"**Description:**","lastModifiedDate":"2024-03-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"taeewonnn"},"content":"Deletes an event and all its relevant information with its index in the event list.","lastModifiedDate":"2024-03-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"taeewonnn"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"taeewonnn"},"content":"**Caution:**","lastModifiedDate":"2024-03-05"},{"lineNumber":166,"author":{"gitId":"taeewonnn"},"content":"* `\u003cEVENT INDEX\u003e` should be **non-empty**, a **positive integer** no larger than the number of events in the event list.","lastModifiedDate":"2024-04-10"},{"lineNumber":167,"author":{"gitId":"taeewonnn"},"content":"* You cannot delete an event that is currently selected. ","lastModifiedDate":"2024-04-04"},{"lineNumber":168,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":169,"author":{"gitId":"taeewonnn"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"taeewonnn"},"content":"**Examples:**","lastModifiedDate":"2024-03-05"},{"lineNumber":172,"author":{"gitId":"taeewonnn"},"content":"- `delev 1` deletes the 1st event in the displayed list.","lastModifiedDate":"2024-03-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"taeewonnn"},"content":"#### 3.1.4 Selecting an event: `sel`","lastModifiedDate":"2024-04-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":176,"author":{"gitId":"taeewonnn"},"content":"**Format:** `sel \u003cEVENT INDEX\u003e`","lastModifiedDate":"2024-04-10"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":178,"author":{"gitId":"taeewonnn"},"content":"**Description:**","lastModifiedDate":"2024-04-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":180,"author":{"gitId":"Apzure"},"content":"Selects an event from the event list by the event index. This displays the persons involved with that event, and allows you to manage that event using other commands.","lastModifiedDate":"2024-04-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":182,"author":{"gitId":"taeewonnn"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":184,"author":{"gitId":"taeewonnn"},"content":"**Caution:**","lastModifiedDate":"2024-04-08"},{"lineNumber":185,"author":{"gitId":"Apzure"},"content":"  ","lastModifiedDate":"2024-04-11"},{"lineNumber":186,"author":{"gitId":"Apzure"},"content":"* `\u003cEVENT INDEX\u003e` should be **non-empty** and a **positive integer** no larger than the number of events in the event list.","lastModifiedDate":"2024-04-11"},{"lineNumber":187,"author":{"gitId":"ChocoRagdoll"},"content":"  ","lastModifiedDate":"2024-04-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":190,"author":{"gitId":"taeewonnn"},"content":"**Examples:**","lastModifiedDate":"2024-04-08"},{"lineNumber":191,"author":{"gitId":"Apzure"},"content":"- `sel 1` selects the 1st event.","lastModifiedDate":"2024-04-11"},{"lineNumber":192,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":193,"author":{"gitId":"Apzure"},"content":"Before (event list and event participant list box):","lastModifiedDate":"2024-04-11"},{"lineNumber":194,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":195,"author":{"gitId":"Apzure"},"content":"![before selecting event](images/beforeSel.png)","lastModifiedDate":"2024-04-11"},{"lineNumber":196,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":197,"author":{"gitId":"Apzure"},"content":"After (event list and event participant list box):","lastModifiedDate":"2024-04-11"},{"lineNumber":198,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":199,"author":{"gitId":"Apzure"},"content":"![after selecting event](images/afterSel.png)","lastModifiedDate":"2024-04-11"},{"lineNumber":200,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":201,"author":{"gitId":"taeewonnn"},"content":"#### 3.1.5 Deselecting an event: `desel`","lastModifiedDate":"2024-04-10"},{"lineNumber":202,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":203,"author":{"gitId":"taeewonnn"},"content":"**Format:** `desel`","lastModifiedDate":"2024-04-08"},{"lineNumber":204,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":205,"author":{"gitId":"taeewonnn"},"content":"**Description:**","lastModifiedDate":"2024-04-08"},{"lineNumber":206,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":207,"author":{"gitId":"taeewonnn"},"content":"Deselects the selected event and returns to the global participant list.","lastModifiedDate":"2024-04-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":209,"author":{"gitId":"taeewonnn"},"content":"**Examples:**","lastModifiedDate":"2024-04-08"},{"lineNumber":210,"author":{"gitId":"taeewonnn"},"content":"- After `select 3` which selects the event with index `3`, `desel` deselects the event indexed `3`.","lastModifiedDate":"2024-04-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":212,"author":{"gitId":"taeewonnn"},"content":"### 3.2 Contact Management","lastModifiedDate":"2024-04-10"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"taeewonnn"},"content":"#### 3.2.1 Adding person and their information to the global participant list: `addp`","lastModifiedDate":"2024-04-10"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":216,"author":{"gitId":"taeewonnn"},"content":"**Format:** `addp n/\u003cPARTICIPANT NAME\u003e p/\u003cPHONE NUMBER\u003e e/\u003cEMAIL\u003e a/\u003cADDRESS\u003e [t/\u003cTAGS\u003e]...`","lastModifiedDate":"2024-04-10"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"taeewonnn"},"content":"**Description:**","lastModifiedDate":"2024-03-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":220,"author":{"gitId":"taeewonnn"},"content":"Adds a new person to the app, allowing them to be added to an event later.","lastModifiedDate":"2024-04-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":222,"author":{"gitId":"taeewonnn"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":223,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":225,"author":{"gitId":"taeewonnn"},"content":"* `\u003cPARTICIPANT NAME\u003e` should be **alphabetic**, **non-empty** and **not longer than 64 characters**.","lastModifiedDate":"2024-04-10"},{"lineNumber":226,"author":{"gitId":"taeewonnn"},"content":"* `\u003cPHONE NUMBER\u003e` should only contain **numbers**, and it should be **at least 3 digits long**.","lastModifiedDate":"2024-04-10"},{"lineNumber":227,"author":{"gitId":"taeewonnn"},"content":"* `\u003cEMAIL\u003e` should be of the format `local-part@domain` and adhere to the following constraints:","lastModifiedDate":"2024-04-10"},{"lineNumber":228,"author":{"gitId":"Apzure"},"content":"  * The local-part should only contain alphanumeric characters and these special characters, excluding the parentheses, (`+_.-`). The local-part may not start or end with any special characters.","lastModifiedDate":"2024-04-08"},{"lineNumber":229,"author":{"gitId":"Apzure"},"content":"  * This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels separated by periods.","lastModifiedDate":"2024-04-08"},{"lineNumber":230,"author":{"gitId":"Apzure"},"content":"     - The domain name must:","lastModifiedDate":"2024-04-08"},{"lineNumber":231,"author":{"gitId":"Apzure"},"content":"       - end with a domain label at least 2 characters long","lastModifiedDate":"2024-04-08"},{"lineNumber":232,"author":{"gitId":"Apzure"},"content":"       - have each domain label start and end with alphanumeric characters","lastModifiedDate":"2024-04-08"},{"lineNumber":233,"author":{"gitId":"Apzure"},"content":"       - have each domain label consist of alphanumeric characters, separated only by hyphens, if any","lastModifiedDate":"2024-04-08"},{"lineNumber":234,"author":{"gitId":"taeewonnn"},"content":"* `\u003cADDRESS\u003e` Addresses can take **any values**, and it should be **non-empty**.","lastModifiedDate":"2024-04-10"},{"lineNumber":235,"author":{"gitId":"taeewonnn"},"content":"* `\u003cTAGS\u003e` should be **alphanumeric**.","lastModifiedDate":"2024-04-10"},{"lineNumber":236,"author":{"gitId":"Apzure"},"content":"* Adding a person with the same **case-sensitive name** that already exists is **not allowed**.  ","lastModifiedDate":"2024-04-08"},{"lineNumber":237,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":238,"author":{"gitId":"taeewonnn"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":240,"author":{"gitId":"taeewonnn"},"content":"**Examples:**","lastModifiedDate":"2024-03-05"},{"lineNumber":241,"author":{"gitId":"nusliuyifan"},"content":"- `addp n/David p/98987676 e/david@example.com a/NUS t/student` adds a participant named `David`","lastModifiedDate":"2024-03-26"},{"lineNumber":242,"author":{"gitId":"taeewonnn"},"content":"  with the phone number `98987676` and email of `david@example.com` to the displayed contacts list.","lastModifiedDate":"2024-03-11"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"taeewonnn"},"content":"#### 3.2.2 Inviting person to selected event: `inv`","lastModifiedDate":"2024-04-10"},{"lineNumber":245,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":246,"author":{"gitId":"taeewonnn"},"content":"**Format:** `inv \u003cPARTICIPANT INDEX\u003e`","lastModifiedDate":"2024-04-10"},{"lineNumber":247,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":248,"author":{"gitId":"ChocoRagdoll"},"content":"**Description:**","lastModifiedDate":"2024-03-13"},{"lineNumber":249,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":250,"author":{"gitId":"taeewonnn"},"content":"Invite participants from the global participant list to the selected event.","lastModifiedDate":"2024-04-08"},{"lineNumber":251,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":252,"author":{"gitId":"ChocoRagdoll"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":253,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":254,"author":{"gitId":"ChocoRagdoll"},"content":"**Caution:**","lastModifiedDate":"2024-03-13"},{"lineNumber":255,"author":{"gitId":"taeewonnn"},"content":"* `\u003cPARTICIPANT INDEX\u003e` should be **non-empty**, a **positive integer** no larger","lastModifiedDate":"2024-04-10"},{"lineNumber":256,"author":{"gitId":"taeewonnn"},"content":"  than the number of persons in the global participant list.","lastModifiedDate":"2024-04-08"},{"lineNumber":257,"author":{"gitId":"taeewonnn"},"content":"* Duplicate participants is **not allowed.**","lastModifiedDate":"2024-04-08"},{"lineNumber":258,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":259,"author":{"gitId":"ChocoRagdoll"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":260,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":261,"author":{"gitId":"ChocoRagdoll"},"content":"**Examples:**","lastModifiedDate":"2024-03-13"},{"lineNumber":262,"author":{"gitId":"taeewonnn"},"content":"- `inv 5` Adds participant indexed 5 to selected event.","lastModifiedDate":"2024-04-08"},{"lineNumber":263,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":264,"author":{"gitId":"taeewonnn"},"content":"Before(event list and event participant list box):","lastModifiedDate":"2024-04-10"},{"lineNumber":265,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":266,"author":{"gitId":"taeewonnn"},"content":"![before inviting participant](images/beforeinvite.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":267,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":268,"author":{"gitId":"taeewonnn"},"content":"After(event list and event participant list box):","lastModifiedDate":"2024-04-10"},{"lineNumber":269,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":270,"author":{"gitId":"taeewonnn"},"content":"![after inviting participant](images/afterinvite.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":271,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":272,"author":{"gitId":"taeewonnn"},"content":"#### 3.2.3 Deleting a participant from the global participant list or an event participant list: `delp`","lastModifiedDate":"2024-04-10"},{"lineNumber":273,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":274,"author":{"gitId":"taeewonnn"},"content":"**Format:** `delp \u003cPARTICIPANT INDEX\u003e`","lastModifiedDate":"2024-04-10"},{"lineNumber":275,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":276,"author":{"gitId":"ChocoRagdoll"},"content":"**Description:**","lastModifiedDate":"2024-03-13"},{"lineNumber":277,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":278,"author":{"gitId":"ChocoRagdoll"},"content":"- If **no event is selected**, this deletes the person from only the **global participant list**, but the person will","lastModifiedDate":"2024-04-10"},{"lineNumber":279,"author":{"gitId":"ChocoRagdoll"},"content":"  remain in all the events he/she will be taking or has taken part in.","lastModifiedDate":"2024-04-10"},{"lineNumber":280,"author":{"gitId":"ChocoRagdoll"},"content":"- If **an event is selected**, this only removes the participant from the event by **his/her index in the","lastModifiedDate":"2024-03-13"},{"lineNumber":281,"author":{"gitId":"ChocoRagdoll"},"content":"  event participant list**.","lastModifiedDate":"2024-03-13"},{"lineNumber":282,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":283,"author":{"gitId":"ChocoRagdoll"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":284,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":285,"author":{"gitId":"ChocoRagdoll"},"content":"**Caution:**","lastModifiedDate":"2024-03-13"},{"lineNumber":286,"author":{"gitId":"taeewonnn"},"content":"* `\u003cPARTICIPANT INDEX\u003e` should be **non-empty** and a **positive integer**.","lastModifiedDate":"2024-04-10"},{"lineNumber":287,"author":{"gitId":"taeewonnn"},"content":"* A participant\u0027s `\u003cPARTICIPANT INDEX\u003e` in an event participant list can be **different** from that in the global","lastModifiedDate":"2024-04-10"},{"lineNumber":288,"author":{"gitId":"taeewonnn"},"content":"  participant list.","lastModifiedDate":"2024-04-04"},{"lineNumber":289,"author":{"gitId":"taeewonnn"},"content":"* `\u003cPARTICIPANT INDEX\u003e` should be no larger than the number of participants in the global participant list if no event","lastModifiedDate":"2024-04-10"},{"lineNumber":290,"author":{"gitId":"taeewonnn"},"content":"  is selected.","lastModifiedDate":"2024-04-04"},{"lineNumber":291,"author":{"gitId":"taeewonnn"},"content":"* `\u003cPARTICIPANT INDEX\u003e` should be no larger than the number of participants in the event participant list if an event","lastModifiedDate":"2024-04-10"},{"lineNumber":292,"author":{"gitId":"taeewonnn"},"content":"  is selected.","lastModifiedDate":"2024-04-04"},{"lineNumber":293,"author":{"gitId":"taeewonnn"},"content":"* Deleting a participant in the global participants list will not delete the same participant in ","lastModifiedDate":"2024-04-05"},{"lineNumber":294,"author":{"gitId":"taeewonnn"},"content":"  all event participant list","lastModifiedDate":"2024-04-05"},{"lineNumber":295,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":296,"author":{"gitId":"ChocoRagdoll"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":297,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":298,"author":{"gitId":"ChocoRagdoll"},"content":"**Examples:**","lastModifiedDate":"2024-03-13"},{"lineNumber":299,"author":{"gitId":"taeewonnn"},"content":"- When no event is selected, `delp 9` deletes the 9th participant from the global participant list only.","lastModifiedDate":"2024-04-05"},{"lineNumber":300,"author":{"gitId":"ChocoRagdoll"},"content":"- `delp 9` after `sel 3` removes the 9th participant from the 3rd event\u0027s participant list.","lastModifiedDate":"2024-03-14"},{"lineNumber":301,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":302,"author":{"gitId":"taeewonnn"},"content":"#### 3.2.4 Editing existing participant: `editp`","lastModifiedDate":"2024-04-10"},{"lineNumber":303,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":304,"author":{"gitId":"taeewonnn"},"content":"**Format:** `editp \u003cPARTICIPANT INDEX\u003e [n/\u003cPARTICIPANT NAME\u003e] [p/\u003cPHONE NUMBER\u003e] [e/\u003cEMAIL\u003e] [a/\u003cADDRESS\u003e] [t/\u003cTAGS\u003e]...`","lastModifiedDate":"2024-04-10"},{"lineNumber":305,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":306,"author":{"gitId":"nusliuyifan"},"content":"**Description:**","lastModifiedDate":"2024-03-26"},{"lineNumber":307,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":308,"author":{"gitId":"nusliuyifan"},"content":"Updates the contact information of a participant in the app.","lastModifiedDate":"2024-03-26"},{"lineNumber":309,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":310,"author":{"gitId":"taeewonnn"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":311,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":312,"author":{"gitId":"nusliuyifan"},"content":"**Caution:**","lastModifiedDate":"2024-03-26"},{"lineNumber":313,"author":{"gitId":"taeewonnn"},"content":"* Editing a participant in the global participant list will edit the same participant in all event participant lists.","lastModifiedDate":"2024-04-05"},{"lineNumber":314,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2024-04-05"},{"lineNumber":315,"author":{"gitId":"taeewonnn"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative","lastModifiedDate":"2024-04-05"},{"lineNumber":316,"author":{"gitId":"taeewonnn"},"content":"* You can remove all the person’s tags by typing t/ without specifying any tags after it.","lastModifiedDate":"2024-04-05"},{"lineNumber":317,"author":{"gitId":"taeewonnn"},"content":"* `\u003cPARTICIPANT INDEX\u003e` should be **non-empty**, a **positive integer** no larger than ","lastModifiedDate":"2024-04-10"},{"lineNumber":318,"author":{"gitId":"taeewonnn"},"content":"  the number of participants in the global participant list.","lastModifiedDate":"2024-04-05"},{"lineNumber":319,"author":{"gitId":"taeewonnn"},"content":"* `\u003cPARTICIPANT NAME\u003e` should be **alphabetic**, **non-empty** and **not longer than 64 characters**.","lastModifiedDate":"2024-04-10"},{"lineNumber":320,"author":{"gitId":"taeewonnn"},"content":"* `\u003cPHONE NUMBER\u003e` should only contain **numbers**, and it should be **at least 3 digits long**.","lastModifiedDate":"2024-04-10"},{"lineNumber":321,"author":{"gitId":"taeewonnn"},"content":"* `\u003cEMAIL\u003e` should be of the format `local-part@domain` and adhere to the following constraints:","lastModifiedDate":"2024-04-10"},{"lineNumber":322,"author":{"gitId":"Apzure"},"content":"  * The local-part should only contain alphanumeric characters and these special characters, excluding the parentheses, (`+_.-`). The local-part may not start or end with any special characters.","lastModifiedDate":"2024-04-08"},{"lineNumber":323,"author":{"gitId":"Apzure"},"content":"  * This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels separated by periods.","lastModifiedDate":"2024-04-08"},{"lineNumber":324,"author":{"gitId":"Apzure"},"content":"     - The domain name must:","lastModifiedDate":"2024-04-08"},{"lineNumber":325,"author":{"gitId":"Apzure"},"content":"       - end with a domain label at least 2 characters long","lastModifiedDate":"2024-04-08"},{"lineNumber":326,"author":{"gitId":"Apzure"},"content":"       - have each domain label start and end with alphanumeric characters","lastModifiedDate":"2024-04-08"},{"lineNumber":327,"author":{"gitId":"Apzure"},"content":"       - have each domain label consist of alphanumeric characters, separated only by hyphens, if any","lastModifiedDate":"2024-04-08"},{"lineNumber":328,"author":{"gitId":"taeewonnn"},"content":"* `\u003cADDRESS\u003e` Addresses can take **any values**, and it should be **non-empty**.","lastModifiedDate":"2024-04-10"},{"lineNumber":329,"author":{"gitId":"taeewonnn"},"content":"* `\u003cTAGS\u003e` should be **alphanumeric**.","lastModifiedDate":"2024-04-10"},{"lineNumber":330,"author":{"gitId":"taeewonnn"},"content":"    * You can remove all the person\u0027s tags by typing `t/` without any tags after it.","lastModifiedDate":"2024-04-10"},{"lineNumber":331,"author":{"gitId":"Apzure"},"content":"* Adding a person with the same **case-sensitive name** that already exists is **not allowed**.  ","lastModifiedDate":"2024-04-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":333,"author":{"gitId":"taeewonnn"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":334,"author":{"gitId":"nusliuyifan"},"content":"  ","lastModifiedDate":"2024-03-26"},{"lineNumber":335,"author":{"gitId":"nusliuyifan"},"content":"**Examples:**","lastModifiedDate":"2024-03-26"},{"lineNumber":336,"author":{"gitId":"nusliuyifan"},"content":"- `editp 5 n/Max p/00000000 e/test@gmail.com` Edits contact details of participant indexed 5.","lastModifiedDate":"2024-03-26"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":338,"author":{"gitId":"taeewonnn"},"content":"### 3.3 Export function","lastModifiedDate":"2024-04-10"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":340,"author":{"gitId":"taeewonnn"},"content":"#### 3.3.1 Exporting the chosen details of all the filtered persons to a CSV file: `export`","lastModifiedDate":"2024-04-10"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":342,"author":{"gitId":"taeewonnn"},"content":"**Format:** `export [n/] [p/] [e/] [a/]`","lastModifiedDate":"2024-04-10"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":344,"author":{"gitId":"taeewonnn"},"content":"**Description:**","lastModifiedDate":"2024-04-04"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":346,"author":{"gitId":"ChocoRagdoll"},"content":"Exports only the chosen details of all filtered persons to a CSV file. Currently, the command only supports the export","lastModifiedDate":"2024-04-10"},{"lineNumber":347,"author":{"gitId":"ChocoRagdoll"},"content":"of name, phone, email and address. The command will not support the export of tags due to privacy concerns and rare","lastModifiedDate":"2024-04-10"},{"lineNumber":348,"author":{"gitId":"ChocoRagdoll"},"content":"usage. The exported information will be in the file `exported_participant_data.csv`.","lastModifiedDate":"2024-04-10"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":350,"author":{"gitId":"taeewonnn"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":352,"author":{"gitId":"taeewonnn"},"content":"**Caution:**","lastModifiedDate":"2024-04-04"},{"lineNumber":353,"author":{"gitId":"taeewonnn"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2024-04-05"},{"lineNumber":354,"author":{"gitId":"taeewonnn"},"content":"* `n/ p/ e/ a/` provided should be in **prefix**.","lastModifiedDate":"2024-04-05"},{"lineNumber":355,"author":{"gitId":"ChocoRagdoll"},"content":"* `Prefix` only recognizes the four prefixes written above. Any other unknown prefixes will be disregarded.","lastModifiedDate":"2024-04-10"},{"lineNumber":356,"author":{"gitId":"ChocoRagdoll"},"content":"* Make sure the `.csv` file is opened using the Notepad app or the equivalent. Using Microsoft Excel to open the `.csv`","lastModifiedDate":"2024-04-10"},{"lineNumber":357,"author":{"gitId":"ChocoRagdoll"},"content":"  file will cause unexpected behaviors due to Excel interpreting certain fields as numbers. For example, Excel will","lastModifiedDate":"2024-04-10"},{"lineNumber":358,"author":{"gitId":"ChocoRagdoll"},"content":"  recognize the phone number `00000000` as `0`.","lastModifiedDate":"2024-04-10"},{"lineNumber":359,"author":{"gitId":"ChocoRagdoll"},"content":"* Another `export` will overwrite the file created by the previous `export`, so make sure to save the old","lastModifiedDate":"2024-04-10"},{"lineNumber":360,"author":{"gitId":"ChocoRagdoll"},"content":"  `exported_participant_data.csv` somewhere else before doing another `export`.","lastModifiedDate":"2024-04-10"},{"lineNumber":361,"author":{"gitId":"ChocoRagdoll"},"content":"* Do not have the `exported_participant_data.csv` file opened while exporting, as this will cause Eventy to be unable to","lastModifiedDate":"2024-04-10"},{"lineNumber":362,"author":{"gitId":"ChocoRagdoll"},"content":"  overwrite the file.","lastModifiedDate":"2024-04-10"},{"lineNumber":363,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":364,"author":{"gitId":"taeewonnn"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":365,"author":{"gitId":"taeewonnn"},"content":"  ","lastModifiedDate":"2024-04-04"},{"lineNumber":366,"author":{"gitId":"taeewonnn"},"content":"**Examples:**","lastModifiedDate":"2024-04-04"},{"lineNumber":367,"author":{"gitId":"taeewonnn"},"content":"* `export n/` exports only the names of all the filtered persons.","lastModifiedDate":"2024-04-04"},{"lineNumber":368,"author":{"gitId":"taeewonnn"},"content":"* `export n/ p/` exports only the names and phone numbers of all the filtered persons.","lastModifiedDate":"2024-04-04"},{"lineNumber":369,"author":{"gitId":"taeewonnn"},"content":"* `export n/ p/ e/` exports only the names, phone numbers and emails of all the filtered persons.","lastModifiedDate":"2024-04-04"},{"lineNumber":370,"author":{"gitId":"taeewonnn"},"content":"* `export n/ p/ e/ a/` exports the names, phone numbers, emails and addresses of all the filtered persons.","lastModifiedDate":"2024-04-04"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":372,"author":{"gitId":"taeewonnn"},"content":"### 3.4 Other commands","lastModifiedDate":"2024-04-10"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":374,"author":{"gitId":"taeewonnn"},"content":"#### 3.4.1 Clearing all entries: `clear`","lastModifiedDate":"2024-04-10"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":376,"author":{"gitId":"taeewonnn"},"content":"**Format:** `clear`","lastModifiedDate":"2024-04-04"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":378,"author":{"gitId":"taeewonnn"},"content":"**Description:**","lastModifiedDate":"2024-04-04"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":380,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2024-04-04"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":382,"author":{"gitId":"ChocoRagdoll"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":384,"author":{"gitId":"taeewonnn"},"content":"**Caution:**","lastModifiedDate":"2024-04-05"},{"lineNumber":385,"author":{"gitId":"taeewonnn"},"content":"* This deletes all entries!! Be careful!!","lastModifiedDate":"2024-04-05"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":387,"author":{"gitId":"taeewonnn"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":389,"author":{"gitId":"taeewonnn"},"content":"#### 3.4.2 Locating persons by name: `find`","lastModifiedDate":"2024-04-10"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":391,"author":{"gitId":"Apzure"},"content":"**Format:**: `find [n/\u003cNAME\u003e \u003cMORE_NAMES\u003e] [t/\u003cTAG\u003e] [t/\u003cMORE_TAGS\u003e]`","lastModifiedDate":"2024-04-11"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":393,"author":{"gitId":"taeewonnn"},"content":"**Description:**","lastModifiedDate":"2024-04-04"},{"lineNumber":394,"author":{"gitId":"Apzure"},"content":"- If **no event is selected**, only persons from the **global participant list** will be included in the search.","lastModifiedDate":"2024-04-11"},{"lineNumber":395,"author":{"gitId":"Apzure"},"content":"- If **an event is selected**, only persons from the **event participant list** will be included in the search.","lastModifiedDate":"2024-04-11"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":397,"author":{"gitId":"Apzure"},"content":"* When searching only using names:","lastModifiedDate":"2024-04-11"},{"lineNumber":398,"author":{"gitId":"Apzure"},"content":"  - Persons who have at least one of the specified names will be returned (i.e. OR search) e.g. `find n/Hans Bo` will return `Hans Gruber`, `Bo Yang`.","lastModifiedDate":"2024-04-11"},{"lineNumber":399,"author":{"gitId":"Apzure"},"content":"* When searching only using tags:","lastModifiedDate":"2024-04-11"},{"lineNumber":400,"author":{"gitId":"Apzure"},"content":"  * Persons must have all the specified tags to be returned (AND search) e.g. `find t/friend t/family` will return a person with tags of `friend`, `family`, and `neighbour`, but not a person with only the tag of `friend`.","lastModifiedDate":"2024-04-11"},{"lineNumber":401,"author":{"gitId":"Apzure"},"content":"* If you search by both names and tags:","lastModifiedDate":"2024-04-11"},{"lineNumber":402,"author":{"gitId":"Apzure"},"content":"  * Persons must match both the name and tag criteria to be returned. `find n/Hans t/friend` will return a person with name `Hans Gruber` with a tag of `friend`, but it will not return a person with name `Hans Bo`, without a tag of `friend` or a person with name `Bo Yang`, with a tag of `friend`.","lastModifiedDate":"2024-04-11"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":405,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":407,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2024-04-04"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":409,"author":{"gitId":"Apzure"},"content":"* At least one optional field should be provided.","lastModifiedDate":"2024-04-11"},{"lineNumber":410,"author":{"gitId":"Apzure"},"content":"* `\u003cNAME\u003e`should be **non-empty**, if provided e.g. `find n/` is not allowed.","lastModifiedDate":"2024-04-11"},{"lineNumber":411,"author":{"gitId":"Apzure"},"content":"* `\u003cTAG\u003e` should be **alphanumeric** and **non-empty**, if provided e.g. `find t/friend!$` and `find t/` are not allowed.","lastModifiedDate":"2024-04-11"},{"lineNumber":412,"author":{"gitId":"Apzure"},"content":"* The search by `\u003cNAME\u003e` is case-insensitive. e.g. `hans` will match `Hans`.","lastModifiedDate":"2024-04-11"},{"lineNumber":413,"author":{"gitId":"Apzure"},"content":"* The search by `\u003cTAG\u003e` is case-sensitive. e.g. `friend` will not match `Friend`.","lastModifiedDate":"2024-04-11"},{"lineNumber":414,"author":{"gitId":"Apzure"},"content":"* The order of the name/tag does not matter. e.g. `Hans Bo` is equivalent to `Bo Hans`.","lastModifiedDate":"2024-04-11"},{"lineNumber":415,"author":{"gitId":"Apzure"},"content":"* Only full words will be matched for both names and tags e.g. `han` will not match `hans`.","lastModifiedDate":"2024-04-11"},{"lineNumber":416,"author":{"gitId":"taeewonnn"},"content":"  \u003c/box\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":417,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":418,"author":{"gitId":"taeewonnn"},"content":"**Examples:**","lastModifiedDate":"2024-04-04"},{"lineNumber":419,"author":{"gitId":"Apzure"},"content":"* `find n/John` returns `john` and `John Doe`.","lastModifiedDate":"2024-04-11"},{"lineNumber":420,"author":{"gitId":"Apzure"},"content":"* `find n/alex li` returns `Alex Yeoh`, `David Li`.","lastModifiedDate":"2024-04-11"},{"lineNumber":421,"author":{"gitId":"Apzure"},"content":"* `find t/friend` returns `john` and `David`, who both have the `friend` tag.","lastModifiedDate":"2024-04-11"},{"lineNumber":422,"author":{"gitId":"Apzure"},"content":"* `find t/friend t/collegues`  returns `john`, who has the `friend` and `colleagues` tags.","lastModifiedDate":"2024-04-11"},{"lineNumber":423,"author":{"gitId":"Apzure"},"content":"* `find t/friend t/collegues`  returns `tom`, who has the `friend`, `coworker` and `colleagues` tags.","lastModifiedDate":"2024-04-11"},{"lineNumber":424,"author":{"gitId":"Apzure"},"content":"* `find n/Alex t/friend t/teacher`  returns `Alex Yeoh`, who has the `friend` and `teacher` tags, but not `Alex Lee` who only has the `friend` tag.\u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":425,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":426,"author":{"gitId":"Apzure"},"content":"Before `find n/Alex t/friend t/teacher`:","lastModifiedDate":"2024-04-11"},{"lineNumber":427,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":428,"author":{"gitId":"Apzure"},"content":"![before find n/Alex t/friend t/teacher](images/beforeFindAlexResult.png)","lastModifiedDate":"2024-04-11"},{"lineNumber":429,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":430,"author":{"gitId":"Apzure"},"content":"After `find n/Alex t/friend t/teacher`:","lastModifiedDate":"2024-04-11"},{"lineNumber":431,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":432,"author":{"gitId":"Apzure"},"content":"![after find n/Alex t/friend t/teacher](images/afterFindAlexResult.png)","lastModifiedDate":"2024-04-11"},{"lineNumber":433,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":434,"author":{"gitId":"taeewonnn"},"content":"#### 3.4.3 Viewing help: `help`","lastModifiedDate":"2024-04-10"},{"lineNumber":435,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":436,"author":{"gitId":"taeewonnn"},"content":"**Format:** `help`","lastModifiedDate":"2024-04-04"},{"lineNumber":437,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":438,"author":{"gitId":"taeewonnn"},"content":"**Description:**","lastModifiedDate":"2024-04-04"},{"lineNumber":439,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":440,"author":{"gitId":"nusliuyifan"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2024-03-26"},{"lineNumber":441,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":442,"author":{"gitId":"nusliuyifan"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2024-03-26"},{"lineNumber":443,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":444,"author":{"gitId":"taeewonnn"},"content":"#### 3.4.4 Listing all persons: `list`","lastModifiedDate":"2024-04-10"},{"lineNumber":445,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":446,"author":{"gitId":"Apzure"},"content":"**Format:** `list`","lastModifiedDate":"2024-04-11"},{"lineNumber":447,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":448,"author":{"gitId":"taeewonnn"},"content":"**Description:**","lastModifiedDate":"2024-04-04"},{"lineNumber":449,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":450,"author":{"gitId":"taeewonnn"},"content":"- If **no event is selected**, this shows a list of all persons in the **global participant list**.","lastModifiedDate":"2024-04-04"},{"lineNumber":451,"author":{"gitId":"taeewonnn"},"content":"- If **an event is selected**, this shows a list of all persons in the **event participant list**.","lastModifiedDate":"2024-04-04"},{"lineNumber":452,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":453,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":454,"author":{"gitId":"taeewonnn"},"content":"#### 3.4.5 Exiting the program: `exit`","lastModifiedDate":"2024-04-10"},{"lineNumber":455,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":456,"author":{"gitId":"Apzure"},"content":"**Format:** `exit`","lastModifiedDate":"2024-04-11"},{"lineNumber":457,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":458,"author":{"gitId":"nusliuyifan"},"content":"Exits the program.","lastModifiedDate":"2024-03-26"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":461,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"taeewonnn"},"content":"## 4. FAQ","lastModifiedDate":"2024-04-10"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"taeewonnn"},"content":"## 5. Known issues","lastModifiedDate":"2024-04-10"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":472,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":474,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":476,"author":{"gitId":"taeewonnn"},"content":"## 6. Command summary","lastModifiedDate":"2024-04-10"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"nusliuyifan"},"content":"| Action                                      | Format, Examples                                                                                                      |","lastModifiedDate":"2024-03-17"},{"lineNumber":479,"author":{"gitId":"nusliuyifan"},"content":"|---------------------------------------------|-----------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-03-17"},{"lineNumber":480,"author":{"gitId":"Apzure"},"content":"| **Add Event**                               | `addev ev/\u003cevent name\u003e d/\u003cdate\u003e` \u003cbr\u003e e.g., `addev ev/Hall dining d/07-08-2024`                                  |","lastModifiedDate":"2024-04-08"},{"lineNumber":481,"author":{"gitId":"myang2020"},"content":"| **Edit Event**                              | `editev INDEX ev/\u003cevent name\u003e d/\u003cdate\u003e` \u003cbr\u003e e.g., `editev 1 ev/Party`                                                |","lastModifiedDate":"2024-04-03"},{"lineNumber":482,"author":{"gitId":"nusliuyifan"},"content":"| **Delete Event**                            | `delev \u003cindex\u003e` \u003cbr\u003e e.g., `delev 1`                                                                                  |","lastModifiedDate":"2024-03-17"},{"lineNumber":483,"author":{"gitId":"taeewonnn"},"content":"| **Add Participant**                         | `addp n\u003cparticipant name\u003e p/\u003cphone number\u003e e/\u003cemail\u003e a/\u003caddress\u003e t/\u003ctags\u003e` \u003cbr\u003e e.g., `addp n/David p/98987676 e/david@example.com a/NUS t/friends` |","lastModifiedDate":"2024-04-04"},{"lineNumber":484,"author":{"gitId":"nusliuyifan"},"content":"| **Selecting Event**                         | `sel \u003cevent index\u003e` \u003cbr\u003e e.g., `sel                                                                                   |","lastModifiedDate":"2024-03-17"},{"lineNumber":485,"author":{"gitId":"nusliuyifan"},"content":"| **Deselecting Event**                       | `desel` deselect the current selected event                                                                           |","lastModifiedDate":"2024-03-17"},{"lineNumber":486,"author":{"gitId":"taeewonnn"},"content":"| **Deleting a participant from global list** | `delp 3` delete the 3rd participant from the global participant list                                                  |","lastModifiedDate":"2024-04-04"},{"lineNumber":487,"author":{"gitId":"taeewonnn"},"content":"| **Deleting a participant from an event**    | `delp 3` delete the 3rd participant from event list of selected event                                                 |","lastModifiedDate":"2024-04-04"},{"lineNumber":488,"author":{"gitId":"taeewonnn"},"content":"| **Edit existing participant**               | `editp 5 n/Max p/00000000 e/test@gmail.com a/NUS t/friends` Edits contact details of participant indexed 5            |","lastModifiedDate":"2024-04-04"},{"lineNumber":489,"author":{"gitId":"taeewonnn"},"content":"| **Invite person to a selected event**       | `inv 5` Adds participant indexed 5 to selected event                                                                  |","lastModifiedDate":"2024-04-04"},{"lineNumber":490,"author":{"gitId":"taeewonnn"},"content":"| **Locating persons by name/tag**            | `find n/John t/friends` returns `john`                                                                                |","lastModifiedDate":"2024-04-04"},{"lineNumber":491,"author":{"gitId":"nusliuyifan"},"content":"| **Clear all entries**                       | `clear` clear all entries from eventy                                                                                 |","lastModifiedDate":"2024-03-26"},{"lineNumber":492,"author":{"gitId":"nusliuyifan"},"content":"| **Viewing help**                            | `help` Shows a message explaining how to access the help page                                                         |","lastModifiedDate":"2024-03-26"},{"lineNumber":493,"author":{"gitId":"nusliuyifan"},"content":"| **Listing all persons**                     | `list` Shows a list of all persons in the address book.                                                               |","lastModifiedDate":"2024-03-26"},{"lineNumber":494,"author":{"gitId":"nusliuyifan"},"content":"| **Exiting the program**                     | `exit` Exits the program                                                                                              |","lastModifiedDate":"2024-03-26"},{"lineNumber":495,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":496,"author":{"gitId":"taeewonnn"},"content":"## 7. Prefix translation table","lastModifiedDate":"2024-04-10"},{"lineNumber":497,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":498,"author":{"gitId":"taeewonnn"},"content":"|Prefix |Translation   |","lastModifiedDate":"2024-04-04"},{"lineNumber":499,"author":{"gitId":"taeewonnn"},"content":"|-------|--------------|","lastModifiedDate":"2024-04-04"},{"lineNumber":500,"author":{"gitId":"taeewonnn"},"content":"|n/     |Name          |","lastModifiedDate":"2024-04-04"},{"lineNumber":501,"author":{"gitId":"taeewonnn"},"content":"|p/     |Phone number  |","lastModifiedDate":"2024-04-04"},{"lineNumber":502,"author":{"gitId":"taeewonnn"},"content":"|e/     |Email         |","lastModifiedDate":"2024-04-04"},{"lineNumber":503,"author":{"gitId":"taeewonnn"},"content":"|a/     |Address       |","lastModifiedDate":"2024-04-04"},{"lineNumber":504,"author":{"gitId":"taeewonnn"},"content":"|t/     |Tags          |","lastModifiedDate":"2024-04-04"},{"lineNumber":505,"author":{"gitId":"taeewonnn"},"content":"|ev/    |Event name    |","lastModifiedDate":"2024-04-04"},{"lineNumber":506,"author":{"gitId":"taeewonnn"},"content":"|d/     |Event date    |","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"Apzure":62,"nusliuyifan":33,"ChocoRagdoll":50,"-":109,"taeewonnn":239,"myang2020":13}},{"path":"docs/diagrams/AddEventSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"@startuml","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"!include style.puml","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":"participant \":AddEventCommandParser\" as AddEventCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":"participant \"d:AddEventCommand\" as AddEventCommand LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"myang2020"},"content":"end box","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"myang2020"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"end box","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"[-\u003e LogicManager : execute(\"addev ev/party\")","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"activate LogicManager","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"addev ev/party\")","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"create AddEventCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"AddressBookParser -\u003e AddEventCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"activate AddEventCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"AddEventCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"myang2020"},"content":"deactivate AddEventCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"myang2020"},"content":"AddressBookParser -\u003e AddEventCommandParser : parse(\"party\")","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"myang2020"},"content":"activate AddEventCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"myang2020"},"content":"create AddEventCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"myang2020"},"content":"AddEventCommandParser -\u003e AddEventCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"myang2020"},"content":"activate AddEventCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"myang2020"},"content":"AddEventCommand --\u003e AddEventCommandParser :","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"myang2020"},"content":"deactivate AddEventCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"myang2020"},"content":"AddEventCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"myang2020"},"content":"deactivate AddEventCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"myang2020"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"myang2020"},"content":"AddEventCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"myang2020"},"content":"destroy AddEventCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"myang2020"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"myang2020"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"myang2020"},"content":"LogicManager -\u003e AddEventCommand : execute(m)","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"myang2020"},"content":"activate AddEventCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"myang2020"},"content":"AddEventCommand -\u003e Model","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"myang2020"},"content":"activate Model","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"myang2020"},"content":"Model --\u003e AddEventCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"myang2020"},"content":"deactivate Model","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"myang2020"},"content":"create CommandResult","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"myang2020"},"content":"AddEventCommand -\u003e CommandResult","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"myang2020"},"content":"activate CommandResult","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"myang2020"},"content":"CommandResult --\u003e AddEventCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"myang2020"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"myang2020"},"content":"AddEventCommand --\u003e LogicManager : r","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"myang2020"},"content":"deactivate AddEventCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"myang2020"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"myang2020"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"myang2020"},"content":"@enduml","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"myang2020":70}},{"path":"docs/diagrams/AddPersonSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"taeewonnn"},"content":"@startuml","lastModifiedDate":"2024-04-10"},{"lineNumber":2,"author":{"gitId":"taeewonnn"},"content":"!include style.puml","lastModifiedDate":"2024-04-10"},{"lineNumber":3,"author":{"gitId":"taeewonnn"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"taeewonnn"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"taeewonnn"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-04-10"},{"lineNumber":7,"author":{"gitId":"taeewonnn"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"taeewonnn"},"content":"participant \":AddCommandParser\" as AddCommandParser LOGIC_COLOR","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"taeewonnn"},"content":"participant \"d:AddCommand\" as AddCommand LOGIC_COLOR","lastModifiedDate":"2024-04-10"},{"lineNumber":10,"author":{"gitId":"taeewonnn"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-04-10"},{"lineNumber":11,"author":{"gitId":"taeewonnn"},"content":"end box","lastModifiedDate":"2024-04-10"},{"lineNumber":12,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":13,"author":{"gitId":"taeewonnn"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-04-10"},{"lineNumber":14,"author":{"gitId":"taeewonnn"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-04-10"},{"lineNumber":15,"author":{"gitId":"taeewonnn"},"content":"end box","lastModifiedDate":"2024-04-10"},{"lineNumber":16,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":17,"author":{"gitId":"taeewonnn"},"content":"[-\u003e LogicManager : execute(\"addp n/David p/90909090 a/60 Dover e/a11@exmaple.com t/friend\")","lastModifiedDate":"2024-04-10"},{"lineNumber":18,"author":{"gitId":"taeewonnn"},"content":"activate LogicManager","lastModifiedDate":"2024-04-10"},{"lineNumber":19,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":20,"author":{"gitId":"taeewonnn"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"addp n/David p/90909090 a/60 Dover e/a11@exmaple.com t/friend\")","lastModifiedDate":"2024-04-10"},{"lineNumber":21,"author":{"gitId":"taeewonnn"},"content":"activate AddressBookParser","lastModifiedDate":"2024-04-10"},{"lineNumber":22,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":23,"author":{"gitId":"taeewonnn"},"content":"create AddCommandParser","lastModifiedDate":"2024-04-10"},{"lineNumber":24,"author":{"gitId":"taeewonnn"},"content":"AddressBookParser -\u003e AddCommandParser","lastModifiedDate":"2024-04-10"},{"lineNumber":25,"author":{"gitId":"taeewonnn"},"content":"activate AddCommandParser","lastModifiedDate":"2024-04-10"},{"lineNumber":26,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":27,"author":{"gitId":"taeewonnn"},"content":"AddCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-04-10"},{"lineNumber":28,"author":{"gitId":"taeewonnn"},"content":"deactivate AddCommandParser","lastModifiedDate":"2024-04-10"},{"lineNumber":29,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":30,"author":{"gitId":"taeewonnn"},"content":"AddressBookParser -\u003e AddCommandParser : parse(\"n/David p/90909090 a/60 Dover e/a11@exmaple.com t/friend\")","lastModifiedDate":"2024-04-10"},{"lineNumber":31,"author":{"gitId":"taeewonnn"},"content":"activate AddCommandParser","lastModifiedDate":"2024-04-10"},{"lineNumber":32,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":33,"author":{"gitId":"taeewonnn"},"content":"create AddCommand","lastModifiedDate":"2024-04-10"},{"lineNumber":34,"author":{"gitId":"taeewonnn"},"content":"AddCommandParser -\u003e AddCommand","lastModifiedDate":"2024-04-10"},{"lineNumber":35,"author":{"gitId":"taeewonnn"},"content":"activate AddCommand","lastModifiedDate":"2024-04-10"},{"lineNumber":36,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":37,"author":{"gitId":"taeewonnn"},"content":"AddCommand --\u003e AddCommandParser :","lastModifiedDate":"2024-04-10"},{"lineNumber":38,"author":{"gitId":"taeewonnn"},"content":"deactivate AddCommand","lastModifiedDate":"2024-04-10"},{"lineNumber":39,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":40,"author":{"gitId":"taeewonnn"},"content":"AddCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2024-04-10"},{"lineNumber":41,"author":{"gitId":"taeewonnn"},"content":"deactivate AddCommandParser","lastModifiedDate":"2024-04-10"},{"lineNumber":42,"author":{"gitId":"taeewonnn"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-04-10"},{"lineNumber":43,"author":{"gitId":"taeewonnn"},"content":"AddCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-04-10"},{"lineNumber":44,"author":{"gitId":"taeewonnn"},"content":"destroy AddCommandParser","lastModifiedDate":"2024-04-10"},{"lineNumber":45,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":46,"author":{"gitId":"taeewonnn"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2024-04-10"},{"lineNumber":47,"author":{"gitId":"taeewonnn"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-04-10"},{"lineNumber":48,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":49,"author":{"gitId":"taeewonnn"},"content":"LogicManager -\u003e AddCommand : execute(m)","lastModifiedDate":"2024-04-10"},{"lineNumber":50,"author":{"gitId":"taeewonnn"},"content":"activate AddCommand","lastModifiedDate":"2024-04-10"},{"lineNumber":51,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":52,"author":{"gitId":"taeewonnn"},"content":"AddCommand -\u003e Model","lastModifiedDate":"2024-04-10"},{"lineNumber":53,"author":{"gitId":"taeewonnn"},"content":"activate Model","lastModifiedDate":"2024-04-10"},{"lineNumber":54,"author":{"gitId":"taeewonnn"},"content":"Model --\u003e AddCommand","lastModifiedDate":"2024-04-10"},{"lineNumber":55,"author":{"gitId":"taeewonnn"},"content":"deactivate Model","lastModifiedDate":"2024-04-10"},{"lineNumber":56,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":57,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":58,"author":{"gitId":"taeewonnn"},"content":"create CommandResult","lastModifiedDate":"2024-04-10"},{"lineNumber":59,"author":{"gitId":"taeewonnn"},"content":"AddCommand -\u003e CommandResult","lastModifiedDate":"2024-04-10"},{"lineNumber":60,"author":{"gitId":"taeewonnn"},"content":"activate CommandResult","lastModifiedDate":"2024-04-10"},{"lineNumber":61,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":62,"author":{"gitId":"taeewonnn"},"content":"CommandResult --\u003e AddCommand","lastModifiedDate":"2024-04-10"},{"lineNumber":63,"author":{"gitId":"taeewonnn"},"content":"deactivate CommandResult","lastModifiedDate":"2024-04-10"},{"lineNumber":64,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":65,"author":{"gitId":"taeewonnn"},"content":"AddCommand --\u003e LogicManager : r","lastModifiedDate":"2024-04-10"},{"lineNumber":66,"author":{"gitId":"taeewonnn"},"content":"deactivate AddCommand","lastModifiedDate":"2024-04-10"},{"lineNumber":67,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":68,"author":{"gitId":"taeewonnn"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-04-10"},{"lineNumber":69,"author":{"gitId":"taeewonnn"},"content":"deactivate LogicManager","lastModifiedDate":"2024-04-10"},{"lineNumber":70,"author":{"gitId":"taeewonnn"},"content":"@enduml","lastModifiedDate":"2024-04-10"}],"authorContributionMap":{"taeewonnn":70}},{"path":"docs/diagrams/DeleteEventSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"taeewonnn"},"content":"@startuml","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"taeewonnn"},"content":"!include style.puml","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"taeewonnn"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"taeewonnn"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"taeewonnn"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"taeewonnn"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"taeewonnn"},"content":"participant \":DeleteEventCommandParser\" as DeleteEventCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"taeewonnn"},"content":"participant \"d:DeleteEventCommand\" as DeleteEventCommand LOGIC_COLOR","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"taeewonnn"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"taeewonnn"},"content":"end box","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"taeewonnn"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"taeewonnn"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"taeewonnn"},"content":"end box","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"taeewonnn"},"content":"[-\u003e LogicManager : execute(\"delev 1\")","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"taeewonnn"},"content":"activate LogicManager","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"taeewonnn"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delev 1\")","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"taeewonnn"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"taeewonnn"},"content":"create DeleteEventCommandParser","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"taeewonnn"},"content":"AddressBookParser -\u003e DeleteEventCommandParser","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"taeewonnn"},"content":"activate DeleteEventCommandParser","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"taeewonnn"},"content":"DeleteEventCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"taeewonnn"},"content":"deactivate DeleteEventCommandParser","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"taeewonnn"},"content":"AddressBookParser -\u003e DeleteEventCommandParser : parse(\"1\")","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"taeewonnn"},"content":"activate DeleteEventCommandParser","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"taeewonnn"},"content":"create DeleteEventCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"taeewonnn"},"content":"DeleteEventCommandParser -\u003e DeleteEventCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"taeewonnn"},"content":"activate DeleteEventCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"taeewonnn"},"content":"DeleteEventCommand --\u003e DeleteEventCommandParser :","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"taeewonnn"},"content":"deactivate DeleteEventCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"taeewonnn"},"content":"DeleteEventCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"taeewonnn"},"content":"deactivate DeleteEventCommandParser","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"taeewonnn"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"taeewonnn"},"content":"DeleteEventCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"taeewonnn"},"content":"destroy DeleteEventCommandParser","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"taeewonnn"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"taeewonnn"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"taeewonnn"},"content":"LogicManager -\u003e DeleteEventCommand : execute(m)","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"taeewonnn"},"content":"activate DeleteEventCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"taeewonnn"},"content":"DeleteEventCommand -\u003e Model : isSameSelectedEvent(eventToDelete)","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"taeewonnn"},"content":"activate Model","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"taeewonnn"},"content":"Model --\u003e DeleteEventCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"taeewonnn"},"content":"deactivate Model","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"taeewonnn"},"content":"alt isSameSelectedEvent","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"taeewonnn"},"content":"else","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"taeewonnn"},"content":"    DeleteEventCommand -\u003e Model : deleteEvent(eventToDelete)","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"taeewonnn"},"content":"    activate Model","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"taeewonnn"},"content":"    Model --\u003e DeleteEventCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"taeewonnn"},"content":"    deactivate Model","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"taeewonnn"},"content":"end","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"taeewonnn"},"content":"create CommandResult","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"taeewonnn"},"content":"DeleteEventCommand -\u003e CommandResult","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"taeewonnn"},"content":"activate CommandResult","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"taeewonnn"},"content":"CommandResult --\u003e DeleteEventCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"taeewonnn"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"taeewonnn"},"content":"DeleteEventCommand --\u003e LogicManager : r","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"taeewonnn"},"content":"deactivate DeleteEventCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"taeewonnn"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"taeewonnn"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"taeewonnn"},"content":"@enduml","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"taeewonnn":79}},{"path":"docs/diagrams/DeleteParticipantSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ChocoRagdoll"},"content":"@startuml","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"ChocoRagdoll"},"content":"!include style.puml","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"ChocoRagdoll"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"ChocoRagdoll"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"ChocoRagdoll"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"ChocoRagdoll"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"ChocoRagdoll"},"content":"participant \":DeletePersonCommandParser\" as DeletePersonCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"ChocoRagdoll"},"content":"participant \"d:DeletePersonCommand\" as DeletePersonCommand LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"ChocoRagdoll"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"ChocoRagdoll"},"content":"end box","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"ChocoRagdoll"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"ChocoRagdoll"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"ChocoRagdoll"},"content":"end box","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"ChocoRagdoll"},"content":"[-\u003e LogicManager : execute(\"delp 1\")","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"ChocoRagdoll"},"content":"activate LogicManager","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"ChocoRagdoll"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delp 1\")","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"ChocoRagdoll"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"ChocoRagdoll"},"content":"create DeletePersonCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"ChocoRagdoll"},"content":"AddressBookParser -\u003e DeletePersonCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"ChocoRagdoll"},"content":"activate DeletePersonCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"ChocoRagdoll"},"content":"DeletePersonCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"ChocoRagdoll"},"content":"deactivate DeletePersonCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":29,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":30,"author":{"gitId":"ChocoRagdoll"},"content":"AddressBookParser -\u003e DeletePersonCommandParser : parse(\"1\")","lastModifiedDate":"2024-03-22"},{"lineNumber":31,"author":{"gitId":"ChocoRagdoll"},"content":"activate DeletePersonCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":32,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":33,"author":{"gitId":"ChocoRagdoll"},"content":"create DeletePersonCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":34,"author":{"gitId":"ChocoRagdoll"},"content":"DeletePersonCommandParser -\u003e DeletePersonCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":35,"author":{"gitId":"ChocoRagdoll"},"content":"activate DeletePersonCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":37,"author":{"gitId":"ChocoRagdoll"},"content":"DeletePersonCommand --\u003e DeletePersonCommandParser :","lastModifiedDate":"2024-03-22"},{"lineNumber":38,"author":{"gitId":"ChocoRagdoll"},"content":"deactivate DeletePersonCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":39,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":40,"author":{"gitId":"ChocoRagdoll"},"content":"DeletePersonCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2024-03-22"},{"lineNumber":41,"author":{"gitId":"ChocoRagdoll"},"content":"deactivate DeletePersonCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":42,"author":{"gitId":"ChocoRagdoll"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-03-22"},{"lineNumber":43,"author":{"gitId":"ChocoRagdoll"},"content":"DeletePersonCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-22"},{"lineNumber":44,"author":{"gitId":"ChocoRagdoll"},"content":"destroy DeletePersonCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":45,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":46,"author":{"gitId":"ChocoRagdoll"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2024-03-22"},{"lineNumber":47,"author":{"gitId":"ChocoRagdoll"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-22"},{"lineNumber":48,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":49,"author":{"gitId":"ChocoRagdoll"},"content":"LogicManager -\u003e DeletePersonCommand : execute(m)","lastModifiedDate":"2024-03-22"},{"lineNumber":50,"author":{"gitId":"ChocoRagdoll"},"content":"activate DeletePersonCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":51,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":52,"author":{"gitId":"ChocoRagdoll"},"content":"DeletePersonCommand -\u003e Model : isAnEventSelected()","lastModifiedDate":"2024-03-22"},{"lineNumber":53,"author":{"gitId":"ChocoRagdoll"},"content":"activate Model","lastModifiedDate":"2024-03-22"},{"lineNumber":54,"author":{"gitId":"ChocoRagdoll"},"content":"Model --\u003e DeletePersonCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":55,"author":{"gitId":"ChocoRagdoll"},"content":"deactivate Model","lastModifiedDate":"2024-03-22"},{"lineNumber":56,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":57,"author":{"gitId":"ChocoRagdoll"},"content":"alt isAnEventSelected","lastModifiedDate":"2024-03-22"},{"lineNumber":58,"author":{"gitId":"ChocoRagdoll"},"content":"    DeletePersonCommand -\u003e DeletePersonCommand : deleteFromEvent()","lastModifiedDate":"2024-03-22"},{"lineNumber":59,"author":{"gitId":"ChocoRagdoll"},"content":"    activate DeletePersonCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":60,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":61,"author":{"gitId":"ChocoRagdoll"},"content":"    DeletePersonCommand -\u003e Model : deletePersonFromSelectedEvent(personToDelete)","lastModifiedDate":"2024-03-22"},{"lineNumber":62,"author":{"gitId":"ChocoRagdoll"},"content":"    activate Model","lastModifiedDate":"2024-03-22"},{"lineNumber":63,"author":{"gitId":"ChocoRagdoll"},"content":"    Model --\u003e DeletePersonCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":64,"author":{"gitId":"ChocoRagdoll"},"content":"    deactivate Model","lastModifiedDate":"2024-03-22"},{"lineNumber":65,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":66,"author":{"gitId":"ChocoRagdoll"},"content":"    deactivate DeletePersonCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":67,"author":{"gitId":"ChocoRagdoll"},"content":"else","lastModifiedDate":"2024-03-22"},{"lineNumber":68,"author":{"gitId":"ChocoRagdoll"},"content":"    DeletePersonCommand -\u003e DeletePersonCommand : deleteFromGlobal()","lastModifiedDate":"2024-03-22"},{"lineNumber":69,"author":{"gitId":"ChocoRagdoll"},"content":"    activate DeletePersonCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":70,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":71,"author":{"gitId":"ChocoRagdoll"},"content":"    DeletePersonCommand -\u003e Model : deletePerson(personToDelete)","lastModifiedDate":"2024-03-22"},{"lineNumber":72,"author":{"gitId":"ChocoRagdoll"},"content":"    activate Model","lastModifiedDate":"2024-03-22"},{"lineNumber":73,"author":{"gitId":"ChocoRagdoll"},"content":"    Model --\u003e DeletePersonCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":74,"author":{"gitId":"ChocoRagdoll"},"content":"    deactivate Model","lastModifiedDate":"2024-03-22"},{"lineNumber":75,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":76,"author":{"gitId":"ChocoRagdoll"},"content":"    deactivate DeletePersonCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":77,"author":{"gitId":"ChocoRagdoll"},"content":"end","lastModifiedDate":"2024-03-22"},{"lineNumber":78,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":79,"author":{"gitId":"ChocoRagdoll"},"content":"create CommandResult","lastModifiedDate":"2024-03-22"},{"lineNumber":80,"author":{"gitId":"ChocoRagdoll"},"content":"DeletePersonCommand -\u003e CommandResult","lastModifiedDate":"2024-03-22"},{"lineNumber":81,"author":{"gitId":"ChocoRagdoll"},"content":"activate CommandResult","lastModifiedDate":"2024-03-22"},{"lineNumber":82,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":83,"author":{"gitId":"ChocoRagdoll"},"content":"CommandResult --\u003e DeletePersonCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":84,"author":{"gitId":"ChocoRagdoll"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-22"},{"lineNumber":85,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":86,"author":{"gitId":"ChocoRagdoll"},"content":"DeletePersonCommand --\u003e LogicManager : r","lastModifiedDate":"2024-03-22"},{"lineNumber":87,"author":{"gitId":"ChocoRagdoll"},"content":"deactivate DeletePersonCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":88,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":89,"author":{"gitId":"ChocoRagdoll"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-22"},{"lineNumber":90,"author":{"gitId":"ChocoRagdoll"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-22"},{"lineNumber":91,"author":{"gitId":"ChocoRagdoll"},"content":"@enduml","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"ChocoRagdoll":91}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"    Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyEventBook\" as ReadOnlyEventBook","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"    Class EventBook","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"    Class UniqueEventList","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"    Class Event","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"    Class EventName","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"Model .down.\u003e ReadOnlyEventBook","lastModifiedDate":"2024-03-22"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2024-03-22"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2024-03-22"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"EventBook .up.|\u003e ReadOnlyEventBook","lastModifiedDate":"2024-03-22"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"ModelManager -down-\u003e AddressBook","lastModifiedDate":"2024-03-22"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"ModelManager -left-\u003e EventBook","lastModifiedDate":"2024-03-22"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"ModelManager -left-\u003e UserPrefs","lastModifiedDate":"2024-03-22"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"AddressBook *--\u003e UniquePersonList","lastModifiedDate":"2024-03-22"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"EventBook *--\u003e UniqueEventList","lastModifiedDate":"2024-03-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"UniqueEventList --\u003e \"~* all\" Event","lastModifiedDate":"2024-03-22"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"Event *--\u003e EventName","lastModifiedDate":"2024-03-22"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"Event *--\u003e UniquePersonList","lastModifiedDate":"2024-03-22"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Apzure":22,"-":48}},{"path":"docs/diagrams/SelectEventSequenceDiagram -- Logic.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"@startuml","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"!include style.puml","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"participant \":SelectCommandParser\" as SelectCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"participant \"s:SelectCommand\" as SelectCommand LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"end box","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"end box","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"[-\u003e LogicManager : execute(\"sel 1\")","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"activate LogicManager","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"sel 1\")","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"create SelectCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"AddressBookParser -\u003e SelectCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"activate SelectCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"SelectCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"deactivate SelectCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"AddressBookParser -\u003e SelectCommandParser : parse(\"1\")","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"activate SelectCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"create SelectCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"SelectCommandParser -\u003e SelectCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"activate SelectCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"SelectCommand --\u003e SelectCommandParser :","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"deactivate SelectCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"SelectCommandParser --\u003e AddressBookParser : s","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"deactivate SelectCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"SelectCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"destroy SelectCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"AddressBookParser --\u003e LogicManager : s","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"LogicManager -\u003e SelectCommand : execute(m)","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"activate SelectCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"SelectCommand -\u003e Model : getFilteredEventList()","lastModifiedDate":"2024-04-09"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"activate Model","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"Model --\u003e SelectCommand : lastShownEventList","lastModifiedDate":"2024-04-09"},{"lineNumber":56,"author":{"gitId":"Apzure"},"content":"SelectCommand -\u003e Model : selectEvent(eventToSelect)","lastModifiedDate":"2024-04-09"},{"lineNumber":57,"author":{"gitId":"Apzure"},"content":"Model --\u003e SelectCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"deactivate Model","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"Apzure"},"content":"create CommandResult","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"Apzure"},"content":"SelectCommand -\u003e CommandResult","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"Apzure"},"content":"activate CommandResult","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"Apzure"},"content":"CommandResult --\u003e SelectCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"Apzure"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"Apzure"},"content":"SelectCommand --\u003e LogicManager : r","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"Apzure"},"content":"deactivate SelectCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"Apzure"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"Apzure"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"Apzure"},"content":"@enduml","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"Apzure":72}},{"path":"docs/diagrams/SelectEventSequenceDiagram -- Model.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"@startuml","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"!include style.puml","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"participant \":EventBook\" as EventBook MODEL_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"participant \"personsOfSelectedEvent:UniquePersonList\" as UniquePersonList MODEL_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"end box","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"[-\u003e Model : selectEvent(eventToSelect)","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"activate Model","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"Model -\u003e EventBook : selectEvent(eventToSelect)","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"activate EventBook","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"EventBook -\u003e UniquePersonList : setPersons(eventToSelect.getPersonList())","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"activate UniquePersonList","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"UniquePersonList --\u003e EventBook","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"deactivate UniquePersonList","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"EventBook --\u003e Model :","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"deactivate EventBook","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"[\u003c-- Model","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"deactivate Model","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"@enduml","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"Apzure":27}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"nusliuyifan"},"content":"skinparam arrowThickness 1.0","lastModifiedDate":"2024-04-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage as StoragePackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"nusliuyifan"},"content":"package \"EventBook Storage\" #F4F6F6{","lastModifiedDate":"2024-04-08"},{"lineNumber":26,"author":{"gitId":"nusliuyifan"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nEventBookStorage\" as EventBookStorage","lastModifiedDate":"2024-04-08"},{"lineNumber":27,"author":{"gitId":"nusliuyifan"},"content":"Class JsonEventBookStorage","lastModifiedDate":"2024-04-08"},{"lineNumber":28,"author":{"gitId":"nusliuyifan"},"content":"Class JsonSerializableEventBook","lastModifiedDate":"2024-04-08"},{"lineNumber":29,"author":{"gitId":"nusliuyifan"},"content":"Class JsonAdaptedEvent","lastModifiedDate":"2024-04-08"},{"lineNumber":30,"author":{"gitId":"nusliuyifan"},"content":"}","lastModifiedDate":"2024-04-08"},{"lineNumber":31,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"nusliuyifan"},"content":"StorageManager -down-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2024-04-08"},{"lineNumber":39,"author":{"gitId":"nusliuyifan"},"content":"StorageManager -down-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2024-04-08"},{"lineNumber":40,"author":{"gitId":"nusliuyifan"},"content":"StorageManager -down-\u003e \"1\" EventBookStorage","lastModifiedDate":"2024-04-08"},{"lineNumber":41,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"nusliuyifan"},"content":"Storage -down-|\u003e UserPrefsStorage","lastModifiedDate":"2024-04-08"},{"lineNumber":44,"author":{"gitId":"nusliuyifan"},"content":"Storage -down-|\u003e AddressBookStorage","lastModifiedDate":"2024-04-08"},{"lineNumber":45,"author":{"gitId":"nusliuyifan"},"content":"Storage -down-|\u003e EventBookStorage","lastModifiedDate":"2024-04-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"nusliuyifan"},"content":"JsonEventBookStorage .up.|\u003e EventBookStorage","lastModifiedDate":"2024-04-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"nusliuyifan"},"content":"JsonEventBookStorage ..\u003e JsonSerializableEventBook","lastModifiedDate":"2024-04-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"nusliuyifan"},"content":"JsonSerializableEventBook --\u003e \"*\" JsonAdaptedEvent","lastModifiedDate":"2024-04-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"nusliuyifan"},"content":"JsonAdaptedEvent --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2024-04-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"nusliuyifan":19,"-":38}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"Class PersonListOfSelectedEventPanel","lastModifiedDate":"2024-04-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"Class EventListPanel","lastModifiedDate":"2024-04-10"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"Class EventListCard","lastModifiedDate":"2024-04-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"myang2020"},"content":"MainWindow *-down-\u003e \"1\" PersonListOfSelectedEventPanel","lastModifiedDate":"2024-04-10"},{"lineNumber":40,"author":{"gitId":"myang2020"},"content":"MainWindow *-down-\u003e \"1\" EventListPanel","lastModifiedDate":"2024-04-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"myang2020"},"content":"PersonListOfSelectedEventPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2024-04-10"},{"lineNumber":46,"author":{"gitId":"myang2020"},"content":"EventListPanel -down-\u003e \"*\" EventListCard","lastModifiedDate":"2024-04-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"myang2020"},"content":"EventListPanel --|\u003e UiPart","lastModifiedDate":"2024-04-10"},{"lineNumber":57,"author":{"gitId":"myang2020"},"content":"PersonListOfSelectedEventPanel --|\u003e UiPart","lastModifiedDate":"2024-04-10"},{"lineNumber":58,"author":{"gitId":"myang2020"},"content":"EventListCard --|\u003e UiPart","lastModifiedDate":"2024-04-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"myang2020"},"content":"EventListCard ..\u003e Model","lastModifiedDate":"2024-04-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"myang2020"},"content":"EventListPanel -[hidden]left- PersonListOfSelectedEventPanel","lastModifiedDate":"2024-04-10"},{"lineNumber":66,"author":{"gitId":"myang2020"},"content":"PersonListOfSelectedEventPanel -[hidden]left- PersonListPanel","lastModifiedDate":"2024-04-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":60,"myang2020":13}},{"path":"src/main/java/seedu/address/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2018-04-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Objects.equals(configPath, otherAppParameters.configPath);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .add(\"configPath\", configPath)","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"nusliuyifan":1,"-":73}},{"path":"src/main/java/seedu/address/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2019-02-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(Main.class);","lastModifiedDate":"2023-07-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // As per https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-16.md","lastModifiedDate":"2023-07-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // JavaFX 16 (or later) runtime logs a warning at startup if JavaFX classes are loaded from","lastModifiedDate":"2023-07-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // the classpath instead of a module.","lastModifiedDate":"2023-07-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // Our application does not use Java modules yet. Even if it did, modules are ignored when","lastModifiedDate":"2023-07-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // packed into a FAT Jar file (as we do), which means this warning will persist even then.","lastModifiedDate":"2023-07-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // The warning however, can be safely ignored. Thus, the following log informs","lastModifiedDate":"2023-07-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // the user (if looking at the log output) that the said warning appearing in the log","lastModifiedDate":"2023-07-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // can be ignored.","lastModifiedDate":"2023-07-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.warning(\"The warning about Unsupported JavaFX configuration below can be ignored.\");","lastModifiedDate":"2023-07-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"},{"lineNumber":42,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"nusliuyifan":1,"-":41}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.export.PersonDataExporter;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.export.PersonExporter;","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.model.EventBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.model.ReadOnlyEventBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.storage.EventBookStorage;","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.storage.JsonEventBookStorage;","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"    public static final Version VERSION \u003d new Version(1, 2, 1, true);","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"ChocoRagdoll"},"content":"    protected PersonExporter personExporter;","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"nusliuyifan"},"content":"        EventBookStorage eventBookStorage \u003d new JsonEventBookStorage(userPrefs.getEventBookFilePath());","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"nusliuyifan"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, eventBookStorage);","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"ChocoRagdoll"},"content":"        personExporter \u003d new PersonDataExporter();","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"ChocoRagdoll"},"content":"        personExporter.setFilePath(config.getPersonExportFilePath());","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"ChocoRagdoll"},"content":"        model \u003d initModelManager(storage, userPrefs, personExporter);","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":86,"author":{"gitId":"ChocoRagdoll"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs, PersonExporter personExporter) {","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"nusliuyifan"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath() + storage.getEventBookFilePath());","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"nusliuyifan"},"content":"        Optional\u003cReadOnlyEventBook\u003e eventBookOptional;","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"nusliuyifan"},"content":"        ReadOnlyAddressBook initialAddressBookData;","lastModifiedDate":"2024-04-01"},{"lineNumber":92,"author":{"gitId":"nusliuyifan"},"content":"        ReadOnlyEventBook initialEventBookData;","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"nusliuyifan"},"content":"            initialAddressBookData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2024-04-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":103,"author":{"gitId":"nusliuyifan"},"content":"            initialAddressBookData \u003d new AddressBook();","lastModifiedDate":"2024-04-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"nusliuyifan"},"content":"        try {","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"nusliuyifan"},"content":"            eventBookOptional \u003d storage.readEventBook();","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"nusliuyifan"},"content":"            if (!eventBookOptional.isPresent()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"nusliuyifan"},"content":"                logger.info(\"Creating a new data file \" + storage.getEventBookFilePath()","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"nusliuyifan"},"content":"                        + \" populated with a sample EventBook.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"nusliuyifan"},"content":"            }","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"nusliuyifan"},"content":"            initialEventBookData \u003d eventBookOptional.orElseGet(SampleDataUtil::getSampleEventBook);","lastModifiedDate":"2024-04-01"},{"lineNumber":113,"author":{"gitId":"nusliuyifan"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"nusliuyifan"},"content":"            logger.warning(\"Data file at \" + storage.getEventBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"nusliuyifan"},"content":"                    + \" Will be starting with an empty EventBook.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"nusliuyifan"},"content":"            initialEventBookData \u003d new EventBook();","lastModifiedDate":"2024-04-01"},{"lineNumber":117,"author":{"gitId":"nusliuyifan"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"ChocoRagdoll"},"content":"        return new ModelManager(initialAddressBookData, userPrefs, initialEventBookData, personExporter);","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"nusliuyifan"},"content":"        logger.info(\"Starting Eventy \" + MainApp.VERSION);","lastModifiedDate":"2024-03-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"nusliuyifan"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Eventy ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2024-03-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"Apzure":1,"nusliuyifan":28,"ChocoRagdoll":9,"-":175}},{"path":"src/main/java/seedu/address/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"ChocoRagdoll"},"content":"    private Path personExportFilePath \u003d Paths.get(\"exported_participant_data.csv\");","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"ChocoRagdoll"},"content":"    public Path getPersonExportFilePath() {","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"ChocoRagdoll"},"content":"        return personExportFilePath;","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"ChocoRagdoll"},"content":"    public void setPersonExportFilePath(Path personExportFilePath) {","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"ChocoRagdoll"},"content":"        this.personExportFilePath \u003d personExportFilePath;","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Config otherConfig \u003d (Config) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, otherConfig.logLevel)","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"ChocoRagdoll"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, otherConfig.userPrefsFilePath)","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"ChocoRagdoll"},"content":"                \u0026\u0026 Objects.equals(personExportFilePath, otherConfig.personExportFilePath);","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"ChocoRagdoll"},"content":"        return Objects.hash(logLevel, userPrefsFilePath, personExportFilePath);","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .add(\"logLevel\", logLevel)","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .add(\"userPrefsFilePath\", userPrefsFilePath)","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"ChocoRagdoll"},"content":"                .add(\"personExportFilePath\", personExportFilePath)","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ChocoRagdoll":13,"-":63}},{"path":"src/main/java/seedu/address/export/PersonDataExporter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChocoRagdoll"},"content":"package seedu.address.export;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"ChocoRagdoll"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"ChocoRagdoll"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"ChocoRagdoll"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"ChocoRagdoll"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"ChocoRagdoll"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"ChocoRagdoll"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"ChocoRagdoll"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"ChocoRagdoll"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"ChocoRagdoll"},"content":" * A class responsible for exporting participant data to a CSV (Comma-Separated Values) file.","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"ChocoRagdoll"},"content":" * It implements the {@link PersonExporter} interface.","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"ChocoRagdoll"},"content":" *","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"ChocoRagdoll"},"content":" * \u003cp\u003eThis exporter allows customizing which fields of the participant data are exported, such as","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"ChocoRagdoll"},"content":" * name, phone number, email, and address.\u003c/p\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"ChocoRagdoll"},"content":" *","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"ChocoRagdoll"},"content":" * \u003cp\u003eThe exported CSV file will contain a header row indicating the exported fields,","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"ChocoRagdoll"},"content":" * followed by rows containing the details of each participant.\u003c/p\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"ChocoRagdoll"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"ChocoRagdoll"},"content":"public class PersonDataExporter implements PersonExporter {","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"ChocoRagdoll"},"content":"    private Path filePath \u003d Paths.get(\"exported_participant_data.csv\");","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"ChocoRagdoll"},"content":"    public PersonDataExporter() {","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"ChocoRagdoll"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"ChocoRagdoll"},"content":"     * Sets the file path for exporting participant data.","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"ChocoRagdoll"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"ChocoRagdoll"},"content":"     * @param filePath The file path to set for exporting participant data.","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"ChocoRagdoll"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"ChocoRagdoll"},"content":"    public void setFilePath(Path filePath) {","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"ChocoRagdoll"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"ChocoRagdoll"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"ChocoRagdoll"},"content":"     * Exports participant data to a CSV file with specified export options.","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"ChocoRagdoll"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"ChocoRagdoll"},"content":"     * @param persons           The list of persons to export.","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"ChocoRagdoll"},"content":"     * @param shouldExportName  Whether to export participant names.","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"ChocoRagdoll"},"content":"     * @param shouldExportPhone Whether to export participant phone numbers.","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"ChocoRagdoll"},"content":"     * @param shouldExportEmail Whether to export participant email addresses.","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"ChocoRagdoll"},"content":"     * @param shouldExportAddress Whether to export participant addresses.","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"ChocoRagdoll"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"ChocoRagdoll"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"ChocoRagdoll"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"ChocoRagdoll"},"content":"    public void exportToCsv(ObservableList\u003cPerson\u003e persons,","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"ChocoRagdoll"},"content":"                            boolean shouldExportName, boolean shouldExportPhone,","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"ChocoRagdoll"},"content":"                            boolean shouldExportEmail, boolean shouldExportAddress) throws IOException {","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"ChocoRagdoll"},"content":"        requireAllNonNull(persons, shouldExportName, shouldExportPhone, shouldExportEmail, shouldExportAddress);","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"ChocoRagdoll"},"content":"        try (PrintWriter writer \u003d new PrintWriter(new FileWriter(filePath.toFile(), false))) {","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"ChocoRagdoll"},"content":"            StringBuilder header \u003d new StringBuilder();","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"ChocoRagdoll"},"content":"            writeHeader(shouldExportName, shouldExportPhone, shouldExportEmail,","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"ChocoRagdoll"},"content":"                    shouldExportAddress, writer, header);","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"ChocoRagdoll"},"content":"            writePersonDetails(persons, shouldExportName, shouldExportPhone,","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"ChocoRagdoll"},"content":"                    shouldExportEmail, shouldExportAddress, writer);","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"ChocoRagdoll"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"ChocoRagdoll"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"ChocoRagdoll"},"content":"     * Writes the header row for the CSV file based on export options.","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"ChocoRagdoll"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"ChocoRagdoll"},"content":"     * @param shouldExportName     Whether to export participant names.","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"ChocoRagdoll"},"content":"     * @param shouldExportPhone    Whether to export participant phone numbers.","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"ChocoRagdoll"},"content":"     * @param shouldExportEmail    Whether to export participant email addresses.","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"ChocoRagdoll"},"content":"     * @param shouldExportAddress  Whether to export participant addresses.","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"ChocoRagdoll"},"content":"     * @param writer               The PrintWriter to write to the CSV file.","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"ChocoRagdoll"},"content":"     * @param header               The StringBuilder to construct the header row.","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"ChocoRagdoll"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"ChocoRagdoll"},"content":"    private void writeHeader(boolean shouldExportName, boolean shouldExportPhone, boolean shouldExportEmail,","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"ChocoRagdoll"},"content":"                             boolean shouldExportAddress, PrintWriter writer, StringBuilder header) {","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"ChocoRagdoll"},"content":"        if (shouldExportName) {","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"ChocoRagdoll"},"content":"            header.append(\"Name,\");","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"ChocoRagdoll"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"ChocoRagdoll"},"content":"        if (shouldExportPhone) {","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"ChocoRagdoll"},"content":"            header.append(\"Phone,\");","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"ChocoRagdoll"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"ChocoRagdoll"},"content":"        if (shouldExportEmail) {","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"ChocoRagdoll"},"content":"            header.append(\"Email,\");","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"ChocoRagdoll"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"ChocoRagdoll"},"content":"        if (shouldExportAddress) {","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"ChocoRagdoll"},"content":"            header.append(\"Address,\");","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"ChocoRagdoll"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"ChocoRagdoll"},"content":"        if (header.length() \u003e 0) {","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"ChocoRagdoll"},"content":"            header.setLength(header.length() - 1);","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"ChocoRagdoll"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"ChocoRagdoll"},"content":"        writer.println(header);","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"ChocoRagdoll"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"ChocoRagdoll"},"content":"     * Writes the details of each person to the CSV file based on export options.","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"ChocoRagdoll"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"ChocoRagdoll"},"content":"     * @param persons           The list of persons whose details are to be exported.","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"ChocoRagdoll"},"content":"     * @param shouldExportName  Whether to export participant names.","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"ChocoRagdoll"},"content":"     * @param shouldExportPhone Whether to export participant phone numbers.","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"ChocoRagdoll"},"content":"     * @param shouldExportEmail Whether to export participant email addresses.","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"ChocoRagdoll"},"content":"     * @param shouldExportAddress Whether to export participant addresses.","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"ChocoRagdoll"},"content":"     * @param writer            The PrintWriter to write to the CSV file.","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"ChocoRagdoll"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"ChocoRagdoll"},"content":"    private void writePersonDetails(","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"ChocoRagdoll"},"content":"            ObservableList\u003cPerson\u003e persons, boolean shouldExportName, boolean shouldExportPhone,","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"ChocoRagdoll"},"content":"            boolean shouldExportEmail, boolean shouldExportAddress, PrintWriter writer) {","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"ChocoRagdoll"},"content":"        for (Person person : persons) {","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"ChocoRagdoll"},"content":"            StringBuilder line \u003d new StringBuilder();","lastModifiedDate":"2024-04-02"},{"lineNumber":109,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":110,"author":{"gitId":"ChocoRagdoll"},"content":"            if (shouldExportName) {","lastModifiedDate":"2024-04-02"},{"lineNumber":111,"author":{"gitId":"ChocoRagdoll"},"content":"                line.append(person.getName()).append(\",\");","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"ChocoRagdoll"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"ChocoRagdoll"},"content":"            if (shouldExportPhone) {","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"ChocoRagdoll"},"content":"                line.append(person.getPhone()).append(\",\");","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"ChocoRagdoll"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"ChocoRagdoll"},"content":"            if (shouldExportEmail) {","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"ChocoRagdoll"},"content":"                line.append(person.getEmail()).append(\",\");","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"ChocoRagdoll"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"ChocoRagdoll"},"content":"            if (shouldExportAddress) {","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"ChocoRagdoll"},"content":"                String addressWithReplacedCommas \u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"ChocoRagdoll"},"content":"                        person.getAddress().toString().replace(\",\", \";\");","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"ChocoRagdoll"},"content":"                line.append(addressWithReplacedCommas).append(\",\");","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"ChocoRagdoll"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"ChocoRagdoll"},"content":"            if (line.length() \u003e 0) {","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"ChocoRagdoll"},"content":"                line.setLength(line.length() - 1);","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"ChocoRagdoll"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":127,"author":{"gitId":"ChocoRagdoll"},"content":"            writer.println(line);","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"ChocoRagdoll"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":129,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":130,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":131,"author":{"gitId":"ChocoRagdoll"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":132,"author":{"gitId":"ChocoRagdoll"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-02"},{"lineNumber":133,"author":{"gitId":"ChocoRagdoll"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2024-04-02"},{"lineNumber":134,"author":{"gitId":"ChocoRagdoll"},"content":"            return true;","lastModifiedDate":"2024-04-02"},{"lineNumber":135,"author":{"gitId":"ChocoRagdoll"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"ChocoRagdoll"},"content":"        if (!(other instanceof PersonDataExporter)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"ChocoRagdoll"},"content":"            return false;","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"ChocoRagdoll"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":139,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":140,"author":{"gitId":"ChocoRagdoll"},"content":"        PersonDataExporter e \u003d (PersonDataExporter) other;","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":142,"author":{"gitId":"ChocoRagdoll"},"content":"        return filePath.equals(e.filePath);","lastModifiedDate":"2024-04-02"},{"lineNumber":143,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":144,"author":{"gitId":"ChocoRagdoll"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"ChocoRagdoll":144}},{"path":"src/main/java/seedu/address/export/PersonExporter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChocoRagdoll"},"content":"package seedu.address.export;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"ChocoRagdoll"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"ChocoRagdoll"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"ChocoRagdoll"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"ChocoRagdoll"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"ChocoRagdoll"},"content":" * Interface for exporting participant data.","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"ChocoRagdoll"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"ChocoRagdoll"},"content":"public interface PersonExporter {","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"ChocoRagdoll"},"content":"    void setFilePath(Path path);","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"ChocoRagdoll"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"ChocoRagdoll"},"content":"     * Exports a list of persons to a file.","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"ChocoRagdoll"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"ChocoRagdoll"},"content":"     * @param persons the list of persons to export.","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"ChocoRagdoll"},"content":"     * @param shouldExportName indicates whether names should be exported.","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"ChocoRagdoll"},"content":"     * @param shouldExportPhone indicates whether phone numbers should be exported.","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"ChocoRagdoll"},"content":"     * @param shouldExportEmail indicates whether email addresses should be exported.","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"ChocoRagdoll"},"content":"     * @param shouldExportAddress indicates whether addresses should be exported.","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"ChocoRagdoll"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"ChocoRagdoll"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"ChocoRagdoll"},"content":"    void exportToCsv(ObservableList\u003cPerson\u003e persons,","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"ChocoRagdoll"},"content":"                     boolean shouldExportName, boolean shouldExportPhone,","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"ChocoRagdoll"},"content":"                     boolean shouldExportEmail, boolean shouldExportAddress) throws IOException;","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"ChocoRagdoll"},"content":"    boolean equals(Object other);","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"ChocoRagdoll"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"ChocoRagdoll":29}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"    /** Returns an unmodifiable view of the selected event */","lastModifiedDate":"2024-04-10"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"    ObservableValue\u003cEvent\u003e getSelectedEvent();","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"    /** Returns an unmodifiable view of the filtered list of events */","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"    /** Returns an unmodifiable view of the filtered list of persons of the selected event */","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonListOfSelectedEvent();","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Apzure":11,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"nusliuyifan"},"content":"        try {","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"nusliuyifan"},"content":"            storage.saveEventBook(model.getEventBook());","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"nusliuyifan"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"nusliuyifan"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"nusliuyifan"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"nusliuyifan"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":79,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"Apzure"},"content":"    public ObservableValue\u003cEvent\u003e getSelectedEvent() {","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"Apzure"},"content":"        return model.getSelectedEvent();","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-01"},{"lineNumber":85,"author":{"gitId":"Apzure"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2024-03-15"},{"lineNumber":86,"author":{"gitId":"Apzure"},"content":"        return model.getFilteredEventList();","lastModifiedDate":"2024-03-01"},{"lineNumber":87,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":88,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":89,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":90,"author":{"gitId":"Apzure"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonListOfSelectedEvent() {","lastModifiedDate":"2024-03-15"},{"lineNumber":91,"author":{"gitId":"Apzure"},"content":"        return model.getFilteredPersonListOfSelectedEvent();","lastModifiedDate":"2024-03-15"},{"lineNumber":92,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":93,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Apzure":17,"nusliuyifan":6,"-":90}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"ChocoRagdoll"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid!\";","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"ChocoRagdoll"},"content":"    public static final String MESSAGE_INVALID_EVENT_DISPLAYED_INDEX \u003d \"The event index provided is invalid!\";","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"    public static final String MESSAGE_SELECT_EVENT \u003d \"No event is selected!\";","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"ChocoRagdoll"},"content":"    public static final String MESSAGE_INVALID_EXPORT_FORMAT \u003d \"At least 1 flag should be provided!\";","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-02"},{"lineNumber":56,"author":{"gitId":"Apzure"},"content":"     * Formats the {@code event} for display to the user.","lastModifiedDate":"2024-03-02"},{"lineNumber":57,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-02"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"    public static String format(Event event) {","lastModifiedDate":"2024-03-02"},{"lineNumber":59,"author":{"gitId":"Apzure"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2024-03-02"},{"lineNumber":60,"author":{"gitId":"Apzure"},"content":"        builder.append(event.getEventName());","lastModifiedDate":"2024-03-02"},{"lineNumber":61,"author":{"gitId":"Apzure"},"content":"        return builder.toString();","lastModifiedDate":"2024-03-02"},{"lineNumber":62,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":63,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Apzure":10,"ChocoRagdoll":3,"-":50,"myang2020":1}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"taeewonnn"},"content":"    public static final String COMMAND_WORD \u003d \"addp\";","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":83,"taeewonnn":1}},{"path":"src/main/java/seedu/address/logic/commands/AddEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-02"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-02"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_NAME;","lastModifiedDate":"2024-03-02"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-02"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-02"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-02"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-02"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-02"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-03-02"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":" * Creates and adds an event to the address book.","lastModifiedDate":"2024-03-02"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-03-02"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"    public static final String COMMAND_WORD \u003d \"addev\";","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Creates and adds an event to the address book. \"","lastModifiedDate":"2024-03-02"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-02"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"            + PREFIX_EVENT_NAME + \"EVENT_NAME \"","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"            + PREFIX_DATE + \"EVENT_DATE \"","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"            + PREFIX_EVENT_NAME + \"Party \"","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"            + PREFIX_DATE + \"05-04-2024 \";","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New event created: %1$s\";","lastModifiedDate":"2024-03-02"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"This event already exists in the address book\";","lastModifiedDate":"2024-03-02"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"    private final Event toAdd;","lastModifiedDate":"2024-03-02"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-02"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"     * Creates a CreateEventCommand to add the specified {@code Event}.","lastModifiedDate":"2024-03-02"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-02"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"    public AddEventCommand(Event event) {","lastModifiedDate":"2024-03-10"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"        requireNonNull(event);","lastModifiedDate":"2024-03-02"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"        toAdd \u003d event;","lastModifiedDate":"2024-03-02"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-02"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-02"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-02"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"        if (model.hasEvent(toAdd)) {","lastModifiedDate":"2024-03-02"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2024-03-02"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-02"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"        model.addEvent(toAdd);","lastModifiedDate":"2024-03-02"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2024-03-02"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-02"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-02"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-02"},{"lineNumber":56,"author":{"gitId":"Apzure"},"content":"            return true;","lastModifiedDate":"2024-03-02"},{"lineNumber":57,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-02"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":59,"author":{"gitId":"Apzure"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-02"},{"lineNumber":60,"author":{"gitId":"Apzure"},"content":"        if (!(other instanceof AddEventCommand)) {","lastModifiedDate":"2024-03-10"},{"lineNumber":61,"author":{"gitId":"Apzure"},"content":"            return false;","lastModifiedDate":"2024-03-02"},{"lineNumber":62,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-02"},{"lineNumber":63,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":64,"author":{"gitId":"Apzure"},"content":"        AddEventCommand otherCreateEventCommand \u003d (AddEventCommand) other;","lastModifiedDate":"2024-03-10"},{"lineNumber":65,"author":{"gitId":"Apzure"},"content":"        return toAdd.equals(otherCreateEventCommand.toAdd);","lastModifiedDate":"2024-03-02"},{"lineNumber":66,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":67,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":68,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-02"},{"lineNumber":69,"author":{"gitId":"Apzure"},"content":"    public String toString() {","lastModifiedDate":"2024-03-02"},{"lineNumber":70,"author":{"gitId":"Apzure"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-02"},{"lineNumber":71,"author":{"gitId":"Apzure"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2024-03-02"},{"lineNumber":72,"author":{"gitId":"Apzure"},"content":"                .toString();","lastModifiedDate":"2024-03-02"},{"lineNumber":73,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":74,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-03-02"}],"authorContributionMap":{"Apzure":68,"myang2020":6}},{"path":"src/main/java/seedu/address/logic/commands/DeleteEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"taeewonnn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"taeewonnn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"taeewonnn"},"content":"import java.util.List;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"taeewonnn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"taeewonnn"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"taeewonnn"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"taeewonnn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"taeewonnn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"taeewonnn"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"taeewonnn"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"taeewonnn"},"content":" * Deletes an event identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"taeewonnn"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"taeewonnn"},"content":"public class DeleteEventCommand extends Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"taeewonnn"},"content":"    public static final String COMMAND_WORD \u003d \"delev\";","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"taeewonnn"},"content":"    public static final String MESSAGE_INVALID_DELETE_EVENT \u003d \"Cannot delete the event that is currently selected\";","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"taeewonnn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"taeewonnn"},"content":"            + \": Deletes the event identified by the index number used in the displayed event list.\\n\"","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"nusliuyifan"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2024-04-10"},{"lineNumber":26,"author":{"gitId":"taeewonnn"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"taeewonnn"},"content":"    public static final String MESSAGE_DELETE_EVENT_SUCCESS \u003d \"Deleted Event: %1$s\";","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"taeewonnn"},"content":"    public final Index targetIndex;","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"taeewonnn"},"content":"    public DeleteEventCommand(Index targetIndex) {","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"taeewonnn"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"taeewonnn"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"taeewonnn"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"taeewonnn"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"taeewonnn"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"taeewonnn"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getFilteredEventList();","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"taeewonnn"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"taeewonnn"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"taeewonnn"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"taeewonnn"},"content":"        Event eventToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"taeewonnn"},"content":"        if (model.isSameSelectedEvent(eventToDelete)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"taeewonnn"},"content":"            throw new CommandException(MESSAGE_INVALID_DELETE_EVENT);","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"taeewonnn"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"taeewonnn"},"content":"        model.deleteEvent(eventToDelete);","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"taeewonnn"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_EVENT_SUCCESS, Messages.format(eventToDelete)));","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"taeewonnn"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"taeewonnn"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"taeewonnn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"taeewonnn"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"taeewonnn"},"content":"            return true;","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"taeewonnn"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"taeewonnn"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"taeewonnn"},"content":"        if (!(other instanceof DeleteEventCommand)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"taeewonnn"},"content":"            return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"taeewonnn"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"taeewonnn"},"content":"        DeleteEventCommand otherDeleteEventCommand \u003d (DeleteEventCommand) other;","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"taeewonnn"},"content":"        return targetIndex.equals(otherDeleteEventCommand.targetIndex);","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"taeewonnn"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"taeewonnn"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"taeewonnn"},"content":"    public String toString() {","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"taeewonnn"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"taeewonnn"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"taeewonnn"},"content":"                .toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"taeewonnn"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"taeewonnn"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"nusliuyifan":1,"taeewonnn":75}},{"path":"src/main/java/seedu/address/logic/commands/DeletePersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChocoRagdoll"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"ChocoRagdoll"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"ChocoRagdoll"},"content":"import java.util.List;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"ChocoRagdoll"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"ChocoRagdoll"},"content":" * When no event is selected, deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"ChocoRagdoll"},"content":" * When an event is selected, deletes a person identified using it\u0027s displayed index from the event.","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"ChocoRagdoll"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"ChocoRagdoll"},"content":"public class DeletePersonCommand extends Command {","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"ChocoRagdoll"},"content":"    public static final String COMMAND_WORD \u003d \"delp\";","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"ChocoRagdoll"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"ChocoRagdoll"},"content":"            + \": When no event is selected, deletes the person identified by the index number used in the displayed \"","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"ChocoRagdoll"},"content":"            + \"person list; when an event is selected, deletes a person identified using it\u0027s displayed index from \"","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"ChocoRagdoll"},"content":"            + \"the event.\\n\"","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"ChocoRagdoll"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"ChocoRagdoll"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"ChocoRagdoll"},"content":"    public static final String MESSAGE_DELETE_PERSON_GLOBAL_SUCCESS \u003d \"Deleted Person: %1$s from the address book.\";","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"ChocoRagdoll"},"content":"    public static final String MESSAGE_DELETE_PERSON_EVENT_SUCCESS \u003d \"Deleted Person: %1$s from the selected event.\";","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"ChocoRagdoll"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"ChocoRagdoll"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"ChocoRagdoll"},"content":"     * Constructor of DeletePersonCommand","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"ChocoRagdoll"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"ChocoRagdoll"},"content":"     * @param targetIndex Index of person user wants to delete.","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"ChocoRagdoll"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"ChocoRagdoll"},"content":"    public DeletePersonCommand(Index targetIndex) {","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"ChocoRagdoll"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"ChocoRagdoll"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"ChocoRagdoll"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"ChocoRagdoll"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"ChocoRagdoll"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"ChocoRagdoll"},"content":"        if (model.isAnEventSelected()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"ChocoRagdoll"},"content":"            return deleteFromEvent(model);","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"ChocoRagdoll"},"content":"        } else {","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"ChocoRagdoll"},"content":"            return deleteFromGlobal(model);","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"ChocoRagdoll"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"ChocoRagdoll"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"ChocoRagdoll"},"content":"     * Handles the deletion of a person from the global list. This method is called when no event is currently","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"ChocoRagdoll"},"content":"     * selected in the model.","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"ChocoRagdoll"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"ChocoRagdoll"},"content":"     * @param model The model from which the person will be deleted globally. Must not be null.","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"ChocoRagdoll"},"content":"     * @return A {@link CommandResult} object containing the success message of the global deletion.","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"ChocoRagdoll"},"content":"     * @throws CommandException If the target index is invalid, i.e., if it is out of bounds of the list size.","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"ChocoRagdoll"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"ChocoRagdoll"},"content":"    public CommandResult deleteFromGlobal(Model model) throws CommandException {","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"ChocoRagdoll"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"ChocoRagdoll"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"ChocoRagdoll"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"ChocoRagdoll"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"ChocoRagdoll"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"ChocoRagdoll"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"ChocoRagdoll"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"ChocoRagdoll"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_GLOBAL_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"ChocoRagdoll"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"ChocoRagdoll"},"content":"     * Handles the deletion of a person from the list of a currently selected event. This method is called","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"ChocoRagdoll"},"content":"     * when an event is selected in the model.","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"ChocoRagdoll"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"ChocoRagdoll"},"content":"     * @param model The model from which the person will be deleted from the selected event. Must not be null.","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"ChocoRagdoll"},"content":"     * @return A {@link CommandResult} object containing the success message of the event-specific deletion.","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"ChocoRagdoll"},"content":"     * @throws CommandException If no event is selected, if the target index is invalid (out of bounds of the","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"ChocoRagdoll"},"content":"     *      list size), or if the person is not part of the selected event.","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"ChocoRagdoll"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"ChocoRagdoll"},"content":"    public CommandResult deleteFromEvent(Model model) throws CommandException {","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"ChocoRagdoll"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"ChocoRagdoll"},"content":"        if (!model.isAnEventSelected()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"ChocoRagdoll"},"content":"            throw new CommandException(Messages.MESSAGE_SELECT_EVENT);","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"ChocoRagdoll"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"ChocoRagdoll"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonListOfSelectedEvent();","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"ChocoRagdoll"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"ChocoRagdoll"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"ChocoRagdoll"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"ChocoRagdoll"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"ChocoRagdoll"},"content":"        model.deletePersonFromSelectedEvent(personToDelete);","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"ChocoRagdoll"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_EVENT_SUCCESS, personToDelete.getName()));","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"ChocoRagdoll"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"ChocoRagdoll"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"ChocoRagdoll"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"ChocoRagdoll"},"content":"            return true;","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"ChocoRagdoll"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"ChocoRagdoll"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"ChocoRagdoll"},"content":"        if (!(other instanceof DeletePersonCommand)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"ChocoRagdoll"},"content":"            return false;","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"ChocoRagdoll"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"ChocoRagdoll"},"content":"        DeletePersonCommand otherDeleteCommand \u003d (DeletePersonCommand) other;","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"ChocoRagdoll"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"ChocoRagdoll"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"ChocoRagdoll"},"content":"    public String toString() {","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"ChocoRagdoll"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"ChocoRagdoll"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"ChocoRagdoll"},"content":"                .toString();","lastModifiedDate":"2024-03-20"},{"lineNumber":122,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"ChocoRagdoll"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"ChocoRagdoll":123}},{"path":"src/main/java/seedu/address/logic/commands/DeselectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":" * Deselects the currently selected event.","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":"public class DeselectCommand extends Command {","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":"    public static final String COMMAND_WORD \u003d \"desel\";","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"            + \": Deselects the currently selected event.\\n\"","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"    public static final String MESSAGE_DESELECT_EVENT_SUCCESS \u003d \"Event deselected.\";","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"     * Executes the deselect command.","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"     * @return Result of the command execution.","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"myang2020"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"myang2020"},"content":"        model.deselectEvent();","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"myang2020"},"content":"        return new CommandResult(MESSAGE_DESELECT_EVENT_SUCCESS);","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"myang2020"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"myang2020"},"content":"        return other \u003d\u003d this || other instanceof DeselectCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"myang2020"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"myang2020"},"content":"        return new ToStringBuilder(this).toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"myang2020"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"myang2020":42}},{"path":"src/main/java/seedu/address/logic/commands/EditEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_NAME;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"import java.util.List;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"import seedu.address.model.event.EventDate;","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":" * Edits the name of an existing event in the address book.","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"public class EditEventCommand extends Command {","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"    public static final String COMMAND_WORD \u003d \"editev\";","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the name of the event identified \"","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"            + \"by the index number used in the displayed event list. \"","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2024-04-10"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"myang2020"},"content":"            + \"New_Event_Date (must be in dd-MM-yyyy format) \"","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"            + \"[\" + PREFIX_EVENT_NAME + \"EVENT NAME]\\n\"","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"myang2020"},"content":"            + PREFIX_EVENT_NAME + \"New Event Name\" + \" \"","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"myang2020"},"content":"            + PREFIX_DATE + \"New Event Date\";","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"    public static final String MESSAGE_EDIT_EVENT_SUCCESS \u003d \"Edited Event: %1$s\";","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"This event already exists in the address book.\";","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"    private final Index index;","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"    private final EditEventDescriptor editEventDescriptor;","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"     * @param index of the event in the filtered event list to edit","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"     * @param editEventDescriptor details to edit the event with","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"    public EditEventCommand(Index index, EditEventDescriptor editEventDescriptor) {","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"        requireNonNull(index);","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"        requireNonNull(editEventDescriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"        this.editEventDescriptor \u003d new EditEventDescriptor(editEventDescriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"Apzure"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"Apzure"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getFilteredEventList();","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"Apzure"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"Apzure"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"Apzure"},"content":"        Event eventToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"Apzure"},"content":"        Event editedEvent \u003d createEditedEvent(eventToEdit, editEventDescriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"Apzure"},"content":"        if (!eventToEdit.isSameEvent(editedEvent) \u0026\u0026 model.hasEvent(editedEvent)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"Apzure"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"Apzure"},"content":"        model.setEvent(eventToEdit, editedEvent);","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"myang2020"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_EVENT_SUCCESS, Messages.format(editedEvent)));","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"Apzure"},"content":"     * Creates and returns a {@code Event} with the details of {@code eventToEdit}","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"Apzure"},"content":"     * edited with {@code editEventDescriptor}.","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"Apzure"},"content":"    private static Event createEditedEvent(Event eventToEdit, EditEventDescriptor editEventDescriptor) {","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"Apzure"},"content":"        assert eventToEdit !\u003d null;","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"Apzure"},"content":"        EventName updatedName \u003d editEventDescriptor.getName().orElse(eventToEdit.getEventName());","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"myang2020"},"content":"        EventDate updatedDate \u003d editEventDescriptor.getDate().orElse(eventToEdit.getEventDate());","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"myang2020"},"content":"        Event editedEvent \u003d new Event(updatedName, updatedDate);","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"Apzure"},"content":"        editedEvent.setPersons(eventToEdit.getPersonList());","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"Apzure"},"content":"        return editedEvent;","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"Apzure"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"Apzure"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"Apzure"},"content":"            return true;","lastModifiedDate":"2024-03-27"},{"lineNumber":96,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":98,"author":{"gitId":"Apzure"},"content":"        if (!(other instanceof EditEventCommand)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":99,"author":{"gitId":"Apzure"},"content":"            return false;","lastModifiedDate":"2024-03-27"},{"lineNumber":100,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":101,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"Apzure"},"content":"        EditEventCommand otherEditCommand \u003d (EditEventCommand) other;","lastModifiedDate":"2024-03-27"},{"lineNumber":103,"author":{"gitId":"Apzure"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"Apzure"},"content":"                \u0026\u0026 editEventDescriptor.equals(otherEditCommand.editEventDescriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":105,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":107,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":108,"author":{"gitId":"Apzure"},"content":"    public String toString() {","lastModifiedDate":"2024-03-27"},{"lineNumber":109,"author":{"gitId":"Apzure"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-27"},{"lineNumber":110,"author":{"gitId":"Apzure"},"content":"                .add(\"index\", index)","lastModifiedDate":"2024-03-27"},{"lineNumber":111,"author":{"gitId":"Apzure"},"content":"                .add(\"editEventDescriptor\", editEventDescriptor)","lastModifiedDate":"2024-03-27"},{"lineNumber":112,"author":{"gitId":"Apzure"},"content":"                .toString();","lastModifiedDate":"2024-03-27"},{"lineNumber":113,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":114,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":115,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":116,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":117,"author":{"gitId":"Apzure"},"content":"     * Stores the details to edit the event with. Each non-empty field value will replace the","lastModifiedDate":"2024-03-27"},{"lineNumber":118,"author":{"gitId":"Apzure"},"content":"     * corresponding field value of the event.","lastModifiedDate":"2024-03-27"},{"lineNumber":119,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":120,"author":{"gitId":"Apzure"},"content":"    public static class EditEventDescriptor {","lastModifiedDate":"2024-03-27"},{"lineNumber":121,"author":{"gitId":"Apzure"},"content":"        private EventName name;","lastModifiedDate":"2024-03-27"},{"lineNumber":122,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":123,"author":{"gitId":"myang2020"},"content":"        private EventDate date;","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"Apzure"},"content":"        public EditEventDescriptor() {}","lastModifiedDate":"2024-03-27"},{"lineNumber":126,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":127,"author":{"gitId":"Apzure"},"content":"        /**","lastModifiedDate":"2024-03-27"},{"lineNumber":128,"author":{"gitId":"Apzure"},"content":"         * Copy constructor.","lastModifiedDate":"2024-03-27"},{"lineNumber":129,"author":{"gitId":"Apzure"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2024-03-27"},{"lineNumber":130,"author":{"gitId":"Apzure"},"content":"         */","lastModifiedDate":"2024-03-27"},{"lineNumber":131,"author":{"gitId":"Apzure"},"content":"        public EditEventDescriptor(EditEventDescriptor toCopy) {","lastModifiedDate":"2024-03-27"},{"lineNumber":132,"author":{"gitId":"Apzure"},"content":"            withName(toCopy.name);","lastModifiedDate":"2024-03-27"},{"lineNumber":133,"author":{"gitId":"myang2020"},"content":"            withDate(toCopy.date);","lastModifiedDate":"2024-04-02"},{"lineNumber":134,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":135,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":136,"author":{"gitId":"Apzure"},"content":"        /**","lastModifiedDate":"2024-03-27"},{"lineNumber":137,"author":{"gitId":"Apzure"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2024-03-27"},{"lineNumber":138,"author":{"gitId":"Apzure"},"content":"         */","lastModifiedDate":"2024-03-27"},{"lineNumber":139,"author":{"gitId":"Apzure"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2024-03-27"},{"lineNumber":140,"author":{"gitId":"myang2020"},"content":"            return CollectionUtil.isAnyNonNull(name, date);","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":142,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":143,"author":{"gitId":"Apzure"},"content":"        public void withName(EventName name) {","lastModifiedDate":"2024-03-27"},{"lineNumber":144,"author":{"gitId":"Apzure"},"content":"            this.name \u003d name;","lastModifiedDate":"2024-03-27"},{"lineNumber":145,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":146,"author":{"gitId":"myang2020"},"content":"        public void withDate(EventDate date) {","lastModifiedDate":"2024-04-02"},{"lineNumber":147,"author":{"gitId":"myang2020"},"content":"            this.date \u003d date;","lastModifiedDate":"2024-04-02"},{"lineNumber":148,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":149,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":150,"author":{"gitId":"Apzure"},"content":"        public Optional\u003cEventName\u003e getName() {","lastModifiedDate":"2024-03-27"},{"lineNumber":151,"author":{"gitId":"Apzure"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2024-03-27"},{"lineNumber":152,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":153,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":154,"author":{"gitId":"Apzure"},"content":"        public void setName(EventName name) {","lastModifiedDate":"2024-03-27"},{"lineNumber":155,"author":{"gitId":"Apzure"},"content":"            this.name \u003d name;","lastModifiedDate":"2024-03-27"},{"lineNumber":156,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":157,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":158,"author":{"gitId":"myang2020"},"content":"        public Optional\u003cEventDate\u003e getDate() {","lastModifiedDate":"2024-04-02"},{"lineNumber":159,"author":{"gitId":"myang2020"},"content":"            return Optional.ofNullable(date);","lastModifiedDate":"2024-04-02"},{"lineNumber":160,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":161,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":162,"author":{"gitId":"myang2020"},"content":"        public void setDate(EventDate date) {","lastModifiedDate":"2024-04-02"},{"lineNumber":163,"author":{"gitId":"myang2020"},"content":"            this.date \u003d date;","lastModifiedDate":"2024-04-02"},{"lineNumber":164,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":165,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":166,"author":{"gitId":"Apzure"},"content":"        @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":167,"author":{"gitId":"Apzure"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2024-03-27"},{"lineNumber":168,"author":{"gitId":"Apzure"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-27"},{"lineNumber":169,"author":{"gitId":"Apzure"},"content":"                return true;","lastModifiedDate":"2024-03-27"},{"lineNumber":170,"author":{"gitId":"Apzure"},"content":"            }","lastModifiedDate":"2024-03-27"},{"lineNumber":171,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":172,"author":{"gitId":"Apzure"},"content":"            // instanceof handles nulls","lastModifiedDate":"2024-03-27"},{"lineNumber":173,"author":{"gitId":"Apzure"},"content":"            if (!(other instanceof EditEventDescriptor)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":174,"author":{"gitId":"Apzure"},"content":"                return false;","lastModifiedDate":"2024-03-27"},{"lineNumber":175,"author":{"gitId":"Apzure"},"content":"            }","lastModifiedDate":"2024-03-27"},{"lineNumber":176,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":177,"author":{"gitId":"Apzure"},"content":"            EditEventDescriptor otherEditEventDescriptor \u003d (EditEventDescriptor) other;","lastModifiedDate":"2024-03-27"},{"lineNumber":178,"author":{"gitId":"myang2020"},"content":"            return Objects.equals(name, otherEditEventDescriptor.name)","lastModifiedDate":"2024-04-02"},{"lineNumber":179,"author":{"gitId":"myang2020"},"content":"                    \u0026\u0026 Objects.equals(date, otherEditEventDescriptor.date);","lastModifiedDate":"2024-04-02"},{"lineNumber":180,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":181,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":182,"author":{"gitId":"Apzure"},"content":"        @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":183,"author":{"gitId":"Apzure"},"content":"        public String toString() {","lastModifiedDate":"2024-03-27"},{"lineNumber":184,"author":{"gitId":"Apzure"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2024-03-27"},{"lineNumber":185,"author":{"gitId":"Apzure"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2024-03-27"},{"lineNumber":186,"author":{"gitId":"myang2020"},"content":"                    .add(\"date\", date)","lastModifiedDate":"2024-04-02"},{"lineNumber":187,"author":{"gitId":"Apzure"},"content":"                    .toString();","lastModifiedDate":"2024-03-27"},{"lineNumber":188,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":189,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":190,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"Apzure":164,"myang2020":26}},{"path":"src/main/java/seedu/address/logic/commands/EditPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"public class EditPersonCommand extends Command {","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"    public static final String COMMAND_WORD \u003d \"editp\";","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"Apzure"},"content":"    public EditPersonCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2017-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"Apzure"},"content":"        if (!(other instanceof EditPersonCommand)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"Apzure"},"content":"        EditPersonCommand otherEditCommand \u003d (EditPersonCommand) other;","lastModifiedDate":"2024-03-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Apzure":5,"-":237}},{"path":"src/main/java/seedu/address/logic/commands/ExportCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChocoRagdoll"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"ChocoRagdoll"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"ChocoRagdoll"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"ChocoRagdoll"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"ChocoRagdoll"},"content":" * Exports the chosen details of the filtered participants to a CSV file.","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"ChocoRagdoll"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"ChocoRagdoll"},"content":"public class ExportCommand extends Command {","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"ChocoRagdoll"},"content":"    public static final String COMMAND_WORD \u003d \"export\";","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"ChocoRagdoll"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Exports the details of all filtered participants \"","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"ChocoRagdoll"},"content":"            + \"identified by the command flags, only the fields specified by the flags will be exported.\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"ChocoRagdoll"},"content":"            + \"Flags include: [n/] for Name, [p/] for Phone, [e/] for Email, [a/] for Address\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"ChocoRagdoll"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/\"","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"ChocoRagdoll"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/ p/ e/ a/\";","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"ChocoRagdoll"},"content":"    public static final String MESSAGE_EXPORT_SUCCESS \u003d \"Exported the specified participant data.\";","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"ChocoRagdoll"},"content":"    public static final String MESSAGE_FAILURE \u003d \"Failed to export to CSV file.\";","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"ChocoRagdoll"},"content":"    private final boolean shouldExportName;","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"ChocoRagdoll"},"content":"    private final boolean shouldExportPhone;","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"ChocoRagdoll"},"content":"    private final boolean shouldExportEmail;","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"ChocoRagdoll"},"content":"    private final boolean shouldExportAddress;","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"ChocoRagdoll"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"ChocoRagdoll"},"content":"     * Creates an ExportCommand to export the specified details of the filtered participants.","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"ChocoRagdoll"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"ChocoRagdoll"},"content":"    public ExportCommand(boolean shouldExportName, boolean shouldExportPhone,","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"ChocoRagdoll"},"content":"                         boolean shouldExportEmail, boolean shouldExportAddress) {","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"ChocoRagdoll"},"content":"        this.shouldExportName \u003d shouldExportName;","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"ChocoRagdoll"},"content":"        this.shouldExportPhone \u003d shouldExportPhone;","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"ChocoRagdoll"},"content":"        this.shouldExportEmail \u003d shouldExportEmail;","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"ChocoRagdoll"},"content":"        this.shouldExportAddress \u003d shouldExportAddress;","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"ChocoRagdoll"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"ChocoRagdoll"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"ChocoRagdoll"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"ChocoRagdoll"},"content":"        try {","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"ChocoRagdoll"},"content":"            if (model.isAnEventSelected()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"ChocoRagdoll"},"content":"                model.exportEventPersonData(shouldExportName, shouldExportPhone,","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"ChocoRagdoll"},"content":"                        shouldExportEmail, shouldExportAddress);","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"ChocoRagdoll"},"content":"            } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"ChocoRagdoll"},"content":"                model.exportGlobalPersonData(shouldExportName, shouldExportPhone,","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"ChocoRagdoll"},"content":"                        shouldExportEmail, shouldExportAddress);","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"ChocoRagdoll"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"ChocoRagdoll"},"content":"            return new CommandResult(String.format(MESSAGE_EXPORT_SUCCESS));","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"ChocoRagdoll"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"ChocoRagdoll"},"content":"            throw new CommandException(MESSAGE_FAILURE);","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"ChocoRagdoll"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"ChocoRagdoll"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"ChocoRagdoll"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"ChocoRagdoll"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"ChocoRagdoll"},"content":"            return true;","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"ChocoRagdoll"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"ChocoRagdoll"},"content":"        if (!(other instanceof ExportCommand)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"ChocoRagdoll"},"content":"            return false;","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"ChocoRagdoll"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"ChocoRagdoll"},"content":"        ExportCommand e \u003d (ExportCommand) other;","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"ChocoRagdoll"},"content":"        return shouldExportName \u003d\u003d e.shouldExportName","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"ChocoRagdoll"},"content":"                \u0026\u0026 shouldExportPhone \u003d\u003d e.shouldExportPhone","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"ChocoRagdoll"},"content":"                \u0026\u0026 shouldExportEmail \u003d\u003d e.shouldExportEmail","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"ChocoRagdoll"},"content":"                \u0026\u0026 shouldExportAddress \u003d\u003d e.shouldExportAddress;","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"ChocoRagdoll"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"ChocoRagdoll":74}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.person.NameAndTagCombinedPredicate;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords and tags.","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"            + \"the specified keywords (case-insensitive) and their tags include all of the specified tags, \\n\"","lastModifiedDate":"2024-04-10"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"            + \"and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-04-10"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"            + \"[\" + PREFIX_NAME + \"KEYWORD MORE_KEYWORDS...] \"","lastModifiedDate":"2024-04-10"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2024-04-10"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/alice bob t/friends t/family\";","lastModifiedDate":"2024-04-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"    private final NameAndTagCombinedPredicate predicate;","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"    public FindCommand(NameAndTagCombinedPredicate predicate) {","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"        if (model.isAnEventSelected()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"            return findInPersonListOfSelectedEvent(model);","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"        } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"            return findInGlobalPersonList(model);","lastModifiedDate":"2024-04-10"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"     * Finds persons in the filtered person list of the selected event in the model based on a given predicate.","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"     * Updates the filtered person list accordingly.","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"     * @param model The model containing the filtered person list of the selected event.","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"     * @return The result of finding persons in the filtered person list of the selected event.","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"    public CommandResult findInPersonListOfSelectedEvent(Model model) {","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"        model.updateFilteredPersonListOfSelectedEvent(predicate);","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"        return new CommandResult(","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"Apzure"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW,","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"Apzure"},"content":"                        model.getFilteredPersonListOfSelectedEvent().size()));","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"Apzure"},"content":"     * Finds persons in the global filtered person list in the model based on a given predicate.","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"Apzure"},"content":"     * Updates the global filtered person list accordingly.","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"Apzure"},"content":"     * @param model The model containing the global filtered person list.","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"Apzure"},"content":"     * @return The result of finding persons in the global filtered person list.","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"Apzure"},"content":"    public CommandResult findInGlobalPersonList(Model model) {","lastModifiedDate":"2024-04-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Apzure":44,"-":51}},{"path":"src/main/java/seedu/address/logic/commands/InviteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"import java.util.List;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"myang2020"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":" * Invites a person to an event using their displayed index from the person list.","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"public class InviteCommand extends Command {","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"    public static final String COMMAND_WORD \u003d \"inv\";","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"            + \": Invites the person identified by the index number used in the displayed person list to \"","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"            + \"the selected event.\\n\"","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"    public static final String MESSAGE_INVITE_PERSON_SUCCESS \u003d \"Invited Person: %1$s to the selected event\";","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"myang2020"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the selected event\";","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"myang2020"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"myang2020"},"content":"     * Constructor of InviteCommand","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"myang2020"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"myang2020"},"content":"     * @param targetIndex Index of person user wants to invite to selected event.","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"myang2020"},"content":"    public InviteCommand(Index targetIndex) {","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"myang2020"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"myang2020"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"myang2020"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"myang2020"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"myang2020"},"content":"        if (!model.isAnEventSelected()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"myang2020"},"content":"            throw new CommandException(Messages.MESSAGE_SELECT_EVENT);","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"myang2020"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"myang2020"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"myang2020"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"myang2020"},"content":"        Person personToInvite \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"myang2020"},"content":"        if (model.isPersonInSelectedEvent(personToInvite)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"myang2020"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"myang2020"},"content":"        model.addPersonToSelectedEvent(personToInvite);","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"myang2020"},"content":"        return new CommandResult(String.format(MESSAGE_INVITE_PERSON_SUCCESS, personToInvite.getName()));","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"myang2020"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"myang2020"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"myang2020"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"myang2020"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"myang2020"},"content":"        if (!(other instanceof InviteCommand)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"myang2020"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"myang2020"},"content":"        InviteCommand otherInviteCommand \u003d (InviteCommand) other;","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"myang2020"},"content":"        return targetIndex.equals(otherInviteCommand.targetIndex);","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"myang2020"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"myang2020"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"myang2020"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"myang2020"},"content":"                .toString();","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"myang2020"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"myang2020":84}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"    public static final String MESSAGE_SUCCESS_GLOBAL \u003d \"Listed all persons in Global List\";","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"    public static final String MESSAGE_SUCCESS_EVENT \u003d \"Listed all persons in the Selected Event\";","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"        if (model.isAnEventSelected()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"            model.updateFilteredPersonListOfSelectedEvent(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"            return new CommandResult(MESSAGE_SUCCESS_EVENT);","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"        } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"            return new CommandResult(MESSAGE_SUCCESS_GLOBAL);","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Apzure":11,"-":21}},{"path":"src/main/java/seedu/address/logic/commands/SelectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":" * Selects an event using its displayed index from the event list.","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"public class SelectCommand extends Command {","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"    public static final String COMMAND_WORD \u003d \"sel\";","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"            + \": Selects the event identified by the index number used in the displayed event list.\\n\"","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"    public static final String MESSAGE_SELECT_EVENT_SUCCESS \u003d \"Selected Event: %1$s\";","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"myang2020"},"content":"     * Constructor of SelectCommand","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"myang2020"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"myang2020"},"content":"     * @param targetIndex Index of event user wants to select.","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"    public SelectCommand(Index targetIndex) {","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"myang2020"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getFilteredEventList();","lastModifiedDate":"2024-04-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"        Event eventToSelect \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-04-10"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"        model.selectEvent(eventToSelect);","lastModifiedDate":"2024-04-10"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"        return new CommandResult(String.format(MESSAGE_SELECT_EVENT_SUCCESS, Messages.format(eventToSelect)));","lastModifiedDate":"2024-04-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"Apzure"},"content":"        if (!(other instanceof SelectCommand)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"Apzure"},"content":"        SelectCommand otherSelectCommand \u003d (SelectCommand) other;","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"Apzure"},"content":"        return targetIndex.equals(otherSelectCommand.targetIndex);","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"Apzure":16,"-":54,"myang2020":6}},{"path":"src/main/java/seedu/address/logic/parser/AddEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-02"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-02"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_NAME;","lastModifiedDate":"2024-03-02"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-02"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-02"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-02"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":"import seedu.address.model.event.EventDate;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2024-03-02"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":" * Parses input arguments and creates a new AddEventCommand object","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-03-10"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"public class AddEventCommandParser implements Parser\u003cAddEventCommand\u003e {","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-02"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"     * Parses the given {@code String} of arguments in the context of the CreateEventCommand","lastModifiedDate":"2024-03-02"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"     * and returns an CreateEventComand object for execution.","lastModifiedDate":"2024-03-02"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-02"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-02"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"    public AddEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-10"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-02"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"             ArgumentTokenizer.tokenize(args, PREFIX_EVENT_NAME, PREFIX_DATE);","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":29,"author":{"gitId":"myang2020"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_EVENT_NAME, PREFIX_DATE)","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-02"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-10"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-02"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_EVENT_NAME, PREFIX_DATE);","lastModifiedDate":"2024-04-10"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"        EventName eventName \u003d ParserUtil.parseEventName(argMultimap.getValue(PREFIX_EVENT_NAME).get());","lastModifiedDate":"2024-03-02"},{"lineNumber":36,"author":{"gitId":"myang2020"},"content":"        EventDate eventDate \u003d ParserUtil.parseEventDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":38,"author":{"gitId":"myang2020"},"content":"        Event event \u003d new Event(eventName, eventDate);","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"        return new AddEventCommand(event);","lastModifiedDate":"2024-03-10"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-02"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-02"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-02"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-02"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-02"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-02"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-03-02"}],"authorContributionMap":{"Apzure":45,"myang2020":6}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"taeewonnn"},"content":"import seedu.address.logic.commands.DeleteEventCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"import seedu.address.logic.commands.DeselectCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"import seedu.address.logic.commands.EditEventCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"import seedu.address.logic.commands.EditPersonCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.logic.commands.ExportCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"import seedu.address.logic.commands.InviteCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"import seedu.address.logic.commands.SelectCommand;","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"Apzure"},"content":"        case EditPersonCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"Apzure"},"content":"            return new EditPersonCommandParser().parse(arguments);","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"Apzure"},"content":"        case EditEventCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"Apzure"},"content":"            return new EditEventCommandParser().parse(arguments);","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":88,"author":{"gitId":"Apzure"},"content":"        case AddEventCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-10"},{"lineNumber":89,"author":{"gitId":"Apzure"},"content":"            return new AddEventCommandParser().parse(arguments);","lastModifiedDate":"2024-03-10"},{"lineNumber":90,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":91,"author":{"gitId":"Apzure"},"content":"        case SelectCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-15"},{"lineNumber":92,"author":{"gitId":"Apzure"},"content":"            return new SelectCommandParser().parse(arguments);","lastModifiedDate":"2024-03-15"},{"lineNumber":93,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":94,"author":{"gitId":"myang2020"},"content":"        case DeselectCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"myang2020"},"content":"            return new DeselectCommand();","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"myang2020"},"content":"        case InviteCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"myang2020"},"content":"            return new InviteCommandParser().parse(arguments);","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"ChocoRagdoll"},"content":"        case DeletePersonCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"ChocoRagdoll"},"content":"            return new DeletePersonCommandParser().parse(arguments);","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"taeewonnn"},"content":"        case DeleteEventCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"taeewonnn"},"content":"            return new DeleteEventCommandParser().parse(arguments);","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"ChocoRagdoll"},"content":"        case ExportCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"ChocoRagdoll"},"content":"            return new ExportCommandParser().parse(arguments);","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Apzure":14,"ChocoRagdoll":8,"-":80,"taeewonnn":4,"myang2020":9}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"taeewonnn"},"content":"    public static final Prefix PREFIX_EVENT_NAME \u003d new Prefix(\"ev/\");","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"-":15,"taeewonnn":1,"myang2020":1}},{"path":"src/main/java/seedu/address/logic/parser/DeleteEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"taeewonnn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"taeewonnn"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"taeewonnn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"taeewonnn"},"content":"import seedu.address.logic.commands.DeleteEventCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"taeewonnn"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"taeewonnn"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"taeewonnn"},"content":" * Parses input arguments and creates a new DeleteEventCommand object","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"taeewonnn"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"taeewonnn"},"content":"public class DeleteEventCommandParser implements Parser\u003cDeleteEventCommand\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"taeewonnn"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"taeewonnn"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteEventCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"taeewonnn"},"content":"     * and returns a DeleteEventCommand object for execution.","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"taeewonnn"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"taeewonnn"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"taeewonnn"},"content":"    public DeleteEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"taeewonnn"},"content":"        try {","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"taeewonnn"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"taeewonnn"},"content":"            return new DeleteEventCommand(index);","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"taeewonnn"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"taeewonnn"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"taeewonnn"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteEventCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"taeewonnn"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"taeewonnn"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"taeewonnn"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"taeewonnn":29}},{"path":"src/main/java/seedu/address/logic/parser/DeletePersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChocoRagdoll"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"ChocoRagdoll"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"ChocoRagdoll"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"ChocoRagdoll"},"content":" * Parses input arguments and creates a new DeletePersonCommand object","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"ChocoRagdoll"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"ChocoRagdoll"},"content":"public class DeletePersonCommandParser implements Parser\u003cDeletePersonCommand\u003e {","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"ChocoRagdoll"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"ChocoRagdoll"},"content":"     * Parses the given {@code String} of arguments in the context of the DeletePersonCommand","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"ChocoRagdoll"},"content":"     * and returns a DeletePersonCommand object for execution.","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"ChocoRagdoll"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"ChocoRagdoll"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"ChocoRagdoll"},"content":"    public DeletePersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"ChocoRagdoll"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"ChocoRagdoll"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"ChocoRagdoll"},"content":"            return new DeletePersonCommand(index);","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"ChocoRagdoll"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"ChocoRagdoll"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"ChocoRagdoll"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeletePersonCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"ChocoRagdoll"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"ChocoRagdoll"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"ChocoRagdoll":28}},{"path":"src/main/java/seedu/address/logic/parser/EditEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_NAME;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"import seedu.address.logic.commands.EditEventCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"import seedu.address.logic.commands.EditEventCommand.EditEventDescriptor;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":" * Parses input arguments and creates a new EditEventCommand object","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"public class EditEventCommandParser implements Parser\u003cEditEventCommand\u003e {","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"     * Parses the given {@code String} of arguments in the context of the EditEventCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"     * and returns an EditEventCommand object for execution.","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"    public EditEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_EVENT_NAME, PREFIX_DATE);","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"        Index index;","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"        try {","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditEventCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_EVENT_NAME);","lastModifiedDate":"2024-04-10"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"        EditEventDescriptor editEventDescriptor \u003d new EditEventDescriptor();","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"        if (argMultimap.getValue(PREFIX_EVENT_NAME).isPresent()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"            editEventDescriptor.withName(ParserUtil.parseEventName(argMultimap.getValue(PREFIX_EVENT_NAME).get()));","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"myang2020"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"myang2020"},"content":"            editEventDescriptor.withDate(ParserUtil.parseEventDate(argMultimap.getValue(PREFIX_DATE).get()));","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"        if (!editEventDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"            throw new ParseException(EditEventCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"        return new EditEventCommand(index, editEventDescriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"Apzure":48,"myang2020":6}},{"path":"src/main/java/seedu/address/logic/parser/EditPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"import seedu.address.logic.commands.EditPersonCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"public class EditPersonCommandParser implements Parser\u003cEditPersonCommand\u003e {","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"    public EditPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"                    EditPersonCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"Apzure"},"content":"            throw new ParseException(EditPersonCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"Apzure"},"content":"        return new EditPersonCommand(index, editPersonDescriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Apzure":8,"-":78}},{"path":"src/main/java/seedu/address/logic/parser/ExportCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChocoRagdoll"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"ChocoRagdoll"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"ChocoRagdoll"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_EXPORT_FORMAT;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"ChocoRagdoll"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"ChocoRagdoll"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"ChocoRagdoll"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"ChocoRagdoll"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.logic.commands.ExportCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"ChocoRagdoll"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"ChocoRagdoll"},"content":" * Parses input arguments and creates a new ExportCommand object","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"ChocoRagdoll"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"ChocoRagdoll"},"content":"public class ExportCommandParser implements Parser\u003cExportCommand\u003e {","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"ChocoRagdoll"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"ChocoRagdoll"},"content":"     * Parses the given {@code String} of arguments in the context of the ExportCommand","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"ChocoRagdoll"},"content":"     * and returns an ExportCommand object for execution.","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"ChocoRagdoll"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"ChocoRagdoll"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"ChocoRagdoll"},"content":"    public ExportCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"ChocoRagdoll"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"ChocoRagdoll"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"ChocoRagdoll"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"ChocoRagdoll"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"ChocoRagdoll"},"content":"        boolean shouldExportName \u003d argMultimap.getValue(PREFIX_NAME).isPresent();","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"ChocoRagdoll"},"content":"        boolean shouldExportPhone \u003d argMultimap.getValue(PREFIX_PHONE).isPresent();","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"ChocoRagdoll"},"content":"        boolean shouldExportEmail \u003d argMultimap.getValue(PREFIX_EMAIL).isPresent();","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"ChocoRagdoll"},"content":"        boolean shouldExportAddress \u003d argMultimap.getValue(PREFIX_ADDRESS).isPresent();","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"ChocoRagdoll"},"content":"        if (!(shouldExportName || shouldExportPhone || shouldExportEmail || shouldExportAddress)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"ChocoRagdoll"},"content":"            throw new ParseException(","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"ChocoRagdoll"},"content":"                    String.format(MESSAGE_INVALID_EXPORT_FORMAT, ExportCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"ChocoRagdoll"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"ChocoRagdoll"},"content":"        return new ExportCommand(shouldExportName, shouldExportPhone, shouldExportEmail, shouldExportAddress);","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"ChocoRagdoll"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"ChocoRagdoll":40}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"taeewonnn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"taeewonnn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"taeewonnn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"import java.util.List;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"taeewonnn"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.person.NameAndTagCombinedPredicate;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"taeewonnn"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"taeewonnn"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"taeewonnn"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"taeewonnn"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_TAG);","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"taeewonnn"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME);","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isEmpty() \u0026\u0026 argMultimap.getValue(PREFIX_TAG).isEmpty()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"        List\u003cString\u003e nameKeywordsList \u003d null;","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"            String trimmedNameArgs \u003d argMultimap.getValue(PREFIX_NAME).get().trim();","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"            if (trimmedNameArgs.isEmpty()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"taeewonnn"},"content":"                throw new ParseException(","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"taeewonnn"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"            nameKeywordsList \u003d Arrays.asList(trimmedNameArgs.split(\"\\\\s+\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"        Set\u003cTag\u003e tagList \u003d null;","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"        if (argMultimap.getValue(PREFIX_TAG).isPresent()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"            tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"taeewonnn"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"Apzure"},"content":"        return new FindCommand(new NameAndTagCombinedPredicate(nameKeywordsList, tagList));","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"Apzure":14,"-":30,"taeewonnn":14}},{"path":"src/main/java/seedu/address/logic/parser/InviteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"import seedu.address.logic.commands.InviteCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":" * Parses input arguments and creates a new InviteCommand object","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"myang2020"},"content":"public class InviteCommandParser implements Parser\u003cInviteCommand\u003e {","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"     * Parses the given {@code String} of arguments in the context of the InviteCommand","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"     * and returns an InviteCommand object for execution.","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"    public InviteCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"        try {","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"            return new InviteCommand(index);","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, InviteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"myang2020"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"myang2020":28}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-04-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":13,"author":{"gitId":"myang2020"},"content":"import seedu.address.model.event.EventDate;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2024-03-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":127,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":128,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-10"},{"lineNumber":129,"author":{"gitId":"Apzure"},"content":"     * Parses {@code String eventName} into a {@code EventName}.","lastModifiedDate":"2024-03-10"},{"lineNumber":130,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-10"},{"lineNumber":131,"author":{"gitId":"Apzure"},"content":"    public static EventName parseEventName(String eventName) throws ParseException {","lastModifiedDate":"2024-04-04"},{"lineNumber":132,"author":{"gitId":"Apzure"},"content":"        requireNonNull(eventName);","lastModifiedDate":"2024-03-02"},{"lineNumber":133,"author":{"gitId":"Apzure"},"content":"        String trimmedEventName \u003d eventName.trim();","lastModifiedDate":"2024-03-02"},{"lineNumber":134,"author":{"gitId":"Apzure"},"content":"        if (!EventName.isValidEventName(trimmedEventName)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":135,"author":{"gitId":"Apzure"},"content":"            throw new ParseException(EventName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-04"},{"lineNumber":136,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":137,"author":{"gitId":"Apzure"},"content":"        return new EventName(trimmedEventName);","lastModifiedDate":"2024-03-02"},{"lineNumber":138,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":139,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":140,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"myang2020"},"content":"     * Parses {@code String eventDate} into a {@code EventDate}.","lastModifiedDate":"2024-04-02"},{"lineNumber":142,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":143,"author":{"gitId":"myang2020"},"content":"    public static EventDate parseEventDate(String eventDate) throws ParseException {","lastModifiedDate":"2024-04-02"},{"lineNumber":144,"author":{"gitId":"myang2020"},"content":"        requireNonNull(eventDate);","lastModifiedDate":"2024-04-02"},{"lineNumber":145,"author":{"gitId":"myang2020"},"content":"        String trimmedEventDate \u003d eventDate.stripTrailing();","lastModifiedDate":"2024-04-02"},{"lineNumber":146,"author":{"gitId":"myang2020"},"content":"        try {","lastModifiedDate":"2024-04-08"},{"lineNumber":147,"author":{"gitId":"myang2020"},"content":"            if (!EventDate.isValidDate(trimmedEventDate)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":148,"author":{"gitId":"myang2020"},"content":"                throw new ParseException(EventDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-02"},{"lineNumber":149,"author":{"gitId":"myang2020"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":150,"author":{"gitId":"myang2020"},"content":"            return new EventDate(trimmedEventDate);","lastModifiedDate":"2024-04-02"},{"lineNumber":151,"author":{"gitId":"myang2020"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-04-08"},{"lineNumber":152,"author":{"gitId":"myang2020"},"content":"            throw new ParseException(EventDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-08"},{"lineNumber":153,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":154,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Apzure":14,"-":124,"myang2020":17}},{"path":"src/main/java/seedu/address/logic/parser/SelectCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"import seedu.address.logic.commands.SelectCommand;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":" * Parses input arguments and creates a new SelectCommand object","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"public class SelectCommandParser implements Parser\u003cSelectCommand\u003e {","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"     * Parses the given {@code String} of arguments in the context of the SelectCommand","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"     * and returns a SelectCommand object for execution.","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"    public SelectCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"            return new SelectCommand(index);","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SelectCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"Apzure":8,"-":21}},{"path":"src/main/java/seedu/address/model/EventBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.model;","lastModifiedDate":"2024-03-01"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"import java.util.List;","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"import javafx.beans.property.ReadOnlyObjectProperty;","lastModifiedDate":"2024-04-07"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"import javafx.beans.property.SimpleObjectProperty;","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-01"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.UniqueEventList;","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":" * Wraps all data at the event-book level.","lastModifiedDate":"2024-03-01"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":" * Duplicates are not allowed (by .isSameEvent comparison).","lastModifiedDate":"2024-03-01"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-03-01"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"public class EventBook implements ReadOnlyEventBook {","lastModifiedDate":"2024-03-01"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"    private final UniqueEventList events;","lastModifiedDate":"2024-03-01"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"    private final UniquePersonList personsOfSelectedEvent;","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"    private Event selectedEvent; // null when no event is selected","lastModifiedDate":"2024-04-10"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"    private final SimpleObjectProperty\u003cEvent\u003e selectedEventObservable;","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"    // Non-static initialization block","lastModifiedDate":"2024-03-01"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"    {","lastModifiedDate":"2024-03-01"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"        events \u003d new UniqueEventList();","lastModifiedDate":"2024-03-01"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"        personsOfSelectedEvent \u003d new UniquePersonList();","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"        selectedEventObservable \u003d new SimpleObjectProperty\u003c\u003e(selectedEvent);","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-10"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"     * Creates an EventBook","lastModifiedDate":"2024-03-10"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-10"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"    public EventBook() {","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"     * Creates an EventBook using the Events in the {@code toBeCopied}.","lastModifiedDate":"2024-03-01"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"    public EventBook(ReadOnlyEventBook toBeCopied) {","lastModifiedDate":"2024-03-01"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"        this();","lastModifiedDate":"2024-03-01"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2024-03-01"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":51,"author":{"gitId":"taeewonnn"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"taeewonnn"},"content":"     * Returns true if the selected event with the same identity as {@code event} exists in the event book.","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"taeewonnn"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"     * @param event The event to check.","lastModifiedDate":"2024-04-07"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"     * @return {@code true} if the selected event exists; {@code false} otherwise.","lastModifiedDate":"2024-04-07"},{"lineNumber":56,"author":{"gitId":"taeewonnn"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"taeewonnn"},"content":"    public boolean isSameSelectedEvent(Event event) {","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"        assert event !\u003d null;","lastModifiedDate":"2024-04-07"},{"lineNumber":59,"author":{"gitId":"taeewonnn"},"content":"        return event.equals(selectedEvent);","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"taeewonnn"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"Apzure"},"content":"    // List overwrite operations","lastModifiedDate":"2024-03-01"},{"lineNumber":63,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":64,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":65,"author":{"gitId":"Apzure"},"content":"     * Replaces the contents of the event list with {@code events}.","lastModifiedDate":"2024-03-01"},{"lineNumber":66,"author":{"gitId":"Apzure"},"content":"     * {@code events} must not contain duplicate events.","lastModifiedDate":"2024-03-01"},{"lineNumber":67,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":68,"author":{"gitId":"Apzure"},"content":"     * @param events The new list of events.","lastModifiedDate":"2024-04-07"},{"lineNumber":69,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":70,"author":{"gitId":"Apzure"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2024-03-01"},{"lineNumber":71,"author":{"gitId":"Apzure"},"content":"        this.events.setEvents(events);","lastModifiedDate":"2024-03-01"},{"lineNumber":72,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":73,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":74,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":75,"author":{"gitId":"Apzure"},"content":"     * Resets the existing data of this {@code EventBook} with {@code newData}.","lastModifiedDate":"2024-03-01"},{"lineNumber":76,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":77,"author":{"gitId":"Apzure"},"content":"     * @param newData The new data to be set.","lastModifiedDate":"2024-04-07"},{"lineNumber":78,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":79,"author":{"gitId":"Apzure"},"content":"    public void resetData(ReadOnlyEventBook newData) {","lastModifiedDate":"2024-03-01"},{"lineNumber":80,"author":{"gitId":"Apzure"},"content":"        requireNonNull(newData);","lastModifiedDate":"2024-03-01"},{"lineNumber":81,"author":{"gitId":"Apzure"},"content":"        setEvents(newData.getEventList());","lastModifiedDate":"2024-03-01"},{"lineNumber":82,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":83,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":84,"author":{"gitId":"Apzure"},"content":"    // Event-level operations","lastModifiedDate":"2024-03-01"},{"lineNumber":85,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":86,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":87,"author":{"gitId":"Apzure"},"content":"     * Returns true if an event with the same identity as {@code event} exists in the event book.","lastModifiedDate":"2024-03-01"},{"lineNumber":88,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":89,"author":{"gitId":"Apzure"},"content":"     * @param event The event to check.","lastModifiedDate":"2024-04-07"},{"lineNumber":90,"author":{"gitId":"Apzure"},"content":"     * @return {@code true} if the event exists; {@code false} otherwise.","lastModifiedDate":"2024-04-07"},{"lineNumber":91,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":92,"author":{"gitId":"Apzure"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2024-03-01"},{"lineNumber":93,"author":{"gitId":"Apzure"},"content":"        assert event !\u003d null;","lastModifiedDate":"2024-04-07"},{"lineNumber":94,"author":{"gitId":"Apzure"},"content":"        return events.contains(event);","lastModifiedDate":"2024-03-01"},{"lineNumber":95,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":96,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":97,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":98,"author":{"gitId":"Apzure"},"content":"     * Adds an event to the event book.","lastModifiedDate":"2024-03-01"},{"lineNumber":99,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":100,"author":{"gitId":"Apzure"},"content":"     * @param event The event to be added.","lastModifiedDate":"2024-04-07"},{"lineNumber":101,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":102,"author":{"gitId":"Apzure"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2024-03-01"},{"lineNumber":103,"author":{"gitId":"Apzure"},"content":"        assert event !\u003d null;","lastModifiedDate":"2024-04-07"},{"lineNumber":104,"author":{"gitId":"Apzure"},"content":"        events.add(event);","lastModifiedDate":"2024-03-01"},{"lineNumber":105,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":106,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":107,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":108,"author":{"gitId":"Apzure"},"content":"     * Replaces the given event {@code target} in the list with {@code editedEvent}.","lastModifiedDate":"2024-03-01"},{"lineNumber":109,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":110,"author":{"gitId":"Apzure"},"content":"     * @param target      The event to be replaced.","lastModifiedDate":"2024-04-07"},{"lineNumber":111,"author":{"gitId":"Apzure"},"content":"     * @param editedEvent The replacement event.","lastModifiedDate":"2024-04-07"},{"lineNumber":112,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":113,"author":{"gitId":"Apzure"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2024-03-01"},{"lineNumber":114,"author":{"gitId":"Apzure"},"content":"        assert target !\u003d null;","lastModifiedDate":"2024-04-07"},{"lineNumber":115,"author":{"gitId":"Apzure"},"content":"        assert editedEvent !\u003d null;","lastModifiedDate":"2024-04-07"},{"lineNumber":116,"author":{"gitId":"Apzure"},"content":"        events.setEvent(target, editedEvent);","lastModifiedDate":"2024-03-01"},{"lineNumber":117,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":118,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":119,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":120,"author":{"gitId":"Apzure"},"content":"     * Removes an event from the event book.","lastModifiedDate":"2024-04-07"},{"lineNumber":121,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":122,"author":{"gitId":"Apzure"},"content":"     * @param event The event to be removed.","lastModifiedDate":"2024-04-07"},{"lineNumber":123,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":124,"author":{"gitId":"Apzure"},"content":"    public void removeEvent(Event event) {","lastModifiedDate":"2024-04-07"},{"lineNumber":125,"author":{"gitId":"Apzure"},"content":"        assert event !\u003d null;;","lastModifiedDate":"2024-04-07"},{"lineNumber":126,"author":{"gitId":"Apzure"},"content":"        events.remove(event);","lastModifiedDate":"2024-04-07"},{"lineNumber":127,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":128,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":129,"author":{"gitId":"Apzure"},"content":"    // Select Event Methods","lastModifiedDate":"2024-03-15"},{"lineNumber":130,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":131,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":132,"author":{"gitId":"myang2020"},"content":"     * Checks if an event is currently selected.","lastModifiedDate":"2024-03-17"},{"lineNumber":133,"author":{"gitId":"myang2020"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"Apzure"},"content":"     * @return {@code true} if an event is selected; {@code false} otherwise.","lastModifiedDate":"2024-04-07"},{"lineNumber":135,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":136,"author":{"gitId":"myang2020"},"content":"    public boolean isAnEventSelected() {","lastModifiedDate":"2024-03-17"},{"lineNumber":137,"author":{"gitId":"myang2020"},"content":"        return selectedEvent !\u003d null;","lastModifiedDate":"2024-03-17"},{"lineNumber":138,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":139,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":140,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":141,"author":{"gitId":"Apzure"},"content":"     * Selects an event from the event book.","lastModifiedDate":"2024-04-07"},{"lineNumber":142,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":143,"author":{"gitId":"Apzure"},"content":"     * @param event The event to be selected.","lastModifiedDate":"2024-04-07"},{"lineNumber":144,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":145,"author":{"gitId":"Apzure"},"content":"    public void selectEvent(Event event) {","lastModifiedDate":"2024-03-15"},{"lineNumber":146,"author":{"gitId":"Apzure"},"content":"        assert event !\u003d null;","lastModifiedDate":"2024-04-07"},{"lineNumber":147,"author":{"gitId":"Apzure"},"content":"        selectedEvent \u003d event;","lastModifiedDate":"2024-03-15"},{"lineNumber":148,"author":{"gitId":"Apzure"},"content":"        selectedEventObservable.set(event);","lastModifiedDate":"2024-03-26"},{"lineNumber":149,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":150,"author":{"gitId":"Apzure"},"content":"        updatePersonListOfSelectedEvent();","lastModifiedDate":"2024-03-26"},{"lineNumber":151,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":152,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":153,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":154,"author":{"gitId":"Apzure"},"content":"     * Deselects the currently selected event.","lastModifiedDate":"2024-04-07"},{"lineNumber":155,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":156,"author":{"gitId":"myang2020"},"content":"    public void deselectEvent() {","lastModifiedDate":"2024-03-16"},{"lineNumber":157,"author":{"gitId":"myang2020"},"content":"        selectedEvent \u003d null;","lastModifiedDate":"2024-03-16"},{"lineNumber":158,"author":{"gitId":"Apzure"},"content":"        selectedEventObservable.set(null);","lastModifiedDate":"2024-03-26"},{"lineNumber":159,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":160,"author":{"gitId":"Apzure"},"content":"        updatePersonListOfSelectedEvent();","lastModifiedDate":"2024-03-26"},{"lineNumber":161,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":162,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":163,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":164,"author":{"gitId":"myang2020"},"content":"     * Checks if a person is part of the selected event.","lastModifiedDate":"2024-03-17"},{"lineNumber":165,"author":{"gitId":"myang2020"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":166,"author":{"gitId":"myang2020"},"content":"     * @param person The person to check.","lastModifiedDate":"2024-03-17"},{"lineNumber":167,"author":{"gitId":"Apzure"},"content":"     * @return {@code true} if the person is part of the selected event; {@code false} otherwise.","lastModifiedDate":"2024-04-07"},{"lineNumber":168,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":169,"author":{"gitId":"myang2020"},"content":"    public boolean isPersonInSelectedEvent(Person person) {","lastModifiedDate":"2024-03-17"},{"lineNumber":170,"author":{"gitId":"myang2020"},"content":"        if (!isAnEventSelected()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":171,"author":{"gitId":"myang2020"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":172,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":173,"author":{"gitId":"myang2020"},"content":"        return selectedEvent.hasPerson(person);","lastModifiedDate":"2024-03-17"},{"lineNumber":174,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":175,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":176,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":177,"author":{"gitId":"myang2020"},"content":"     * Adds a person to the selected event if an event is currently selected.","lastModifiedDate":"2024-03-17"},{"lineNumber":178,"author":{"gitId":"myang2020"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":179,"author":{"gitId":"Apzure"},"content":"     * @param person The person to be added.","lastModifiedDate":"2024-04-07"},{"lineNumber":180,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":181,"author":{"gitId":"myang2020"},"content":"    public void addPersonToSelectedEvent(Person person) {","lastModifiedDate":"2024-03-17"},{"lineNumber":182,"author":{"gitId":"Apzure"},"content":"        assert(isAnEventSelected());","lastModifiedDate":"2024-04-07"},{"lineNumber":183,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":184,"author":{"gitId":"Apzure"},"content":"        if (isAnEventSelected()) {","lastModifiedDate":"2024-04-08"},{"lineNumber":185,"author":{"gitId":"Apzure"},"content":"            selectedEvent.addPerson(person);","lastModifiedDate":"2024-04-08"},{"lineNumber":186,"author":{"gitId":"Apzure"},"content":"            updatePersonListOfSelectedEvent();","lastModifiedDate":"2024-03-26"},{"lineNumber":187,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":188,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":189,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":190,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":191,"author":{"gitId":"ChocoRagdoll"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":192,"author":{"gitId":"ChocoRagdoll"},"content":"     * Deletes a person from the selected event if an event is currently selected.","lastModifiedDate":"2024-03-20"},{"lineNumber":193,"author":{"gitId":"ChocoRagdoll"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":194,"author":{"gitId":"Apzure"},"content":"     * @param person The person to be deleted.","lastModifiedDate":"2024-04-07"},{"lineNumber":195,"author":{"gitId":"ChocoRagdoll"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":196,"author":{"gitId":"ChocoRagdoll"},"content":"    public void deletePersonFromSelectedEvent(Person person) {","lastModifiedDate":"2024-03-20"},{"lineNumber":197,"author":{"gitId":"Apzure"},"content":"        assert(isAnEventSelected());","lastModifiedDate":"2024-04-07"},{"lineNumber":198,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":199,"author":{"gitId":"Apzure"},"content":"        if (isAnEventSelected()) {","lastModifiedDate":"2024-04-08"},{"lineNumber":200,"author":{"gitId":"Apzure"},"content":"            selectedEvent.deletePerson(person);","lastModifiedDate":"2024-04-08"},{"lineNumber":201,"author":{"gitId":"Apzure"},"content":"            updatePersonListOfSelectedEvent();","lastModifiedDate":"2024-03-26"},{"lineNumber":202,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":203,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":204,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":205,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":206,"author":{"gitId":"Apzure"},"content":"     * Replaces an existing person in all events with a new person.","lastModifiedDate":"2024-04-07"},{"lineNumber":207,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":208,"author":{"gitId":"Apzure"},"content":"     * @param target      The person to be replaced.","lastModifiedDate":"2024-03-26"},{"lineNumber":209,"author":{"gitId":"Apzure"},"content":"     * @param editedPerson The replacement person.","lastModifiedDate":"2024-03-26"},{"lineNumber":210,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":211,"author":{"gitId":"Apzure"},"content":"    public void editPersonInAllEvents(Person target, Person editedPerson) {","lastModifiedDate":"2024-04-07"},{"lineNumber":212,"author":{"gitId":"Apzure"},"content":"        for (Iterator\u003cEvent\u003e it \u003d events.iterator(); it.hasNext();) {","lastModifiedDate":"2024-03-26"},{"lineNumber":213,"author":{"gitId":"Apzure"},"content":"            Event event \u003d it.next();","lastModifiedDate":"2024-03-26"},{"lineNumber":214,"author":{"gitId":"Apzure"},"content":"            if (event.hasPerson(target)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":215,"author":{"gitId":"Apzure"},"content":"                event.setPerson(target, editedPerson);","lastModifiedDate":"2024-03-26"},{"lineNumber":216,"author":{"gitId":"Apzure"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":217,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":218,"author":{"gitId":"Apzure"},"content":"        updatePersonListOfSelectedEvent();","lastModifiedDate":"2024-03-26"},{"lineNumber":219,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":220,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":221,"author":{"gitId":"Apzure"},"content":"    private void updatePersonListOfSelectedEvent() {","lastModifiedDate":"2024-03-26"},{"lineNumber":222,"author":{"gitId":"Apzure"},"content":"        if (selectedEvent !\u003d null) {","lastModifiedDate":"2024-03-26"},{"lineNumber":223,"author":{"gitId":"Apzure"},"content":"            personsOfSelectedEvent.setPersons(selectedEvent.getPersonList());","lastModifiedDate":"2024-03-26"},{"lineNumber":224,"author":{"gitId":"Apzure"},"content":"        } else {","lastModifiedDate":"2024-03-26"},{"lineNumber":225,"author":{"gitId":"Apzure"},"content":"            personsOfSelectedEvent.setPersons(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-03-26"},{"lineNumber":226,"author":{"gitId":"ChocoRagdoll"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":227,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":228,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":229,"author":{"gitId":"Apzure"},"content":"    // Util methods","lastModifiedDate":"2024-03-01"},{"lineNumber":230,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":231,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-01"},{"lineNumber":232,"author":{"gitId":"Apzure"},"content":"    public String toString() {","lastModifiedDate":"2024-03-01"},{"lineNumber":233,"author":{"gitId":"Apzure"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-01"},{"lineNumber":234,"author":{"gitId":"Apzure"},"content":"                .add(\"events\", events)","lastModifiedDate":"2024-03-01"},{"lineNumber":235,"author":{"gitId":"Apzure"},"content":"                .toString();","lastModifiedDate":"2024-03-01"},{"lineNumber":236,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":237,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":238,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":239,"author":{"gitId":"Apzure"},"content":"    public ReadOnlyObjectProperty\u003cEvent\u003e getSelectedEvent() {","lastModifiedDate":"2024-04-07"},{"lineNumber":240,"author":{"gitId":"Apzure"},"content":"        return selectedEventObservable;","lastModifiedDate":"2024-03-26"},{"lineNumber":241,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":242,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":243,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-01"},{"lineNumber":244,"author":{"gitId":"Apzure"},"content":"    public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2024-03-01"},{"lineNumber":245,"author":{"gitId":"Apzure"},"content":"        return events.asUnmodifiableObservableList();","lastModifiedDate":"2024-03-01"},{"lineNumber":246,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":247,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":248,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":249,"author":{"gitId":"Apzure"},"content":"    public ObservableList\u003cPerson\u003e getPersonsOfSelectedEventList() {","lastModifiedDate":"2024-03-15"},{"lineNumber":250,"author":{"gitId":"Apzure"},"content":"        return personsOfSelectedEvent.asUnmodifiableObservableList();","lastModifiedDate":"2024-03-15"},{"lineNumber":251,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":252,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":253,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-01"},{"lineNumber":254,"author":{"gitId":"Apzure"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-01"},{"lineNumber":255,"author":{"gitId":"Apzure"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-01"},{"lineNumber":256,"author":{"gitId":"Apzure"},"content":"            return true;","lastModifiedDate":"2024-03-01"},{"lineNumber":257,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":258,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":259,"author":{"gitId":"Apzure"},"content":"        if (!(other instanceof EventBook)) {","lastModifiedDate":"2024-03-01"},{"lineNumber":260,"author":{"gitId":"Apzure"},"content":"            return false;","lastModifiedDate":"2024-03-01"},{"lineNumber":261,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":262,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":263,"author":{"gitId":"Apzure"},"content":"        EventBook otherEventBook \u003d (EventBook) other;","lastModifiedDate":"2024-03-01"},{"lineNumber":264,"author":{"gitId":"Apzure"},"content":"        return events.equals(otherEventBook.events);","lastModifiedDate":"2024-03-01"},{"lineNumber":265,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":266,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":267,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-01"},{"lineNumber":268,"author":{"gitId":"Apzure"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-01"},{"lineNumber":269,"author":{"gitId":"Apzure"},"content":"        return events.hashCode();","lastModifiedDate":"2024-03-01"},{"lineNumber":270,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":271,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-03-01"},{"lineNumber":272,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-07"}],"authorContributionMap":{"Apzure":222,"ChocoRagdoll":8,"taeewonnn":8,"myang2020":34}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"ChocoRagdoll"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"nusliuyifan"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"nusliuyifan"},"content":"     * Returns the user prefs\u0027 event book file path.","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"nusliuyifan"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"nusliuyifan"},"content":"    Path getEventBookFilePath();","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"nusliuyifan"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"nusliuyifan"},"content":"     * Sets the user prefs\u0027 event book file path.","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"nusliuyifan"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"nusliuyifan"},"content":"    void setEventBookFilePath(Path eventBookFilePath);","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"nusliuyifan"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"nusliuyifan"},"content":"     * Replaces event book data with the data in {@code eventBook}.","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"nusliuyifan"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"nusliuyifan"},"content":"    void setEventBook(ReadOnlyEventBook eventBook);","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"nusliuyifan"},"content":"    /** Returns the EventBook */","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"nusliuyifan"},"content":"    ReadOnlyEventBook getEventBook();","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":109,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":110,"author":{"gitId":"Apzure"},"content":"     * Checks if the specified event exists in Event Book.","lastModifiedDate":"2024-04-07"},{"lineNumber":111,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":112,"author":{"gitId":"Apzure"},"content":"     * @param event The event to check for existence.","lastModifiedDate":"2024-04-07"},{"lineNumber":113,"author":{"gitId":"Apzure"},"content":"     * @return {@code true} if the event exists; {@code false} otherwise.","lastModifiedDate":"2024-04-07"},{"lineNumber":114,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":115,"author":{"gitId":"Apzure"},"content":"    boolean hasEvent(Event event);","lastModifiedDate":"2024-03-02"},{"lineNumber":116,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":117,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":118,"author":{"gitId":"Apzure"},"content":"     * Deletes the specified event from Event Book.","lastModifiedDate":"2024-04-07"},{"lineNumber":119,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":120,"author":{"gitId":"Apzure"},"content":"     * @param target The event to be deleted.","lastModifiedDate":"2024-04-07"},{"lineNumber":121,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":122,"author":{"gitId":"Apzure"},"content":"    void deleteEvent(Event target);","lastModifiedDate":"2024-03-02"},{"lineNumber":123,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":124,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":125,"author":{"gitId":"Apzure"},"content":"     * Adds a new event to Event Book.","lastModifiedDate":"2024-04-07"},{"lineNumber":126,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":127,"author":{"gitId":"Apzure"},"content":"     * @param event The event to be added.","lastModifiedDate":"2024-04-07"},{"lineNumber":128,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":129,"author":{"gitId":"Apzure"},"content":"    void addEvent(Event event);","lastModifiedDate":"2024-03-02"},{"lineNumber":130,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":131,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":132,"author":{"gitId":"Apzure"},"content":"     * Updates the information of an existing event.","lastModifiedDate":"2024-04-07"},{"lineNumber":133,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":134,"author":{"gitId":"Apzure"},"content":"     * @param target      The event to be updated.","lastModifiedDate":"2024-04-07"},{"lineNumber":135,"author":{"gitId":"Apzure"},"content":"     * @param editedEvent The updated event information.","lastModifiedDate":"2024-04-07"},{"lineNumber":136,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":137,"author":{"gitId":"Apzure"},"content":"    void setEvent(Event target, Event editedEvent);","lastModifiedDate":"2024-03-02"},{"lineNumber":138,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":139,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":140,"author":{"gitId":"Apzure"},"content":"     * Checks if an event is currently selected.","lastModifiedDate":"2024-04-07"},{"lineNumber":141,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":142,"author":{"gitId":"Apzure"},"content":"     * @return {@code true} if an event is selected; {@code false} otherwise.","lastModifiedDate":"2024-04-07"},{"lineNumber":143,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":144,"author":{"gitId":"myang2020"},"content":"    boolean isAnEventSelected();","lastModifiedDate":"2024-03-17"},{"lineNumber":145,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":146,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":147,"author":{"gitId":"Apzure"},"content":"     * Checks if the specified event is the currently selected event.","lastModifiedDate":"2024-04-07"},{"lineNumber":148,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":149,"author":{"gitId":"Apzure"},"content":"     * @param event The event to compare with the selected event.","lastModifiedDate":"2024-04-07"},{"lineNumber":150,"author":{"gitId":"Apzure"},"content":"     * @return {@code true} if the specified event is selected; {@code false} otherwise.","lastModifiedDate":"2024-04-07"},{"lineNumber":151,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":152,"author":{"gitId":"taeewonnn"},"content":"    boolean isSameSelectedEvent(Event event);","lastModifiedDate":"2024-03-20"},{"lineNumber":153,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":154,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":155,"author":{"gitId":"Apzure"},"content":"     * Selects the specified event.","lastModifiedDate":"2024-04-07"},{"lineNumber":156,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":157,"author":{"gitId":"Apzure"},"content":"     * @param event The event to be selected.","lastModifiedDate":"2024-04-07"},{"lineNumber":158,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":159,"author":{"gitId":"Apzure"},"content":"    void selectEvent(Event event);","lastModifiedDate":"2024-03-15"},{"lineNumber":160,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":161,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":162,"author":{"gitId":"Apzure"},"content":"     * Deselects the currently selected event.","lastModifiedDate":"2024-04-07"},{"lineNumber":163,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":164,"author":{"gitId":"myang2020"},"content":"    void deselectEvent();","lastModifiedDate":"2024-03-16"},{"lineNumber":165,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":166,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":167,"author":{"gitId":"Apzure"},"content":"     * Checks if a person is part of the currently selected event.","lastModifiedDate":"2024-04-07"},{"lineNumber":168,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":169,"author":{"gitId":"Apzure"},"content":"     * @param person The person to check for in the selected event.","lastModifiedDate":"2024-04-07"},{"lineNumber":170,"author":{"gitId":"Apzure"},"content":"     * @return {@code true} if the person is in the selected event; {@code false} otherwise.","lastModifiedDate":"2024-04-07"},{"lineNumber":171,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":172,"author":{"gitId":"myang2020"},"content":"    boolean isPersonInSelectedEvent(Person person);","lastModifiedDate":"2024-03-17"},{"lineNumber":173,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":174,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":175,"author":{"gitId":"Apzure"},"content":"     * Adds a person to the currently selected event.","lastModifiedDate":"2024-04-07"},{"lineNumber":176,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":177,"author":{"gitId":"Apzure"},"content":"     * @param person The person to be added to the selected event.","lastModifiedDate":"2024-04-07"},{"lineNumber":178,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":179,"author":{"gitId":"myang2020"},"content":"    void addPersonToSelectedEvent(Person person);","lastModifiedDate":"2024-03-17"},{"lineNumber":180,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":181,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":182,"author":{"gitId":"Apzure"},"content":"     * Deletes a person from the currently selected event.","lastModifiedDate":"2024-04-07"},{"lineNumber":183,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":184,"author":{"gitId":"Apzure"},"content":"     * @param person The person to be removed from the selected event.","lastModifiedDate":"2024-04-07"},{"lineNumber":185,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":186,"author":{"gitId":"ChocoRagdoll"},"content":"    void deletePersonFromSelectedEvent(Person person);","lastModifiedDate":"2024-03-20"},{"lineNumber":187,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":188,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":189,"author":{"gitId":"Apzure"},"content":"     * Returns an unmodifiable view of the selected event","lastModifiedDate":"2024-03-26"},{"lineNumber":190,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":191,"author":{"gitId":"Apzure"},"content":"     * @return An unmodifiable view of the selected event.","lastModifiedDate":"2024-03-26"},{"lineNumber":192,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":193,"author":{"gitId":"Apzure"},"content":"    ObservableValue\u003cEvent\u003e getSelectedEvent();","lastModifiedDate":"2024-03-26"},{"lineNumber":194,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":195,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":196,"author":{"gitId":"Apzure"},"content":"     * Returns an unmodifiable view of the filtered event list.","lastModifiedDate":"2024-03-15"},{"lineNumber":197,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":198,"author":{"gitId":"Apzure"},"content":"     * @return An unmodifiable view of the filtered event list.","lastModifiedDate":"2024-03-15"},{"lineNumber":199,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":200,"author":{"gitId":"Apzure"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2024-03-01"},{"lineNumber":201,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":202,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":203,"author":{"gitId":"Apzure"},"content":"     * Returns an unmodifiable view of the filtered person list of the selected event.","lastModifiedDate":"2024-03-15"},{"lineNumber":204,"author":{"gitId":"Apzure"},"content":"     * If no event is selected, returns an empty list.","lastModifiedDate":"2024-03-15"},{"lineNumber":205,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":206,"author":{"gitId":"Apzure"},"content":"     * @return An unmodifiable view of the filtered person list of the selected event,","lastModifiedDate":"2024-03-15"},{"lineNumber":207,"author":{"gitId":"Apzure"},"content":"     *         or an empty list if no event is selected.","lastModifiedDate":"2024-03-15"},{"lineNumber":208,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":209,"author":{"gitId":"Apzure"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonListOfSelectedEvent();","lastModifiedDate":"2024-03-15"},{"lineNumber":210,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":211,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":212,"author":{"gitId":"Apzure"},"content":"     * Updates the filter of the filtered person list of selected event to filter by the given {@code predicate}.","lastModifiedDate":"2024-04-02"},{"lineNumber":213,"author":{"gitId":"Apzure"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2024-04-02"},{"lineNumber":214,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":215,"author":{"gitId":"Apzure"},"content":"    void updateFilteredPersonListOfSelectedEvent(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2024-04-02"},{"lineNumber":216,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":217,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":218,"author":{"gitId":"ChocoRagdoll"},"content":"    void exportEventPersonData(boolean shouldExportName, boolean shouldExportPhone,","lastModifiedDate":"2024-04-02"},{"lineNumber":219,"author":{"gitId":"ChocoRagdoll"},"content":"                               boolean shouldExportEmail, boolean shouldExportAddress) throws IOException;","lastModifiedDate":"2024-04-02"},{"lineNumber":220,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":221,"author":{"gitId":"ChocoRagdoll"},"content":"    void exportGlobalPersonData(boolean shouldExportName, boolean shouldExportPhone,","lastModifiedDate":"2024-04-02"},{"lineNumber":222,"author":{"gitId":"ChocoRagdoll"},"content":"                                boolean shouldExportEmail, boolean shouldExportAddress) throws IOException;","lastModifiedDate":"2024-04-02"},{"lineNumber":223,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Apzure":99,"nusliuyifan":18,"ChocoRagdoll":8,"-":87,"taeewonnn":2,"myang2020":10}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"ChocoRagdoll"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.export.PersonDataExporter;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.export.PersonExporter;","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"    private final EventBook eventBook;","lastModifiedDate":"2024-03-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"ChocoRagdoll"},"content":"    private final PersonExporter personExporter;","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"    private final FilteredList\u003cEvent\u003e filteredEvents;","lastModifiedDate":"2024-03-01"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersonsOfSelectedEvent;","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"ChocoRagdoll"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs,","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"ChocoRagdoll"},"content":"                        ReadOnlyEventBook eventBook, PersonExporter personExporter) {","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"ChocoRagdoll"},"content":"        requireAllNonNull(addressBook, userPrefs, eventBook, personExporter);","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"nusliuyifan"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"nusliuyifan"},"content":"                + \" and user prefs \" + userPrefs + \" and event book \");","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"nusliuyifan"},"content":"        this.eventBook \u003d new EventBook(eventBook);","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"ChocoRagdoll"},"content":"        this.personExporter \u003d personExporter;","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"        filteredEvents \u003d new FilteredList\u003c\u003e(this.eventBook.getEventList());","lastModifiedDate":"2024-03-01"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"        filteredPersonsOfSelectedEvent \u003d new FilteredList\u003c\u003e(this.eventBook.getPersonsOfSelectedEventList());","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":56,"author":{"gitId":"ChocoRagdoll"},"content":"        this(new AddressBook(), new UserPrefs(), new EventBook(), new PersonDataExporter());","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"nusliuyifan"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"nusliuyifan"},"content":"    public Path getEventBookFilePath() {","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"nusliuyifan"},"content":"        return userPrefs.getEventBookFilePath();","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"nusliuyifan"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"nusliuyifan"},"content":"    public void setEventBookFilePath(Path eventBookFilePath) {","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"nusliuyifan"},"content":"        requireNonNull(eventBookFilePath);","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"nusliuyifan"},"content":"        userPrefs.setEventBookFilePath(eventBookFilePath);","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":139,"author":{"gitId":"Apzure"},"content":"        eventBook.editPersonInAllEvents(target, editedPerson);","lastModifiedDate":"2024-04-07"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":173,"author":{"gitId":"Apzure"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons)","lastModifiedDate":"2024-03-27"},{"lineNumber":174,"author":{"gitId":"ChocoRagdoll"},"content":"                \u0026\u0026 filteredEvents.equals(otherModelManager.filteredEvents)","lastModifiedDate":"2024-04-02"},{"lineNumber":175,"author":{"gitId":"ChocoRagdoll"},"content":"                \u0026\u0026 personExporter.equals(otherModelManager.personExporter);","lastModifiedDate":"2024-04-02"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"Apzure"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d EventBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-02"},{"lineNumber":179,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":180,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-02"},{"lineNumber":181,"author":{"gitId":"Apzure"},"content":"    public void setEventBook(ReadOnlyEventBook eventBook) {","lastModifiedDate":"2024-03-02"},{"lineNumber":182,"author":{"gitId":"Apzure"},"content":"        this.eventBook.resetData(eventBook);","lastModifiedDate":"2024-03-02"},{"lineNumber":183,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":184,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":185,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-02"},{"lineNumber":186,"author":{"gitId":"Apzure"},"content":"    public ReadOnlyEventBook getEventBook() {","lastModifiedDate":"2024-03-02"},{"lineNumber":187,"author":{"gitId":"Apzure"},"content":"        return eventBook;","lastModifiedDate":"2024-03-02"},{"lineNumber":188,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":189,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":190,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-02"},{"lineNumber":191,"author":{"gitId":"Apzure"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2024-03-02"},{"lineNumber":192,"author":{"gitId":"Apzure"},"content":"        requireNonNull(event);","lastModifiedDate":"2024-03-02"},{"lineNumber":193,"author":{"gitId":"Apzure"},"content":"        return eventBook.hasEvent(event);","lastModifiedDate":"2024-03-02"},{"lineNumber":194,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":195,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":196,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-02"},{"lineNumber":197,"author":{"gitId":"Apzure"},"content":"    public void deleteEvent(Event target) {","lastModifiedDate":"2024-03-02"},{"lineNumber":198,"author":{"gitId":"Apzure"},"content":"        requireNonNull(target);","lastModifiedDate":"2024-04-10"},{"lineNumber":199,"author":{"gitId":"Apzure"},"content":"        eventBook.removeEvent(target);","lastModifiedDate":"2024-03-02"},{"lineNumber":200,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":201,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":202,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-02"},{"lineNumber":203,"author":{"gitId":"Apzure"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2024-03-02"},{"lineNumber":204,"author":{"gitId":"Apzure"},"content":"        requireNonNull(event);","lastModifiedDate":"2024-04-10"},{"lineNumber":205,"author":{"gitId":"Apzure"},"content":"        eventBook.addEvent(event);","lastModifiedDate":"2024-03-02"},{"lineNumber":206,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":207,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":208,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-02"},{"lineNumber":209,"author":{"gitId":"Apzure"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2024-03-02"},{"lineNumber":210,"author":{"gitId":"Apzure"},"content":"        requireAllNonNull(target, editedEvent);","lastModifiedDate":"2024-03-02"},{"lineNumber":211,"author":{"gitId":"Apzure"},"content":"        eventBook.setEvent(target, editedEvent);","lastModifiedDate":"2024-03-02"},{"lineNumber":212,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":213,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":214,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":215,"author":{"gitId":"myang2020"},"content":"    public boolean isAnEventSelected() {","lastModifiedDate":"2024-03-17"},{"lineNumber":216,"author":{"gitId":"myang2020"},"content":"        return eventBook.isAnEventSelected();","lastModifiedDate":"2024-03-17"},{"lineNumber":217,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":218,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":219,"author":{"gitId":"taeewonnn"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":220,"author":{"gitId":"taeewonnn"},"content":"    public boolean isSameSelectedEvent(Event event) {","lastModifiedDate":"2024-03-20"},{"lineNumber":221,"author":{"gitId":"taeewonnn"},"content":"        requireNonNull(event);","lastModifiedDate":"2024-03-19"},{"lineNumber":222,"author":{"gitId":"taeewonnn"},"content":"        return eventBook.isSameSelectedEvent(event);","lastModifiedDate":"2024-03-19"},{"lineNumber":223,"author":{"gitId":"taeewonnn"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":224,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":225,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":226,"author":{"gitId":"Apzure"},"content":"    public void selectEvent(Event event) {","lastModifiedDate":"2024-03-15"},{"lineNumber":227,"author":{"gitId":"Apzure"},"content":"        requireNonNull(event);","lastModifiedDate":"2024-04-10"},{"lineNumber":228,"author":{"gitId":"Apzure"},"content":"        eventBook.selectEvent(event);","lastModifiedDate":"2024-03-15"},{"lineNumber":229,"author":{"gitId":"Apzure"},"content":"        updateFilteredPersonListOfSelectedEvent(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-02"},{"lineNumber":230,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":231,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":232,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":233,"author":{"gitId":"myang2020"},"content":"    public void deselectEvent() {","lastModifiedDate":"2024-03-16"},{"lineNumber":234,"author":{"gitId":"myang2020"},"content":"        eventBook.deselectEvent();","lastModifiedDate":"2024-03-16"},{"lineNumber":235,"author":{"gitId":"Apzure"},"content":"        updateFilteredPersonListOfSelectedEvent(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-02"},{"lineNumber":236,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":237,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":238,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":239,"author":{"gitId":"myang2020"},"content":"    public boolean isPersonInSelectedEvent(Person person) {","lastModifiedDate":"2024-03-17"},{"lineNumber":240,"author":{"gitId":"myang2020"},"content":"        requireNonNull(person);","lastModifiedDate":"2024-03-17"},{"lineNumber":241,"author":{"gitId":"myang2020"},"content":"        return eventBook.isPersonInSelectedEvent(person);","lastModifiedDate":"2024-03-17"},{"lineNumber":242,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":243,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":244,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":245,"author":{"gitId":"myang2020"},"content":"    public void addPersonToSelectedEvent(Person person) {","lastModifiedDate":"2024-03-17"},{"lineNumber":246,"author":{"gitId":"myang2020"},"content":"        requireNonNull(person);","lastModifiedDate":"2024-03-17"},{"lineNumber":247,"author":{"gitId":"myang2020"},"content":"        eventBook.addPersonToSelectedEvent(person);","lastModifiedDate":"2024-03-17"},{"lineNumber":248,"author":{"gitId":"Apzure"},"content":"        updateFilteredPersonListOfSelectedEvent(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-02"},{"lineNumber":249,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":250,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":251,"author":{"gitId":"ChocoRagdoll"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":252,"author":{"gitId":"ChocoRagdoll"},"content":"    public void deletePersonFromSelectedEvent(Person person) {","lastModifiedDate":"2024-03-20"},{"lineNumber":253,"author":{"gitId":"ChocoRagdoll"},"content":"        requireNonNull(person);","lastModifiedDate":"2024-03-20"},{"lineNumber":254,"author":{"gitId":"ChocoRagdoll"},"content":"        eventBook.deletePersonFromSelectedEvent(person);","lastModifiedDate":"2024-03-20"},{"lineNumber":255,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":256,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":257,"author":{"gitId":"Apzure"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Event List and Person List of Selected Event Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-15"},{"lineNumber":258,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":259,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":260,"author":{"gitId":"Apzure"},"content":"    public ObservableValue\u003cEvent\u003e getSelectedEvent() {","lastModifiedDate":"2024-03-26"},{"lineNumber":261,"author":{"gitId":"Apzure"},"content":"        return eventBook.getSelectedEvent();","lastModifiedDate":"2024-03-26"},{"lineNumber":262,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":263,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":264,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-02"},{"lineNumber":265,"author":{"gitId":"Apzure"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2024-03-02"},{"lineNumber":266,"author":{"gitId":"Apzure"},"content":"        return filteredEvents;","lastModifiedDate":"2024-03-02"},{"lineNumber":267,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":268,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":269,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":270,"author":{"gitId":"Apzure"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonListOfSelectedEvent() {","lastModifiedDate":"2024-03-15"},{"lineNumber":271,"author":{"gitId":"Apzure"},"content":"        return filteredPersonsOfSelectedEvent;","lastModifiedDate":"2024-03-15"},{"lineNumber":272,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":273,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":274,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":275,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":276,"author":{"gitId":"Apzure"},"content":"    public void updateFilteredPersonListOfSelectedEvent(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2024-04-02"},{"lineNumber":277,"author":{"gitId":"Apzure"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2024-04-02"},{"lineNumber":278,"author":{"gitId":"Apzure"},"content":"        filteredPersonsOfSelectedEvent.setPredicate(predicate);","lastModifiedDate":"2024-04-02"},{"lineNumber":279,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":280,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":281,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":282,"author":{"gitId":"ChocoRagdoll"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Exports \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":283,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":284,"author":{"gitId":"ChocoRagdoll"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":285,"author":{"gitId":"ChocoRagdoll"},"content":"    public void exportEventPersonData(boolean shouldExportName, boolean shouldExportPhone,","lastModifiedDate":"2024-04-02"},{"lineNumber":286,"author":{"gitId":"ChocoRagdoll"},"content":"                                      boolean shouldExportEmail, boolean shouldExportAddress) throws IOException {","lastModifiedDate":"2024-04-02"},{"lineNumber":287,"author":{"gitId":"ChocoRagdoll"},"content":"        personExporter.exportToCsv(filteredPersonsOfSelectedEvent,","lastModifiedDate":"2024-04-02"},{"lineNumber":288,"author":{"gitId":"ChocoRagdoll"},"content":"                shouldExportName, shouldExportPhone, shouldExportEmail, shouldExportAddress);","lastModifiedDate":"2024-04-02"},{"lineNumber":289,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":290,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":291,"author":{"gitId":"ChocoRagdoll"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":292,"author":{"gitId":"ChocoRagdoll"},"content":"    public void exportGlobalPersonData(boolean shouldExportName, boolean shouldExportPhone,","lastModifiedDate":"2024-04-02"},{"lineNumber":293,"author":{"gitId":"ChocoRagdoll"},"content":"                                       boolean shouldExportEmail, boolean shouldExportAddress) throws IOException {","lastModifiedDate":"2024-04-02"},{"lineNumber":294,"author":{"gitId":"ChocoRagdoll"},"content":"        personExporter.exportToCsv(filteredPersons,","lastModifiedDate":"2024-04-02"},{"lineNumber":295,"author":{"gitId":"ChocoRagdoll"},"content":"                shouldExportName, shouldExportPhone, shouldExportEmail, shouldExportAddress);","lastModifiedDate":"2024-04-02"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Apzure":78,"nusliuyifan":14,"ChocoRagdoll":31,"-":145,"taeewonnn":6,"myang2020":24}},{"path":"src/main/java/seedu/address/model/ReadOnlyEventBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.model;","lastModifiedDate":"2024-03-01"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":" * Unmodifiable view of an event book","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"public interface ReadOnlyEventBook {","lastModifiedDate":"2024-03-02"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"     * Returns an unmodifiable view of the selected event","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"     * This will contain a null if no event is selected","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"    ObservableValue\u003cEvent\u003e getSelectedEvent();","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"     * Returns an unmodifiable view of the events list.","lastModifiedDate":"2024-03-01"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"     * This list will not contain any duplicate events.","lastModifiedDate":"2024-03-01"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"    ObservableList\u003cEvent\u003e getEventList();","lastModifiedDate":"2024-03-01"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"     * Returns an unmodifiable view of the persons list of the selected event.","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2024-04-10"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"     * This list is empty when no event is currently selected.","lastModifiedDate":"2024-04-10"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"    ObservableList\u003cPerson\u003e getPersonsOfSelectedEventList();","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-03-01"}],"authorContributionMap":{"Apzure":30}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"nusliuyifan"},"content":"    Path getEventBookFilePath();","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"nusliuyifan":2,"-":16}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"nusliuyifan"},"content":"    private Path eventBookFilePath \u003d Paths.get(\"data\", \"eventBook.json\");","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"nusliuyifan"},"content":"        setEventBookFilePath(newUserPrefs.getEventBookFilePath());","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"nusliuyifan"},"content":"    public Path getEventBookFilePath() {","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"nusliuyifan"},"content":"        return eventBookFilePath;","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":66,"author":{"gitId":"nusliuyifan"},"content":"    public void setEventBookFilePath(Path eventBookFilePath) {","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"nusliuyifan"},"content":"        requireNonNull(eventBookFilePath);","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"nusliuyifan"},"content":"        this.eventBookFilePath \u003d eventBookFilePath;","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"nusliuyifan"},"content":"                \u0026\u0026 addressBookFilePath.equals(otherUserPrefs.addressBookFilePath)","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"nusliuyifan"},"content":"                \u0026\u0026 eventBookFilePath.equals(otherUserPrefs.eventBookFilePath);","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"nusliuyifan"},"content":"        return Objects.hash(guiSettings, addressBookFilePath, eventBookFilePath);","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":98,"author":{"gitId":"nusliuyifan"},"content":"        sb.append(\"\\n\" + eventBookFilePath);","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nusliuyifan":16,"-":86}},{"path":"src/main/java/seedu/address/model/event/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.model.event;","lastModifiedDate":"2024-03-01"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-04"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"import java.util.List;","lastModifiedDate":"2024-03-04"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-04"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-04"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2024-03-02"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":" * Represents an Event in the event book.","lastModifiedDate":"2024-03-04"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-03-01"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"public class Event {","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"    private final EventName eventName;","lastModifiedDate":"2024-03-01"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"    private final EventDate eventDate;","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2024-03-04"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2024-03-01"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":28,"author":{"gitId":"myang2020"},"content":"    public Event(EventName eventName, EventDate eventDate) {","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"        requireAllNonNull(eventName, eventDate);","lastModifiedDate":"2024-04-10"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"        this.eventName \u003d eventName;","lastModifiedDate":"2024-03-01"},{"lineNumber":31,"author":{"gitId":"myang2020"},"content":"        this.eventDate \u003d eventDate;","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2024-03-04"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":35,"author":{"gitId":"nusliuyifan"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"nusliuyifan"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"nusliuyifan"},"content":"     * @param eventName","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"nusliuyifan"},"content":"     * @param persons","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"nusliuyifan"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"myang2020"},"content":"    public Event(EventName eventName, EventDate eventDate, UniquePersonList persons) {","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"nusliuyifan"},"content":"        requireAllNonNull(eventName, persons);","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"nusliuyifan"},"content":"        this.eventName \u003d eventName;","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"myang2020"},"content":"        this.eventDate \u003d eventDate;","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":45,"author":{"gitId":"nusliuyifan"},"content":"        this.persons \u003d new UniquePersonList();","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"nusliuyifan"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"    public EventName getEventName() {","lastModifiedDate":"2024-03-01"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"        return eventName;","lastModifiedDate":"2024-03-01"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":53,"author":{"gitId":"myang2020"},"content":"    public EventDate getEventDate() {","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"myang2020"},"content":"        return eventDate;","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"    //// person-level operations","lastModifiedDate":"2024-03-04"},{"lineNumber":59,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":60,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":61,"author":{"gitId":"Apzure"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2024-03-04"},{"lineNumber":62,"author":{"gitId":"Apzure"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2024-03-04"},{"lineNumber":63,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":64,"author":{"gitId":"Apzure"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2024-03-04"},{"lineNumber":65,"author":{"gitId":"Apzure"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2024-03-04"},{"lineNumber":66,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":67,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":68,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":69,"author":{"gitId":"Apzure"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2024-03-04"},{"lineNumber":70,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":71,"author":{"gitId":"Apzure"},"content":"    public boolean hasPerson(Person p) {","lastModifiedDate":"2024-04-10"},{"lineNumber":72,"author":{"gitId":"Apzure"},"content":"        requireNonNull(p);","lastModifiedDate":"2024-04-10"},{"lineNumber":73,"author":{"gitId":"Apzure"},"content":"        return persons.contains(p);","lastModifiedDate":"2024-04-10"},{"lineNumber":74,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":75,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":76,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":77,"author":{"gitId":"Apzure"},"content":"     * Adds a person to the event.","lastModifiedDate":"2024-03-04"},{"lineNumber":78,"author":{"gitId":"Apzure"},"content":"     * The person must not already exist in the event.","lastModifiedDate":"2024-03-04"},{"lineNumber":79,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":80,"author":{"gitId":"Apzure"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2024-03-04"},{"lineNumber":81,"author":{"gitId":"Apzure"},"content":"        requireNonNull(p);","lastModifiedDate":"2024-04-10"},{"lineNumber":82,"author":{"gitId":"Apzure"},"content":"        persons.add(p);","lastModifiedDate":"2024-03-04"},{"lineNumber":83,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":84,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":85,"author":{"gitId":"ChocoRagdoll"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"ChocoRagdoll"},"content":"     * Deletes a person to the event.","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"ChocoRagdoll"},"content":"     * The person must already exist in the event.","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"ChocoRagdoll"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"ChocoRagdoll"},"content":"    public void deletePerson(Person p) {","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"Apzure"},"content":"        requireNonNull(p);","lastModifiedDate":"2024-04-10"},{"lineNumber":91,"author":{"gitId":"ChocoRagdoll"},"content":"        persons.remove(p);","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":95,"author":{"gitId":"Apzure"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2024-03-04"},{"lineNumber":96,"author":{"gitId":"Apzure"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2024-03-04"},{"lineNumber":97,"author":{"gitId":"Apzure"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2024-03-04"},{"lineNumber":98,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":99,"author":{"gitId":"Apzure"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2024-03-04"},{"lineNumber":100,"author":{"gitId":"Apzure"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2024-03-04"},{"lineNumber":101,"author":{"gitId":"Apzure"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2024-03-04"},{"lineNumber":102,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":103,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":104,"author":{"gitId":"Apzure"},"content":"    //// util methods","lastModifiedDate":"2024-03-04"},{"lineNumber":105,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":106,"author":{"gitId":"Apzure"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2024-03-04"},{"lineNumber":107,"author":{"gitId":"Apzure"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2024-03-04"},{"lineNumber":108,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":109,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":110,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":111,"author":{"gitId":"Apzure"},"content":"     * Returns true if both events have the same event name.","lastModifiedDate":"2024-03-01"},{"lineNumber":112,"author":{"gitId":"Apzure"},"content":"     * This defines a weaker notion of equality between two events.","lastModifiedDate":"2024-03-01"},{"lineNumber":113,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":114,"author":{"gitId":"Apzure"},"content":"    public boolean isSameEvent(Event otherEvent) {","lastModifiedDate":"2024-03-01"},{"lineNumber":115,"author":{"gitId":"Apzure"},"content":"        if (otherEvent \u003d\u003d this) {","lastModifiedDate":"2024-03-01"},{"lineNumber":116,"author":{"gitId":"Apzure"},"content":"            return true;","lastModifiedDate":"2024-03-01"},{"lineNumber":117,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":118,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":119,"author":{"gitId":"Apzure"},"content":"        return otherEvent !\u003d null","lastModifiedDate":"2024-03-01"},{"lineNumber":120,"author":{"gitId":"myang2020"},"content":"                \u0026\u0026 otherEvent.getEventName().equals(getEventName())","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"myang2020"},"content":"                \u0026\u0026 otherEvent.getEventDate().equals(getEventDate());","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":123,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":124,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":125,"author":{"gitId":"Apzure"},"content":"     * Returns true if both events have the same identity and data fields.","lastModifiedDate":"2024-03-01"},{"lineNumber":126,"author":{"gitId":"Apzure"},"content":"     * This defines a stronger notion of equality between two events.","lastModifiedDate":"2024-03-01"},{"lineNumber":127,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":128,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-01"},{"lineNumber":129,"author":{"gitId":"Apzure"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-01"},{"lineNumber":130,"author":{"gitId":"Apzure"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-01"},{"lineNumber":131,"author":{"gitId":"Apzure"},"content":"            return true;","lastModifiedDate":"2024-03-01"},{"lineNumber":132,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":133,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":134,"author":{"gitId":"Apzure"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-01"},{"lineNumber":135,"author":{"gitId":"Apzure"},"content":"        if (!(other instanceof Event)) {","lastModifiedDate":"2024-03-01"},{"lineNumber":136,"author":{"gitId":"Apzure"},"content":"            return false;","lastModifiedDate":"2024-03-01"},{"lineNumber":137,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":138,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":139,"author":{"gitId":"Apzure"},"content":"        Event otherEvent \u003d (Event) other;","lastModifiedDate":"2024-03-01"},{"lineNumber":140,"author":{"gitId":"myang2020"},"content":"        return eventName.equals(otherEvent.eventName) \u0026\u0026 eventDate.equals(otherEvent.eventDate);","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":142,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":143,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-01"},{"lineNumber":144,"author":{"gitId":"Apzure"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-01"},{"lineNumber":145,"author":{"gitId":"Apzure"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2024-03-01"},{"lineNumber":146,"author":{"gitId":"Apzure"},"content":"        return Objects.hash(eventName, eventDate);","lastModifiedDate":"2024-04-10"},{"lineNumber":147,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":148,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":149,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-01"},{"lineNumber":150,"author":{"gitId":"Apzure"},"content":"    public String toString() {","lastModifiedDate":"2024-03-01"},{"lineNumber":151,"author":{"gitId":"myang2020"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-04-02"},{"lineNumber":152,"author":{"gitId":"myang2020"},"content":"                    .add(\"\", eventName)","lastModifiedDate":"2024-04-02"},{"lineNumber":153,"author":{"gitId":"myang2020"},"content":"                    .add(\"Date:\", eventDate)","lastModifiedDate":"2024-04-02"},{"lineNumber":154,"author":{"gitId":"myang2020"},"content":"                    .toString();","lastModifiedDate":"2024-04-02"},{"lineNumber":155,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":156,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-03-01"}],"authorContributionMap":{"Apzure":118,"nusliuyifan":11,"ChocoRagdoll":8,"myang2020":19}},{"path":"src/main/java/seedu/address/model/event/EventDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"package seedu.address.model.event;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2024-04-08"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"myang2020"},"content":" * Represents an Event\u0027s date.","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":" * Guarantees: immutable","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"myang2020"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"public class EventDate {","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"            \"Date should be in dd-MM-yyyy format\";","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"    public static final String VALIDATION_REGEX \u003d \"^([0-2][0-9]|3[0-1])-(0[1-9]|1[0-2])-(\\\\d{4})$\";","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-uuuu\")","lastModifiedDate":"2024-04-08"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"            .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2024-04-08"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"    public final LocalDate eventDate;","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"     * Constructs a {@code EventDateTime}.","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"myang2020"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"myang2020"},"content":"     * @param eventDate A valid date.","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"myang2020"},"content":"    public EventDate(String eventDate) {","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"myang2020"},"content":"        checkArgument(isValidDate(eventDate), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"myang2020"},"content":"        this.eventDate \u003d parseEventDate(eventDate);","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"myang2020"},"content":"    private static LocalDate parseEventDate(String eventDate) {","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"myang2020"},"content":"        try {","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"myang2020"},"content":"            // Directly parse the string with the formatter that supports both date and optional time","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"myang2020"},"content":"            return LocalDate.parse(eventDate, DATE_TIME_FORMATTER);","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"myang2020"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"myang2020"},"content":"            throw new IllegalArgumentException(\"Date format should be dd-MM-yyyy\", ex);","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-04-08"},{"lineNumber":46,"author":{"gitId":"myang2020"},"content":"     * Checks for date validity.","lastModifiedDate":"2024-04-08"},{"lineNumber":47,"author":{"gitId":"myang2020"},"content":"     *","lastModifiedDate":"2024-04-08"},{"lineNumber":48,"author":{"gitId":"myang2020"},"content":"     * @param test An input date.","lastModifiedDate":"2024-04-08"},{"lineNumber":49,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-04-08"},{"lineNumber":50,"author":{"gitId":"myang2020"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"myang2020"},"content":"        if (!test.matches(VALIDATION_REGEX)) {","lastModifiedDate":"2024-04-08"},{"lineNumber":52,"author":{"gitId":"myang2020"},"content":"            return false;","lastModifiedDate":"2024-04-08"},{"lineNumber":53,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":54,"author":{"gitId":"myang2020"},"content":"        try {","lastModifiedDate":"2024-04-08"},{"lineNumber":55,"author":{"gitId":"myang2020"},"content":"            LocalDate.parse(test, DATE_TIME_FORMATTER);","lastModifiedDate":"2024-04-08"},{"lineNumber":56,"author":{"gitId":"myang2020"},"content":"            return true;","lastModifiedDate":"2024-04-08"},{"lineNumber":57,"author":{"gitId":"myang2020"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2024-04-08"},{"lineNumber":58,"author":{"gitId":"myang2020"},"content":"            return false;","lastModifiedDate":"2024-04-08"},{"lineNumber":59,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":60,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"myang2020"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"myang2020"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"myang2020"},"content":"            return true;","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"myang2020"},"content":"        if (!(other instanceof EventDate)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"myang2020"},"content":"            return false;","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"myang2020"},"content":"        EventDate otherTime \u003d (EventDate) other;","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"myang2020"},"content":"        return eventDate.equals(otherTime.eventDate);","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"myang2020"},"content":"    public String toString() {","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"myang2020"},"content":"        return eventDate.format(DATE_TIME_FORMATTER);","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"myang2020"},"content":"    public int hashCode() {","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"myang2020"},"content":"        return eventDate.hashCode();","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"myang2020"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"myang2020":83}},{"path":"src/main/java/seedu/address/model/event/EventName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.model.event;","lastModifiedDate":"2024-03-01"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":" * Represents an Event\u0027s name.","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":" * Guarantees: immutable","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"public class EventName {","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"nusliuyifan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"            \"Event names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"    /*","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"    public final String eventName;","lastModifiedDate":"2024-03-01"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-10"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"     * Constructs a {@code EventName}.","lastModifiedDate":"2024-03-10"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-03-10"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"     * @param eventName A valid name.","lastModifiedDate":"2024-03-10"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-10"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"    public EventName(String eventName) {","lastModifiedDate":"2024-03-01"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"        requireNonNull(eventName);","lastModifiedDate":"2024-03-01"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"        checkArgument(isValidEventName(eventName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-10"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"        this.eventName \u003d eventName;","lastModifiedDate":"2024-03-01"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"     * Returns true if a given string is a valid event name.","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"    public static boolean isValidEventName(String test) {","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-01"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"    public String toString() {","lastModifiedDate":"2024-03-01"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"        return eventName;","lastModifiedDate":"2024-03-01"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-01"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-01"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-01"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"            return true;","lastModifiedDate":"2024-03-01"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-01"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"        if (!(other instanceof EventName)) {","lastModifiedDate":"2024-03-01"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"            return false;","lastModifiedDate":"2024-03-01"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":56,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":57,"author":{"gitId":"Apzure"},"content":"        EventName otherName \u003d (EventName) other;","lastModifiedDate":"2024-03-01"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"        return eventName.equals(otherName.eventName);","lastModifiedDate":"2024-03-01"},{"lineNumber":59,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":60,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":61,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-01"},{"lineNumber":62,"author":{"gitId":"Apzure"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-01"},{"lineNumber":63,"author":{"gitId":"Apzure"},"content":"        return eventName.hashCode();","lastModifiedDate":"2024-03-01"},{"lineNumber":64,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":65,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-03-01"}],"authorContributionMap":{"Apzure":62,"nusliuyifan":3}},{"path":"src/main/java/seedu/address/model/event/UniqueEventList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.model.event;","lastModifiedDate":"2024-03-01"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-03-01"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"import java.util.List;","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-01"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2024-03-01"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":" * A list of events that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2024-03-01"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":" * An event is considered unique by comparing using {@code Event#isSameEvent(Event)}.","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":" * Adding and updating of events use Event#isSameEvent(Event) for equality to ensure that the event being added or","lastModifiedDate":"2024-03-01"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":" * updated is unique in terms of identity in the UniqueEventList.","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":" * However, the removal of an event uses Event#equals(Object) so as to ensure that the event with exactly the same","lastModifiedDate":"2024-03-01"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":" * fields will be removed.","lastModifiedDate":"2024-03-01"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2024-03-01"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":" *","lastModifiedDate":"2024-03-01"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":" * @see Event#isSameEvent(Event)","lastModifiedDate":"2024-03-01"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-03-01"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"public class UniqueEventList implements Iterable\u003cEvent\u003e {","lastModifiedDate":"2024-03-01"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"    private final ObservableList\u003cEvent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-01"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"    private final ObservableList\u003cEvent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2024-03-01"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2024-03-01"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"     * Returns true if the list contains an equivalent event as the given argument.","lastModifiedDate":"2024-03-01"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"    public boolean contains(Event toCheck) {","lastModifiedDate":"2024-03-01"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2024-03-01"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"        return internalList.stream().anyMatch(toCheck::isSameEvent);","lastModifiedDate":"2024-03-01"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"     * Adds an event to the list.","lastModifiedDate":"2024-03-01"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"     * The event must not already exist in the list.","lastModifiedDate":"2024-03-01"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"    public void add(Event toAdd) {","lastModifiedDate":"2024-03-01"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2024-03-01"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2024-03-01"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2024-03-01"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2024-03-01"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"     * Replaces the event {@code target} in the list with {@code editedEvent}.","lastModifiedDate":"2024-03-01"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2024-03-01"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"     * The event identity of {@code editedEvent} must not be the same as another existing event in the list.","lastModifiedDate":"2024-03-01"},{"lineNumber":56,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":57,"author":{"gitId":"Apzure"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2024-03-01"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"        requireAllNonNull(target, editedEvent);","lastModifiedDate":"2024-03-01"},{"lineNumber":59,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":60,"author":{"gitId":"Apzure"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2024-03-01"},{"lineNumber":61,"author":{"gitId":"Apzure"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2024-03-01"},{"lineNumber":62,"author":{"gitId":"Apzure"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2024-03-01"},{"lineNumber":63,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":64,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":65,"author":{"gitId":"Apzure"},"content":"        if (!target.isSameEvent(editedEvent) \u0026\u0026 contains(editedEvent)) {","lastModifiedDate":"2024-03-01"},{"lineNumber":66,"author":{"gitId":"Apzure"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2024-03-01"},{"lineNumber":67,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":68,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":69,"author":{"gitId":"Apzure"},"content":"        internalList.set(index, editedEvent);","lastModifiedDate":"2024-03-01"},{"lineNumber":70,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":71,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":72,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":73,"author":{"gitId":"Apzure"},"content":"     * Removes the equivalent event from the list.","lastModifiedDate":"2024-03-01"},{"lineNumber":74,"author":{"gitId":"Apzure"},"content":"     * The event must exist in the list.","lastModifiedDate":"2024-03-01"},{"lineNumber":75,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":76,"author":{"gitId":"Apzure"},"content":"    public void remove(Event toRemove) {","lastModifiedDate":"2024-03-01"},{"lineNumber":77,"author":{"gitId":"Apzure"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2024-03-01"},{"lineNumber":78,"author":{"gitId":"Apzure"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2024-03-01"},{"lineNumber":79,"author":{"gitId":"Apzure"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2024-03-01"},{"lineNumber":80,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":81,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":82,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":83,"author":{"gitId":"Apzure"},"content":"    public void setEvents(UniqueEventList replacement) {","lastModifiedDate":"2024-03-01"},{"lineNumber":84,"author":{"gitId":"Apzure"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2024-03-01"},{"lineNumber":85,"author":{"gitId":"Apzure"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2024-03-01"},{"lineNumber":86,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":87,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":88,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":89,"author":{"gitId":"Apzure"},"content":"     * Replaces the contents of this list with {@code events}.","lastModifiedDate":"2024-03-01"},{"lineNumber":90,"author":{"gitId":"Apzure"},"content":"     * {@code events} must not contain duplicate events.","lastModifiedDate":"2024-03-01"},{"lineNumber":91,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":92,"author":{"gitId":"Apzure"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2024-03-01"},{"lineNumber":93,"author":{"gitId":"Apzure"},"content":"        requireAllNonNull(events);","lastModifiedDate":"2024-03-01"},{"lineNumber":94,"author":{"gitId":"Apzure"},"content":"        if (!eventsAreUnique(events)) {","lastModifiedDate":"2024-03-01"},{"lineNumber":95,"author":{"gitId":"Apzure"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2024-03-01"},{"lineNumber":96,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":97,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":98,"author":{"gitId":"Apzure"},"content":"        internalList.setAll(events);","lastModifiedDate":"2024-03-01"},{"lineNumber":99,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":100,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":101,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":102,"author":{"gitId":"Apzure"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2024-03-01"},{"lineNumber":103,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":104,"author":{"gitId":"Apzure"},"content":"    public ObservableList\u003cEvent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2024-03-01"},{"lineNumber":105,"author":{"gitId":"Apzure"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2024-03-01"},{"lineNumber":106,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":107,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":108,"author":{"gitId":"Apzure"},"content":"    /// Utils","lastModifiedDate":"2024-03-04"},{"lineNumber":109,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":110,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-01"},{"lineNumber":111,"author":{"gitId":"Apzure"},"content":"    public Iterator\u003cEvent\u003e iterator() {","lastModifiedDate":"2024-03-01"},{"lineNumber":112,"author":{"gitId":"Apzure"},"content":"        return internalList.iterator();","lastModifiedDate":"2024-03-01"},{"lineNumber":113,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":114,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":115,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-01"},{"lineNumber":116,"author":{"gitId":"Apzure"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-01"},{"lineNumber":117,"author":{"gitId":"Apzure"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-01"},{"lineNumber":118,"author":{"gitId":"Apzure"},"content":"            return true;","lastModifiedDate":"2024-03-01"},{"lineNumber":119,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":120,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":121,"author":{"gitId":"Apzure"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-01"},{"lineNumber":122,"author":{"gitId":"Apzure"},"content":"        if (!(other instanceof UniqueEventList)) {","lastModifiedDate":"2024-03-01"},{"lineNumber":123,"author":{"gitId":"Apzure"},"content":"            return false;","lastModifiedDate":"2024-03-01"},{"lineNumber":124,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":125,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":126,"author":{"gitId":"Apzure"},"content":"        UniqueEventList otherUniqueEventList \u003d (UniqueEventList) other;","lastModifiedDate":"2024-03-01"},{"lineNumber":127,"author":{"gitId":"Apzure"},"content":"        return internalList.equals(otherUniqueEventList.internalList);","lastModifiedDate":"2024-03-01"},{"lineNumber":128,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":129,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":130,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-01"},{"lineNumber":131,"author":{"gitId":"Apzure"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-01"},{"lineNumber":132,"author":{"gitId":"Apzure"},"content":"        return internalList.hashCode();","lastModifiedDate":"2024-03-01"},{"lineNumber":133,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":134,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":135,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-01"},{"lineNumber":136,"author":{"gitId":"Apzure"},"content":"    public String toString() {","lastModifiedDate":"2024-03-01"},{"lineNumber":137,"author":{"gitId":"Apzure"},"content":"        return internalList.toString();","lastModifiedDate":"2024-03-01"},{"lineNumber":138,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":139,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":140,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":141,"author":{"gitId":"Apzure"},"content":"     * Returns true if {@code events} contains only unique events.","lastModifiedDate":"2024-03-01"},{"lineNumber":142,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":143,"author":{"gitId":"Apzure"},"content":"    private boolean eventsAreUnique(List\u003cEvent\u003e events) {","lastModifiedDate":"2024-03-01"},{"lineNumber":144,"author":{"gitId":"Apzure"},"content":"        for (int i \u003d 0; i \u003c events.size() - 1; i++) {","lastModifiedDate":"2024-03-01"},{"lineNumber":145,"author":{"gitId":"Apzure"},"content":"            for (int j \u003d i + 1; j \u003c events.size(); j++) {","lastModifiedDate":"2024-03-01"},{"lineNumber":146,"author":{"gitId":"Apzure"},"content":"                if (events.get(i).isSameEvent(events.get(j))) {","lastModifiedDate":"2024-03-01"},{"lineNumber":147,"author":{"gitId":"Apzure"},"content":"                    return false;","lastModifiedDate":"2024-03-01"},{"lineNumber":148,"author":{"gitId":"Apzure"},"content":"                }","lastModifiedDate":"2024-03-01"},{"lineNumber":149,"author":{"gitId":"Apzure"},"content":"            }","lastModifiedDate":"2024-03-01"},{"lineNumber":150,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":151,"author":{"gitId":"Apzure"},"content":"        return true;","lastModifiedDate":"2024-03-01"},{"lineNumber":152,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":153,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-03-01"}],"authorContributionMap":{"Apzure":153}},{"path":"src/main/java/seedu/address/model/event/exceptions/DuplicateEventException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2024-03-01"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":" * identity).","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-03-01"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"public class DuplicateEventException extends RuntimeException {","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"    public DuplicateEventException() {","lastModifiedDate":"2024-03-01"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"        super(\"Operation would result in duplicate events\");","lastModifiedDate":"2024-03-01"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-03-01"}],"authorContributionMap":{"Apzure":11}},{"path":"src/main/java/seedu/address/model/event/exceptions/EventNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2024-03-01"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"public class EventNotFoundException extends RuntimeException {}","lastModifiedDate":"2024-03-01"}],"authorContributionMap":{"Apzure":6}},{"path":"src/main/java/seedu/address/model/person/NameAndTagCombinedPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import java.util.List;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":" * A predicate that enables checks for a {@code Person}\u0027s name and tags, by combining the","lastModifiedDate":"2024-04-10"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":" * NameContainsKeywordsPredicate and TagContainsKeywordsPredicate predicates.","lastModifiedDate":"2024-04-10"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"public class NameAndTagCombinedPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"    private final NameContainsKeywordsPredicate namePredicate;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"    private final TagContainsKeywordsPredicate tagPredicate;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"     * Constructs a predicate that combines checks for a {@code Person}\u0027s name and tags.","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"     * @param nameKeywords The list of name keywords to search for, or {@code null} if no name filtering is required.","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"     * @param tagKeywords  The set of tag keywords to search for, or {@code null} if no tag filtering is required.","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"    public NameAndTagCombinedPredicate(List\u003cString\u003e nameKeywords, Set\u003cTag\u003e tagKeywords) {","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"        this.namePredicate \u003d nameKeywords !\u003d null ? new NameContainsKeywordsPredicate(nameKeywords) : null;","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"        this.tagPredicate \u003d tagKeywords !\u003d null ? new TagContainsKeywordsPredicate(tagKeywords) : null;","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"     * Constructs a predicate that combines the given name and tag predicates.","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"     * @param namePredicate The predicate for name filtering, or {@code null} if no name filtering is required.","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"     * @param tagPredicate  The predicate for tag filtering, or {@code null} if no tag filtering is required.","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"    public NameAndTagCombinedPredicate(NameContainsKeywordsPredicate namePredicate,","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"                                       TagContainsKeywordsPredicate tagPredicate) {","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"        this.namePredicate \u003d namePredicate;","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"        this.tagPredicate \u003d tagPredicate;","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"     * Tests whether the given {@code Person} matches the combined name and tag criteria.","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"     * @param person The person to test.","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"     * @return {@code true} if the person matches the combined criteria, {@code false} otherwise.","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"        boolean nameMatch \u003d namePredicate \u003d\u003d null || namePredicate.test(person);","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"        boolean tagMatch \u003d tagPredicate \u003d\u003d null || tagPredicate.test(person);","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"        return nameMatch \u0026\u0026 tagMatch;","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"     * Checks if this predicate is equal to another object.","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"     * Two predicates are considered equal if they have the same internal predicates.","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"Apzure"},"content":"     * @param other The object to compare to.","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"     * @return {@code true} if the predicates are equal, {@code false} otherwise.","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"Apzure"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"Apzure"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"Apzure"},"content":"            return true;","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"Apzure"},"content":"        if (!(other instanceof NameAndTagCombinedPredicate)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"Apzure"},"content":"            return false;","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"Apzure"},"content":"        NameAndTagCombinedPredicate otherPredicate \u003d (NameAndTagCombinedPredicate) other;","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"Apzure"},"content":"        if (namePredicate \u003d\u003d null \u0026\u0026 otherPredicate.namePredicate !\u003d null) {","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"Apzure"},"content":"            return false;","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"Apzure"},"content":"        if (tagPredicate \u003d\u003d null \u0026\u0026 otherPredicate.tagPredicate !\u003d null) {","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"Apzure"},"content":"            return false;","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"Apzure"},"content":"        return (namePredicate \u003d\u003d null || namePredicate.equals(otherPredicate.namePredicate))","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"Apzure"},"content":"                \u0026\u0026 (tagPredicate \u003d\u003d null || tagPredicate.equals(otherPredicate.tagPredicate));","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"Apzure"},"content":"     * Returns a string representation of this predicate.","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"Apzure"},"content":"     * @return A string representation of this predicate.","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"Apzure"},"content":"    public String toString() {","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"Apzure"},"content":"        return \"NameAndTagCombinedPredicate{\"","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"Apzure"},"content":"                + \"namePredicate\u003d\" + (namePredicate !\u003d null ? namePredicate.toString() : \"null\")","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"Apzure"},"content":"                + \", tagPredicate\u003d\" + (tagPredicate !\u003d null ? tagPredicate.toString() : \"null\")","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"Apzure"},"content":"                + \u0027}\u0027;","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"Apzure":94}},{"path":"src/main/java/seedu/address/model/person/TagContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"taeewonnn"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"taeewonnn"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"taeewonnn"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"taeewonnn"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"taeewonnn"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"taeewonnn"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"taeewonnn"},"content":" * Tests that a {@code Person}\u0027s {@code Tag} matches any of the keywords given.","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"taeewonnn"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"taeewonnn"},"content":"public class TagContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"taeewonnn"},"content":"    private final Set\u003cTag\u003e tagKeywords;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"taeewonnn"},"content":"    public TagContainsKeywordsPredicate(Set\u003cTag\u003e keywords) {","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"taeewonnn"},"content":"        this.tagKeywords \u003d keywords;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"taeewonnn"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"taeewonnn"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"taeewonnn"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"taeewonnn"},"content":"        return person.getTags().containsAll(tagKeywords);","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"taeewonnn"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"taeewonnn"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"taeewonnn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"taeewonnn"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"taeewonnn"},"content":"            return true;","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"taeewonnn"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"taeewonnn"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"taeewonnn"},"content":"        if (!(other instanceof TagContainsKeywordsPredicate)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"taeewonnn"},"content":"            return false;","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"taeewonnn"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"taeewonnn"},"content":"        TagContainsKeywordsPredicate otherTagContainsKeywordsPredicate \u003d (TagContainsKeywordsPredicate) other;","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"taeewonnn"},"content":"        return tagKeywords.equals(otherTagContainsKeywordsPredicate.tagKeywords);","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"taeewonnn"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"taeewonnn"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"taeewonnn"},"content":"    public String toString() {","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"taeewonnn"},"content":"        return new ToStringBuilder(this).add(\"keywords\", tagKeywords).toString();","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"taeewonnn"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"taeewonnn"},"content":"}","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"taeewonnn":44}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric and non-empty.\";","lastModifiedDate":"2024-04-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Apzure":1,"-":61}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.model.EventBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.model.ReadOnlyEventBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":"import seedu.address.model.event.EventDate;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"nusliuyifan"},"content":"    public static Event[] getSampleEvents() {","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"nusliuyifan"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"nusliuyifan"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"nusliuyifan"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"nusliuyifan"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"nusliuyifan"},"content":"        UniquePersonList a \u003d new UniquePersonList();","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"nusliuyifan"},"content":"        a.setPersons(sampleAb.getPersonList());","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"myang2020"},"content":"        return new Event[] { new Event(new EventName(\"Orientation\"), new EventDate(\"05-07-2024\"), a) };","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":67,"author":{"gitId":"nusliuyifan"},"content":"    public static ReadOnlyEventBook getSampleEventBook() {","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"nusliuyifan"},"content":"        EventBook sampleEb \u003d new EventBook();","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"nusliuyifan"},"content":"        for (Event sampleEvent : getSampleEvents()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"nusliuyifan"},"content":"            sampleEb.addEvent(sampleEvent);","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"nusliuyifan"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"nusliuyifan"},"content":"        return sampleEb;","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"},{"lineNumber":84,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"nusliuyifan":23,"-":59,"myang2020":2}},{"path":"src/main/java/seedu/address/storage/EventBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nusliuyifan"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"nusliuyifan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"nusliuyifan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"nusliuyifan"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.model.ReadOnlyEventBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"nusliuyifan"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"nusliuyifan"},"content":" * Represents a storage for {@link seedu.address.model.EventBook}.","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"nusliuyifan"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"nusliuyifan"},"content":"public interface EventBookStorage {","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"nusliuyifan"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"nusliuyifan"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"nusliuyifan"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"nusliuyifan"},"content":"    Path getEventBookFilePath();","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"nusliuyifan"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"nusliuyifan"},"content":"     * Returns EventBook data as a {@link ReadOnlyEventBook}.","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"nusliuyifan"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"nusliuyifan"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"nusliuyifan"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"nusliuyifan"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"nusliuyifan"},"content":"    Optional\u003cReadOnlyEventBook\u003e readEventBook() throws DataLoadingException;","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"nusliuyifan"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"nusliuyifan"},"content":"     * @see #getEventBookFilePath()","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"nusliuyifan"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"nusliuyifan"},"content":"    Optional\u003cReadOnlyEventBook\u003e readEventBook(Path filePath) throws DataLoadingException;","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"nusliuyifan"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"nusliuyifan"},"content":"     * Saves the given {@link ReadOnlyEventBook} to the storage.","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"nusliuyifan"},"content":"     * @param eventBook cannot be null.","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"nusliuyifan"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"nusliuyifan"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"nusliuyifan"},"content":"    void saveEventBook(ReadOnlyEventBook eventBook) throws IOException;","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"nusliuyifan"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"nusliuyifan"},"content":"     * @see #saveEventBook(ReadOnlyEventBook)","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"nusliuyifan"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"nusliuyifan"},"content":"    void saveEventBook(ReadOnlyEventBook eventBook, Path filePath) throws IOException;","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"nusliuyifan"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"nusliuyifan":45}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nusliuyifan"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"nusliuyifan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"nusliuyifan"},"content":"import java.util.List;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"nusliuyifan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"nusliuyifan"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"nusliuyifan"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":"import seedu.address.model.event.EventDate;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"nusliuyifan"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"nusliuyifan"},"content":" * Jackson-friendly version of {@link Event}.","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"nusliuyifan"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"nusliuyifan"},"content":"class JsonAdaptedEvent {","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"nusliuyifan"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Event\u0027s %s field is missing!\";","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"nusliuyifan"},"content":"    private final String eventName;","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"    private final String eventDate;","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"nusliuyifan"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"nusliuyifan"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"nusliuyifan"},"content":"     * Constructs a {@code JsonAdaptedEvent} with the given person details.","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"nusliuyifan"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"nusliuyifan"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"nusliuyifan"},"content":"    public JsonAdaptedEvent(@JsonProperty(\"eventName\") String eventName,","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"myang2020"},"content":"                            @JsonProperty(\"eventDate\") String eventDate,","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"nusliuyifan"},"content":"                             @JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"nusliuyifan"},"content":"        this.eventName \u003d eventName;","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"myang2020"},"content":"        this.eventDate \u003d eventDate;","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"nusliuyifan"},"content":"        if (persons !\u003d null) {","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"nusliuyifan"},"content":"            this.persons.addAll(persons);","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"nusliuyifan"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"nusliuyifan"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"nusliuyifan"},"content":"     * Converts a given {@code Event} into this class for Jackson use.","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"nusliuyifan"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"nusliuyifan"},"content":"    public JsonAdaptedEvent(Event source) {","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"nusliuyifan"},"content":"        eventName \u003d source.getEventName().toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"myang2020"},"content":"        eventDate \u003d source.getEventDate().toString();","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"nusliuyifan"},"content":"        persons.addAll(source.getPersonList().stream()","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"nusliuyifan"},"content":"                .map(JsonAdaptedPerson::new)","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"nusliuyifan"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"nusliuyifan"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"nusliuyifan"},"content":"     * Converts this Jackson-friendly adapted event object into the model\u0027s {@code Event} object.","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"nusliuyifan"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"nusliuyifan"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"nusliuyifan"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"nusliuyifan"},"content":"    public Event toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"nusliuyifan"},"content":"        final UniquePersonList eventPersons \u003d new UniquePersonList();","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"nusliuyifan"},"content":"        for (JsonAdaptedPerson person : persons) {","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"nusliuyifan"},"content":"            eventPersons.add(person.toModelType());","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"nusliuyifan"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"nusliuyifan"},"content":"        if (eventName \u003d\u003d null) {","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"nusliuyifan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"nusliuyifan"},"content":"                    EventName.class.getSimpleName()));","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"nusliuyifan"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"myang2020"},"content":"        if (eventDate \u003d\u003d null) {","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"myang2020"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"myang2020"},"content":"                    EventDate.class.getSimpleName()));","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"Apzure"},"content":"        if (!EventName.isValidEventName(eventName)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"Apzure"},"content":"            throw new IllegalValueException(EventName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"nusliuyifan"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"nusliuyifan"},"content":"        final EventName modelEventName \u003d new EventName(eventName);","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"myang2020"},"content":"        final EventDate modelEventDate \u003d new EventDate(eventDate);","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"myang2020"},"content":"        return new Event(modelEventName, modelEventDate, eventPersons);","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"nusliuyifan"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"Apzure":2,"nusliuyifan":70,"myang2020":13}},{"path":"src/main/java/seedu/address/storage/JsonEventBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nusliuyifan"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"nusliuyifan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"nusliuyifan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"nusliuyifan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"nusliuyifan"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"nusliuyifan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.model.ReadOnlyEventBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"nusliuyifan"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"nusliuyifan"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"nusliuyifan"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"nusliuyifan"},"content":"public class JsonEventBookStorage implements EventBookStorage {","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"nusliuyifan"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonEventBookStorage.class);","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"nusliuyifan"},"content":"    private Path filePath;","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"nusliuyifan"},"content":"    public JsonEventBookStorage(Path filePath) {","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"nusliuyifan"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"nusliuyifan"},"content":"    public Path getEventBookFilePath() {","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"nusliuyifan"},"content":"        return filePath;","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"nusliuyifan"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"nusliuyifan"},"content":"    public Optional\u003cReadOnlyEventBook\u003e readEventBook() throws DataLoadingException {","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"nusliuyifan"},"content":"        return readEventBook(filePath);","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"nusliuyifan"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"nusliuyifan"},"content":"     * Similar to {@link #readEventBook()}.","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"nusliuyifan"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"nusliuyifan"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"nusliuyifan"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"nusliuyifan"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"nusliuyifan"},"content":"    public Optional\u003cReadOnlyEventBook\u003e readEventBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"nusliuyifan"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"nusliuyifan"},"content":"        Optional\u003cJsonSerializableEventBook\u003e jsonEventBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"nusliuyifan"},"content":"                filePath, JsonSerializableEventBook.class);","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"nusliuyifan"},"content":"        if (!jsonEventBook.isPresent()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"nusliuyifan"},"content":"            return Optional.empty();","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"nusliuyifan"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"nusliuyifan"},"content":"        try {","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"nusliuyifan"},"content":"            return Optional.of(jsonEventBook.get().toModelType());","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"nusliuyifan"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"nusliuyifan"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"nusliuyifan"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"nusliuyifan"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"nusliuyifan"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"nusliuyifan"},"content":"    public void saveEventBook(ReadOnlyEventBook eventBook) throws IOException {","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"nusliuyifan"},"content":"        saveEventBook(eventBook, filePath);","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"nusliuyifan"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"nusliuyifan"},"content":"     * Similar to {@link #saveEventBook(ReadOnlyEventBook)}.","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"nusliuyifan"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"nusliuyifan"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"nusliuyifan"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"nusliuyifan"},"content":"    public void saveEventBook(ReadOnlyEventBook eventBook, Path filePath) throws IOException {","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"nusliuyifan"},"content":"        requireNonNull(eventBook);","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"nusliuyifan"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"nusliuyifan"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"nusliuyifan"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableEventBook(eventBook), filePath);","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"nusliuyifan"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"nusliuyifan":80}},{"path":"src/main/java/seedu/address/storage/JsonSerializableEventBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nusliuyifan"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"nusliuyifan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"nusliuyifan"},"content":"import java.util.List;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"nusliuyifan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"nusliuyifan"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"nusliuyifan"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"nusliuyifan"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.model.EventBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.model.ReadOnlyEventBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"nusliuyifan"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"nusliuyifan"},"content":" * An Immutable EventBook that is serializable to JSON format.","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"nusliuyifan"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"nusliuyifan"},"content":"@JsonRootName(value \u003d \"eventbook\")","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"nusliuyifan"},"content":"class JsonSerializableEventBook {","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"nusliuyifan"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"Events list contains duplicate event(s).\";","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"nusliuyifan"},"content":"    private final List\u003cJsonAdaptedEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"nusliuyifan"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"nusliuyifan"},"content":"     * Constructs a {@code JsonSerializableEventBook} with the given persons.","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"nusliuyifan"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"nusliuyifan"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"nusliuyifan"},"content":"    public JsonSerializableEventBook(@JsonProperty(\"events\") List\u003cJsonAdaptedEvent\u003e events) {","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"nusliuyifan"},"content":"        this.events.addAll(events);","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"nusliuyifan"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"nusliuyifan"},"content":"     * Converts a given {@code ReadOnlyEventBook} into this class for Jackson use.","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"nusliuyifan"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"nusliuyifan"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableEventBook}.","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"nusliuyifan"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"nusliuyifan"},"content":"    public JsonSerializableEventBook(ReadOnlyEventBook source) {","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"nusliuyifan"},"content":"        events.addAll(source.getEventList().stream().map(JsonAdaptedEvent::new).collect(Collectors.toList()));","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"nusliuyifan"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"nusliuyifan"},"content":"     * Converts this event book into the model\u0027s {@code EventBook} object.","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"nusliuyifan"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"nusliuyifan"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"nusliuyifan"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"nusliuyifan"},"content":"    public EventBook toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"nusliuyifan"},"content":"        EventBook eventBook \u003d new EventBook();","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"nusliuyifan"},"content":"        for (JsonAdaptedEvent jsonAdaptedEvent : events) {","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"nusliuyifan"},"content":"            Event event \u003d jsonAdaptedEvent.toModelType();","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"nusliuyifan"},"content":"            if (eventBook.hasEvent(event)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"nusliuyifan"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"nusliuyifan"},"content":"            }","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"nusliuyifan"},"content":"            eventBook.addEvent(event);","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"nusliuyifan"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"nusliuyifan"},"content":"        return eventBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"nusliuyifan"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"nusliuyifan":60}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.model.ReadOnlyEventBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"nusliuyifan"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage, EventBookStorage {","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":34,"author":{"gitId":"nusliuyifan"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"nusliuyifan"},"content":"    Path getEventBookFilePath();","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"nusliuyifan"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"nusliuyifan"},"content":"    Optional\u003cReadOnlyEventBook\u003e readEventBook() throws DataLoadingException;","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"nusliuyifan"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"nusliuyifan"},"content":"    void saveEventBook(ReadOnlyEventBook eventBook) throws IOException;","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"nusliuyifan":11,"-":31}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.model.ReadOnlyEventBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"nusliuyifan"},"content":"    private EventBookStorage eventBookStorage;","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"nusliuyifan"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage}","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"nusliuyifan"},"content":"     * and {@code UserPrefStorage} and {@code EventBookStorage}.","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"nusliuyifan"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage,","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"nusliuyifan"},"content":"                          EventBookStorage eventBookStorage) {","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"nusliuyifan"},"content":"        this.eventBookStorage \u003d eventBookStorage;","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"nusliuyifan"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d EventBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"nusliuyifan"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"nusliuyifan"},"content":"    public Path getEventBookFilePath() {","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"nusliuyifan"},"content":"        return eventBookStorage.getEventBookFilePath();","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"nusliuyifan"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"nusliuyifan"},"content":"    public Optional\u003cReadOnlyEventBook\u003e readEventBook() throws DataLoadingException {","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"nusliuyifan"},"content":"        return readEventBook(eventBookStorage.getEventBookFilePath());","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"nusliuyifan"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"nusliuyifan"},"content":"    public Optional\u003cReadOnlyEventBook\u003e readEventBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"nusliuyifan"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"nusliuyifan"},"content":"        return eventBookStorage.readEventBook(filePath);","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"nusliuyifan"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"nusliuyifan"},"content":"    public void saveEventBook(ReadOnlyEventBook eventBook) throws IOException {","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"nusliuyifan"},"content":"        saveEventBook(eventBook, eventBookStorage.getEventBookFilePath());","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"nusliuyifan"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"nusliuyifan"},"content":"    public void saveEventBook(ReadOnlyEventBook eventBook, Path filePath) throws IOException {","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"nusliuyifan"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"nusliuyifan"},"content":"        eventBookStorage.saveEventBook(eventBook, filePath);","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nusliuyifan":35,"-":76}},{"path":"src/main/java/seedu/address/ui/EventCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-01"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-01"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-03-01"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":" * A UI component that displays information of an {@code Event}.","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-03-01"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"public class EventCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"    private static final String FXML \u003d \"EventListCard.fxml\";","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"    @FXML","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"    private HBox cardPane;","lastModifiedDate":"2024-03-01"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"    @FXML","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"    private Label id;","lastModifiedDate":"2024-03-01"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"    @FXML","lastModifiedDate":"2024-03-01"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"    private Label name;","lastModifiedDate":"2024-03-01"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"    @FXML","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"    private Label date;","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"     * Creates a {@code EventCard} with the given {@code Event} and index to display.","lastModifiedDate":"2024-03-01"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"    public EventCard(Event event, int displayedIndex) {","lastModifiedDate":"2024-03-01"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"        super(FXML);","lastModifiedDate":"2024-03-01"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2024-03-01"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"        name.setText(event.getEventName().eventName);","lastModifiedDate":"2024-03-01"},{"lineNumber":33,"author":{"gitId":"myang2020"},"content":"        date.setText(event.getEventDate().toString());","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"    public Region getRoot() {","lastModifiedDate":"2024-03-01"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"        return cardPane;","lastModifiedDate":"2024-03-01"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-03-01"}],"authorContributionMap":{"Apzure":35,"myang2020":4}},{"path":"src/main/java/seedu/address/ui/EventListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-01"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-01"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2024-03-01"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2024-03-01"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-01"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":" * Panel containing the list of events.","lastModifiedDate":"2024-03-01"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"public class EventListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-01"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"    private static final String FXML \u003d \"EventListPanel.fxml\";","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(EventListPanel.class);","lastModifiedDate":"2024-03-01"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"    @FXML","lastModifiedDate":"2024-03-01"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"    private ListView\u003cEvent\u003e eventListView;","lastModifiedDate":"2024-03-01"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"     * Creates an {@code EventListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2024-03-01"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"    public EventListPanel(ObservableList\u003cEvent\u003e eventList, ObservableValue\u003cEvent\u003e selectedEvent) {","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"        super(FXML);","lastModifiedDate":"2024-03-01"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"        eventListView.setItems(eventList);","lastModifiedDate":"2024-03-01"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"        eventListView.setCellFactory(listView -\u003e new EventListViewCell(selectedEvent));","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"     * Custom {@code ListCell} that displays the graphics of an {@code Event} using an {@code EventCard}.","lastModifiedDate":"2024-03-01"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"    class EventListViewCell extends ListCell\u003cEvent\u003e {","lastModifiedDate":"2024-03-01"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"        private final ObservableValue\u003cEvent\u003e selectedEvent;","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"        public EventListViewCell(ObservableValue\u003cEvent\u003e selectedEvent) {","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"            this.selectedEvent \u003d selectedEvent;","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"            // Add a listener to the selectedEvent property to update the cell style when it changes","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"            selectedEvent.addListener((observable, oldValue, newValue) -\u003e updateCellStyle(newValue));","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"        @Override","lastModifiedDate":"2024-03-01"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"        protected void updateItem(Event event, boolean empty) {","lastModifiedDate":"2024-03-01"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"            super.updateItem(event, empty);","lastModifiedDate":"2024-03-01"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"            if (empty || event \u003d\u003d null) {","lastModifiedDate":"2024-03-01"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"                setGraphic(null);","lastModifiedDate":"2024-03-01"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"                setText(null);","lastModifiedDate":"2024-03-01"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"                setStyle(\"\");","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"                setBorder(null);","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"            } else {","lastModifiedDate":"2024-03-01"},{"lineNumber":56,"author":{"gitId":"Apzure"},"content":"                setGraphic(new EventCard(event, getIndex() + 1).getRoot());","lastModifiedDate":"2024-03-01"},{"lineNumber":57,"author":{"gitId":"Apzure"},"content":"                updateCellStyle(selectedEvent.getValue());","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"            }","lastModifiedDate":"2024-03-01"},{"lineNumber":59,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":60,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"Apzure"},"content":"        private void updateCellStyle(Event selectedEvent) {","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"Apzure"},"content":"            if (selectedEvent !\u003d null \u0026\u0026 getItem() !\u003d null \u0026\u0026 getItem().equals(selectedEvent)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"Apzure"},"content":"                setStyle(\"-fx-background-color: #FACF7C; -fx-background-radius: 5px;\");","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"Apzure"},"content":"            } else {","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"Apzure"},"content":"                setStyle(\"\");","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"Apzure"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":68,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":69,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"Apzure":69}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s2-cs2103t-t10-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Apzure":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"    private EventListPanel eventListPanel;","lastModifiedDate":"2024-03-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"    private PersonListOfSelectedEventPanel personListOfSelectedEventPanel;","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"    @FXML","lastModifiedDate":"2024-03-01"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"    private StackPane eventListPanelPlaceholder;","lastModifiedDate":"2024-03-01"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"    @FXML","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"    private StackPane personListOfSelectedEventPanelPlaceholder;","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":124,"author":{"gitId":"Apzure"},"content":"        eventListPanel \u003d new EventListPanel(logic.getFilteredEventList(), logic.getSelectedEvent());","lastModifiedDate":"2024-03-26"},{"lineNumber":125,"author":{"gitId":"Apzure"},"content":"        eventListPanelPlaceholder.getChildren().add(eventListPanel.getRoot());","lastModifiedDate":"2024-03-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"Apzure"},"content":"        personListOfSelectedEventPanel \u003d new PersonListOfSelectedEventPanel(logic.getSelectedEvent(),","lastModifiedDate":"2024-03-26"},{"lineNumber":128,"author":{"gitId":"Apzure"},"content":"                logic.getFilteredPersonListOfSelectedEvent());","lastModifiedDate":"2024-03-26"},{"lineNumber":129,"author":{"gitId":"Apzure"},"content":"        personListOfSelectedEventPanelPlaceholder.getChildren().add(personListOfSelectedEventPanel.getRoot());","lastModifiedDate":"2024-03-26"},{"lineNumber":130,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":181,"author":{"gitId":"Apzure"},"content":"    public EventListPanel getEventListPanel() {","lastModifiedDate":"2024-03-01"},{"lineNumber":182,"author":{"gitId":"Apzure"},"content":"        return eventListPanel;","lastModifiedDate":"2024-03-01"},{"lineNumber":183,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":184,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Apzure":18,"-":197}},{"path":"src/main/java/seedu/address/ui/PersonListOfSelectedEventPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":" * Panel containing the list of persons of the selected event.","lastModifiedDate":"2024-04-10"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"public class PersonListOfSelectedEventPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"    private static final String FXML \u003d \"PersonListOfSelectedEventPanel.fxml\";","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListOfSelectedEventPanel.class);","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"    @FXML","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"    @FXML","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"    private Label emptyListLabel;","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"     * Creates a {@code PersonListOfSelectedEventPanel} with the given {@code ObservableValue} and","lastModifiedDate":"2024-04-10"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"     * {@code ObservableList}.","lastModifiedDate":"2024-04-10"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"    public PersonListOfSelectedEventPanel(ObservableValue\u003cEvent\u003e selectedEvent, ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"        super(FXML);","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListOfSelectedEventViewCell());","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"        // Add a listener to the selectedEvent to handle visibility of personListView and emptyListLabel","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"        selectedEvent.addListener((observable, oldEvent, newEvent) -\u003e updateListView(selectedEvent));","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"        // Initial call to set the correct visibility state when the panel is first created","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"        updateListView(selectedEvent);","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"     * Updates the visibility of personListView and emptyListLabel based on the list\u0027s emptiness.","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"    private void updateListView(ObservableValue\u003cEvent\u003e selectedEvent) {","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"        boolean isAnEventSelected \u003d selectedEvent.getValue() !\u003d null;","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"        personListView.setVisible(isAnEventSelected);","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"        personListView.setManaged(isAnEventSelected);","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"        emptyListLabel.setVisible(!isAnEventSelected);","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"        emptyListLabel.setManaged(!isAnEventSelected);","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"Apzure"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"Apzure"},"content":"    class PersonListOfSelectedEventViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"Apzure"},"content":"        @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"Apzure"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"Apzure"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"Apzure"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"Apzure"},"content":"                setGraphic(null);","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"Apzure"},"content":"                setText(null);","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"Apzure"},"content":"            } else {","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"Apzure"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"Apzure"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"Apzure":75}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"    -fx-background-color: derive(#eaeaff, 20%);","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"    background-color: #1f2b37; /* Used in the default.html file */","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"    -fx-base: #eaeaff;","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"    -fx-control-inner-background: #eaeaff;","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"    -fx-background-color: #eaeaff;","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"Apzure"},"content":"    -fx-background-color: derive(#eaeaff, 20%);","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"Apzure"},"content":"    -fx-border-color: transparent transparent transparent transparent;","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"Apzure"},"content":"    -fx-background-color: derive(#eaeaff, 20%);","lastModifiedDate":"2024-04-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"Apzure"},"content":"    -fx-background-color: derive(#eaeaff, 20%);","lastModifiedDate":"2024-04-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2024-04-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"Apzure"},"content":"    -fx-padding: 0px;","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"Apzure"},"content":"    -fx-background-color: derive(#eaeaff, 20%);","lastModifiedDate":"2024-04-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"Apzure"},"content":"    -fx-background-color: #9BC8D6;","lastModifiedDate":"2024-04-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2024-04-04"},{"lineNumber":108,"author":{"gitId":"Apzure"},"content":"    -fx-background-color: #B9D9C3;","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2024-04-04"},{"lineNumber":112,"author":{"gitId":"Apzure"},"content":"    -fx-background-color: derive(#eaeaff, -30%);","lastModifiedDate":"2024-04-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"Apzure"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":132,"author":{"gitId":"Apzure"},"content":"    -fx-background-color: derive(#eaeaff, 20%);","lastModifiedDate":"2024-04-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":136,"author":{"gitId":"Apzure"},"content":"    -fx-background-color: #eaeaff;","lastModifiedDate":"2024-04-04"},{"lineNumber":137,"author":{"gitId":"Apzure"},"content":"    -fx-border-color: derive(#eaeaff, -20%);","lastModifiedDate":"2024-04-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"Apzure"},"content":"    -fx-background-color: derive(#eaeaff, -5%);","lastModifiedDate":"2024-04-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":149,"author":{"gitId":"Apzure"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":158,"author":{"gitId":"Apzure"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"Apzure"},"content":"    -fx-background-color: derive(#eaeaff, 30%);","lastModifiedDate":"2024-04-04"},{"lineNumber":165,"author":{"gitId":"Apzure"},"content":"    -fx-border-color: derive(#eaeaff, 25%);","lastModifiedDate":"2024-04-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"Apzure"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"Apzure"},"content":"    -fx-background-color: derive(#eaeaff, 30%);","lastModifiedDate":"2024-04-04"},{"lineNumber":175,"author":{"gitId":"Apzure"},"content":"    -fx-border-color: derive(#eaeaff, 30%);","lastModifiedDate":"2024-04-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":180,"author":{"gitId":"Apzure"},"content":"    -fx-background-color: derive(#eaeaff, 30%);","lastModifiedDate":"2024-04-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"Apzure"},"content":"    -fx-background-color: derive(#eaeaff, 50%);","lastModifiedDate":"2024-04-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"Apzure"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"Apzure"},"content":"    -fx-background-color: derive(#eaeaff, -5%);","lastModifiedDate":"2024-04-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":198,"author":{"gitId":"Apzure"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"Apzure"},"content":"    -fx-background-color: #eaeaff;","lastModifiedDate":"2024-04-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"Apzure"},"content":"    -fx-text-fill: #eaeaff;","lastModifiedDate":"2024-04-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"Apzure"},"content":"    -fx-background-color: #eaeaff;","lastModifiedDate":"2024-04-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"Apzure"},"content":"    -fx-background-color: #eaeaff;","lastModifiedDate":"2024-04-04"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"Apzure"},"content":"    -fx-background-color: #eaeaff;","lastModifiedDate":"2024-04-04"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"Apzure"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-04"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"Apzure"},"content":"    -fx-background-color: derive(#eaeaff, 25%);","lastModifiedDate":"2024-04-04"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"Apzure"},"content":"    -fx-fill: black;","lastModifiedDate":"2024-04-04"},{"lineNumber":277,"author":{"gitId":"Apzure"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-04"},{"lineNumber":278,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":281,"author":{"gitId":"Apzure"},"content":"    -fx-background-color: derive(#eaeaff, 20%);","lastModifiedDate":"2024-04-04"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":285,"author":{"gitId":"Apzure"},"content":"    -fx-background-color: derive(#eaeaff, -10%);","lastModifiedDate":"2024-04-04"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":306,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2024-04-04"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2024-04-04"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":317,"author":{"gitId":"Apzure"},"content":"    -fx-background-color: transparent #1f2b37 transparent #1f2b37;","lastModifiedDate":"2024-04-04"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":319,"author":{"gitId":"Apzure"},"content":"    -fx-border-color: #1f2b37 #1f2b37 #1f2b37 #1f2b37;","lastModifiedDate":"2024-04-04"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"Apzure"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-04"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":327,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"Apzure"},"content":"    -fx-background-color: transparent, #eaeaff, transparent, #eaeaff;","lastModifiedDate":"2024-04-04"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":337,"author":{"gitId":"Apzure"},"content":"    -fx-hgap: 3;","lastModifiedDate":"2024-04-04"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":339,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"Apzure"},"content":"    -fx-padding: 3 3 3 3;","lastModifiedDate":"2024-04-04"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2024-04-04"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2024-04-04"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"Apzure"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-04-04"},{"lineNumber":347,"author":{"gitId":"Apzure"},"content":"    -fx-background-color: #3d8432;","lastModifiedDate":"2024-04-04"},{"lineNumber":348,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":350,"author":{"gitId":"Apzure"},"content":".label-empty {","lastModifiedDate":"2024-04-04"},{"lineNumber":351,"author":{"gitId":"Apzure"},"content":"    -fx-font-size: 20px;","lastModifiedDate":"2024-04-04"},{"lineNumber":352,"author":{"gitId":"Apzure"},"content":"    -fx-text-fill: #000000;","lastModifiedDate":"2024-04-04"},{"lineNumber":353,"author":{"gitId":"Apzure"},"content":"    -fx-alignment: center;","lastModifiedDate":"2024-04-04"},{"lineNumber":354,"author":{"gitId":"Apzure"},"content":"    -fx-opacity: 0.5;","lastModifiedDate":"2024-04-04"},{"lineNumber":355,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"Apzure":58,"-":297}},{"path":"src/main/resources/view/EventListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" styleClass\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"120\" GridPane.columnIndex\u003d\"0\"\u003e \u003c!-- Adjusted minHeight --\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":28,"author":{"gitId":"myang2020"},"content":"            \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"Apzure":29,"myang2020":3}},{"path":"src/main/resources/view/EventListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\"  xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"  \u003cListView  fx:id\u003d\"eventListView\"  VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2024-03-01"}],"authorContributionMap":{"Apzure":7}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2022-01-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"Apzure":1,"-":42}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"         title\u003d\"Address App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/address_book_32.png\"/\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\"/\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                           minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"                \u003cSplitPane dividerPositions\u003d\"0.3, 0.6\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"                    \u003citems\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"                        \u003cStackPane fx:id\u003d\"eventListPanelPlaceholder\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"200\" prefWidth\u003d\"200\" SplitPane.resizableWithParent\u003d\"false\"\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"                            \u003cpadding\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"                                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"                            \u003c/padding\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"                        \u003c/StackPane\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":56,"author":{"gitId":"Apzure"},"content":"                        \u003cStackPane fx:id\u003d\"personListOfSelectedEventPanelPlaceholder\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"200\" prefWidth\u003d\"200\" SplitPane.resizableWithParent\u003d\"false\"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"Apzure"},"content":"                            \u003cpadding\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"                                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"Apzure"},"content":"                            \u003c/padding\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"Apzure"},"content":"                        \u003c/StackPane\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"Apzure"},"content":"                        \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"200\" prefWidth\u003d\"200\" SplitPane.resizableWithParent\u003d\"false\"\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"Apzure"},"content":"                            \u003cpadding\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"Apzure"},"content":"                                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"Apzure"},"content":"                            \u003c/padding\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"Apzure"},"content":"                        \u003c/StackPane\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"Apzure"},"content":"                    \u003c/items\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":67,"author":{"gitId":"Apzure"},"content":"                \u003c/SplitPane\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Apzure":21,"-":52}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"120\" GridPane.columnIndex\u003d\"0\"\u003e \u003c!-- Adjusted minHeight --\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Apzure":1,"-":34}},{"path":"src/main/resources/view/PersonListOfSelectedEventPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" alignment\u003d\"CENTER\" spacing\u003d\"10\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"    \u003cListView fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"    \u003cLabel fx:id\u003d\"emptyListLabel\" text\u003d\"No Event Selected\" visible\u003d\"false\" styleClass\u003d\"label-empty\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"Apzure":9,"myang2020":1}},{"path":"src/test/java/seedu/address/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String expected \u003d Config.class.getCanonicalName() + \"{logLevel\u003d\" + config.getLogLevel()","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"ChocoRagdoll"},"content":"                + \", userPrefsFilePath\u003d\" + config.getUserPrefsFilePath()","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"ChocoRagdoll"},"content":"                + \", personExportFilePath\u003d\" + config.getPersonExportFilePath() + \"}\";","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(expected, config.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"ChocoRagdoll":2,"-":25}},{"path":"src/test/java/seedu/address/export/MockPersonDataExporter.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ChocoRagdoll"},"content":"package seedu.address.export;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"ChocoRagdoll"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"ChocoRagdoll"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"ChocoRagdoll"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"ChocoRagdoll"},"content":"import java.util.List;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"ChocoRagdoll"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"ChocoRagdoll"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"ChocoRagdoll"},"content":" * A mock PersonDataExporter for testing purposes that does not perform actual file operations.","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"ChocoRagdoll"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"ChocoRagdoll"},"content":"public class MockPersonDataExporter implements PersonExporter {","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"ChocoRagdoll"},"content":"    private Path filePath;","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"ChocoRagdoll"},"content":"    private boolean shouldThrowIoException \u003d false;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"ChocoRagdoll"},"content":"    private List\u003cObservableList\u003cPerson\u003e\u003e exportedLists \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"ChocoRagdoll"},"content":"    private List\u003cBoolean\u003e shouldExportNameFlags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"ChocoRagdoll"},"content":"    private List\u003cBoolean\u003e shouldExportPhoneFlags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"ChocoRagdoll"},"content":"    private List\u003cBoolean\u003e shouldExportEmailFlags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"ChocoRagdoll"},"content":"    private List\u003cBoolean\u003e shouldExportAddressFlags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"ChocoRagdoll"},"content":"    public void setThrowIoException(boolean shouldThrowIoException) {","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"ChocoRagdoll"},"content":"        this.shouldThrowIoException \u003d shouldThrowIoException;","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"ChocoRagdoll"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"ChocoRagdoll"},"content":"    public void exportToCsv(ObservableList\u003cPerson\u003e persons, boolean shouldExportName, boolean shouldExportPhone,","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"ChocoRagdoll"},"content":"                            boolean shouldExportEmail, boolean shouldExportAddress) throws IOException {","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"ChocoRagdoll"},"content":"        if (shouldThrowIoException) {","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"ChocoRagdoll"},"content":"            throw new IOException(\"Mock IOException\");","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"ChocoRagdoll"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"ChocoRagdoll"},"content":"        exportedLists.add(persons);","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"ChocoRagdoll"},"content":"        shouldExportNameFlags.add(shouldExportName);","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"ChocoRagdoll"},"content":"        shouldExportPhoneFlags.add(shouldExportPhone);","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"ChocoRagdoll"},"content":"        shouldExportEmailFlags.add(shouldExportEmail);","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"ChocoRagdoll"},"content":"        shouldExportAddressFlags.add(shouldExportAddress);","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"ChocoRagdoll"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"ChocoRagdoll"},"content":"     * Checks if the given list of persons has been exported with the specified export settings.","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"ChocoRagdoll"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"ChocoRagdoll"},"content":"     * @param persons              The filtered list of persons to check for export.","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"ChocoRagdoll"},"content":"     * @param shouldExportName     A boolean indicating whether names should be exported.","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"ChocoRagdoll"},"content":"     * @param shouldExportPhone    A boolean indicating whether phone numbers should be exported.","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"ChocoRagdoll"},"content":"     * @param shouldExportEmail    A boolean indicating whether email addresses should be exported.","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"ChocoRagdoll"},"content":"     * @param shouldExportAddress  A boolean indicating whether addresses should be exported.","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"ChocoRagdoll"},"content":"     * @return                     {@code true} if the specified list of persons has been exported with","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"ChocoRagdoll"},"content":"     *                             the exact same export settings as provided; {@code false} otherwise.","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"ChocoRagdoll"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"ChocoRagdoll"},"content":"    public boolean hasExported(ObservableList\u003cPerson\u003e persons, boolean shouldExportName, boolean shouldExportPhone,","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"ChocoRagdoll"},"content":"                               boolean shouldExportEmail, boolean shouldExportAddress) {","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"ChocoRagdoll"},"content":"        for (int i \u003d 0; i \u003c exportedLists.size(); i++) {","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"ChocoRagdoll"},"content":"            if (exportedLists.get(i) \u003d\u003d persons","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"ChocoRagdoll"},"content":"                    \u0026\u0026 shouldExportNameFlags.get(i) \u003d\u003d shouldExportName","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"ChocoRagdoll"},"content":"                    \u0026\u0026 shouldExportPhoneFlags.get(i) \u003d\u003d shouldExportPhone","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"ChocoRagdoll"},"content":"                    \u0026\u0026 shouldExportEmailFlags.get(i) \u003d\u003d shouldExportEmail","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"ChocoRagdoll"},"content":"                    \u0026\u0026 shouldExportAddressFlags.get(i) \u003d\u003d shouldExportAddress) {","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"ChocoRagdoll"},"content":"                return true;","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"ChocoRagdoll"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"ChocoRagdoll"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"ChocoRagdoll"},"content":"        return false;","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"ChocoRagdoll"},"content":"    public int getNumberOfExports() {","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"ChocoRagdoll"},"content":"        return exportedLists.size();","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"ChocoRagdoll"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"ChocoRagdoll"},"content":"    public void setFilePath(Path filePath) {","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"ChocoRagdoll"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"ChocoRagdoll"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"ChocoRagdoll":73}},{"path":"src/test/java/seedu/address/export/PersonDataExporterTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ChocoRagdoll"},"content":"package seedu.address.export;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"ChocoRagdoll"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"ChocoRagdoll"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"ChocoRagdoll"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"ChocoRagdoll"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"ChocoRagdoll"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"ChocoRagdoll"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"ChocoRagdoll"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"ChocoRagdoll"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"ChocoRagdoll"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"ChocoRagdoll"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"ChocoRagdoll"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"ChocoRagdoll"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"ChocoRagdoll"},"content":"public class PersonDataExporterTest {","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"ChocoRagdoll"},"content":"    private Path testFile;","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"ChocoRagdoll"},"content":"    @BeforeEach","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"ChocoRagdoll"},"content":"    public void setUp() throws IOException {","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"ChocoRagdoll"},"content":"        testFile \u003d Files.createTempFile(\"test\", \".csv\");","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"ChocoRagdoll"},"content":"    @AfterEach","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"ChocoRagdoll"},"content":"    public void tearDown() throws IOException {","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"ChocoRagdoll"},"content":"        Files.deleteIfExists(testFile);","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"ChocoRagdoll"},"content":"    private String readFileContents(Path filePath) throws IOException {","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"ChocoRagdoll"},"content":"        StringBuilder contentBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"ChocoRagdoll"},"content":"        try (BufferedReader br \u003d new BufferedReader(new FileReader(filePath.toFile()))) {","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"ChocoRagdoll"},"content":"            String currentLine;","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"ChocoRagdoll"},"content":"            while ((currentLine \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"ChocoRagdoll"},"content":"                contentBuilder.append(currentLine).append(\"\\n\");","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"ChocoRagdoll"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"ChocoRagdoll"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"ChocoRagdoll"},"content":"        return contentBuilder.toString();","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"ChocoRagdoll"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"ChocoRagdoll"},"content":"    public void exportToCsv_allFields_success() throws IOException {","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"ChocoRagdoll"},"content":"        PersonDataExporter exporter \u003d new PersonDataExporter();","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"ChocoRagdoll"},"content":"        exporter.setFilePath(testFile);","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"ChocoRagdoll"},"content":"        FilteredList\u003cPerson\u003e persons \u003d new FilteredList\u003c\u003e(FXCollections.observableArrayList(ALICE));","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"ChocoRagdoll"},"content":"        exporter.exportToCsv(persons, true, true, true, true);","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"ChocoRagdoll"},"content":"        String expected \u003d \"Name,Phone,Email,Address\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"ChocoRagdoll"},"content":"                + \"Alice Pauline,94351253,alice@example.com,123; Jurong West Ave 6; #08-111\\n\";","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"ChocoRagdoll"},"content":"        assertEquals(expected, readFileContents(testFile));","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"ChocoRagdoll"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"ChocoRagdoll"},"content":"    public void exportToCsv_selectedFields_success() throws IOException {","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"ChocoRagdoll"},"content":"        PersonDataExporter exporter \u003d new PersonDataExporter();","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"ChocoRagdoll"},"content":"        exporter.setFilePath(testFile);","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"ChocoRagdoll"},"content":"        FilteredList\u003cPerson\u003e persons \u003d new FilteredList\u003c\u003e(FXCollections.observableArrayList(ALICE));","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"ChocoRagdoll"},"content":"        exporter.exportToCsv(persons, true, false, true, false);","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"ChocoRagdoll"},"content":"        String expected \u003d \"Name,Email\\nAlice Pauline,alice@example.com\\n\";","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"ChocoRagdoll"},"content":"        assertEquals(expected, readFileContents(testFile));","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"ChocoRagdoll"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"ChocoRagdoll":70}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.export.PersonDataExporter;","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.model.ReadOnlyEventBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.storage.JsonEventBookStorage;","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"nusliuyifan"},"content":"        JsonEventBookStorage eventBookStorage \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"nusliuyifan"},"content":"                new JsonEventBookStorage(temporaryFolder.resolve(\"eventBook.json\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":56,"author":{"gitId":"nusliuyifan"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, eventBookStorage);","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"ChocoRagdoll"},"content":"        String deletePersonCommand \u003d \"delp 9\";","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"ChocoRagdoll"},"content":"        assertCommandException(deletePersonCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"Apzure"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS_GLOBAL, model);","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"myang2020"},"content":"    public void getFilteredPersonListOfSelectedEvent_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"myang2020"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonListOfSelectedEvent().remove(0));","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"nusliuyifan"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"nusliuyifan"},"content":"    public void getFilteredEventList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"nusliuyifan"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredEventList().remove(0));","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"ChocoRagdoll"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(),","lastModifiedDate":"2024-04-02"},{"lineNumber":140,"author":{"gitId":"ChocoRagdoll"},"content":"                model.getEventBook(), new PersonDataExporter());","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"nusliuyifan"},"content":"        JsonEventBookStorage eventBookStorage \u003d new JsonEventBookStorage(prefPath) {","lastModifiedDate":"2024-03-29"},{"lineNumber":176,"author":{"gitId":"nusliuyifan"},"content":"            @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":177,"author":{"gitId":"nusliuyifan"},"content":"            public void saveEventBook(ReadOnlyEventBook eventBook, Path filePath)","lastModifiedDate":"2024-03-29"},{"lineNumber":178,"author":{"gitId":"nusliuyifan"},"content":"                    throws IOException {","lastModifiedDate":"2024-03-29"},{"lineNumber":179,"author":{"gitId":"nusliuyifan"},"content":"                throw e;","lastModifiedDate":"2024-03-29"},{"lineNumber":180,"author":{"gitId":"nusliuyifan"},"content":"            }","lastModifiedDate":"2024-03-29"},{"lineNumber":181,"author":{"gitId":"nusliuyifan"},"content":"        };","lastModifiedDate":"2024-03-29"},{"lineNumber":182,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":185,"author":{"gitId":"nusliuyifan"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, eventBookStorage);","lastModifiedDate":"2024-03-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-06-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Apzure":1,"nusliuyifan":18,"ChocoRagdoll":5,"-":168,"myang2020":5}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"nusliuyifan"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.export.PersonDataExporter;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"ChocoRagdoll"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(),","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"ChocoRagdoll"},"content":"                getTypicalEventBook(), new PersonDataExporter());","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"ChocoRagdoll"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(),","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"ChocoRagdoll"},"content":"                model.getEventBook(), new PersonDataExporter());","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model,","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"nusliuyifan":1,"ChocoRagdoll":5,"-":46}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"import seedu.address.testutil.ModelStub;","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"-":123,"myang2020":1}},{"path":"src/test/java/seedu/address/logic/commands/AddEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"import seedu.address.testutil.ModelStub;","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"public class AddEventCommandTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"    public void constructor_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddEventCommand(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"    public void execute_eventAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"        ModelStubAcceptingEventAdded modelStub \u003d new ModelStubAcceptingEventAdded();","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"        Event validEvent \u003d new EventBuilder().build();","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"        CommandResult commandResult \u003d new AddEventCommand(validEvent).execute(modelStub);","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"        assertEquals(String.format(AddEventCommand.MESSAGE_SUCCESS, Messages.format(validEvent)),","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"        assertEquals(Arrays.asList(validEvent), modelStub.eventsAdded);","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"    public void execute_duplicateEvent_throwsCommandException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"        Event validEvent \u003d new EventBuilder().build();","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"        AddEventCommand addEventCommand \u003d new AddEventCommand(validEvent);","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"        ModelStub modelStub \u003d new ModelStubWithEvent(validEvent);","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"        assertThrows(CommandException.class, AddEventCommand.MESSAGE_DUPLICATE_EVENT, (","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"            ) -\u003e addEventCommand.execute(modelStub));","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"        Event eventToAdd \u003d new EventBuilder().withEventName(\"Sample Event\").build();","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"        AddEventCommand addEventCommand \u003d new AddEventCommand(eventToAdd);","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"        String expected \u003d AddEventCommand.class.getCanonicalName() + \"{toAdd\u003d\" + eventToAdd + \"}\";","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"        assertEquals(expected, addEventCommand.toString());","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"     * A Model stub that contains a single event.","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"Apzure"},"content":"    private class ModelStubWithEvent extends ModelStub {","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"Apzure"},"content":"        private final Event event;","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"Apzure"},"content":"        ModelStubWithEvent(Event event) {","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"Apzure"},"content":"            requireNonNull(event);","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"Apzure"},"content":"            this.event \u003d event;","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"Apzure"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"Apzure"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"Apzure"},"content":"            requireNonNull(event);","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"Apzure"},"content":"            return this.event.isSameEvent(event);","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"Apzure"},"content":"     * A Model stub that always accept the Event being added.","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"Apzure"},"content":"    private class ModelStubAcceptingEventAdded extends ModelStub {","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"Apzure"},"content":"        final ArrayList\u003cEvent\u003e eventsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"Apzure"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"Apzure"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"Apzure"},"content":"            requireNonNull(event);","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"Apzure"},"content":"            return eventsAdded.stream().anyMatch(event::isSameEvent);","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"Apzure"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"Apzure"},"content":"        public void addEvent(Event event) {","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"Apzure"},"content":"            requireNonNull(event);","lastModifiedDate":"2024-03-12"},{"lineNumber":90,"author":{"gitId":"Apzure"},"content":"            eventsAdded.add(event);","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":92,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":93,"author":{"gitId":"Apzure"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":94,"author":{"gitId":"Apzure"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2024-03-12"},{"lineNumber":95,"author":{"gitId":"Apzure"},"content":"            return new AddressBook();","lastModifiedDate":"2024-03-12"},{"lineNumber":96,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Apzure":97,"myang2020":1}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"nusliuyifan"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.export.PersonDataExporter;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"ChocoRagdoll"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(),","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"ChocoRagdoll"},"content":"                getTypicalEventBook(), new PersonDataExporter());","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"ChocoRagdoll"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(),","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"ChocoRagdoll"},"content":"                getTypicalEventBook(), new PersonDataExporter());","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"nusliuyifan":1,"ChocoRagdoll":5,"-":30}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_NAME;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"import seedu.address.testutil.EditEventDescriptorBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"    public static final String VALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"Alice\";","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"taeewonnn"},"content":"    public static final String VALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"friend\";","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"Apzure"},"content":"    public static final EditPersonCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"Apzure"},"content":"    public static final EditPersonCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"Apzure"},"content":"    public static final String VALID_EVENT_NAME_HIKING \u003d \"hiking\";","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"Apzure"},"content":"    public static final String VALID_EVENT_NAME_BINGO \u003d \"bingo\";","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"myang2020"},"content":"    public static final String VALID_DATE \u003d \"05-07-2024\";","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"myang2020"},"content":"    public static final String VALID_EVENT_DATE \u003d \" \" + PREFIX_DATE + \"05-07-2024\";","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"Apzure"},"content":"    public static final String EVENT_NAME_DESC_BINGO \u003d \" \" + PREFIX_EVENT_NAME + VALID_EVENT_NAME_BINGO;","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"Apzure"},"content":"    public static final EditEventCommand.EditEventDescriptor EVENT_DESC_BINGO;","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"Apzure"},"content":"    public static final EditEventCommand.EditEventDescriptor EVENT_DESC_HIKING;","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"Apzure"},"content":"        EVENT_DESC_BINGO \u003d new EditEventDescriptorBuilder().withName(VALID_EVENT_NAME_BINGO).build();","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"Apzure"},"content":"        EVENT_DESC_HIKING \u003d new EditEventDescriptorBuilder().withName(VALID_EVENT_NAME_HIKING).build();","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Apzure":14,"-":127,"taeewonnn":1,"myang2020":5}},{"path":"src/test/java/seedu/address/logic/commands/DeleteEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"taeewonnn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"taeewonnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"taeewonnn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"taeewonnn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"taeewonnn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"taeewonnn"},"content":"import static seedu.address.testutil.TypicalEvents.getBingoEvent;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"taeewonnn"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"taeewonnn"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"taeewonnn"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_EVENT;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"taeewonnn"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"taeewonnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"taeewonnn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.export.PersonDataExporter;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"taeewonnn"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"taeewonnn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"taeewonnn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"taeewonnn"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"taeewonnn"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"taeewonnn"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"taeewonnn"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"taeewonnn"},"content":" * {@code DeleteEventCommand}.","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"taeewonnn"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"taeewonnn"},"content":"public class DeleteEventCommandTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"ChocoRagdoll"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(),","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"ChocoRagdoll"},"content":"            getTypicalEventBook(), new PersonDataExporter());","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"taeewonnn"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"taeewonnn"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"taeewonnn"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredEventList().size() + 1);","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"taeewonnn"},"content":"        DeleteEventCommand deleteEventCommand \u003d new DeleteEventCommand(outOfBoundIndex);","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"taeewonnn"},"content":"        assertCommandFailure(deleteEventCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"taeewonnn"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"taeewonnn"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"taeewonnn"},"content":"    public void execute_deleteEvent_success() throws CommandException {","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"taeewonnn"},"content":"        ModelManager model \u003d new ModelManager();","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"taeewonnn"},"content":"        model.setEventBook(getTypicalEventBook());","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"taeewonnn"},"content":"        DeleteEventCommand deleteEventCommand \u003d new DeleteEventCommand(Index.fromZeroBased(0));","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"taeewonnn"},"content":"        CommandResult commandResult \u003d deleteEventCommand.execute(model);","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"taeewonnn"},"content":"        assertEquals(String.format(DeleteEventCommand.MESSAGE_DELETE_EVENT_SUCCESS,","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"taeewonnn"},"content":"                Messages.format(getBingoEvent())),","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"taeewonnn"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"taeewonnn"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"taeewonnn"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"taeewonnn"},"content":"    public void equals() {","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"taeewonnn"},"content":"        DeleteEventCommand deleteFirstEventCommand \u003d new DeleteEventCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"taeewonnn"},"content":"        DeleteEventCommand deleteSecondEventCommand \u003d new DeleteEventCommand(INDEX_SECOND_EVENT);","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"taeewonnn"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"taeewonnn"},"content":"        assertTrue(deleteFirstEventCommand.equals(deleteFirstEventCommand));","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"taeewonnn"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"taeewonnn"},"content":"        DeleteEventCommand deleteFirstEventCommandCopy \u003d new DeleteEventCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"taeewonnn"},"content":"        assertTrue(deleteFirstEventCommand.equals(deleteFirstEventCommandCopy));","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"taeewonnn"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"taeewonnn"},"content":"        assertFalse(deleteFirstEventCommand.equals(1));","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"taeewonnn"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"taeewonnn"},"content":"        assertFalse(deleteFirstEventCommand.equals(null));","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"taeewonnn"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"taeewonnn"},"content":"        assertFalse(deleteFirstEventCommand.equals(deleteSecondEventCommand));","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"taeewonnn"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"taeewonnn"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"taeewonnn"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"taeewonnn"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"taeewonnn"},"content":"        DeleteEventCommand deleteEventCommand \u003d new DeleteEventCommand(targetIndex);","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"taeewonnn"},"content":"        String expected \u003d DeleteEventCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"taeewonnn"},"content":"        assertEquals(expected, deleteEventCommand.toString());","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"taeewonnn"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"taeewonnn"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"taeewonnn"},"content":"     * Updates {@code model}\u0027s filtered list to show no event.","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"taeewonnn"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"taeewonnn"},"content":"    private void showNoEvent(Model model) {","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"taeewonnn"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"taeewonnn"},"content":"        assertTrue(model.getFilteredEventList().isEmpty());","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"taeewonnn"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"taeewonnn"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"ChocoRagdoll":3,"taeewonnn":86}},{"path":"src/test/java/seedu/address/logic/commands/DeletePersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ChocoRagdoll"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"ChocoRagdoll"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"ChocoRagdoll"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"ChocoRagdoll"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"ChocoRagdoll"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"ChocoRagdoll"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"ChocoRagdoll"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"ChocoRagdoll"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"ChocoRagdoll"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"ChocoRagdoll"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"ChocoRagdoll"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"ChocoRagdoll"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"ChocoRagdoll"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.export.PersonDataExporter;","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"ChocoRagdoll"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"ChocoRagdoll"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"ChocoRagdoll"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"ChocoRagdoll"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"ChocoRagdoll"},"content":"public class DeletePersonCommandTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"ChocoRagdoll"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(),","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"ChocoRagdoll"},"content":"            getTypicalEventBook(), new PersonDataExporter());","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"ChocoRagdoll"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"ChocoRagdoll"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"ChocoRagdoll"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeletePersonCommand(null));","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"ChocoRagdoll"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"ChocoRagdoll"},"content":"    public void execute_nullModel_throwsNullPointerException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"ChocoRagdoll"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"ChocoRagdoll"},"content":"                new DeletePersonCommand(Index.fromZeroBased(0)).execute(null));","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"ChocoRagdoll"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"ChocoRagdoll"},"content":"    public void deleteFromGlobal_nullModel_throwsNullPointerException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"ChocoRagdoll"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"ChocoRagdoll"},"content":"                new DeletePersonCommand(Index.fromZeroBased(0)).deleteFromGlobal(null));","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"ChocoRagdoll"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"ChocoRagdoll"},"content":"    public void deleteFromGlobal_validIndexUnfilteredList_success() {","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"ChocoRagdoll"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"ChocoRagdoll"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"ChocoRagdoll"},"content":"        String expectedMessage \u003d String.format(DeletePersonCommand.MESSAGE_DELETE_PERSON_GLOBAL_SUCCESS,","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"ChocoRagdoll"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"ChocoRagdoll"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(),","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"ChocoRagdoll"},"content":"                model.getEventBook(), new PersonDataExporter());","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"ChocoRagdoll"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"ChocoRagdoll"},"content":"        assertCommandSuccess(deletePersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"ChocoRagdoll"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"ChocoRagdoll"},"content":"    public void deleteFromGlobal_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"ChocoRagdoll"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"ChocoRagdoll"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(outOfBoundIndex);","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"ChocoRagdoll"},"content":"        assertCommandFailure(deletePersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"ChocoRagdoll"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"ChocoRagdoll"},"content":"    public void deleteFromGlobal_validIndexFilteredList_success() {","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"ChocoRagdoll"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"ChocoRagdoll"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"ChocoRagdoll"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"ChocoRagdoll"},"content":"        String expectedMessage \u003d String.format(DeletePersonCommand.MESSAGE_DELETE_PERSON_GLOBAL_SUCCESS,","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"ChocoRagdoll"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"ChocoRagdoll"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(),","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"ChocoRagdoll"},"content":"                model.getEventBook(), new PersonDataExporter());","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"ChocoRagdoll"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"ChocoRagdoll"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"ChocoRagdoll"},"content":"        assertCommandSuccess(deletePersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"ChocoRagdoll"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"ChocoRagdoll"},"content":"    public void deleteFromGlobal_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"ChocoRagdoll"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"ChocoRagdoll"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"ChocoRagdoll"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"ChocoRagdoll"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"ChocoRagdoll"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(outOfBoundIndex);","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"ChocoRagdoll"},"content":"        assertCommandFailure(deletePersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"ChocoRagdoll"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"ChocoRagdoll"},"content":"    public void deleteFromEvent_nullModel_throwsNullPointerException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"ChocoRagdoll"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"ChocoRagdoll"},"content":"                new DeletePersonCommand(Index.fromZeroBased(0)).deleteFromEvent(null));","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"ChocoRagdoll"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"ChocoRagdoll"},"content":"    public void deleteFromEvent_validIndex_success() throws Exception {","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"ChocoRagdoll"},"content":"        ModelManager model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(),","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"ChocoRagdoll"},"content":"                getTypicalEventBook(), new PersonDataExporter());","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"ChocoRagdoll"},"content":"        model.setEventBook(getTypicalEventBook());","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"ChocoRagdoll"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(Index.fromZeroBased(0));","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"ChocoRagdoll"},"content":"        Event event \u003d model.getEventBook().getEventList().get(0);","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"ChocoRagdoll"},"content":"        Person personToDelete \u003d getTypicalAddressBook().getPersonList().get(0);","lastModifiedDate":"2024-03-20"},{"lineNumber":122,"author":{"gitId":"ChocoRagdoll"},"content":"        // Select an event first","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"ChocoRagdoll"},"content":"        model.selectEvent(event);","lastModifiedDate":"2024-03-20"},{"lineNumber":124,"author":{"gitId":"ChocoRagdoll"},"content":"        // Add person","lastModifiedDate":"2024-03-20"},{"lineNumber":125,"author":{"gitId":"ChocoRagdoll"},"content":"        event.addPerson(personToDelete);","lastModifiedDate":"2024-03-20"},{"lineNumber":126,"author":{"gitId":"ChocoRagdoll"},"content":"        model.selectEvent(event);","lastModifiedDate":"2024-03-20"},{"lineNumber":127,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":128,"author":{"gitId":"ChocoRagdoll"},"content":"        deletePersonCommand.execute(model);","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":130,"author":{"gitId":"ChocoRagdoll"},"content":"        assertFalse(model.isPersonInSelectedEvent(personToDelete));","lastModifiedDate":"2024-03-20"},{"lineNumber":131,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":132,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"ChocoRagdoll"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":134,"author":{"gitId":"ChocoRagdoll"},"content":"    public void deleteFromEvent_validIndexFilteredList_success() throws Exception {","lastModifiedDate":"2024-03-20"},{"lineNumber":135,"author":{"gitId":"ChocoRagdoll"},"content":"        ModelManager model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(),","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"ChocoRagdoll"},"content":"                getTypicalEventBook(), new PersonDataExporter());","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"ChocoRagdoll"},"content":"        model.setEventBook(getTypicalEventBook());","lastModifiedDate":"2024-03-20"},{"lineNumber":138,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":139,"author":{"gitId":"ChocoRagdoll"},"content":"        Event event \u003d model.getEventBook().getEventList().get(0);","lastModifiedDate":"2024-03-20"},{"lineNumber":140,"author":{"gitId":"ChocoRagdoll"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-20"},{"lineNumber":141,"author":{"gitId":"ChocoRagdoll"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-20"},{"lineNumber":142,"author":{"gitId":"ChocoRagdoll"},"content":"        // Select an event first","lastModifiedDate":"2024-03-20"},{"lineNumber":143,"author":{"gitId":"ChocoRagdoll"},"content":"        model.selectEvent(event);","lastModifiedDate":"2024-03-20"},{"lineNumber":144,"author":{"gitId":"ChocoRagdoll"},"content":"        // Add person","lastModifiedDate":"2024-03-20"},{"lineNumber":145,"author":{"gitId":"ChocoRagdoll"},"content":"        event.addPerson(personToDelete);","lastModifiedDate":"2024-03-20"},{"lineNumber":146,"author":{"gitId":"ChocoRagdoll"},"content":"        model.selectEvent(event);","lastModifiedDate":"2024-03-20"},{"lineNumber":147,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":148,"author":{"gitId":"ChocoRagdoll"},"content":"        deletePersonCommand.execute(model);","lastModifiedDate":"2024-03-20"},{"lineNumber":149,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":150,"author":{"gitId":"ChocoRagdoll"},"content":"        assertFalse(model.isPersonInSelectedEvent(personToDelete));","lastModifiedDate":"2024-03-20"},{"lineNumber":151,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":152,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":153,"author":{"gitId":"ChocoRagdoll"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":154,"author":{"gitId":"ChocoRagdoll"},"content":"    public void deleteFromEvent_invalidIndex_throwsCommandException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":155,"author":{"gitId":"ChocoRagdoll"},"content":"        ModelManager model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(),","lastModifiedDate":"2024-04-02"},{"lineNumber":156,"author":{"gitId":"ChocoRagdoll"},"content":"                getTypicalEventBook(), new PersonDataExporter());","lastModifiedDate":"2024-04-02"},{"lineNumber":157,"author":{"gitId":"ChocoRagdoll"},"content":"        model.setEventBook(getTypicalEventBook());","lastModifiedDate":"2024-03-20"},{"lineNumber":158,"author":{"gitId":"ChocoRagdoll"},"content":"        Event event \u003d model.getEventBook().getEventList().get(0);","lastModifiedDate":"2024-03-20"},{"lineNumber":159,"author":{"gitId":"ChocoRagdoll"},"content":"        model.selectEvent(event);","lastModifiedDate":"2024-03-20"},{"lineNumber":160,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":161,"author":{"gitId":"ChocoRagdoll"},"content":"        assertThrows(CommandException.class, () -\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":162,"author":{"gitId":"ChocoRagdoll"},"content":"                new DeletePersonCommand(Index.fromZeroBased(100)).execute(model));","lastModifiedDate":"2024-03-20"},{"lineNumber":163,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":164,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":165,"author":{"gitId":"ChocoRagdoll"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":166,"author":{"gitId":"ChocoRagdoll"},"content":"    public void deleteFromEvent_noEventSelected_throwsCommandException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":167,"author":{"gitId":"ChocoRagdoll"},"content":"        ModelManager model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(),","lastModifiedDate":"2024-04-02"},{"lineNumber":168,"author":{"gitId":"ChocoRagdoll"},"content":"                getTypicalEventBook(), new PersonDataExporter());","lastModifiedDate":"2024-04-02"},{"lineNumber":169,"author":{"gitId":"ChocoRagdoll"},"content":"        model.setEventBook(getTypicalEventBook());","lastModifiedDate":"2024-03-20"},{"lineNumber":170,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":171,"author":{"gitId":"ChocoRagdoll"},"content":"        assertThrows(CommandException.class, () -\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":172,"author":{"gitId":"ChocoRagdoll"},"content":"                new DeletePersonCommand(Index.fromZeroBased(100)).deleteFromEvent(model));","lastModifiedDate":"2024-03-20"},{"lineNumber":173,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":174,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":175,"author":{"gitId":"ChocoRagdoll"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":176,"author":{"gitId":"ChocoRagdoll"},"content":"    public void equals() {","lastModifiedDate":"2024-03-20"},{"lineNumber":177,"author":{"gitId":"ChocoRagdoll"},"content":"        DeletePersonCommand deleteFirstPersonCommand \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-20"},{"lineNumber":178,"author":{"gitId":"ChocoRagdoll"},"content":"        DeletePersonCommand deleteSecondPersonCommand \u003d new DeletePersonCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2024-03-20"},{"lineNumber":179,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":180,"author":{"gitId":"ChocoRagdoll"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-20"},{"lineNumber":181,"author":{"gitId":"ChocoRagdoll"},"content":"        assertTrue(deleteFirstPersonCommand.equals(deleteFirstPersonCommand));","lastModifiedDate":"2024-03-20"},{"lineNumber":182,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":183,"author":{"gitId":"ChocoRagdoll"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-20"},{"lineNumber":184,"author":{"gitId":"ChocoRagdoll"},"content":"        DeletePersonCommand deleteFirstPersonCommandCopy \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-20"},{"lineNumber":185,"author":{"gitId":"ChocoRagdoll"},"content":"        assertTrue(deleteFirstPersonCommandCopy.equals(deleteFirstPersonCommandCopy));","lastModifiedDate":"2024-03-20"},{"lineNumber":186,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":187,"author":{"gitId":"ChocoRagdoll"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":188,"author":{"gitId":"ChocoRagdoll"},"content":"        assertFalse(deleteFirstPersonCommand.equals(1));","lastModifiedDate":"2024-03-20"},{"lineNumber":189,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":190,"author":{"gitId":"ChocoRagdoll"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":191,"author":{"gitId":"ChocoRagdoll"},"content":"        assertFalse(deleteFirstPersonCommand.equals(null));","lastModifiedDate":"2024-03-20"},{"lineNumber":192,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":193,"author":{"gitId":"ChocoRagdoll"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":194,"author":{"gitId":"ChocoRagdoll"},"content":"        assertFalse(deleteFirstPersonCommand.equals(deleteSecondPersonCommand));","lastModifiedDate":"2024-03-20"},{"lineNumber":195,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":196,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":197,"author":{"gitId":"ChocoRagdoll"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":198,"author":{"gitId":"ChocoRagdoll"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-20"},{"lineNumber":199,"author":{"gitId":"ChocoRagdoll"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-20"},{"lineNumber":200,"author":{"gitId":"ChocoRagdoll"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(targetIndex);","lastModifiedDate":"2024-03-20"},{"lineNumber":201,"author":{"gitId":"ChocoRagdoll"},"content":"        String expected \u003d DeletePersonCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2024-03-20"},{"lineNumber":202,"author":{"gitId":"ChocoRagdoll"},"content":"        assertEquals(expected, deletePersonCommand.toString());","lastModifiedDate":"2024-03-20"},{"lineNumber":203,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":204,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":205,"author":{"gitId":"ChocoRagdoll"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":206,"author":{"gitId":"ChocoRagdoll"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2024-03-20"},{"lineNumber":207,"author":{"gitId":"ChocoRagdoll"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":208,"author":{"gitId":"ChocoRagdoll"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2024-03-20"},{"lineNumber":209,"author":{"gitId":"ChocoRagdoll"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2024-03-20"},{"lineNumber":210,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":211,"author":{"gitId":"ChocoRagdoll"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2024-03-20"},{"lineNumber":212,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":213,"author":{"gitId":"ChocoRagdoll"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"ChocoRagdoll":213}},{"path":"src/test/java/seedu/address/logic/commands/DeselectCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":"import seedu.address.testutil.TypicalEvents;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"myang2020"},"content":"public class DeselectCommandTest {","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"    public void execute_deselect_success() throws CommandException {","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"        ModelManager model \u003d new ModelManager();","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":"        model.setEventBook(TypicalEvents.getTypicalEventBook());","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"        model.selectEvent(TypicalEvents.getBingoEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"        DeselectCommand deselectCommand \u003d new DeselectCommand();","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"        CommandResult commandResult \u003d deselectCommand.execute(model);","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"        assertEquals(DeselectCommand.MESSAGE_DESELECT_EVENT_SUCCESS, commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"        DeselectCommand deselectCommand \u003d new DeselectCommand();","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"        String expected \u003d DeselectCommand.class.getCanonicalName() + \"{}\";","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"        assertEquals(expected, deselectCommand.toString());","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"myang2020"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"myang2020":29}},{"path":"src/test/java/seedu/address/logic/commands/EditDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"public class EditDescriptorTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Apzure":2,"-":69}},{"path":"src/test/java/seedu/address/logic/commands/EditEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EVENT_DESC_BINGO;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EVENT_DESC_HIKING;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"nusliuyifan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"nusliuyifan"},"content":"import static seedu.address.testutil.TypicalEvents.getBingoEvent;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"nusliuyifan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.export.PersonDataExporter;","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.model.EventBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.testutil.EditEventDescriptorBuilder;","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"public class EditEventCommandTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"ChocoRagdoll"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(),","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"ChocoRagdoll"},"content":"            new EventBook(), new PersonDataExporter());","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"nusliuyifan"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"        model.addEvent(getBingoEvent());","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"        Event editedEvent \u003d new EventBuilder().withEventName(\"New Event Name\").build();","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"nusliuyifan"},"content":"        EditEventCommand.EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder()","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"nusliuyifan"},"content":"                .withName(\"New Event Name\").build();","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"        EditEventCommand editCommand \u003d new EditEventCommand(INDEX_FIRST_EVENT, descriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"        String expectedMessage \u003d String.format(EditEventCommand.MESSAGE_EDIT_EVENT_SUCCESS, editedEvent.getEventName());","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"ChocoRagdoll"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(),","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"ChocoRagdoll"},"content":"                new EventBook(), new PersonDataExporter());","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"        expectedModel.addEvent(editedEvent);","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"    public void equals() {","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"        final EditEventCommand standardCommand \u003d new EditEventCommand(INDEX_FIRST_PERSON, EVENT_DESC_BINGO);","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"        EditEventCommand.EditEventDescriptor copyDescriptor \u003d new EditEventCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"Apzure"},"content":"                .EditEventDescriptor(EVENT_DESC_BINGO);","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"Apzure"},"content":"        EditEventCommand commandWithSameValues \u003d new EditEventCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"Apzure"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"Apzure"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"Apzure"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"Apzure"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"Apzure"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"Apzure"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"Apzure"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"Apzure"},"content":"        assertFalse(standardCommand.equals(new EditEventCommand(INDEX_SECOND_PERSON, EVENT_DESC_BINGO)));","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"Apzure"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"Apzure"},"content":"        assertFalse(standardCommand.equals(new EditEventCommand(INDEX_FIRST_PERSON, EVENT_DESC_HIKING)));","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"Apzure"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"Apzure"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"Apzure"},"content":"        EditEventCommand.EditEventDescriptor editEventDescriptor \u003d new EditEventCommand.EditEventDescriptor();","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"Apzure"},"content":"        EditEventCommand editCommand \u003d new EditEventCommand(index, editEventDescriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"Apzure"},"content":"        String expected \u003d EditEventCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editEventDescriptor\u003d\"","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"Apzure"},"content":"                + editEventDescriptor + \"}\";","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"Apzure"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"Apzure":70,"nusliuyifan":11,"ChocoRagdoll":5}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"import static seedu.address.testutil.TypicalEvents.getBingoEvent;","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"nusliuyifan"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":23,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.export.PersonDataExporter;","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.model.EventBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"public class EditPersonCommandTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":41,"author":{"gitId":"ChocoRagdoll"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(),","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"ChocoRagdoll"},"content":"            getTypicalEventBook(), new PersonDataExporter());","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"        EditPersonCommand editCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"                Messages.format(editedPerson));","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"nusliuyifan"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"ChocoRagdoll"},"content":"                new UserPrefs(), new EventBook(model.getEventBook()), new PersonDataExporter());","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"Apzure"},"content":"        EditPersonCommand editCommand \u003d new EditPersonCommand(indexLastPerson, descriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"Apzure"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"Apzure"},"content":"                Messages.format(editedPerson));","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"nusliuyifan"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"ChocoRagdoll"},"content":"                new UserPrefs(), new EventBook(model.getEventBook()), new PersonDataExporter());","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"Apzure"},"content":"        EditPersonCommand editCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"Apzure"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"Apzure"},"content":"                Messages.format(editedPerson));","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"nusliuyifan"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"ChocoRagdoll"},"content":"                new UserPrefs(), new EventBook(model.getEventBook()), new PersonDataExporter());","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"Apzure"},"content":"        EditPersonCommand editCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"Apzure"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2024-03-27"},{"lineNumber":107,"author":{"gitId":"Apzure"},"content":"                Messages.format(editedPerson));","lastModifiedDate":"2024-03-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"nusliuyifan"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"ChocoRagdoll"},"content":"                new UserPrefs(), new EventBook(model.getEventBook()), new PersonDataExporter());","lastModifiedDate":"2024-04-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":117,"author":{"gitId":"Apzure"},"content":"    public void execute_editInBothGlobalListAndPersonListForEvent_success() {","lastModifiedDate":"2024-03-26"},{"lineNumber":118,"author":{"gitId":"Apzure"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2024-03-26"},{"lineNumber":119,"author":{"gitId":"Apzure"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2024-03-26"},{"lineNumber":120,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":121,"author":{"gitId":"Apzure"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2024-03-26"},{"lineNumber":122,"author":{"gitId":"Apzure"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-26"},{"lineNumber":123,"author":{"gitId":"Apzure"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":124,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":125,"author":{"gitId":"nusliuyifan"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2024-03-29"},{"lineNumber":126,"author":{"gitId":"ChocoRagdoll"},"content":"                new UserPrefs(), new EventBook(), new PersonDataExporter());","lastModifiedDate":"2024-04-02"},{"lineNumber":127,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":128,"author":{"gitId":"Apzure"},"content":"        Event bingo \u003d getBingoEvent();","lastModifiedDate":"2024-03-26"},{"lineNumber":129,"author":{"gitId":"Apzure"},"content":"        expectedModel.addEvent(bingo);","lastModifiedDate":"2024-03-26"},{"lineNumber":130,"author":{"gitId":"Apzure"},"content":"        expectedModel.selectEvent(bingo);","lastModifiedDate":"2024-03-26"},{"lineNumber":131,"author":{"gitId":"Apzure"},"content":"        expectedModel.addPersonToSelectedEvent(lastPerson);","lastModifiedDate":"2024-03-26"},{"lineNumber":132,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":133,"author":{"gitId":"Apzure"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2024-03-26"},{"lineNumber":134,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":135,"author":{"gitId":"Apzure"},"content":"        Person personOfEventList \u003d expectedModel.getFilteredEventList().get(0).getPersonList().get(0);","lastModifiedDate":"2024-03-26"},{"lineNumber":136,"author":{"gitId":"Apzure"},"content":"        assertEquals(personOfEventList, editedPerson);","lastModifiedDate":"2024-03-26"},{"lineNumber":137,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":138,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":139,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"Apzure"},"content":"        EditPersonCommand editCommand \u003d new EditPersonCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"Apzure"},"content":"        assertCommandFailure(editCommand, model, EditPersonCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":155,"author":{"gitId":"Apzure"},"content":"        EditPersonCommand editCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":158,"author":{"gitId":"Apzure"},"content":"        assertCommandFailure(editCommand, model, EditPersonCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"Apzure"},"content":"        EditPersonCommand editCommand \u003d new EditPersonCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":181,"author":{"gitId":"Apzure"},"content":"        EditPersonCommand editCommand \u003d new EditPersonCommand(outOfBoundIndex,","lastModifiedDate":"2024-03-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":189,"author":{"gitId":"Apzure"},"content":"        final EditPersonCommand standardCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2024-03-27"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":193,"author":{"gitId":"Apzure"},"content":"        EditPersonCommand commandWithSameValues \u003d new EditPersonCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":206,"author":{"gitId":"Apzure"},"content":"        assertFalse(standardCommand.equals(new EditPersonCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2024-03-27"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":209,"author":{"gitId":"Apzure"},"content":"        assertFalse(standardCommand.equals(new EditPersonCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2024-03-27"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":216,"author":{"gitId":"Apzure"},"content":"        EditPersonCommand editCommand \u003d new EditPersonCommand(index, editPersonDescriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":217,"author":{"gitId":"Apzure"},"content":"        String expected \u003d EditPersonCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2024-03-27"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"Apzure":50,"nusliuyifan":7,"ChocoRagdoll":8,"-":157}},{"path":"src/test/java/seedu/address/logic/commands/ExportCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ChocoRagdoll"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"ChocoRagdoll"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"ChocoRagdoll"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"ChocoRagdoll"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"ChocoRagdoll"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"ChocoRagdoll"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"ChocoRagdoll"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"ChocoRagdoll"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"ChocoRagdoll"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.export.MockPersonDataExporter;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.export.PersonDataExporter;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.model.EventBook;","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"ChocoRagdoll"},"content":"public class ExportCommandTest {","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"ChocoRagdoll"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"ChocoRagdoll"},"content":"    public void equals() {","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"ChocoRagdoll"},"content":"        ExportCommand exportAllCommand \u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"ChocoRagdoll"},"content":"                new ExportCommand(true, true, true, true);","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"ChocoRagdoll"},"content":"        assertEquals(exportAllCommand, exportAllCommand);","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"ChocoRagdoll"},"content":"        ExportCommand exportAllCommandCopy \u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"ChocoRagdoll"},"content":"                new ExportCommand(true, true, true, true);","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"ChocoRagdoll"},"content":"        assertEquals(exportAllCommand, exportAllCommandCopy);","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"ChocoRagdoll"},"content":"        assertNotNull(exportAllCommand);","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"ChocoRagdoll"},"content":"        ExportCommand exportNameAndEmailCommand \u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"ChocoRagdoll"},"content":"                new ExportCommand(true, false, true, false);","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"ChocoRagdoll"},"content":"        assertNotEquals(exportAllCommand, exportNameAndEmailCommand);","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"ChocoRagdoll"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"ChocoRagdoll"},"content":"    public void execute_export_success() {","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"ChocoRagdoll"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(),","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"ChocoRagdoll"},"content":"                getTypicalEventBook(), new PersonDataExporter());","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"ChocoRagdoll"},"content":"        ExportCommand exportCommand \u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"ChocoRagdoll"},"content":"                new ExportCommand(true, false, false, false);","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"ChocoRagdoll"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(ExportCommand.MESSAGE_EXPORT_SUCCESS);","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"ChocoRagdoll"},"content":"        assertCommandSuccess(exportCommand, model, expectedCommandResult, model);","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"ChocoRagdoll"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"ChocoRagdoll"},"content":"    public void execute_nullModel_failure() {","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"ChocoRagdoll"},"content":"        ExportCommand exportCommand \u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"ChocoRagdoll"},"content":"                new ExportCommand(true, true, true, true);","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"ChocoRagdoll"},"content":"        assertThrows(NullPointerException.class, () -\u003e exportCommand.execute(null));","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"ChocoRagdoll"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"ChocoRagdoll"},"content":"    public void execute_exportFailure_throwsCommandException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"ChocoRagdoll"},"content":"        MockPersonDataExporter mockExporter \u003d new MockPersonDataExporter();","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"ChocoRagdoll"},"content":"        mockExporter.setThrowIoException(true);","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"ChocoRagdoll"},"content":"        ModelManager model \u003d new ModelManager(new AddressBook(), new UserPrefs(), new EventBook(), mockExporter);","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"ChocoRagdoll"},"content":"        // Create the export command with any combination of flags","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"ChocoRagdoll"},"content":"        ExportCommand exportCommand \u003d new ExportCommand(true, true, true, true);","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"ChocoRagdoll"},"content":"        // Assert that executing the export command with a failing exporter throws a CommandException","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"ChocoRagdoll"},"content":"        assertThrows(CommandException.class, () -\u003e exportCommand.execute(model),","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"ChocoRagdoll"},"content":"                \"Expected execute to throw CommandException, but it didn\u0027t.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"ChocoRagdoll"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"ChocoRagdoll":74}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"nusliuyifan"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.export.PersonDataExporter;","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.person.NameAndTagCombinedPredicate;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"taeewonnn"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"ChocoRagdoll"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(),","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"ChocoRagdoll"},"content":"            getTypicalEventBook(), new PersonDataExporter());","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"ChocoRagdoll"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(),","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"ChocoRagdoll"},"content":"            getTypicalEventBook(), new PersonDataExporter());","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"        NameAndTagCombinedPredicate firstPredicate \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"                new NameAndTagCombinedPredicate(Collections.singletonList(\"first\"),","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"                        Collections.singleton(new Tag(\"tag1\")));","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"        NameAndTagCombinedPredicate secondPredicate \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"                new NameAndTagCombinedPredicate(Collections.singletonList(\"second\"),","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"                        Collections.singleton(new Tag(\"tag2\")));","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"Apzure"},"content":"        NameAndTagCombinedPredicate predicate \u003d new NameAndTagCombinedPredicate(Collections.emptyList(),","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"Apzure"},"content":"                Collections.emptySet());","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"Apzure"},"content":"        NameAndTagCombinedPredicate predicate \u003d new NameAndTagCombinedPredicate(","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"Apzure"},"content":"                Collections.singletonList(\"keyword\"), Collections.singleton(new Tag(\"tag\")));","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Apzure":11,"nusliuyifan":1,"ChocoRagdoll":5,"-":62,"taeewonnn":1}},{"path":"src/test/java/seedu/address/logic/commands/InviteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.export.PersonDataExporter;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"public class InviteCommandTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"        assertThrows(NullPointerException.class, () -\u003e new InviteCommand(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"myang2020"},"content":"    public void execute_nullModel_throwsNullPointerException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"myang2020"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"myang2020"},"content":"                new InviteCommand(Index.fromZeroBased(0)).execute(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"myang2020"},"content":"    public void eventIndex_outOfRange_throwsCommandException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"ChocoRagdoll"},"content":"        ModelManager model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(),","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"ChocoRagdoll"},"content":"                getTypicalEventBook(), new PersonDataExporter());","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"myang2020"},"content":"        model.setEventBook(getTypicalEventBook());","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"myang2020"},"content":"        assertThrows(CommandException.class, () -\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"myang2020"},"content":"                new InviteCommand(Index.fromZeroBased(100)).execute(model));","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"myang2020"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"ChocoRagdoll"},"content":"        ModelManager model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(),","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"ChocoRagdoll"},"content":"                getTypicalEventBook(), new PersonDataExporter());","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"myang2020"},"content":"        model.setEventBook(getTypicalEventBook());","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"myang2020"},"content":"        InviteCommand inviteCommand \u003d new InviteCommand(Index.fromZeroBased(0));","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"myang2020"},"content":"        // Select an event first","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"myang2020"},"content":"        Event event \u003d model.getEventBook().getEventList().get(0);","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"myang2020"},"content":"        model.selectEvent(event);","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"myang2020"},"content":"        // Add person","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"myang2020"},"content":"        event.addPerson(getTypicalAddressBook().getPersonList().get(0));","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"myang2020"},"content":"        model.selectEvent(event);","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"myang2020"},"content":"        assertThrows(CommandException.class, InviteCommand.MESSAGE_DUPLICATE_PERSON, ()","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"myang2020"},"content":"                -\u003e inviteCommand.execute(model));","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"ChocoRagdoll"},"content":"    public void execute_eventNotSelected_throwsCommandException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"ChocoRagdoll"},"content":"        ModelManager model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(),","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"ChocoRagdoll"},"content":"                getTypicalEventBook(), new PersonDataExporter());","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"myang2020"},"content":"        model.setEventBook(getTypicalEventBook());","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"myang2020"},"content":"        InviteCommand inviteCommand \u003d new InviteCommand(Index.fromZeroBased(0));","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"myang2020"},"content":"        assertThrows(CommandException.class, Messages.MESSAGE_SELECT_EVENT, () -\u003e inviteCommand.execute(model));","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"myang2020"},"content":"    public void execute_selectEventAndInvitePerson_successful() throws CommandException {","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"ChocoRagdoll"},"content":"        ModelManager model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(),","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"ChocoRagdoll"},"content":"                getTypicalEventBook(), new PersonDataExporter());","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"myang2020"},"content":"        model.setEventBook(getTypicalEventBook());","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"myang2020"},"content":"        InviteCommand inviteCommand \u003d new InviteCommand(Index.fromZeroBased(0));","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"myang2020"},"content":"        // Select an event first","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"myang2020"},"content":"        model.selectEvent(model.getEventBook().getEventList().get(0));","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"myang2020"},"content":"        // Invite person","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"myang2020"},"content":"        inviteCommand.execute(model);","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"myang2020"},"content":"        // Ensure the person is added to the selected event","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"myang2020"},"content":"        Person personToInvite \u003d TypicalPersons.getTypicalPersons().get(0);","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"myang2020"},"content":"        assertTrue(model.isPersonInSelectedEvent(personToInvite));","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"myang2020"},"content":"    public void equals_sameIndex_returnsTrue() {","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"myang2020"},"content":"        InviteCommand one \u003d new InviteCommand(Index.fromZeroBased(5));","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"myang2020"},"content":"        InviteCommand two \u003d new InviteCommand(Index.fromZeroBased(5));","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"myang2020"},"content":"        assertEquals(one, two);","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"myang2020"},"content":"    public void equals_handles_null() {","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"myang2020"},"content":"        InviteCommand one \u003d new InviteCommand(Index.fromZeroBased(5));","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"myang2020"},"content":"        assertNotEquals(null, one);","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"myang2020"},"content":"    public void equals_sameObject_returnsTrue() {","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"myang2020"},"content":"        InviteCommand one \u003d new InviteCommand(Index.fromZeroBased(5));","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"myang2020"},"content":"        assertEquals(one, one);","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"myang2020"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"myang2020"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"myang2020"},"content":"        InviteCommand inviteCommand \u003d new InviteCommand(targetIndex);","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"myang2020"},"content":"        String expected \u003d InviteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"myang2020"},"content":"        assertEquals(expected, inviteCommand.toString());","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"myang2020"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"ChocoRagdoll":10,"myang2020":107}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"nusliuyifan"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.export.PersonDataExporter;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"ChocoRagdoll"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(),","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"ChocoRagdoll"},"content":"                getTypicalEventBook(), new PersonDataExporter());","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"ChocoRagdoll"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(),","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"ChocoRagdoll"},"content":"                getTypicalEventBook(), new PersonDataExporter());","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS_GLOBAL, expectedModel);","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS_GLOBAL, expectedModel);","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Apzure":2,"nusliuyifan":1,"ChocoRagdoll":5,"-":35}},{"path":"src/test/java/seedu/address/logic/commands/SelectCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"myang2020"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"myang2020"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"public class SelectCommandTest {","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"        assertThrows(NullPointerException.class, () -\u003e new SelectCommand(null));","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"    public void execute_nullModel_throwsNullPointerException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"                new SelectCommand(Index.fromZeroBased(0)).execute(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"myang2020"},"content":"    public void eventIndex_outOfRange_throwsCommandException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"myang2020"},"content":"        ModelManager model \u003d new ModelManager();","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"myang2020"},"content":"        model.setEventBook(getTypicalEventBook());","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"myang2020"},"content":"        assertThrows(CommandException.class, () -\u003e new SelectCommand(Index.fromZeroBased(100)).execute(model));","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"myang2020"},"content":"    public void equals_sameIndex_returnsTrue() {","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"myang2020"},"content":"        SelectCommand one \u003d new SelectCommand(Index.fromZeroBased(5));","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"myang2020"},"content":"        SelectCommand two \u003d new SelectCommand(Index.fromZeroBased(5));","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"myang2020"},"content":"        assertEquals(one, two);","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"myang2020"},"content":"    public void equals_handles_null() {","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"myang2020"},"content":"        SelectCommand one \u003d new SelectCommand(Index.fromZeroBased(5));","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"myang2020"},"content":"        assertNotEquals(null, one);","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"myang2020"},"content":"    public void equals_sameObject_returnsTrue() {","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"myang2020"},"content":"        SelectCommand one \u003d new SelectCommand(Index.fromZeroBased(5));","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"myang2020"},"content":"        assertEquals(one, one);","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"myang2020"},"content":"    public void execute_selectSuccessful() throws CommandException {","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"myang2020"},"content":"        ModelManager model \u003d new ModelManager();","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"myang2020"},"content":"        model.setEventBook(getTypicalEventBook());","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"myang2020"},"content":"        SelectCommand selectCommand \u003d new SelectCommand(Index.fromZeroBased(0));","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"myang2020"},"content":"        CommandResult commandResult \u003d selectCommand.execute(model);","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"myang2020"},"content":"        assertEquals(String.format(SelectCommand.MESSAGE_SELECT_EVENT_SUCCESS,","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"myang2020"},"content":"                        Messages.format(model.getEventBook().getEventList().get(0))),","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"myang2020"},"content":"                            commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"myang2020"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"myang2020"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"myang2020"},"content":"        SelectCommand selectCommand \u003d new SelectCommand(targetIndex);","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"myang2020"},"content":"        String expected \u003d SelectCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"myang2020"},"content":"        assertEquals(expected, selectCommand.toString());","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"myang2020"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"myang2020":74}},{"path":"src/test/java/seedu/address/logic/parser/AddEventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EVENT_NAME_DESC_BINGO;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_DATE;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_NAME_BINGO;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":"import static seedu.address.testutil.TypicalEvents.getBingoEvent;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"public class AddEventCommandParserTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"    private AddEventCommandParser parser \u003d new AddEventCommandParser();","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"        Event expectedEvent \u003d new EventBuilder(getBingoEvent()).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"        assertParseSuccess(parser, EVENT_NAME_DESC_BINGO + VALID_EVENT_DATE, new AddEventCommand(expectedEvent));","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddEventCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"        assertParseFailure(parser, VALID_EVENT_NAME_BINGO, expectedMessage);","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Apzure":30,"myang2020":4}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"taeewonnn"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"taeewonnn"},"content":"import seedu.address.logic.commands.DeleteEventCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"import seedu.address.logic.commands.EditPersonCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.logic.commands.ExportCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"import seedu.address.logic.commands.SelectCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"ChocoRagdoll"},"content":"    public void parseCommand_deleteEvent() throws Exception {","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"taeewonnn"},"content":"        DeleteEventCommand command \u003d (DeleteEventCommand) parser.parseCommand(","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"taeewonnn"},"content":"                DeleteEventCommand.COMMAND_WORD + \" \" + INDEX_FIRST_EVENT.getOneBased());","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"taeewonnn"},"content":"        assertEquals(new DeleteEventCommand(INDEX_FIRST_EVENT), command);","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"        EditPersonCommand command \u003d (EditPersonCommand) parser.parseCommand(EditPersonCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"Apzure"},"content":"        assertEquals(new EditPersonCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"ChocoRagdoll"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"ChocoRagdoll"},"content":"    public void parseCommand_export() throws Exception {","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"ChocoRagdoll"},"content":"        assertTrue(parser.parseCommand(ExportCommand.COMMAND_WORD + \" n/\") instanceof ExportCommand);","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"ChocoRagdoll"},"content":"        assertTrue(parser.parseCommand(ExportCommand.COMMAND_WORD + \"   a/  \") instanceof ExportCommand);","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"ChocoRagdoll"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"ChocoRagdoll"},"content":"    public void parseCommand_deleteParticipant() throws Exception {","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"ChocoRagdoll"},"content":"        assertTrue(parser.parseCommand(DeletePersonCommand.COMMAND_WORD + \" 3\")","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"ChocoRagdoll"},"content":"            instanceof DeletePersonCommand);","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":104,"author":{"gitId":"myang2020"},"content":"    public void parseCommand_select() throws Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":105,"author":{"gitId":"myang2020"},"content":"        SelectCommand selectCommand \u003d (SelectCommand) parser.parseCommand(","lastModifiedDate":"2024-03-16"},{"lineNumber":106,"author":{"gitId":"myang2020"},"content":"                SelectCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2024-03-16"},{"lineNumber":107,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Apzure":4,"ChocoRagdoll":15,"-":78,"taeewonnn":5,"myang2020":6}},{"path":"src/test/java/seedu/address/logic/parser/DeleteEventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"taeewonnn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"taeewonnn"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"taeewonnn"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"taeewonnn"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"taeewonnn"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"taeewonnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"taeewonnn"},"content":"import seedu.address.logic.commands.DeleteEventCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"taeewonnn"},"content":"public class DeleteEventCommandParserTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"taeewonnn"},"content":"    private DeleteEventCommandParser parser \u003d new DeleteEventCommandParser();","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"taeewonnn"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"taeewonnn"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"taeewonnn"},"content":"        assertParseSuccess(parser, \"1\", new DeleteEventCommand(INDEX_FIRST_EVENT));","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"taeewonnn"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"taeewonnn"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"taeewonnn"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"taeewonnn"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"taeewonnn"},"content":"                DeleteEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"taeewonnn"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"taeewonnn"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"taeewonnn":26}},{"path":"src/test/java/seedu/address/logic/parser/DeletePersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ChocoRagdoll"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"ChocoRagdoll"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"ChocoRagdoll"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"ChocoRagdoll"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"ChocoRagdoll"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"ChocoRagdoll"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"ChocoRagdoll"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"ChocoRagdoll"},"content":" * Tests the DeletePersonCommandParser class.","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"ChocoRagdoll"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"ChocoRagdoll"},"content":"public class DeletePersonCommandParserTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"ChocoRagdoll"},"content":"    private DeletePersonCommandParser parser \u003d new DeletePersonCommandParser();","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"ChocoRagdoll"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"ChocoRagdoll"},"content":"    public void parse_validArgs_returnsDeletePersonCommand() {","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"ChocoRagdoll"},"content":"        assertParseSuccess(parser, \"1\", new DeletePersonCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"ChocoRagdoll"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"ChocoRagdoll"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"ChocoRagdoll"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"ChocoRagdoll"},"content":"                DeletePersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"ChocoRagdoll"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"ChocoRagdoll":29}},{"path":"src/test/java/seedu/address/logic/parser/EditEventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EVENT_NAME_DESC_BINGO;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_DATE;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_NAME_BINGO;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_EVENT;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"import seedu.address.logic.commands.EditEventCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"import seedu.address.testutil.EditEventDescriptorBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"public class EditEventCommandParserTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditEventCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"    private EditEventCommandParser parser \u003d new EditEventCommandParser();","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"        // no index specified","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"        assertParseFailure(parser, VALID_EVENT_NAME_BINGO, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"        // no field specified","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"        assertParseFailure(parser, \"1\", EditEventCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"        // no index and no field specified","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"        // negative index","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"        assertParseFailure(parser, \"-5\" + VALID_EVENT_NAME_BINGO, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"        // zero index","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"        assertParseFailure(parser, \"0\" + VALID_EVENT_NAME_BINGO, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"        Index targetIndex \u003d INDEX_SECOND_EVENT;","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"Apzure"},"content":"        String userInput \u003d targetIndex.getOneBased() + EVENT_NAME_DESC_BINGO;","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"        EditEventCommand.EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder()","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"Apzure"},"content":"                .withName(VALID_EVENT_NAME_BINGO).build();","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"Apzure"},"content":"        EditEventCommand expectedCommand \u003d new EditEventCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"Apzure"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"myang2020"},"content":"    public void parse_withDate_success() {","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"myang2020"},"content":"        Index targetIndex \u003d INDEX_SECOND_EVENT;","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"myang2020"},"content":"        String userInput \u003d targetIndex.getOneBased() + VALID_EVENT_DATE;","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"myang2020"},"content":"        EditEventCommand.EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder()","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"myang2020"},"content":"                .withDate(VALID_DATE).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"myang2020"},"content":"        EditEventCommand expectedCommand \u003d new EditEventCommand(targetIndex, descriptor);","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"myang2020"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"Apzure":64,"myang2020":15}},{"path":"src/test/java/seedu/address/logic/parser/EditPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"import seedu.address.logic.commands.EditPersonCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"public class EditPersonCommandParserTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditPersonCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"    private EditPersonCommandParser parser \u003d new EditPersonCommandParser();","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"Apzure"},"content":"        assertParseFailure(parser, \"1\", EditPersonCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"Apzure"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"Apzure"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"Apzure"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"Apzure"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"Apzure"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"Apzure"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"Apzure"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-07-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"Apzure"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"Apzure":14,"-":194}},{"path":"src/test/java/seedu/address/logic/parser/ExportCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ChocoRagdoll"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"ChocoRagdoll"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_EXPORT_FORMAT;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"ChocoRagdoll"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"ChocoRagdoll"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"ChocoRagdoll"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"ChocoRagdoll"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"ChocoRagdoll"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"ChocoRagdoll"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"ChocoRagdoll"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.logic.commands.ExportCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"ChocoRagdoll"},"content":"public class ExportCommandParserTest {","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"ChocoRagdoll"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"ChocoRagdoll"},"content":"    public void parse_validArgs_success() {","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"ChocoRagdoll"},"content":"        ExportCommand expectedExportAllCommand \u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"ChocoRagdoll"},"content":"                new ExportCommand(true, true, true, true);","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"ChocoRagdoll"},"content":"        String userInputAll \u003d \" \" + PREFIX_NAME + \" \" + PREFIX_PHONE + \" \"","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"ChocoRagdoll"},"content":"                + PREFIX_EMAIL + \" \" + PREFIX_ADDRESS;","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"ChocoRagdoll"},"content":"        assertParseSuccess(new ExportCommandParser(), userInputAll, expectedExportAllCommand);","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"ChocoRagdoll"},"content":"        ExportCommand expectedExportNameEmailCommand \u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"ChocoRagdoll"},"content":"                new ExportCommand(true, false, true, false);","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"ChocoRagdoll"},"content":"        String userInputNameEmail \u003d \" \" + PREFIX_NAME + \" \" + PREFIX_EMAIL;","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"ChocoRagdoll"},"content":"        assertParseSuccess(new ExportCommandParser(), userInputNameEmail, expectedExportNameEmailCommand);","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"ChocoRagdoll"},"content":"        ExportCommand expectedExportAddressCommand \u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"ChocoRagdoll"},"content":"                new ExportCommand(false, false, false, true);","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"ChocoRagdoll"},"content":"        String userInputAddress \u003d \" \" + PREFIX_ADDRESS;","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"ChocoRagdoll"},"content":"        assertParseSuccess(new ExportCommandParser(), userInputAddress, expectedExportAddressCommand);","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"ChocoRagdoll"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"ChocoRagdoll"},"content":"    public void parse_noFieldsProvided_failure() {","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"ChocoRagdoll"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_EXPORT_FORMAT, ExportCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"ChocoRagdoll"},"content":"        assertParseFailure(new ExportCommandParser(), \"\", expectedMessage);","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"ChocoRagdoll"},"content":"        assertParseFailure(new ExportCommandParser(), \"     \", expectedMessage);","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"ChocoRagdoll"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"ChocoRagdoll":43}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"taeewonnn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_DESC;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"taeewonnn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DESC;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"import java.util.Collections;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.person.NameAndTagCombinedPredicate;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"taeewonnn"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"taeewonnn"},"content":"    public void parse_validArgs_returnsFindCommandBasedOnName() {","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"taeewonnn"},"content":"        // Test for finding by name","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"        NameAndTagCombinedPredicate predicate \u003d new NameAndTagCombinedPredicate(","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"                Collections.singletonList(\"Alice\"), null);","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"        FindCommand expectedFindCommandByName \u003d new FindCommand(predicate);","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"taeewonnn"},"content":"        assertParseSuccess(parser, VALID_NAME_DESC, expectedFindCommandByName);","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"taeewonnn"},"content":"    public void parse_validArgs_returnsFindCommandBasedOnTag() {","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"taeewonnn"},"content":"        // Test for finding by tag","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"        NameAndTagCombinedPredicate predicate \u003d new NameAndTagCombinedPredicate(","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"                null, Collections.singleton(new Tag(\"friend\")));","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"        FindCommand expectedFindCommandByTag \u003d new FindCommand(predicate);","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"taeewonnn"},"content":"        assertParseSuccess(parser, VALID_TAG_DESC, expectedFindCommandByTag);","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"taeewonnn"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"taeewonnn"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"taeewonnn"},"content":"        // Test for invalid argument (empty string)","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"taeewonnn"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"taeewonnn"},"content":"        // Test for invalid argument (only whitespaces)","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"taeewonnn"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"taeewonnn"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"Apzure":8,"-":22,"taeewonnn":17}},{"path":"src/test/java/seedu/address/logic/parser/InviteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":"import seedu.address.logic.commands.InviteCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"myang2020"},"content":" * Contains unit tests for InviteCommandParser.","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"public class InviteCommandParserTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"    private final InviteCommandParser parser \u003d new InviteCommandParser();","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"    public void parse_validArgs_returnsInviteCommand() {","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"        assertParseSuccess(parser, \"1\", new InviteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"        assertParseFailure(parser, \"a\", String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"                InviteCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"myang2020"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"myang2020":29}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"    private static final String INVALID_DATE \u003d \"--202-10\";","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":199,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":200,"author":{"gitId":"myang2020"},"content":"    public void parseInvalidDate_throwsParseException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":201,"author":{"gitId":"myang2020"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEventDate(INVALID_DATE));","lastModifiedDate":"2024-04-03"},{"lineNumber":202,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"-":196,"myang2020":7}},{"path":"src/test/java/seedu/address/logic/parser/SelectCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":"import seedu.address.logic.commands.SelectCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"myang2020"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"myang2020"},"content":"public class SelectCommandParserTest {","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"    private SelectCommandParser selectCommandParser \u003d new SelectCommandParser();","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"    public void parse_success() {","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"        assertParseSuccess(selectCommandParser, \"1\", new SelectCommand(Index.fromZeroBased(0)));","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"    public void parse_failure() throws ParseException {","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"        assertParseFailure(selectCommandParser, \"0abd\",","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SelectCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"myang2020":26}},{"path":"src/test/java/seedu/address/model/EventBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.model;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":"import static seedu.address.testutil.TypicalEvents.getBingoEvent;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"import java.util.List;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"public class EventBookTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"    private final EventBook eventBook \u003d new EventBook();","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"    public void constructor() {","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"        assertEquals(Collections.emptyList(), eventBook.getEventList());","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"        assertThrows(NullPointerException.class, () -\u003e eventBook.resetData(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"    public void resetData_withValidReadOnlyEventBook_replacesData() {","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"        EventBook newData \u003d getTypicalEventBook();","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"        eventBook.resetData(newData);","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"        assertEquals(newData, eventBook);","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"    public void resetData_withDuplicateEvents_throwsDuplicateEventException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"        // Two events with the same identity fields","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"myang2020"},"content":"        Event editedBingo \u003d new EventBuilder(getBingoEvent())","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"                .build();","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"myang2020"},"content":"        List\u003cEvent\u003e newEvents \u003d Arrays.asList(getBingoEvent(), editedBingo);","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"        EventBookStub newData \u003d new EventBookStub(newEvents);","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e eventBook.resetData(newData));","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"    public void hasEvent_nullEvent_throwsAssertionError() {","lastModifiedDate":"2024-04-07"},{"lineNumber":59,"author":{"gitId":"Apzure"},"content":"        assertThrows(AssertionError.class, () -\u003e {","lastModifiedDate":"2024-04-07"},{"lineNumber":60,"author":{"gitId":"Apzure"},"content":"            EventBook eventBook \u003d new EventBook();","lastModifiedDate":"2024-04-07"},{"lineNumber":61,"author":{"gitId":"Apzure"},"content":"            eventBook.hasEvent(null);","lastModifiedDate":"2024-04-07"},{"lineNumber":62,"author":{"gitId":"Apzure"},"content":"        });","lastModifiedDate":"2024-04-07"},{"lineNumber":63,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"Apzure"},"content":"    public void hasEvent_eventNotInEventBook_returnsFalse() {","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"myang2020"},"content":"        assertFalse(eventBook.hasEvent(getBingoEvent()));","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"Apzure"},"content":"    public void hasEvent_eventInEventBook_returnsTrue() {","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"myang2020"},"content":"        eventBook.addEvent(getBingoEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"myang2020"},"content":"        assertTrue(eventBook.hasEvent(getBingoEvent()));","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"Apzure"},"content":"    public void hasEvent_eventWithSameIdentityFieldsInEventBook_returnsTrue() {","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"myang2020"},"content":"        eventBook.addEvent(getBingoEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"myang2020"},"content":"        Event editedBingo \u003d new EventBuilder(getBingoEvent())","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"Apzure"},"content":"                .build();","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"Apzure"},"content":"        assertTrue(eventBook.hasEvent(editedBingo));","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"Apzure"},"content":"    public void getEventList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"Apzure"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e eventBook.getEventList().remove(0));","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":90,"author":{"gitId":"Apzure"},"content":"    public void equals_sameObject_returnsTrue() {","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"Apzure"},"content":"        EventBook eventBook \u003d new EventBook();","lastModifiedDate":"2024-03-12"},{"lineNumber":92,"author":{"gitId":"Apzure"},"content":"        assertTrue(eventBook.equals(eventBook));","lastModifiedDate":"2024-03-12"},{"lineNumber":93,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":94,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":95,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":96,"author":{"gitId":"Apzure"},"content":"    public void equals_differentClass_returnsFalse() {","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"Apzure"},"content":"        EventBook eventBook \u003d new EventBook();","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"Apzure"},"content":"        Object differentObject \u003d new Object();","lastModifiedDate":"2024-03-12"},{"lineNumber":99,"author":{"gitId":"Apzure"},"content":"        assertFalse(eventBook.equals(differentObject));","lastModifiedDate":"2024-03-12"},{"lineNumber":100,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":101,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":102,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":103,"author":{"gitId":"Apzure"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-12"},{"lineNumber":104,"author":{"gitId":"Apzure"},"content":"        String expected \u003d EventBook.class.getCanonicalName() + \"{events\u003d\" + eventBook.getEventList() + \"}\";","lastModifiedDate":"2024-03-12"},{"lineNumber":105,"author":{"gitId":"Apzure"},"content":"        assertEquals(expected, eventBook.toString());","lastModifiedDate":"2024-03-12"},{"lineNumber":106,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":109,"author":{"gitId":"Apzure"},"content":"    public void getSelectedEvent_nullSelectedEvent_returnsNull() {","lastModifiedDate":"2024-03-26"},{"lineNumber":110,"author":{"gitId":"Apzure"},"content":"        ReadOnlyEventBook eventBook \u003d new EventBook();","lastModifiedDate":"2024-03-26"},{"lineNumber":111,"author":{"gitId":"Apzure"},"content":"        assertNull(eventBook.getSelectedEvent().getValue());","lastModifiedDate":"2024-03-26"},{"lineNumber":112,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":113,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":114,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":115,"author":{"gitId":"Apzure"},"content":"    public void getSelectedEvent_nonNullSelectedEvent_returnsSelectedEvent() {","lastModifiedDate":"2024-03-26"},{"lineNumber":116,"author":{"gitId":"Apzure"},"content":"        Event event \u003d getBingoEvent();","lastModifiedDate":"2024-03-26"},{"lineNumber":117,"author":{"gitId":"Apzure"},"content":"        EventBook eventbook \u003d new EventBook();","lastModifiedDate":"2024-03-26"},{"lineNumber":118,"author":{"gitId":"Apzure"},"content":"        eventbook.addEvent(event);","lastModifiedDate":"2024-03-26"},{"lineNumber":119,"author":{"gitId":"Apzure"},"content":"        eventBook.selectEvent(event);","lastModifiedDate":"2024-03-26"},{"lineNumber":120,"author":{"gitId":"Apzure"},"content":"        assertEquals(event, eventBook.getSelectedEvent().getValue());","lastModifiedDate":"2024-03-26"},{"lineNumber":121,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":122,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":123,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":124,"author":{"gitId":"Apzure"},"content":"     * A stub ReadOnlyEventBook whose events list can violate interface constraints.","lastModifiedDate":"2024-03-12"},{"lineNumber":125,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":126,"author":{"gitId":"Apzure"},"content":"    private static class EventBookStub implements ReadOnlyEventBook {","lastModifiedDate":"2024-03-12"},{"lineNumber":127,"author":{"gitId":"Apzure"},"content":"        private final ObservableList\u003cEvent\u003e events \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-12"},{"lineNumber":128,"author":{"gitId":"Apzure"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-15"},{"lineNumber":129,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":130,"author":{"gitId":"Apzure"},"content":"        EventBookStub(List\u003cEvent\u003e events) {","lastModifiedDate":"2024-03-26"},{"lineNumber":131,"author":{"gitId":"Apzure"},"content":"            this.events.setAll(events);","lastModifiedDate":"2024-03-12"},{"lineNumber":132,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":133,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":134,"author":{"gitId":"Apzure"},"content":"        @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":135,"author":{"gitId":"Apzure"},"content":"        public ObservableValue\u003cEvent\u003e getSelectedEvent() {","lastModifiedDate":"2024-03-26"},{"lineNumber":136,"author":{"gitId":"Apzure"},"content":"            return null;","lastModifiedDate":"2024-03-26"},{"lineNumber":137,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":138,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":139,"author":{"gitId":"Apzure"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":140,"author":{"gitId":"Apzure"},"content":"        public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2024-03-12"},{"lineNumber":141,"author":{"gitId":"Apzure"},"content":"            return events;","lastModifiedDate":"2024-03-12"},{"lineNumber":142,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":143,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":144,"author":{"gitId":"Apzure"},"content":"        @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":145,"author":{"gitId":"Apzure"},"content":"        public ObservableList\u003cPerson\u003e getPersonsOfSelectedEventList() {","lastModifiedDate":"2024-03-15"},{"lineNumber":146,"author":{"gitId":"Apzure"},"content":"            return persons;","lastModifiedDate":"2024-03-15"},{"lineNumber":147,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":148,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":149,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Apzure":141,"myang2020":8}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"ChocoRagdoll"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":"import static seedu.address.testutil.TypicalEvents.getBingoEvent;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":13,"author":{"gitId":"ChocoRagdoll"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.export.MockPersonDataExporter;","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.export.PersonDataExporter;","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.export.PersonExporter;","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":28,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.testutil.EventBookBuilder;","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"        assertEquals(new EventBook(), new EventBook(modelManager.getEventBook()));","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"nusliuyifan"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"nusliuyifan"},"content":"    public void setEventBookFilePath_validPath_success() {","lastModifiedDate":"2024-04-01"},{"lineNumber":88,"author":{"gitId":"nusliuyifan"},"content":"        Path path \u003d Paths.get(\"event/book/file/path\");","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"nusliuyifan"},"content":"        modelManager.setEventBookFilePath(path);","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"nusliuyifan"},"content":"        assertEquals(path, modelManager.getEventBookFilePath());","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"nusliuyifan"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"nusliuyifan"},"content":"    public void getFilteredEventList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"nusliuyifan"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredEventList().remove(0));","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":119,"author":{"gitId":"Apzure"},"content":"    public void hasEvent_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":120,"author":{"gitId":"Apzure"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasEvent(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":121,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":122,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":123,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":124,"author":{"gitId":"Apzure"},"content":"    public void hasEvent_eventNotInEventBook_returnsFalse() {","lastModifiedDate":"2024-03-12"},{"lineNumber":125,"author":{"gitId":"myang2020"},"content":"        assertFalse(modelManager.hasEvent(getBingoEvent()));","lastModifiedDate":"2024-03-17"},{"lineNumber":126,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":127,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":128,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":130,"author":{"gitId":"Apzure"},"content":"    public void hasEvent_eventInEventBook_returnsTrue() {","lastModifiedDate":"2024-03-12"},{"lineNumber":131,"author":{"gitId":"myang2020"},"content":"        modelManager.addEvent(getBingoEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":132,"author":{"gitId":"myang2020"},"content":"        assertTrue(modelManager.hasEvent(getBingoEvent()));","lastModifiedDate":"2024-03-17"},{"lineNumber":133,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":134,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":135,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":136,"author":{"gitId":"Apzure"},"content":"    public void deleteEvent_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2024-04-10"},{"lineNumber":137,"author":{"gitId":"Apzure"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.deleteEvent(null));","lastModifiedDate":"2024-04-10"},{"lineNumber":138,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":139,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":140,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":141,"author":{"gitId":"Apzure"},"content":"    public void deleteEvent_eventNotInEventBook_throwsEventNotFoundException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":142,"author":{"gitId":"myang2020"},"content":"        assertThrows(EventNotFoundException.class, () -\u003e modelManager.deleteEvent(getBingoEvent()));","lastModifiedDate":"2024-03-17"},{"lineNumber":143,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":144,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":145,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":146,"author":{"gitId":"Apzure"},"content":"    public void deleteEvent_eventInEventBook_removesEvent() {","lastModifiedDate":"2024-03-12"},{"lineNumber":147,"author":{"gitId":"myang2020"},"content":"        modelManager.addEvent(getBingoEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":148,"author":{"gitId":"myang2020"},"content":"        modelManager.deleteEvent(getBingoEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":149,"author":{"gitId":"myang2020"},"content":"        assertFalse(modelManager.hasEvent(getBingoEvent()));","lastModifiedDate":"2024-03-17"},{"lineNumber":150,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":151,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":152,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":153,"author":{"gitId":"Apzure"},"content":"    public void setEventBook_nullEventBook_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":154,"author":{"gitId":"Apzure"},"content":"        ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2024-03-12"},{"lineNumber":155,"author":{"gitId":"Apzure"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setEventBook(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":156,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":157,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":158,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":159,"author":{"gitId":"Apzure"},"content":"    public void setEventBook_validEventBook_success() {","lastModifiedDate":"2024-03-12"},{"lineNumber":160,"author":{"gitId":"Apzure"},"content":"        ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2024-03-12"},{"lineNumber":161,"author":{"gitId":"Apzure"},"content":"        ReadOnlyEventBook newEventBook \u003d new EventBook();","lastModifiedDate":"2024-03-12"},{"lineNumber":162,"author":{"gitId":"Apzure"},"content":"        modelManager.setEventBook(newEventBook);","lastModifiedDate":"2024-03-12"},{"lineNumber":163,"author":{"gitId":"Apzure"},"content":"        assertEquals(newEventBook, modelManager.getEventBook());","lastModifiedDate":"2024-03-12"},{"lineNumber":164,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":165,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":166,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":167,"author":{"gitId":"Apzure"},"content":"    public void setEvent_nullTargetAndEditedEvent_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":168,"author":{"gitId":"Apzure"},"content":"        ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2024-03-12"},{"lineNumber":169,"author":{"gitId":"Apzure"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setEvent(null, null));","lastModifiedDate":"2024-03-12"},{"lineNumber":170,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":171,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":172,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":173,"author":{"gitId":"Apzure"},"content":"    public void setEvent_nullTargetEvent_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":174,"author":{"gitId":"Apzure"},"content":"        ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2024-03-12"},{"lineNumber":175,"author":{"gitId":"Apzure"},"content":"        Event editedEvent \u003d new EventBuilder().build();","lastModifiedDate":"2024-03-12"},{"lineNumber":176,"author":{"gitId":"Apzure"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setEvent(null, editedEvent));","lastModifiedDate":"2024-03-12"},{"lineNumber":177,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":178,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":179,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":180,"author":{"gitId":"Apzure"},"content":"    public void setEvent_nullEditedEvent_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":181,"author":{"gitId":"Apzure"},"content":"        ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2024-03-12"},{"lineNumber":182,"author":{"gitId":"Apzure"},"content":"        Event targetEvent \u003d new EventBuilder().build();","lastModifiedDate":"2024-03-12"},{"lineNumber":183,"author":{"gitId":"Apzure"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setEvent(targetEvent, null));","lastModifiedDate":"2024-03-12"},{"lineNumber":184,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":185,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":186,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":187,"author":{"gitId":"Apzure"},"content":"    public void setEvent_validTargetAndEditedEvent_success() {","lastModifiedDate":"2024-03-12"},{"lineNumber":188,"author":{"gitId":"Apzure"},"content":"        ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2024-03-12"},{"lineNumber":189,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":190,"author":{"gitId":"Apzure"},"content":"        Event targetEvent \u003d new EventBuilder().build();","lastModifiedDate":"2024-03-12"},{"lineNumber":191,"author":{"gitId":"Apzure"},"content":"        Event editedEvent \u003d new EventBuilder().withEventName(\"Edited Event\").build();","lastModifiedDate":"2024-03-12"},{"lineNumber":192,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":193,"author":{"gitId":"Apzure"},"content":"        modelManager.addEvent(targetEvent);","lastModifiedDate":"2024-03-12"},{"lineNumber":194,"author":{"gitId":"Apzure"},"content":"        modelManager.setEvent(targetEvent, editedEvent);","lastModifiedDate":"2024-03-12"},{"lineNumber":195,"author":{"gitId":"Apzure"},"content":"        assertTrue(modelManager.getFilteredEventList().contains(editedEvent));","lastModifiedDate":"2024-03-12"},{"lineNumber":196,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":197,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":198,"author":{"gitId":"taeewonnn"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":199,"author":{"gitId":"taeewonnn"},"content":"    public void isEqualSelectedEvent_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":200,"author":{"gitId":"taeewonnn"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.isSameSelectedEvent(null));","lastModifiedDate":"2024-03-20"},{"lineNumber":201,"author":{"gitId":"taeewonnn"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":202,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":203,"author":{"gitId":"ChocoRagdoll"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":204,"author":{"gitId":"ChocoRagdoll"},"content":"    public void exportEventPersonData_success() {","lastModifiedDate":"2024-04-02"},{"lineNumber":205,"author":{"gitId":"ChocoRagdoll"},"content":"        MockPersonDataExporter mockExporter \u003d new MockPersonDataExporter();","lastModifiedDate":"2024-04-02"},{"lineNumber":206,"author":{"gitId":"ChocoRagdoll"},"content":"        ModelManager modelManager \u003d new ModelManager(","lastModifiedDate":"2024-04-02"},{"lineNumber":207,"author":{"gitId":"ChocoRagdoll"},"content":"                new AddressBook(), new UserPrefs(), new EventBook(), mockExporter);","lastModifiedDate":"2024-04-02"},{"lineNumber":208,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":209,"author":{"gitId":"ChocoRagdoll"},"content":"        Event event \u003d getBingoEvent();","lastModifiedDate":"2024-04-02"},{"lineNumber":210,"author":{"gitId":"ChocoRagdoll"},"content":"        modelManager.addEvent(event);","lastModifiedDate":"2024-04-02"},{"lineNumber":211,"author":{"gitId":"ChocoRagdoll"},"content":"        modelManager.selectEvent(event);","lastModifiedDate":"2024-04-02"},{"lineNumber":212,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":213,"author":{"gitId":"ChocoRagdoll"},"content":"        modelManager.addPersonToSelectedEvent(ALICE);","lastModifiedDate":"2024-04-02"},{"lineNumber":214,"author":{"gitId":"ChocoRagdoll"},"content":"        modelManager.addPersonToSelectedEvent(BENSON);","lastModifiedDate":"2024-04-02"},{"lineNumber":215,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":216,"author":{"gitId":"ChocoRagdoll"},"content":"        // Execute export","lastModifiedDate":"2024-04-02"},{"lineNumber":217,"author":{"gitId":"ChocoRagdoll"},"content":"        try {","lastModifiedDate":"2024-04-02"},{"lineNumber":218,"author":{"gitId":"ChocoRagdoll"},"content":"            modelManager.exportEventPersonData(","lastModifiedDate":"2024-04-02"},{"lineNumber":219,"author":{"gitId":"ChocoRagdoll"},"content":"                    true, true, true, true);","lastModifiedDate":"2024-04-02"},{"lineNumber":220,"author":{"gitId":"ChocoRagdoll"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":221,"author":{"gitId":"ChocoRagdoll"},"content":"            fail(\"Should not have thrown IOException.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":222,"author":{"gitId":"ChocoRagdoll"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":223,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":224,"author":{"gitId":"ChocoRagdoll"},"content":"        // Verify that the export was attempted with the correct parameters","lastModifiedDate":"2024-04-02"},{"lineNumber":225,"author":{"gitId":"ChocoRagdoll"},"content":"        assertTrue(mockExporter.hasExported(modelManager.getFilteredPersonListOfSelectedEvent(),","lastModifiedDate":"2024-04-02"},{"lineNumber":226,"author":{"gitId":"ChocoRagdoll"},"content":"                true, true, true, true));","lastModifiedDate":"2024-04-02"},{"lineNumber":227,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":228,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":229,"author":{"gitId":"ChocoRagdoll"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":230,"author":{"gitId":"ChocoRagdoll"},"content":"    public void exportGlobalPersonData_success() {","lastModifiedDate":"2024-04-02"},{"lineNumber":231,"author":{"gitId":"ChocoRagdoll"},"content":"        MockPersonDataExporter mockExporter \u003d new MockPersonDataExporter();","lastModifiedDate":"2024-04-02"},{"lineNumber":232,"author":{"gitId":"ChocoRagdoll"},"content":"        ModelManager modelManager \u003d new ModelManager(","lastModifiedDate":"2024-04-02"},{"lineNumber":233,"author":{"gitId":"ChocoRagdoll"},"content":"                new AddressBook(), new UserPrefs(), new EventBook(), mockExporter);","lastModifiedDate":"2024-04-02"},{"lineNumber":234,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":235,"author":{"gitId":"ChocoRagdoll"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2024-04-02"},{"lineNumber":236,"author":{"gitId":"ChocoRagdoll"},"content":"        modelManager.addPerson(BENSON);","lastModifiedDate":"2024-04-02"},{"lineNumber":237,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":238,"author":{"gitId":"ChocoRagdoll"},"content":"        try {","lastModifiedDate":"2024-04-02"},{"lineNumber":239,"author":{"gitId":"ChocoRagdoll"},"content":"            modelManager.exportGlobalPersonData(","lastModifiedDate":"2024-04-02"},{"lineNumber":240,"author":{"gitId":"ChocoRagdoll"},"content":"                    true, true, true, true);","lastModifiedDate":"2024-04-02"},{"lineNumber":241,"author":{"gitId":"ChocoRagdoll"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":242,"author":{"gitId":"ChocoRagdoll"},"content":"            fail(\"Should not have thrown IOException.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":243,"author":{"gitId":"ChocoRagdoll"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":244,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":245,"author":{"gitId":"ChocoRagdoll"},"content":"        assertTrue(mockExporter.hasExported(modelManager.getFilteredPersonList(),","lastModifiedDate":"2024-04-02"},{"lineNumber":246,"author":{"gitId":"ChocoRagdoll"},"content":"                true, true, true, true));","lastModifiedDate":"2024-04-02"},{"lineNumber":247,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":248,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":249,"author":{"gitId":"ChocoRagdoll"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":250,"author":{"gitId":"ChocoRagdoll"},"content":"    public void exportEventPersonData_failure_throwsIoException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":251,"author":{"gitId":"ChocoRagdoll"},"content":"        MockPersonDataExporter mockExporter \u003d new MockPersonDataExporter();","lastModifiedDate":"2024-04-02"},{"lineNumber":252,"author":{"gitId":"ChocoRagdoll"},"content":"        mockExporter.setThrowIoException(true);","lastModifiedDate":"2024-04-02"},{"lineNumber":253,"author":{"gitId":"ChocoRagdoll"},"content":"        ModelManager modelManager \u003d new ModelManager(","lastModifiedDate":"2024-04-02"},{"lineNumber":254,"author":{"gitId":"ChocoRagdoll"},"content":"                new AddressBook(), new UserPrefs(), new EventBook(), mockExporter);","lastModifiedDate":"2024-04-02"},{"lineNumber":255,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":256,"author":{"gitId":"ChocoRagdoll"},"content":"        Event event \u003d getBingoEvent();","lastModifiedDate":"2024-04-02"},{"lineNumber":257,"author":{"gitId":"ChocoRagdoll"},"content":"        modelManager.addEvent(event);","lastModifiedDate":"2024-04-02"},{"lineNumber":258,"author":{"gitId":"ChocoRagdoll"},"content":"        modelManager.selectEvent(event);","lastModifiedDate":"2024-04-02"},{"lineNumber":259,"author":{"gitId":"ChocoRagdoll"},"content":"        modelManager.addPersonToSelectedEvent(ALICE);","lastModifiedDate":"2024-04-02"},{"lineNumber":260,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":261,"author":{"gitId":"ChocoRagdoll"},"content":"        assertThrows(IOException.class, () -\u003e modelManager.exportEventPersonData(","lastModifiedDate":"2024-04-02"},{"lineNumber":262,"author":{"gitId":"ChocoRagdoll"},"content":"                true, false, false, false));","lastModifiedDate":"2024-04-02"},{"lineNumber":263,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":264,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":265,"author":{"gitId":"ChocoRagdoll"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":266,"author":{"gitId":"ChocoRagdoll"},"content":"    public void exportGlobalPersonData_failure_throwsIoException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":267,"author":{"gitId":"ChocoRagdoll"},"content":"        MockPersonDataExporter mockExporter \u003d new MockPersonDataExporter();","lastModifiedDate":"2024-04-02"},{"lineNumber":268,"author":{"gitId":"ChocoRagdoll"},"content":"        mockExporter.setThrowIoException(true);","lastModifiedDate":"2024-04-02"},{"lineNumber":269,"author":{"gitId":"ChocoRagdoll"},"content":"        ModelManager modelManager \u003d new ModelManager(","lastModifiedDate":"2024-04-02"},{"lineNumber":270,"author":{"gitId":"ChocoRagdoll"},"content":"                new AddressBook(), new UserPrefs(), new EventBook(), mockExporter);","lastModifiedDate":"2024-04-02"},{"lineNumber":271,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":272,"author":{"gitId":"ChocoRagdoll"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2024-04-02"},{"lineNumber":273,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":274,"author":{"gitId":"ChocoRagdoll"},"content":"        assertThrows(IOException.class, () -\u003e modelManager.exportGlobalPersonData(","lastModifiedDate":"2024-04-02"},{"lineNumber":275,"author":{"gitId":"ChocoRagdoll"},"content":"                false, true, false, false));","lastModifiedDate":"2024-04-02"},{"lineNumber":276,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":277,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":278,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":282,"author":{"gitId":"nusliuyifan"},"content":"        EventBook eventBook \u003d new EventBookBuilder().withEvent(getBingoEvent()).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":284,"author":{"gitId":"nusliuyifan"},"content":"        EventBook differentEventBook \u003d new EventBook();","lastModifiedDate":"2024-03-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":286,"author":{"gitId":"ChocoRagdoll"},"content":"        PersonExporter personExporter \u003d new PersonDataExporter();","lastModifiedDate":"2024-04-02"},{"lineNumber":287,"author":{"gitId":"ChocoRagdoll"},"content":"        PersonExporter differentPersonExporter \u003d new PersonDataExporter();","lastModifiedDate":"2024-04-02"},{"lineNumber":288,"author":{"gitId":"ChocoRagdoll"},"content":"        differentPersonExporter.setFilePath(Path.of(\"otherFilePath\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":291,"author":{"gitId":"ChocoRagdoll"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs, eventBook, personExporter);","lastModifiedDate":"2024-04-02"},{"lineNumber":292,"author":{"gitId":"ChocoRagdoll"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs, eventBook, personExporter);","lastModifiedDate":"2024-04-02"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":305,"author":{"gitId":"ChocoRagdoll"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs, eventBook, personExporter)));","lastModifiedDate":"2024-04-02"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":307,"author":{"gitId":"ChocoRagdoll"},"content":"        // different personExporter -\u003e returns false","lastModifiedDate":"2024-04-02"},{"lineNumber":308,"author":{"gitId":"ChocoRagdoll"},"content":"        assertFalse(modelManager.equals(","lastModifiedDate":"2024-04-02"},{"lineNumber":309,"author":{"gitId":"ChocoRagdoll"},"content":"                new ModelManager(differentAddressBook, userPrefs, eventBook, differentPersonExporter)));","lastModifiedDate":"2024-04-02"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":314,"author":{"gitId":"ChocoRagdoll"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs, eventBook, personExporter)));","lastModifiedDate":"2024-04-02"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":322,"author":{"gitId":"ChocoRagdoll"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs, eventBook, personExporter)));","lastModifiedDate":"2024-04-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":324,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"Apzure":76,"nusliuyifan":14,"ChocoRagdoll":92,"-":128,"taeewonnn":6,"myang2020":8}},{"path":"src/test/java/seedu/address/model/event/EventNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.model.event;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"public class EventNameTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EventName(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"    public void equals() {","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"        EventName eventName \u003d new EventName(\"Valid EventName\");","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"        assertTrue(eventName.equals(new EventName(\"Valid EventName\")));","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"        assertTrue(eventName.equals(eventName));","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"        assertFalse(eventName.equals(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"        assertFalse(eventName.equals(5.0f));","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"        assertFalse(eventName.equals(new EventName(\"Other Valid EventName\")));","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Apzure":36}},{"path":"src/test/java/seedu/address/model/event/EventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.model.event;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"public class EventTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"        Event event \u003d new EventBuilder().build();","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"        assertThrows(NullPointerException.class, () -\u003e event.hasPerson(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"    public void hasPerson_personNotInEvent_returnsFalse() {","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"        Event event \u003d new EventBuilder().build();","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"        assertFalse(event.hasPerson(ALICE));","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"    public void hasPerson_personInEvent_returnsTrue() {","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"        Event event \u003d new EventBuilder().withPerson(ALICE).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"        assertTrue(event.hasPerson(ALICE));","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"    public void addPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"        Event event \u003d new EventBuilder().build();","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"        assertThrows(NullPointerException.class, () -\u003e event.addPerson(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"    public void addPerson_personAlreadyInEvent_throwsDuplicatePersonException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"        Event event \u003d new EventBuilder().withPerson(ALICE).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e event.addPerson(ALICE));","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"    public void setPerson_nullTarget_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"        Event event \u003d new EventBuilder().build();","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"        assertThrows(NullPointerException.class, () -\u003e event.setPerson(null, ALICE));","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"Apzure"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"Apzure"},"content":"        Event event \u003d new EventBuilder().build();","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"        assertThrows(NullPointerException.class, () -\u003e event.setPerson(ALICE, null));","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"Apzure"},"content":"    public void setPerson_targetNotInEvent_throwsPersonNotFoundException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"Apzure"},"content":"        Event event \u003d new EventBuilder().build();","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"Apzure"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e event.setPerson(ALICE, BENSON));","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"Apzure"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"Apzure"},"content":"        Event event \u003d new EventBuilder().withPerson(ALICE).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"Apzure"},"content":"        event.setPerson(ALICE, ALICE);","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"Apzure"},"content":"        assertTrue(event.getPersonList().contains(ALICE));","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"Apzure"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"Apzure"},"content":"        Event event \u003d new EventBuilder().withPerson(ALICE).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"Apzure"},"content":"        event.setPerson(ALICE, BENSON);","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":79,"author":{"gitId":"Apzure"},"content":"        assertFalse(event.getPersonList().contains(ALICE));","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"Apzure"},"content":"        assertTrue(event.getPersonList().contains(BENSON));","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"Apzure"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"Apzure"},"content":"        Event event \u003d new EventBuilder().build();","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"myang2020"},"content":"        String expected \u003d new ToStringBuilder(event)","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"myang2020"},"content":"                .add(\"\", event.getEventName())","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"myang2020"},"content":"                .add(\"Date:\", event.getEventDate())","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"myang2020"},"content":"                .toString();","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"Apzure"},"content":"        assertEquals(expected, event.toString());","lastModifiedDate":"2024-03-12"},{"lineNumber":92,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":93,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Apzure":88,"myang2020":5}},{"path":"src/test/java/seedu/address/model/event/UniqueEventListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.model.event;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"import static seedu.address.testutil.TypicalEvents.getBingoEvent;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":"import static seedu.address.testutil.TypicalEvents.getHikingEvent;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"import java.util.List;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"public class UniqueEventListTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"    private final UniqueEventList uniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"    public void contains_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.contains(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"    public void contains_eventNotInList_returnsFalse() {","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"myang2020"},"content":"        assertFalse(uniqueEventList.contains(getBingoEvent()));","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"    public void contains_eventInList_returnsTrue() {","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"myang2020"},"content":"        uniqueEventList.add(getBingoEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"myang2020"},"content":"        assertTrue(uniqueEventList.contains(getBingoEvent()));","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"    public void contains_eventWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"myang2020"},"content":"        uniqueEventList.add(getBingoEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"myang2020"},"content":"        Event editedBingo \u003d new EventBuilder(getBingoEvent()).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"        assertTrue(uniqueEventList.contains(editedBingo));","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"    public void add_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.add(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"    public void add_duplicateEvent_throwsDuplicateEventException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"myang2020"},"content":"        uniqueEventList.add(getBingoEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"myang2020"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e uniqueEventList.add(getBingoEvent()));","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"Apzure"},"content":"    public void setEvent_nullTargetEvent_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"myang2020"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvent(null, getBingoEvent()));","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"Apzure"},"content":"    public void setEvent_nullEditedEvent_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"myang2020"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvent(getBingoEvent(), null));","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"Apzure"},"content":"    public void setEvent_targetEventNotInList_throwsEventNotFoundException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"myang2020"},"content":"        assertThrows(EventNotFoundException.class, () -\u003e uniqueEventList.setEvent(getBingoEvent(), getBingoEvent()));","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"Apzure"},"content":"    public void setEvent_editedEventIsSameEvent_success() {","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"myang2020"},"content":"        uniqueEventList.add(getBingoEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"myang2020"},"content":"        uniqueEventList.setEvent(getBingoEvent(), getBingoEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"Apzure"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"myang2020"},"content":"        expectedUniqueEventList.add(getBingoEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"Apzure"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"Apzure"},"content":"    public void setEvent_editedEventHasSameIdentity_success() {","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"myang2020"},"content":"        uniqueEventList.add(getBingoEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"myang2020"},"content":"        Event editedBingo \u003d new EventBuilder(getBingoEvent()).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"myang2020"},"content":"        uniqueEventList.setEvent(getBingoEvent(), editedBingo);","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"Apzure"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"Apzure"},"content":"        expectedUniqueEventList.add(editedBingo);","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"Apzure"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2024-03-12"},{"lineNumber":90,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":92,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":93,"author":{"gitId":"Apzure"},"content":"    public void setEvent_editedEventHasDifferentIdentity_success() {","lastModifiedDate":"2024-03-12"},{"lineNumber":94,"author":{"gitId":"myang2020"},"content":"        uniqueEventList.add(getBingoEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"myang2020"},"content":"        uniqueEventList.setEvent(getBingoEvent(), getHikingEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"Apzure"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"myang2020"},"content":"        expectedUniqueEventList.add(getHikingEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"Apzure"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2024-03-12"},{"lineNumber":99,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":100,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":101,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":102,"author":{"gitId":"Apzure"},"content":"    public void setEvent_editedEventHasNonUniqueIdentity_throwsDuplicateEventException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":103,"author":{"gitId":"myang2020"},"content":"        uniqueEventList.add(getBingoEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"myang2020"},"content":"        uniqueEventList.add(getHikingEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"myang2020"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e uniqueEventList.setEvent(getBingoEvent(), getHikingEvent()));","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":109,"author":{"gitId":"Apzure"},"content":"    public void remove_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":110,"author":{"gitId":"Apzure"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.remove(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":111,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":112,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":113,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":114,"author":{"gitId":"Apzure"},"content":"    public void remove_eventDoesNotExist_throwsEventNotFoundException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":115,"author":{"gitId":"myang2020"},"content":"        assertThrows(EventNotFoundException.class, () -\u003e uniqueEventList.remove(getBingoEvent()));","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":117,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":118,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":119,"author":{"gitId":"Apzure"},"content":"    public void remove_existingEvent_removesEvent() {","lastModifiedDate":"2024-03-12"},{"lineNumber":120,"author":{"gitId":"myang2020"},"content":"        uniqueEventList.add(getBingoEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"myang2020"},"content":"        uniqueEventList.remove(getBingoEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":123,"author":{"gitId":"Apzure"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2024-03-12"},{"lineNumber":124,"author":{"gitId":"Apzure"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2024-03-12"},{"lineNumber":125,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":126,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":127,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":128,"author":{"gitId":"Apzure"},"content":"    public void setEvents_nullUniqueEventList_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":129,"author":{"gitId":"Apzure"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvents((UniqueEventList) null));","lastModifiedDate":"2024-03-12"},{"lineNumber":130,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":131,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":132,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":133,"author":{"gitId":"Apzure"},"content":"    public void setEvents_uniqueEventList_replacesOwnListWithProvidedUniqueEventList() {","lastModifiedDate":"2024-03-12"},{"lineNumber":134,"author":{"gitId":"myang2020"},"content":"        uniqueEventList.add(getBingoEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":135,"author":{"gitId":"Apzure"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2024-03-12"},{"lineNumber":136,"author":{"gitId":"myang2020"},"content":"        expectedUniqueEventList.add(getHikingEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":137,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":138,"author":{"gitId":"Apzure"},"content":"        uniqueEventList.setEvents(expectedUniqueEventList);","lastModifiedDate":"2024-03-12"},{"lineNumber":139,"author":{"gitId":"Apzure"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2024-03-12"},{"lineNumber":140,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":141,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":142,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":143,"author":{"gitId":"Apzure"},"content":"    public void setEvents_nullList_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":144,"author":{"gitId":"Apzure"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvents((List\u003cEvent\u003e) null));","lastModifiedDate":"2024-03-12"},{"lineNumber":145,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":146,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":147,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":148,"author":{"gitId":"Apzure"},"content":"    public void setEvents_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2024-03-12"},{"lineNumber":149,"author":{"gitId":"myang2020"},"content":"        uniqueEventList.add(getBingoEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":150,"author":{"gitId":"myang2020"},"content":"        List\u003cEvent\u003e eventList \u003d Collections.singletonList(getHikingEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":151,"author":{"gitId":"Apzure"},"content":"        uniqueEventList.setEvents(eventList);","lastModifiedDate":"2024-03-12"},{"lineNumber":152,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":153,"author":{"gitId":"Apzure"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2024-03-12"},{"lineNumber":154,"author":{"gitId":"myang2020"},"content":"        expectedUniqueEventList.add(getHikingEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":155,"author":{"gitId":"Apzure"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2024-03-12"},{"lineNumber":156,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":157,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":158,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":159,"author":{"gitId":"Apzure"},"content":"    public void setEvents_listWithDuplicateEvents_throwsDuplicateEventException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":160,"author":{"gitId":"myang2020"},"content":"        List\u003cEvent\u003e listWithDuplicateEvents \u003d Arrays.asList(getBingoEvent(), getBingoEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":161,"author":{"gitId":"Apzure"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e uniqueEventList.setEvents(listWithDuplicateEvents));","lastModifiedDate":"2024-03-12"},{"lineNumber":162,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":163,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":164,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":165,"author":{"gitId":"Apzure"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":166,"author":{"gitId":"Apzure"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2024-03-12"},{"lineNumber":167,"author":{"gitId":"Apzure"},"content":"            -\u003e uniqueEventList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2024-03-12"},{"lineNumber":168,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":169,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":170,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":171,"author":{"gitId":"Apzure"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-12"},{"lineNumber":172,"author":{"gitId":"Apzure"},"content":"        assertEquals(uniqueEventList.asUnmodifiableObservableList().toString(), uniqueEventList.toString());","lastModifiedDate":"2024-03-12"},{"lineNumber":173,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":174,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Apzure":141,"myang2020":33}},{"path":"src/test/java/seedu/address/model/person/NameAndTagCombinedPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"import java.util.Collections;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"import java.util.List;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"public class NameAndTagCombinedPredicateTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"    public void testEquals() {","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"        List\u003cString\u003e nameKeywords1 \u003d Arrays.asList(\"Alice\", \"Bob\");","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"        List\u003cString\u003e nameKeywords2 \u003d Arrays.asList(\"Alice\", \"Bob\", \"Charlie\");","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"        Set\u003cTag\u003e tagKeywords1 \u003d new HashSet\u003c\u003e(Arrays.asList(new Tag(\"friend\"), new Tag(\"family\")));","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"        Set\u003cTag\u003e tagKeywords2 \u003d new HashSet\u003c\u003e(Collections.singletonList(new Tag(\"friend\")));","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"        NameAndTagCombinedPredicate predicate1 \u003d new NameAndTagCombinedPredicate(nameKeywords1, tagKeywords1);","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"        NameAndTagCombinedPredicate predicate2 \u003d new NameAndTagCombinedPredicate(nameKeywords1, tagKeywords1);","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"        NameAndTagCombinedPredicate predicate3 \u003d new NameAndTagCombinedPredicate(nameKeywords2, tagKeywords1);","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"        NameAndTagCombinedPredicate predicate4 \u003d new NameAndTagCombinedPredicate(nameKeywords1, tagKeywords2);","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"        assertTrue(predicate1.equals(predicate1));","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"        assertTrue(predicate1.equals(predicate2));","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"        assertFalse(predicate1.equals(1));","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"        assertFalse(predicate1.equals(null));","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"        // different nameKeywords -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"        assertFalse(predicate1.equals(predicate3));","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"        // different tagKeywords -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"        assertFalse(predicate1.equals(predicate4));","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"    public void testToString() {","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"        // Create a predicate with a non-null name predicate and a null tag predicate","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"        NameAndTagCombinedPredicate predicate \u003d new NameAndTagCombinedPredicate(","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"Apzure"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\")), null);","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"        // Expected output string","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"Apzure"},"content":"        String expected \u003d \"NameAndTagCombinedPredicate{namePredicate\u003dseedu.address.model.person.\"","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"Apzure"},"content":"                + \"NameContainsKeywordsPredicate{keywords\u003d[Alice]}, tagPredicate\u003dnull}\";","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"Apzure"},"content":"        // Check if the actual toString output matches the expected string","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"Apzure"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"Apzure"},"content":"    public void testTest_nameFilterOnly() {","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"Apzure"},"content":"        // Test for a person that matches the name filter only","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"Apzure"},"content":"        List\u003cString\u003e nameKeywords \u003d Collections.singletonList(\"Alice\");","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"Apzure"},"content":"        NameAndTagCombinedPredicate predicate \u003d new NameAndTagCombinedPredicate(nameKeywords, null);","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"Apzure"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice\").withTags(\"friend\").build()));","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"Apzure"},"content":"        // Test for a person that does not match the name filter","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"Apzure"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Bob\").withTags(\"friend\").build()));","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"Apzure"},"content":"    public void testTest_tagFilterOnly() {","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"Apzure"},"content":"        // Test for a person that matches the tag filter only","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"Apzure"},"content":"        Set\u003cTag\u003e tagKeywords \u003d new HashSet\u003c\u003e(Collections.singletonList(new Tag(\"friend\")));","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"Apzure"},"content":"        NameAndTagCombinedPredicate predicate \u003d new NameAndTagCombinedPredicate(null, tagKeywords);","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"Apzure"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice\").withTags(\"friend\").build()));","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"Apzure":85}},{"path":"src/test/java/seedu/address/model/person/TagContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"taeewonnn"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"taeewonnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"taeewonnn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"taeewonnn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"taeewonnn"},"content":"import java.util.Collections;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"taeewonnn"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"taeewonnn"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"taeewonnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"taeewonnn"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"taeewonnn"},"content":"public class TagContainsKeywordsPredicateTest {","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"taeewonnn"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"taeewonnn"},"content":"    public void equals() {","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"taeewonnn"},"content":"        Set\u003cTag\u003e firstPredicateKeywordSet \u003d new HashSet\u003c\u003e(Collections.singletonList(new Tag(\"first\")));","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"taeewonnn"},"content":"        Set\u003cTag\u003e secondPredicateKeywordSet \u003d new HashSet\u003c\u003e(Set.of(new Tag(\"first\"), new Tag(\"second\")));","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"taeewonnn"},"content":"        TagContainsKeywordsPredicate firstPredicate \u003d new TagContainsKeywordsPredicate(firstPredicateKeywordSet);","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"taeewonnn"},"content":"        TagContainsKeywordsPredicate secondPredicate \u003d new TagContainsKeywordsPredicate(secondPredicateKeywordSet);","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"taeewonnn"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"taeewonnn"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"taeewonnn"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"taeewonnn"},"content":"        TagContainsKeywordsPredicate firstPredicateCopy \u003d new TagContainsKeywordsPredicate(firstPredicateKeywordSet);","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"taeewonnn"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"taeewonnn"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"taeewonnn"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"taeewonnn"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"taeewonnn"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"taeewonnn"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"taeewonnn"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"taeewonnn"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"taeewonnn"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"taeewonnn"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"taeewonnn"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e(Set.of(new Tag(\"friends\"), new Tag(\"colleagues\")));","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"taeewonnn"},"content":"        TagContainsKeywordsPredicate predicate \u003d new TagContainsKeywordsPredicate(tags);","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"taeewonnn"},"content":"        String expected \u003d TagContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + tags + \"}\";","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"taeewonnn"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"taeewonnn"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"taeewonnn"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"taeewonnn":50}},{"path":"src/test/java/seedu/address/model/util/SampleDataUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nusliuyifan"},"content":"package seedu.address.model.util;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"nusliuyifan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"nusliuyifan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"nusliuyifan"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"nusliuyifan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.model.EventBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.model.ReadOnlyEventBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"nusliuyifan"},"content":"public class SampleDataUtilTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"nusliuyifan"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"nusliuyifan"},"content":"    public void getSamplePersons_returnsArrayOfPersons() {","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"nusliuyifan"},"content":"        Person[] samplePersons \u003d SampleDataUtil.getSamplePersons();","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"nusliuyifan"},"content":"        assertEquals(6, samplePersons.length); // Assuming there are 6 sample persons","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"nusliuyifan"},"content":"        // Add more assertions if needed to verify the contents of the sample persons","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"nusliuyifan"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"nusliuyifan"},"content":"    public void getSampleEvents_returnsArrayOfEvents() {","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"nusliuyifan"},"content":"        Event[] sampleEvents \u003d SampleDataUtil.getSampleEvents();","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"nusliuyifan"},"content":"        assertEquals(1, sampleEvents.length); // Assuming there is 1 sample event","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"nusliuyifan"},"content":"        // Add more assertions if needed to verify the contents of the sample events","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"nusliuyifan"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"nusliuyifan"},"content":"    public void getSampleAddressBook_returnsReadOnlyAddressBook() {","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"nusliuyifan"},"content":"        ReadOnlyAddressBook sampleAddressBook \u003d SampleDataUtil.getSampleAddressBook();","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"nusliuyifan"},"content":"        assertTrue(sampleAddressBook instanceof AddressBook);","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"nusliuyifan"},"content":"        // Add more assertions if needed to verify the contents of the sample address book","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"nusliuyifan"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"nusliuyifan"},"content":"    public void getSampleEventBook_returnsReadOnlyEventBook() {","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"nusliuyifan"},"content":"        ReadOnlyEventBook sampleEventBook \u003d SampleDataUtil.getSampleEventBook();","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"nusliuyifan"},"content":"        assertTrue(sampleEventBook instanceof EventBook);","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"nusliuyifan"},"content":"        // Add more assertions if needed to verify the contents of the sample event book","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"nusliuyifan"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"nusliuyifan"},"content":"    public void getTagSet_returnsSetOfTags() {","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"nusliuyifan"},"content":"        Set\u003cTag\u003e tagSet \u003d SampleDataUtil.getTagSet(\"friends\", \"colleagues\");","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"nusliuyifan"},"content":"        assertEquals(2, tagSet.size());","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"nusliuyifan"},"content":"        assertTrue(tagSet.contains(new Tag(\"friends\")));","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"nusliuyifan"},"content":"        assertTrue(tagSet.contains(new Tag(\"colleagues\")));","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"nusliuyifan"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"nusliuyifan":55}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedEventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nusliuyifan"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"nusliuyifan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"nusliuyifan"},"content":"import static seedu.address.storage.JsonAdaptedEvent.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"nusliuyifan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"nusliuyifan"},"content":"import static seedu.address.testutil.TypicalEvents.getBingoEvent;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"nusliuyifan"},"content":"import java.util.List;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"nusliuyifan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"nusliuyifan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"import seedu.address.model.event.EventDate;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"nusliuyifan"},"content":"public class JsonAdaptedEventTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"nusliuyifan"},"content":"    private static final String INVALID_EVENTNAME \u003d \"R@chel\";","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"    private static final String VALID_EVENTDATE \u003d \"2024/04/05\";","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"nusliuyifan"},"content":"    private static final String VALID_EVENTNAME \u003d getBingoEvent().getEventName().toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"nusliuyifan"},"content":"    private static final List\u003cJsonAdaptedPerson\u003e VALID_PERSONS \u003d getBingoEvent().getPersonList().stream()","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"nusliuyifan"},"content":"            .map(JsonAdaptedPerson::new)","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"nusliuyifan"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"nusliuyifan"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"nusliuyifan"},"content":"    public void toModelType_validEventDetails_returnsEvent() throws Exception {","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"nusliuyifan"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(getBingoEvent());","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"nusliuyifan"},"content":"        assertEquals(getBingoEvent(), event.toModelType());","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"nusliuyifan"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"nusliuyifan"},"content":"    public void toModelType_invalidEventName_throwsIllegalValueException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"nusliuyifan"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"myang2020"},"content":"                new JsonAdaptedEvent(INVALID_EVENTNAME, VALID_EVENTDATE, VALID_PERSONS);","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"nusliuyifan"},"content":"        String expectedMessage \u003d EventName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"nusliuyifan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"nusliuyifan"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"nusliuyifan"},"content":"    public void toModelType_nullEventName_throwsIllegalValueException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"myang2020"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(null, VALID_EVENTDATE, VALID_PERSONS);","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"nusliuyifan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, EventName.class.getSimpleName());","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"nusliuyifan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"myang2020"},"content":"    public void toModelType_nullEventDate_throwsIllegalValueException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"myang2020"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(VALID_EVENTNAME, null, VALID_PERSONS);","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"myang2020"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, EventDate.class.getSimpleName());","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"myang2020"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"nusliuyifan"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"nusliuyifan":48,"myang2020":11}},{"path":"src/test/java/seedu/address/storage/JsonEventBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nusliuyifan"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"nusliuyifan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"nusliuyifan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"nusliuyifan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"nusliuyifan"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"nusliuyifan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"nusliuyifan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"nusliuyifan"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"nusliuyifan"},"content":"public class JsonEventBookStorageTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"nusliuyifan"},"content":"    @TempDir","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"nusliuyifan"},"content":"    public Path testFolder;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"nusliuyifan"},"content":"    private Path filePath;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"nusliuyifan"},"content":"    private JsonEventBookStorage jsonEventBookStorage;","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"nusliuyifan"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"nusliuyifan"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"nusliuyifan"},"content":"        filePath \u003d Paths.get(testFolder.toString(), \"testEventBook.json\");","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"nusliuyifan"},"content":"        jsonEventBookStorage \u003d new JsonEventBookStorage(filePath);","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"nusliuyifan"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"nusliuyifan"},"content":"    public void getEventBookFilePath() {","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"nusliuyifan"},"content":"        assertEquals(filePath, jsonEventBookStorage.getEventBookFilePath());","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"nusliuyifan"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"nusliuyifan"},"content":"    public void readEventBook_noSuchFile_returnsEmpty() throws DataLoadingException {","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"nusliuyifan"},"content":"        assertFalse(jsonEventBookStorage.readEventBook().isPresent());","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"nusliuyifan"},"content":"    // Add more tests as needed","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"nusliuyifan"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"nusliuyifan":41}},{"path":"src/test/java/seedu/address/storage/JsonSerializableEventBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nusliuyifan"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"nusliuyifan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"nusliuyifan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"nusliuyifan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"nusliuyifan"},"content":"import java.util.List;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"nusliuyifan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.model.EventBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"import seedu.address.model.event.EventDate;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"nusliuyifan"},"content":"public class JsonSerializableEventBookTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"nusliuyifan"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"nusliuyifan"},"content":"    public void toModelType_validEventDetails_success() throws IllegalValueException {","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"nusliuyifan"},"content":"        // Setup","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"nusliuyifan"},"content":"        UniquePersonList a \u003d new UniquePersonList();","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"nusliuyifan"},"content":"        a.setPersons(TypicalPersons.getTypicalPersons());","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"        JsonAdaptedEvent jsonEvent1 \u003d new JsonAdaptedEvent(new Event(new EventName(\"Event\"),","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"                new EventDate(\"05-07-2024\"), a));","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"myang2020"},"content":"        JsonAdaptedEvent jsonEvent2 \u003d new JsonAdaptedEvent(new Event(new EventName(\"Event2\"),","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"myang2020"},"content":"                new EventDate(\"05-07-2024\"), a));","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"nusliuyifan"},"content":"        List\u003cJsonAdaptedEvent\u003e jsonEvents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"nusliuyifan"},"content":"        jsonEvents.add(jsonEvent1);","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"nusliuyifan"},"content":"        jsonEvents.add(jsonEvent2);","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"nusliuyifan"},"content":"        JsonSerializableEventBook jsonEventBook \u003d new JsonSerializableEventBook(jsonEvents);","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"nusliuyifan"},"content":"        // Execute","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"nusliuyifan"},"content":"        EventBook eventBook \u003d jsonEventBook.toModelType();","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"nusliuyifan"},"content":"        // Verify","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"nusliuyifan"},"content":"        assertEquals(2, eventBook.getEventList().size());","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"myang2020"},"content":"        assertEquals(new Event(new EventName(\"Event\"), new EventDate(\"05-07-2024\"), a),","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"myang2020"},"content":"                eventBook.getEventList().get(0));","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"myang2020"},"content":"        assertEquals(new Event(new EventName(\"Event2\"), new EventDate(\"05-07-2024\"), a),","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"myang2020"},"content":"                eventBook.getEventList().get(1));","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"nusliuyifan"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"nusliuyifan"},"content":"    public void toModelType_duplicateEvents_throwsIllegalValueException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"nusliuyifan"},"content":"        // Setup","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"nusliuyifan"},"content":"        UniquePersonList a \u003d new UniquePersonList();","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"nusliuyifan"},"content":"        a.setPersons(TypicalPersons.getTypicalPersons());","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"myang2020"},"content":"        JsonAdaptedEvent jsonEvent1 \u003d new JsonAdaptedEvent(new Event(new EventName(\"Event\"),","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"myang2020"},"content":"                new EventDate(\"05-07-2024\"), a));","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"nusliuyifan"},"content":"        List\u003cJsonAdaptedEvent\u003e jsonEvents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"nusliuyifan"},"content":"        jsonEvents.add(jsonEvent1);","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"nusliuyifan"},"content":"        jsonEvents.add(jsonEvent1); // Duplicate event","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"nusliuyifan"},"content":"        JsonSerializableEventBook jsonEventBook \u003d new JsonSerializableEventBook(jsonEvents);","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"nusliuyifan"},"content":"        // Execute and Verify","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"nusliuyifan"},"content":"        assertThrows(IllegalValueException.class, jsonEventBook::toModelType);","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"nusliuyifan"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"nusliuyifan":50,"myang2020":11}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"nusliuyifan"},"content":"        JsonEventBookStorage eventBookStorage \u003d new JsonEventBookStorage(getTempFilePath(\"eb\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"nusliuyifan"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage, eventBookStorage);","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nusliuyifan":2,"-":67}},{"path":"src/test/java/seedu/address/testutil/EditEventDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import seedu.address.logic.commands.EditEventCommand.EditEventDescriptor;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"import seedu.address.model.event.EventDate;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":" * A utility class to help with building EditEventDescriptor objects.","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"public class EditEventDescriptorBuilder {","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"    private EditEventDescriptor descriptor;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"    public EditEventDescriptorBuilder() {","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"        descriptor \u003d new EditEventDescriptor();","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"    public EditEventDescriptorBuilder(EditEventDescriptor descriptor) {","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"        this.descriptor \u003d new EditEventDescriptor(descriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"    public EditEventDescriptorBuilder(Event event) {","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"        descriptor \u003d new EditEventDescriptor();","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"        descriptor.setName(event.getEventName());","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"    public EditEventDescriptorBuilder withName(String name) {","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"        descriptor.setName(new EventName(name));","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"        return this;","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"myang2020"},"content":"     * Sets the {@code Date} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"myang2020"},"content":"    public EditEventDescriptorBuilder withDate(String date) {","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"myang2020"},"content":"        descriptor.setDate(new EventDate(date));","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"myang2020"},"content":"        return this;","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"    public EditEventDescriptor build() {","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"        return descriptor;","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"Apzure":42,"myang2020":9}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Apzure":1,"-":86}},{"path":"src/test/java/seedu/address/testutil/EventBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nusliuyifan"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.model.EventBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"nusliuyifan"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"nusliuyifan"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"nusliuyifan"},"content":" * A utility class to help with building Eventbook objects.","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"nusliuyifan"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"nusliuyifan"},"content":" *     {@code EventBook ab \u003d new EventBookBuilder().withEvent(\"Magic card match\").build();}","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"nusliuyifan"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"nusliuyifan"},"content":"public class EventBookBuilder {","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"nusliuyifan"},"content":"    private EventBook eventBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"nusliuyifan"},"content":"    public EventBookBuilder() {","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"nusliuyifan"},"content":"        eventBook \u003d new EventBook();","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"nusliuyifan"},"content":"    public EventBookBuilder(EventBook eventBook) {","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"nusliuyifan"},"content":"        this.eventBook \u003d eventBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"nusliuyifan"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"nusliuyifan"},"content":"     * Adds a new {@code Event} to the {@code EventBook} that we are building.","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"nusliuyifan"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"nusliuyifan"},"content":"    public EventBookBuilder withEvent(Event event) {","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"nusliuyifan"},"content":"        eventBook.addEvent(event);","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"nusliuyifan"},"content":"        return this;","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"nusliuyifan"},"content":"    public EventBook build() {","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"nusliuyifan"},"content":"        return eventBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"nusliuyifan"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"nusliuyifan":34}},{"path":"src/test/java/seedu/address/testutil/EventBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"import java.util.List;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"import seedu.address.model.event.EventDate;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":" * A utility class to help with building Event objects.","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"public class EventBuilder {","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"    public static final String DEFAULT_EVENT_NAME \u003d \"Sample Event\";","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"    public static final String DEFAULT_EVENT_DATE \u003d \"05-07-2024\";","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"    private EventName eventName;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"    private EventDate eventDate;","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"    private List\u003cPerson\u003e personList;","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"     * Creates an {@code EventBuilder} with the default details.","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"    public EventBuilder() {","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"        eventName \u003d new EventName(DEFAULT_EVENT_NAME);","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"myang2020"},"content":"        eventDate \u003d new EventDate(DEFAULT_EVENT_DATE);","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"        personList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"     * Initializes the EventBuilder with the data of {@code eventToCopy}.","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"    public EventBuilder(Event eventToCopy) {","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"        eventName \u003d eventToCopy.getEventName();","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"myang2020"},"content":"        eventDate \u003d eventToCopy.getEventDate();","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"        personList \u003d eventToCopy.getPersonList();","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"     * Sets the {@code EventName} of the {@code Event} that we are building.","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"    public EventBuilder withEventName(String eventName) {","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"        this.eventName \u003d new EventName(eventName);","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"myang2020"},"content":"        this.eventDate \u003d new EventDate(DEFAULT_EVENT_DATE);","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"        return this;","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"     * Sets the {@code UniquePersonList} of the {@code Event} that we are building.","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"    public EventBuilder withPersonList(List\u003cPerson\u003e personList) {","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"        this.personList \u003d personList;","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"Apzure"},"content":"        return this;","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"Apzure"},"content":"     * Adds a person to the {@code UniquePersonList} of the {@code Event} that we are building.","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"Apzure"},"content":"    public EventBuilder withPerson(Person person) {","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"Apzure"},"content":"        this.personList.add(person);","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"Apzure"},"content":"        return this;","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"Apzure"},"content":"     * Builds the event based on the fields filled in earlier","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"Apzure"},"content":"     * @return event with fields","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"Apzure"},"content":"    public Event build() {","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"myang2020"},"content":"        Event event \u003d new Event(eventName, eventDate);","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"Apzure"},"content":"        event.setPersons(personList);","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"Apzure"},"content":"        return event;","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Apzure":68,"myang2020":8}},{"path":"src/test/java/seedu/address/testutil/ModelStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"myang2020"},"content":"import seedu.address.model.ReadOnlyEventBook;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"myang2020"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":" * A stub class for Model.","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"public class ModelStub implements Model {","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"myang2020"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"myang2020"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"myang2020"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"nusliuyifan"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"nusliuyifan"},"content":"    public Path getEventBookFilePath() {","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"nusliuyifan"},"content":"        throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"myang2020"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"nusliuyifan"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"nusliuyifan"},"content":"    public void setEventBookFilePath(Path eventBookFilePath) {","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"nusliuyifan"},"content":"        throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"nusliuyifan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"myang2020"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"myang2020"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"myang2020"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"myang2020"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"myang2020"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"myang2020"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"myang2020"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"myang2020"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"myang2020"},"content":"    public void setEventBook(ReadOnlyEventBook eventBook) {","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"myang2020"},"content":"    public ReadOnlyEventBook getEventBook() {","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"myang2020"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"myang2020"},"content":"    public void deleteEvent(Event target) {","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":120,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"myang2020"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":125,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":126,"author":{"gitId":"myang2020"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2024-03-17"},{"lineNumber":127,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":128,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":129,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":130,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"myang2020"},"content":"    public boolean isAnEventSelected() {","lastModifiedDate":"2024-03-17"},{"lineNumber":132,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":133,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":135,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":136,"author":{"gitId":"taeewonnn"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":137,"author":{"gitId":"taeewonnn"},"content":"    public boolean isSameSelectedEvent(Event event) {","lastModifiedDate":"2024-03-20"},{"lineNumber":138,"author":{"gitId":"taeewonnn"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":139,"author":{"gitId":"taeewonnn"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":140,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":141,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":142,"author":{"gitId":"myang2020"},"content":"    public void selectEvent(Event event) {","lastModifiedDate":"2024-03-17"},{"lineNumber":143,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":144,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":145,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":146,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":147,"author":{"gitId":"myang2020"},"content":"    public void deselectEvent() {","lastModifiedDate":"2024-03-17"},{"lineNumber":148,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":149,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":150,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":151,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":152,"author":{"gitId":"myang2020"},"content":"    public boolean isPersonInSelectedEvent(Person person) {","lastModifiedDate":"2024-03-17"},{"lineNumber":153,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":154,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":155,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":156,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":157,"author":{"gitId":"myang2020"},"content":"    public void addPersonToSelectedEvent(Person person) {","lastModifiedDate":"2024-03-17"},{"lineNumber":158,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":159,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":160,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":161,"author":{"gitId":"ChocoRagdoll"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":162,"author":{"gitId":"ChocoRagdoll"},"content":"    public void deletePersonFromSelectedEvent(Person person) {","lastModifiedDate":"2024-03-20"},{"lineNumber":163,"author":{"gitId":"ChocoRagdoll"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":164,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":165,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":166,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":167,"author":{"gitId":"Apzure"},"content":"    public ObservableValue\u003cEvent\u003e getSelectedEvent() {","lastModifiedDate":"2024-03-26"},{"lineNumber":168,"author":{"gitId":"Apzure"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-26"},{"lineNumber":169,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":170,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":171,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":172,"author":{"gitId":"myang2020"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2024-03-17"},{"lineNumber":173,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":174,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":175,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":176,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":177,"author":{"gitId":"myang2020"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonListOfSelectedEvent() {","lastModifiedDate":"2024-03-17"},{"lineNumber":178,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":179,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":180,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":181,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":182,"author":{"gitId":"Apzure"},"content":"    public void updateFilteredPersonListOfSelectedEvent(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2024-04-03"},{"lineNumber":183,"author":{"gitId":"Apzure"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-03"},{"lineNumber":184,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":185,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":186,"author":{"gitId":"ChocoRagdoll"},"content":"    public void exportEventPersonData(boolean shouldExportName, boolean shouldExportPhone,","lastModifiedDate":"2024-04-02"},{"lineNumber":187,"author":{"gitId":"ChocoRagdoll"},"content":"                                      boolean shouldExportEmail, boolean shouldExportAddress) {","lastModifiedDate":"2024-04-02"},{"lineNumber":188,"author":{"gitId":"ChocoRagdoll"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":189,"author":{"gitId":"ChocoRagdoll"},"content":"    };","lastModifiedDate":"2024-04-02"},{"lineNumber":190,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":191,"author":{"gitId":"ChocoRagdoll"},"content":"    public void exportGlobalPersonData(boolean shouldExportName, boolean shouldExportPhone,","lastModifiedDate":"2024-04-02"},{"lineNumber":192,"author":{"gitId":"ChocoRagdoll"},"content":"                                       boolean shouldExportEmail, boolean shouldExportAddress) {","lastModifiedDate":"2024-04-02"},{"lineNumber":193,"author":{"gitId":"ChocoRagdoll"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":194,"author":{"gitId":"ChocoRagdoll"},"content":"    };","lastModifiedDate":"2024-04-02"},{"lineNumber":195,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":196,"author":{"gitId":"myang2020"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"Apzure":11,"nusliuyifan":10,"ChocoRagdoll":14,"taeewonnn":6,"myang2020":155}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"Apzure":1,"-":61}},{"path":"src/test/java/seedu/address/testutil/TypicalEvents.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.EventBook;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":" * A utility class containing a list of {@code Event} objects to be used in tests.","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"public class TypicalEvents {","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"    private TypicalEvents() {","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"    } // prevents instantiation","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"     * Returns the getBingoEvent() event.","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"    public static Event getBingoEvent() {","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"        return new EventBuilder().withEventName(\"bingo\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"     * Returns the getHikingEvent() event.","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"    public static Event getHikingEvent() {","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"        return new EventBuilder().withEventName(\"hiking\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"myang2020"},"content":"     * Returns the CONCERT event.","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"myang2020"},"content":"    public static Event getConcertEvent() {","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"myang2020"},"content":"        return new EventBuilder().withEventName(\"concert\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"myang2020"},"content":"     * Returns the PARTY event.","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"myang2020"},"content":"    public static Event getPartyEvent() {","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"myang2020"},"content":"        return new EventBuilder().withEventName(\"party\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"myang2020"},"content":"     * Returns the CONFERENCE event.","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"myang2020"},"content":"    public static Event getConferenceEvent() {","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"myang2020"},"content":"        return new EventBuilder().withEventName(\"conference\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"     * Returns an {@code EventBook} with all the typical events.","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"    public static EventBook getTypicalEventBook() {","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"        EventBook eventBook \u003d new EventBook();","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"        for (Event event : getTypicalEvents()) {","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"            eventBook.addEvent(event);","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"Apzure"},"content":"        return eventBook;","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"myang2020"},"content":"     * Returns an {@code EventBook} with all the typical events.","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"Apzure"},"content":"    public static Event[] getTypicalEvents() {","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"myang2020"},"content":"        Event bingo \u003d getBingoEvent();","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"myang2020"},"content":"        Event hiking \u003d getHikingEvent();","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"myang2020"},"content":"        Event concert \u003d getConcertEvent();","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"myang2020"},"content":"        Event party \u003d getPartyEvent();","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"myang2020"},"content":"        Event conference \u003d getConferenceEvent();","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"myang2020"},"content":"        return new Event[]{bingo, hiking, concert, party, conference};","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Apzure":27,"myang2020":44}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"taeewonnn"},"content":"    public static final Index INDEX_FIRST_EVENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"taeewonnn"},"content":"    public static final Index INDEX_SECOND_EVENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"-":12,"taeewonnn":2}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"\u003c?import seedu.address.ui.TestFxmlObject?\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"seedu.address.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Apzure":1,"-":6}}]
