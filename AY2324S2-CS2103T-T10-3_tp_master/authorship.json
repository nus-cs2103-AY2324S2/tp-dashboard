[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ChocoRagdoll"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-T10-3/tp/actions)","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103T-T10-3/tp/graph/badge.svg?token\u003dGBPS86G6DT)](https://codecov.io/gh/AY2324S2-CS2103T-T10-3/tp)","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"ChocoRagdoll"},"content":"### Eventy","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"ChocoRagdoll"},"content":"* This CLI application serves as an event planner tailored for event planners in halls, facilitating efficient management of participants and events. This is a CLI application that is desgined for users who type fast\u003cbr\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    * as a starting point of a course project (as opposed to writing everything from scratch)","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    * as a case study","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"ChocoRagdoll"},"content":"### What does this do","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"ChocoRagdoll"},"content":"* The project is tailored specifically for student event organizers and offers a new standard of convenient and easy event planning.","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"ChocoRagdoll"},"content":"* The application is targeted towards users who type fast and are used to CLI application.","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"* The project simulates an ongoing software project for a desktop application (called _AddressBook_) used for managing contact details.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"ChocoRagdoll"},"content":"* It is named `Eventy` (`ET` for short) because we want to insert playfulness and efficiency into event planning. Plus it reminds you of a certain character! doesn\u0027t it :)","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* For the detailed documentation of this project, see the **[Address Book Product Website](https://se-education.org/addressbook-level3)**.","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* This project is a **part of the se-education.org** initiative. If you would like to contribute code to this project, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"ChocoRagdoll"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"ChocoRagdoll":10,"-":12}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"We are the developer team of event management app Eventy, based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"### Nigel Lee","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":"\u003cimg src\u003d\"images/apzure.png\" width\u003d\"200px\" height\u003d\"250px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"myang2020"},"content":"[[github](https://github.com/Apzure)]","lastModifiedDate":"2024-02-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"myang2020"},"content":"* Roles: Team Lead and Scheduling and Tracking, in charge of Model","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"### Han Taeweon","lastModifiedDate":"2024-02-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"\u003cimg src\u003d\"images/taeewonnn.png\" width\u003d\"200px\" height\u003d\"250px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"[[github](https://github.com/taeewonnn)]","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"* Roles: Documentation, Deliverables and Deadlines, Git Expert","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"### Max Yang","lastModifiedDate":"2024-02-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"\u003cimg src\u003d\"images/myang2020.png\" width\u003d\"200px\" height\u003d\"250px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"[[github](https://github.com/myang2020)]","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"myang2020"},"content":"* Roles: Testing, in charge of Logic","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"myang2020"},"content":"### Liu Yifan","lastModifiedDate":"2024-02-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"myang2020"},"content":"\u003cimg src\u003d\"images/nusliuyifan.png\" width\u003d\"200px\" height\u003d\"250px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"myang2020"},"content":"[[github](https://github.com/nusliuyifan)]","lastModifiedDate":"2024-02-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"myang2020"},"content":"* Roles: Integration, in charge of Storage","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"myang2020"},"content":"### Yichao Song","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"myang2020"},"content":"\u003cimg src\u003d\"images/chocoragdoll.png\" width\u003d\"200px\" height\u003d\"250px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"myang2020"},"content":"[[github](https://github.com/ChocoRagdoll)]","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"myang2020"},"content":"* Roles: Code Quality, in charge of UI","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"-":25,"myang2020":21}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# AB-3 Developer Guide","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well }_","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Logic.puml\" alt\u003d\"UndoSequenceDiagram-Logic\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Model.puml\" alt\u003d\"UndoSequenceDiagram-Model\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":267,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"taeewonnn"},"content":"* Active members of university clubs and societies or school event committees","lastModifiedDate":"2024-03-21"},{"lineNumber":278,"author":{"gitId":"taeewonnn"},"content":"* Tech-savvy and reasonably comfortable with digital tools","lastModifiedDate":"2024-03-21"},{"lineNumber":279,"author":{"gitId":"taeewonnn"},"content":"* Fast typer","lastModifiedDate":"2024-03-21"},{"lineNumber":280,"author":{"gitId":"taeewonnn"},"content":"* Managing multiple events that range from small-scale meetings to large school-wide events","lastModifiedDate":"2024-03-21"},{"lineNumber":281,"author":{"gitId":"taeewonnn"},"content":"* Frequently communicating and coordinating with a variety of contacts including vendors, participants, volunteers, and school administrators","lastModifiedDate":"2024-03-21"},{"lineNumber":282,"author":{"gitId":"taeewonnn"},"content":"* Task driven with a need to balance multiple deadlines and responsibilities simultaneously","lastModifiedDate":"2024-03-21"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"taeewonnn"},"content":"**Value proposition**:","lastModifiedDate":"2024-03-21"},{"lineNumber":285,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":286,"author":{"gitId":"taeewonnn"},"content":"The evolved AB3 contact management application, tailored specifically for student event organizers, offers a new standard of streamlined and automated contact organization. It serves as your single source of truth for storing,","lastModifiedDate":"2024-03-21"},{"lineNumber":287,"author":{"gitId":"taeewonnn"},"content":"managing, and retrieving all contact-related information.","lastModifiedDate":"2024-03-21"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                 | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"|----------|--------------------------------------------|------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2023-09-12"},{"lineNumber":296,"author":{"gitId":"taeewonnn"},"content":"| `* * *`  | user                                       | create a new event           | plan and manage all the events that in one place                       |","lastModifiedDate":"2024-03-21"},{"lineNumber":297,"author":{"gitId":"taeewonnn"},"content":"| `* * *`  | user                                       | add a new person             | manage all my contacts in one place                                    |","lastModifiedDate":"2024-03-21"},{"lineNumber":298,"author":{"gitId":"taeewonnn"},"content":"| `* * *`  | user                                       | add participant to an event  | manage and plan all the participant for a specific event               |","lastModifiedDate":"2024-03-21"},{"lineNumber":299,"author":{"gitId":"taeewonnn"},"content":"| `* * *`  | user                                       | delete a person              | remove contacts that I no longer need                                  |","lastModifiedDate":"2024-03-21"},{"lineNumber":300,"author":{"gitId":"taeewonnn"},"content":"| `* * *`  | user                                       | remove specific participant  | remove a specific participant from a specific event                    |","lastModifiedDate":"2024-03-21"},{"lineNumber":301,"author":{"gitId":"taeewonnn"},"content":"| `* *`    | diligent user                              | edit contact information     | update contact information whenever necessary                          |","lastModifiedDate":"2024-03-21"},{"lineNumber":302,"author":{"gitId":"taeewonnn"},"content":"| `* *`    | user                                       | select a specific event      | search events by name without having to manually search","lastModifiedDate":"2024-03-21"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"taeewonnn"},"content":"--------------------------------------------------------","lastModifiedDate":"2024-03-21"},{"lineNumber":308,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":309,"author":{"gitId":"taeewonnn"},"content":"### Creating an Event","lastModifiedDate":"2024-03-21"},{"lineNumber":310,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":311,"author":{"gitId":"taeewonnn"},"content":"**Use Case: UC01 - Create an event**","lastModifiedDate":"2024-03-21"},{"lineNumber":312,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":313,"author":{"gitId":"taeewonnn"},"content":"**Actor:** User","lastModifiedDate":"2024-03-21"},{"lineNumber":314,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":315,"author":{"gitId":"taeewonnn"},"content":"**MSS:**","lastModifiedDate":"2024-03-21"},{"lineNumber":316,"author":{"gitId":"taeewonnn"},"content":"1. User provides the details of an event to be created.","lastModifiedDate":"2024-03-21"},{"lineNumber":317,"author":{"gitId":"taeewonnn"},"content":"2. Eventy displays the details of the event added by the User in the Event List.","lastModifiedDate":"2024-03-21"},{"lineNumber":318,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":319,"author":{"gitId":"taeewonnn"},"content":"*Use case ends*","lastModifiedDate":"2024-03-21"},{"lineNumber":320,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":321,"author":{"gitId":"taeewonnn"},"content":"**Extensions:**","lastModifiedDate":"2024-03-21"},{"lineNumber":322,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":323,"author":{"gitId":"taeewonnn"},"content":"1a. Details provided by User are incomplete or invalid.","lastModifiedDate":"2024-03-21"},{"lineNumber":324,"author":{"gitId":"taeewonnn"},"content":"- 1a1. Eventy displays an error message to alert the User. \u003c/br\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":325,"author":{"gitId":"taeewonnn"},"content":"  *Use case ends*","lastModifiedDate":"2024-03-21"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"taeewonnn"},"content":"1b. Event to be added already exists in Eventy.","lastModifiedDate":"2024-03-21"},{"lineNumber":328,"author":{"gitId":"taeewonnn"},"content":"- 1b1. Eventy displays an error message to alert the User. \u003c/br\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":329,"author":{"gitId":"taeewonnn"},"content":"  *Use case ends*","lastModifiedDate":"2024-03-21"},{"lineNumber":330,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":331,"author":{"gitId":"taeewonnn"},"content":"### Deleting an event","lastModifiedDate":"2024-03-21"},{"lineNumber":332,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":333,"author":{"gitId":"taeewonnn"},"content":"**Use case: UC02 - Delete an event**","lastModifiedDate":"2024-03-21"},{"lineNumber":334,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":335,"author":{"gitId":"taeewonnn"},"content":"**Actor:** User","lastModifiedDate":"2024-03-21"},{"lineNumber":336,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":337,"author":{"gitId":"taeewonnn"},"content":"**Preconditions:** User has added at least one event.","lastModifiedDate":"2024-03-21"},{"lineNumber":338,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":339,"author":{"gitId":"taeewonnn"},"content":"**Guarantees:**","lastModifiedDate":"2024-03-21"},{"lineNumber":340,"author":{"gitId":"taeewonnn"},"content":"A successful deletion deletes an event from the event list.","lastModifiedDate":"2024-03-21"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"taeewonnn"},"content":"1.  Eventy shows a list of events.","lastModifiedDate":"2024-03-21"},{"lineNumber":345,"author":{"gitId":"taeewonnn"},"content":"2.  User requests to delete a specific event in the list.","lastModifiedDate":"2024-03-21"},{"lineNumber":346,"author":{"gitId":"taeewonnn"},"content":"3.  Eventy deletes the event.","lastModifiedDate":"2024-03-21"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"taeewonnn"},"content":"*Use case ends*","lastModifiedDate":"2024-03-21"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"taeewonnn"},"content":"**Extensions:**","lastModifiedDate":"2024-03-21"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"taeewonnn"},"content":"1a. The list is empty. \u003c/br\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":353,"author":{"gitId":"taeewonnn"},"content":"- 1a1. Eventy displays an error message to alert the User. \u003c/br\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":354,"author":{"gitId":"taeewonnn"},"content":"  *Use case ends*","lastModifiedDate":"2024-03-21"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"taeewonnn"},"content":"2a.  Details provided by User are incomplete or invalid.","lastModifiedDate":"2024-03-21"},{"lineNumber":357,"author":{"gitId":"taeewonnn"},"content":"- 2a1. Eventy displays an error message to alert the User. \u003c/br\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":358,"author":{"gitId":"taeewonnn"},"content":"  *Use case resumes at step 2.*","lastModifiedDate":"2024-03-21"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"taeewonnn"},"content":"### Adding participants contact to the global list","lastModifiedDate":"2024-03-21"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"taeewonnn"},"content":"**Use case: UC03 - Add participants contact**","lastModifiedDate":"2024-03-21"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"taeewonnn"},"content":"**Actor:** User","lastModifiedDate":"2024-03-21"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"taeewonnn"},"content":"**Guarantees:**","lastModifiedDate":"2024-03-21"},{"lineNumber":367,"author":{"gitId":"taeewonnn"},"content":"A successful addition adds a participant to the global list.","lastModifiedDate":"2024-03-21"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"taeewonnn"},"content":"**MSS**","lastModifiedDate":"2024-03-21"},{"lineNumber":370,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":371,"author":{"gitId":"taeewonnn"},"content":"1.  User provides the detail of the contact to be added.","lastModifiedDate":"2024-03-21"},{"lineNumber":372,"author":{"gitId":"taeewonnn"},"content":"2.  Eventy displays the details of the contact added by the user. \u003c/br\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":373,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":374,"author":{"gitId":"taeewonnn"},"content":"*Use case ends*","lastModifiedDate":"2024-03-21"},{"lineNumber":375,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":376,"author":{"gitId":"taeewonnn"},"content":"**Extensions:**","lastModifiedDate":"2024-03-21"},{"lineNumber":377,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":378,"author":{"gitId":"taeewonnn"},"content":"1a.  Details provided by User are incomplete or invalid","lastModifiedDate":"2024-03-21"},{"lineNumber":379,"author":{"gitId":"taeewonnn"},"content":"- 1a1. Eventy displays an error message to alert the User. \u003c/br\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":380,"author":{"gitId":"taeewonnn"},"content":"  *Use case ends*","lastModifiedDate":"2024-03-21"},{"lineNumber":381,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":382,"author":{"gitId":"taeewonnn"},"content":"### Deleting participant","lastModifiedDate":"2024-03-21"},{"lineNumber":383,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":384,"author":{"gitId":"taeewonnn"},"content":"**Use Case: UC04 - Delete a participant from the global participant list**","lastModifiedDate":"2024-03-21"},{"lineNumber":385,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":386,"author":{"gitId":"taeewonnn"},"content":"**Actor:** User","lastModifiedDate":"2024-03-21"},{"lineNumber":387,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":388,"author":{"gitId":"taeewonnn"},"content":"**Preconditions:**","lastModifiedDate":"2024-03-21"},{"lineNumber":389,"author":{"gitId":"taeewonnn"},"content":"User has added one or more participant to the global participant list.","lastModifiedDate":"2024-03-21"},{"lineNumber":390,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":391,"author":{"gitId":"taeewonnn"},"content":"**Guarantees:**","lastModifiedDate":"2024-03-21"},{"lineNumber":392,"author":{"gitId":"taeewonnn"},"content":"A successful deletion deletes the participant from both the global list and all the events he participates in.","lastModifiedDate":"2024-03-21"},{"lineNumber":393,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":394,"author":{"gitId":"taeewonnn"},"content":"**MSS:**","lastModifiedDate":"2024-03-21"},{"lineNumber":395,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":396,"author":{"gitId":"taeewonnn"},"content":"1. User deletes a participant.","lastModifiedDate":"2024-03-21"},{"lineNumber":397,"author":{"gitId":"taeewonnn"},"content":"2. Eventy displays the updated global participant list. \u003c/br\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":398,"author":{"gitId":"taeewonnn"},"content":"   *Use case ends*","lastModifiedDate":"2024-03-21"},{"lineNumber":399,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":400,"author":{"gitId":"taeewonnn"},"content":"**Extensions:**","lastModifiedDate":"2024-03-21"},{"lineNumber":401,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":402,"author":{"gitId":"taeewonnn"},"content":"1a. Participant index provided by the User is invalid.","lastModifiedDate":"2024-03-21"},{"lineNumber":403,"author":{"gitId":"taeewonnn"},"content":"- 1a1. Eventy displays an error message to alert the User. \u003c/br\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":404,"author":{"gitId":"taeewonnn"},"content":"  *Use case resumes at step 2.*","lastModifiedDate":"2024-03-21"},{"lineNumber":405,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":406,"author":{"gitId":"taeewonnn"},"content":"### Removing participants from a specific event","lastModifiedDate":"2024-03-21"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"taeewonnn"},"content":"**Use case: UC05 - Remove a participant from the specified event**","lastModifiedDate":"2024-03-21"},{"lineNumber":409,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":410,"author":{"gitId":"taeewonnn"},"content":"**Actor:** User","lastModifiedDate":"2024-03-21"},{"lineNumber":411,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":412,"author":{"gitId":"taeewonnn"},"content":"**Preconditions:** User has added one or more participant to the specified event.","lastModifiedDate":"2024-03-21"},{"lineNumber":413,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":414,"author":{"gitId":"taeewonnn"},"content":"**MSS:**","lastModifiedDate":"2024-03-21"},{"lineNumber":415,"author":{"gitId":"taeewonnn"},"content":"1. User requests to remove a participant from a certain event.","lastModifiedDate":"2024-03-21"},{"lineNumber":416,"author":{"gitId":"taeewonnn"},"content":"2. Eventy remove the participant from the event. \u003c/br\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":417,"author":{"gitId":"taeewonnn"},"content":"   *Use case ends*","lastModifiedDate":"2024-03-21"},{"lineNumber":418,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":419,"author":{"gitId":"taeewonnn"},"content":"**Extensions:**","lastModifiedDate":"2024-03-21"},{"lineNumber":420,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":421,"author":{"gitId":"taeewonnn"},"content":"1a. The event index provided by the User is invalid.","lastModifiedDate":"2024-03-21"},{"lineNumber":422,"author":{"gitId":"taeewonnn"},"content":"- 1a1. Eventy displays an error message to alert the User. \u003c/br\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":423,"author":{"gitId":"taeewonnn"},"content":"  *Use case ends*","lastModifiedDate":"2024-03-21"},{"lineNumber":424,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":425,"author":{"gitId":"taeewonnn"},"content":"1b. Participant index provided by the User is invalid.","lastModifiedDate":"2024-03-21"},{"lineNumber":426,"author":{"gitId":"taeewonnn"},"content":"- 1a1. Eventy displays an error message to alert the User. \u003c/br\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":427,"author":{"gitId":"taeewonnn"},"content":"  *Use case ends*","lastModifiedDate":"2024-03-21"},{"lineNumber":428,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":429,"author":{"gitId":"taeewonnn"},"content":"### Selecting an event","lastModifiedDate":"2024-03-21"},{"lineNumber":430,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":431,"author":{"gitId":"taeewonnn"},"content":"**Use Case: UC06 - Select an event from the event list**","lastModifiedDate":"2024-03-21"},{"lineNumber":432,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":433,"author":{"gitId":"taeewonnn"},"content":"**Actor:** User","lastModifiedDate":"2024-03-21"},{"lineNumber":434,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":435,"author":{"gitId":"taeewonnn"},"content":"**Preconditions:** User has added one or more events to the event list.","lastModifiedDate":"2024-03-21"},{"lineNumber":436,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":437,"author":{"gitId":"taeewonnn"},"content":"**Guarantees:**","lastModifiedDate":"2024-03-21"},{"lineNumber":438,"author":{"gitId":"taeewonnn"},"content":"A successful selection displays the event details.","lastModifiedDate":"2024-03-21"},{"lineNumber":439,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":440,"author":{"gitId":"taeewonnn"},"content":"**MSS:**","lastModifiedDate":"2024-03-21"},{"lineNumber":441,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":442,"author":{"gitId":"taeewonnn"},"content":"1. User selects an event.","lastModifiedDate":"2024-03-21"},{"lineNumber":443,"author":{"gitId":"taeewonnn"},"content":"2. Eventy displays the details of the selected event. \u003c/br\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":444,"author":{"gitId":"taeewonnn"},"content":"   *Use case ends*","lastModifiedDate":"2024-03-21"},{"lineNumber":445,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":446,"author":{"gitId":"taeewonnn"},"content":"**Extensions:**","lastModifiedDate":"2024-03-21"},{"lineNumber":447,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":448,"author":{"gitId":"taeewonnn"},"content":"1a. Event index provided by User is invalid.","lastModifiedDate":"2024-03-21"},{"lineNumber":449,"author":{"gitId":"taeewonnn"},"content":"- 1a1. Eventy displays an error message to alert the User. \u003c/br\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":450,"author":{"gitId":"taeewonnn"},"content":"  *Use case ends*","lastModifiedDate":"2024-03-21"},{"lineNumber":451,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":452,"author":{"gitId":"taeewonnn"},"content":"### Add a participant to an event","lastModifiedDate":"2024-03-21"},{"lineNumber":453,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":454,"author":{"gitId":"taeewonnn"},"content":"**Use Case: UC07 - Add a participant to an event**","lastModifiedDate":"2024-03-21"},{"lineNumber":455,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":456,"author":{"gitId":"taeewonnn"},"content":"**Actor:** User","lastModifiedDate":"2024-03-21"},{"lineNumber":457,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":458,"author":{"gitId":"taeewonnn"},"content":"**Preconditions:**","lastModifiedDate":"2024-03-21"},{"lineNumber":459,"author":{"gitId":"taeewonnn"},"content":"User has added one or more contacts to the global contact list.","lastModifiedDate":"2024-03-21"},{"lineNumber":460,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":461,"author":{"gitId":"taeewonnn"},"content":"**Guarantees:**","lastModifiedDate":"2024-03-21"},{"lineNumber":462,"author":{"gitId":"taeewonnn"},"content":"A successful addition adds a participant from the global list to the selected event.","lastModifiedDate":"2024-03-21"},{"lineNumber":463,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":464,"author":{"gitId":"taeewonnn"},"content":"**MSS:**","lastModifiedDate":"2024-03-21"},{"lineNumber":465,"author":{"gitId":"taeewonnn"},"content":"1. User inputs the index of participant to be added.","lastModifiedDate":"2024-03-21"},{"lineNumber":466,"author":{"gitId":"taeewonnn"},"content":"2. Eventy displays the added participant in the panel showing list of participants in selected event. \u003c/br\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":467,"author":{"gitId":"taeewonnn"},"content":"   *Use case ends*","lastModifiedDate":"2024-03-21"},{"lineNumber":468,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":469,"author":{"gitId":"taeewonnn"},"content":"**Extensions:**","lastModifiedDate":"2024-03-21"},{"lineNumber":470,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":471,"author":{"gitId":"taeewonnn"},"content":"1a. Index provided by user is invalid/out of range of global contact list.","lastModifiedDate":"2024-03-21"},{"lineNumber":472,"author":{"gitId":"taeewonnn"},"content":"- 1a1. Eventy displays an error message to alert the User. \u003c/br\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":473,"author":{"gitId":"taeewonnn"},"content":"  *Use case ends*","lastModifiedDate":"2024-03-21"},{"lineNumber":474,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":475,"author":{"gitId":"taeewonnn"},"content":"1b. Contact to be added already exists in selected event.","lastModifiedDate":"2024-03-21"},{"lineNumber":476,"author":{"gitId":"taeewonnn"},"content":"- 1b1. Eventy displays an error message to alert the User. \u003c/br\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":477,"author":{"gitId":"taeewonnn"},"content":"  *Use case ends*","lastModifiedDate":"2024-03-21"},{"lineNumber":478,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":479,"author":{"gitId":"taeewonnn"},"content":"1b. User does not provide an index.","lastModifiedDate":"2024-03-21"},{"lineNumber":480,"author":{"gitId":"taeewonnn"},"content":"- 1b1. Eventy displays an error message to alert the User. \u003c/br\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":481,"author":{"gitId":"taeewonnn"},"content":"  *Use case ends*","lastModifiedDate":"2024-03-21"},{"lineNumber":482,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":483,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":484,"author":{"gitId":"taeewonnn"},"content":"### Non-Functional Requirements","lastModifiedDate":"2024-03-21"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"taeewonnn"},"content":"1. The user should be able to use the application smoothly with a device running mainstream OS with Java 11 or above installed.","lastModifiedDate":"2024-03-21"},{"lineNumber":487,"author":{"gitId":"taeewonnn"},"content":"2. The application should be able to store up to 1000 participants and 50 events without a reduction in speed.","lastModifiedDate":"2024-03-21"},{"lineNumber":488,"author":{"gitId":"taeewonnn"},"content":"3. A user familiar with CLI applications with a reasonable typing speed should be able to navigate commands faster than using the mouse.","lastModifiedDate":"2024-03-21"},{"lineNumber":489,"author":{"gitId":"taeewonnn"},"content":"4. The user interface should be simple, clear, easily understandable and fast to navigate.","lastModifiedDate":"2024-03-21"},{"lineNumber":490,"author":{"gitId":"taeewonnn"},"content":"5. The application should gracefully handle errors by displaying error messages to prevent system crashes and data corruption.","lastModifiedDate":"2024-03-21"},{"lineNumber":491,"author":{"gitId":"taeewonnn"},"content":"6. The application should be released as a free application to the general public.","lastModifiedDate":"2024-03-21"},{"lineNumber":492,"author":{"gitId":"taeewonnn"},"content":"7. The average command response time of Eventy should be less than a second.","lastModifiedDate":"2024-03-21"},{"lineNumber":493,"author":{"gitId":"taeewonnn"},"content":"8. The application should consume no more than 200Mb of memory when holding less than 1000 participants and 50 events.","lastModifiedDate":"2024-03-21"},{"lineNumber":494,"author":{"gitId":"taeewonnn"},"content":"9. The application should launch in less than 5 seconds.","lastModifiedDate":"2024-03-21"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"taeewonnn"},"content":"* **Mainstream OS:** Windows, Linux, Unix, OS-X","lastModifiedDate":"2024-03-21"},{"lineNumber":499,"author":{"gitId":"taeewonnn"},"content":"* **Eventy:** Name of the application.","lastModifiedDate":"2024-03-21"},{"lineNumber":500,"author":{"gitId":"taeewonnn"},"content":"* **Global participant list:** List of participants that are saved in the application.","lastModifiedDate":"2024-03-21"},{"lineNumber":501,"author":{"gitId":"taeewonnn"},"content":"* **Event list:** List of events created in the application to be managed.","lastModifiedDate":"2024-03-21"},{"lineNumber":502,"author":{"gitId":"taeewonnn"},"content":"* **Event participant list:** List of participants in the specific event.","lastModifiedDate":"2024-03-21"},{"lineNumber":503,"author":{"gitId":"taeewonnn"},"content":"* **Participant:** The contact whose information is stored in the application storage.","lastModifiedDate":"2024-03-21"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":513,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":514,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":362,"taeewonnn":196}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"User Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"taeewonnn"},"content":"# Eventy User Guide","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"taeewonnn"},"content":"Eventy is a contact management application, tailored specifically for student event organizers, offers a new standard of streamlined and automated contact organization. It serves as your single source of truth for storing, managing, and retrieving all contact-related information.","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"2. Download the latest `eventy.jar` from [here](https://github.com/se-edu/addressbook-level3/releases).","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your Eventy.","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar eventy.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"5. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"### Creating an event: `addev`","lastModifiedDate":"2024-03-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"ChocoRagdoll"},"content":"**Format:** `addev ev/ \u003cevent name\u003e`","lastModifiedDate":"2024-03-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"**Description:**","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"Adds a new event with the specified name for the Event List.","lastModifiedDate":"2024-03-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"* `\u003cevent name\u003e` should be **alphanumeric**, **non-empty** and **not longer than 64 characters**.","lastModifiedDate":"2024-03-05"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"* Adding an event with a name that already exists, regardless of case, is **not allowed.**","lastModifiedDate":"2024-03-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"**Examples:**","lastModifiedDate":"2024-03-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"ChocoRagdoll"},"content":"- `addev ev/ Orientation camp` adds a new event with the name `Orientation camp`.","lastModifiedDate":"2024-03-22"},{"lineNumber":53,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"taeewonnn"},"content":"### Deleting an event: `delev`","lastModifiedDate":"2024-03-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"taeewonnn"},"content":"**Format:** `delev \u003cindex\u003e`","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"taeewonnn"},"content":"**Description:**","lastModifiedDate":"2024-03-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"taeewonnn"},"content":"Deletes an event and all its relevant information with its index in the event list.","lastModifiedDate":"2024-03-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"taeewonnn"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"taeewonnn"},"content":"**Caution:**","lastModifiedDate":"2024-03-05"},{"lineNumber":66,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"taeewonnn"},"content":"* `\u003cindex\u003e` should be **numeric** and **non-empty**.","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"taeewonnn"},"content":"  \u003c/box\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"taeewonnn"},"content":"**Examples:**","lastModifiedDate":"2024-03-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"taeewonnn"},"content":"- `delev 1` deletes the 1st event in the displayed list.","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"taeewonnn"},"content":"### Adding participant and their information to the global participant list: `addp`","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"nusliuyifan"},"content":"**Format:** `addp n/ \u003cparticipant name\u003e p/ \u003cphone number\u003e e/ \u003cemail\u003e a/ \u003caddress\u003e t/ \u003ctags\u003e`","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"taeewonnn"},"content":"**Description:**","lastModifiedDate":"2024-03-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":80,"author":{"gitId":"taeewonnn"},"content":"Adds a new participant to the app, allowing them to be added to an event later.","lastModifiedDate":"2024-03-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":83,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"taeewonnn"},"content":"* `\u003cparticipant name\u003e` should be **alphabetic**, **non-empty** and **not longer than 64 characters**.","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"taeewonnn"},"content":"* `\u003cphone number\u003e` should be **numeric**, **non-empty** and **not longer than 15 digits**.","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"taeewonnn"},"content":"* `\u003cemail\u003e` should be **alphanumeric**, **non-empty** and **not longer than 64 characters**.","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":88,"author":{"gitId":"taeewonnn"},"content":"**Examples:**","lastModifiedDate":"2024-03-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"nusliuyifan"},"content":"- `addp n/David p/98987676 e/david@example.com a/ NUS t/ student` adds a participant named `David`","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"taeewonnn"},"content":"  with the phone number `98987676` and email of `david@example.com` to the displayed contacts list.","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"ChocoRagdoll"},"content":"### Selecting an event: `sel`","lastModifiedDate":"2024-03-13"},{"lineNumber":94,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":95,"author":{"gitId":"ChocoRagdoll"},"content":"**Format:** `sel \u003cevent index\u003e`","lastModifiedDate":"2024-03-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":97,"author":{"gitId":"ChocoRagdoll"},"content":"**Description:**","lastModifiedDate":"2024-03-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":99,"author":{"gitId":"ChocoRagdoll"},"content":"Selects an event from the event list by the event index.","lastModifiedDate":"2024-03-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":101,"author":{"gitId":"ChocoRagdoll"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":102,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":103,"author":{"gitId":"ChocoRagdoll"},"content":"**Caution:**","lastModifiedDate":"2024-03-13"},{"lineNumber":104,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":105,"author":{"gitId":"ChocoRagdoll"},"content":"* `\u003cevent index\u003e` should be an **integer** no larger than the number of events in the event list.","lastModifiedDate":"2024-03-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":108,"author":{"gitId":"ChocoRagdoll"},"content":"**Examples:**","lastModifiedDate":"2024-03-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":110,"author":{"gitId":"ChocoRagdoll"},"content":"- `sel 3` selects the 3rd event.","lastModifiedDate":"2024-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":112,"author":{"gitId":"ChocoRagdoll"},"content":"### Deselecting an event: `desel`","lastModifiedDate":"2024-03-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":114,"author":{"gitId":"ChocoRagdoll"},"content":"**Format:** `desel`","lastModifiedDate":"2024-03-13"},{"lineNumber":115,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":116,"author":{"gitId":"ChocoRagdoll"},"content":"**Description:**","lastModifiedDate":"2024-03-13"},{"lineNumber":117,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":118,"author":{"gitId":"ChocoRagdoll"},"content":"Deselects the selected event and returns to the global participant list.","lastModifiedDate":"2024-03-13"},{"lineNumber":119,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":120,"author":{"gitId":"ChocoRagdoll"},"content":"**Examples:**","lastModifiedDate":"2024-03-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":122,"author":{"gitId":"ChocoRagdoll"},"content":"- After `select 3` which selects the event with index `3`, `desel` deselects the event indexed `3`.","lastModifiedDate":"2024-03-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":124,"author":{"gitId":"ChocoRagdoll"},"content":"### Deleting a participant from the global participant list or an event participant list: `delp`","lastModifiedDate":"2024-03-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":126,"author":{"gitId":"ChocoRagdoll"},"content":"**Format:** `delp \u003cindex\u003e`","lastModifiedDate":"2024-03-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":128,"author":{"gitId":"ChocoRagdoll"},"content":"**Description:**","lastModifiedDate":"2024-03-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":130,"author":{"gitId":"ChocoRagdoll"},"content":"- If **no event is selected**, this deletes the participant from both the **global participant list** and **all the","lastModifiedDate":"2024-03-13"},{"lineNumber":131,"author":{"gitId":"ChocoRagdoll"},"content":"  events** he/she is in by **his/her index in the global participant list**.","lastModifiedDate":"2024-03-13"},{"lineNumber":132,"author":{"gitId":"ChocoRagdoll"},"content":"- If **an event is selected**, this only removes the participant from the event by **his/her index in the","lastModifiedDate":"2024-03-13"},{"lineNumber":133,"author":{"gitId":"ChocoRagdoll"},"content":"  event participant list**.","lastModifiedDate":"2024-03-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":135,"author":{"gitId":"ChocoRagdoll"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":136,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":137,"author":{"gitId":"ChocoRagdoll"},"content":"**Caution:**","lastModifiedDate":"2024-03-13"},{"lineNumber":138,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":139,"author":{"gitId":"ChocoRagdoll"},"content":"* `\u003cindex\u003e` should be an **integer**.","lastModifiedDate":"2024-03-13"},{"lineNumber":140,"author":{"gitId":"ChocoRagdoll"},"content":"* A participant\u0027s `\u003cindex\u003e` in an event participant list can be **different** from that in the global participant list.","lastModifiedDate":"2024-03-13"},{"lineNumber":141,"author":{"gitId":"ChocoRagdoll"},"content":"* `\u003cindex\u003e` should be no larger than the number of participants in the global participant list if no event is selected.","lastModifiedDate":"2024-03-13"},{"lineNumber":142,"author":{"gitId":"ChocoRagdoll"},"content":"* `\u003cindex\u003e` should be no larger than the number of participants in the event participant list if an event is selected.","lastModifiedDate":"2024-03-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":145,"author":{"gitId":"ChocoRagdoll"},"content":"**Examples:**","lastModifiedDate":"2024-03-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":147,"author":{"gitId":"ChocoRagdoll"},"content":"- When no event is selected, `delp 9` deletes the 9th participant completely.","lastModifiedDate":"2024-03-14"},{"lineNumber":148,"author":{"gitId":"ChocoRagdoll"},"content":"- `delp 9` after `sel 3` removes the 9th participant from the 3rd event\u0027s participant list.","lastModifiedDate":"2024-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":150,"author":{"gitId":"nusliuyifan"},"content":"### Edit existing participant: `editp`","lastModifiedDate":"2024-03-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":152,"author":{"gitId":"nusliuyifan"},"content":"**Format:** `editp \u003cparticipant index\u003e n/ \u003cparticipant name\u003e p/ \u003cphone number\u003e e/ \u003cemail\u003e`","lastModifiedDate":"2024-03-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":154,"author":{"gitId":"nusliuyifan"},"content":"**Description:**","lastModifiedDate":"2024-03-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":156,"author":{"gitId":"nusliuyifan"},"content":"Updates the contact information of a participant in the app.","lastModifiedDate":"2024-03-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":158,"author":{"gitId":"nusliuyifan"},"content":"**Caution:**","lastModifiedDate":"2024-03-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":160,"author":{"gitId":"nusliuyifan"},"content":"* `\u003cparticipant index\u003e` should be within valid range of global participants","lastModifiedDate":"2024-03-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":162,"author":{"gitId":"nusliuyifan"},"content":"**Examples:**","lastModifiedDate":"2024-03-26"},{"lineNumber":163,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":164,"author":{"gitId":"nusliuyifan"},"content":"- `editp 5 n/ Max p/ 00000000 e/ test@gmail.com` Edits contact details of participant indexed 5.","lastModifiedDate":"2024-03-26"},{"lineNumber":165,"author":{"gitId":"nusliuyifan"},"content":"  ","lastModifiedDate":"2024-03-26"},{"lineNumber":166,"author":{"gitId":"nusliuyifan"},"content":"### Invite person to selected event: `inv`","lastModifiedDate":"2024-03-26"},{"lineNumber":167,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":168,"author":{"gitId":"nusliuyifan"},"content":"**Format:** `inv \u003cparticipant index\u003e`","lastModifiedDate":"2024-03-26"},{"lineNumber":169,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":170,"author":{"gitId":"nusliuyifan"},"content":"**Description:**","lastModifiedDate":"2024-03-26"},{"lineNumber":171,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":172,"author":{"gitId":"nusliuyifan"},"content":"Invite participants from the global participant list to the selected event.","lastModifiedDate":"2024-03-26"},{"lineNumber":173,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":174,"author":{"gitId":"nusliuyifan"},"content":"**Caution:**","lastModifiedDate":"2024-03-26"},{"lineNumber":175,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":176,"author":{"gitId":"nusliuyifan"},"content":"* `\u003cparticipant index\u003e` should be within valid range of global participants","lastModifiedDate":"2024-03-26"},{"lineNumber":177,"author":{"gitId":"nusliuyifan"},"content":"* Duplicate participants is **not allowed.**","lastModifiedDate":"2024-03-26"},{"lineNumber":178,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":179,"author":{"gitId":"nusliuyifan"},"content":"**Examples:**","lastModifiedDate":"2024-03-26"},{"lineNumber":180,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":181,"author":{"gitId":"nusliuyifan"},"content":"- `inv 5` Adds participant indexed 5 to selected event.","lastModifiedDate":"2024-03-26"},{"lineNumber":182,"author":{"gitId":"nusliuyifan"},"content":"  ","lastModifiedDate":"2024-03-26"},{"lineNumber":183,"author":{"gitId":"nusliuyifan"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2024-03-26"},{"lineNumber":184,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":185,"author":{"gitId":"nusliuyifan"},"content":"Clears all entries from the address book.","lastModifiedDate":"2024-03-26"},{"lineNumber":186,"author":{"gitId":"nusliuyifan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":187,"author":{"gitId":"nusliuyifan"},"content":"Format: `clear`","lastModifiedDate":"2024-03-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2024-03-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2024-03-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2024-03-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":195,"author":{"gitId":"nusliuyifan"},"content":"* The search is case-insensitive. e.g. `hans` will match `Hans`","lastModifiedDate":"2024-03-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2024-03-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2024-03-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2024-03-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2024-03-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2024-03-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2024-03-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2024-03-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2024-03-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":207,"author":{"gitId":"nusliuyifan"},"content":"### Viewing help : `help`","lastModifiedDate":"2024-03-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":209,"author":{"gitId":"nusliuyifan"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2024-03-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":211,"author":{"gitId":"nusliuyifan"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2024-03-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":213,"author":{"gitId":"nusliuyifan"},"content":"Format: `help`","lastModifiedDate":"2024-03-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":215,"author":{"gitId":"nusliuyifan"},"content":"### Listing all persons : `list`","lastModifiedDate":"2024-03-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":217,"author":{"gitId":"nusliuyifan"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2024-03-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":219,"author":{"gitId":"nusliuyifan"},"content":"Format: `list`","lastModifiedDate":"2024-03-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2024-03-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":223,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2024-03-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2024-03-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"| Action                                      | Format, Examples                                                                                                      |","lastModifiedDate":"2024-03-17"},{"lineNumber":244,"author":{"gitId":"-"},"content":"|---------------------------------------------|-----------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-03-17"},{"lineNumber":245,"author":{"gitId":"nusliuyifan"},"content":"| **Add Event**                               | `addev ev/ \u003cevent name\u003e` \u003cbr\u003e e.g., `addev ev/ Orientation camp`                                                      |","lastModifiedDate":"2024-03-26"},{"lineNumber":246,"author":{"gitId":"-"},"content":"| **Delete Event**                            | `delev \u003cindex\u003e` \u003cbr\u003e e.g., `delev 1`                                                                                  |","lastModifiedDate":"2024-03-17"},{"lineNumber":247,"author":{"gitId":"nusliuyifan"},"content":"| **Add Participant**                         | `addp n/ \u003cparticipant name\u003e p/ \u003cphone number\u003e e/ \u003cemail\u003e` \u003cbr\u003e e.g., `addp n/ David p/ 98987676 e/ david@example.com` |","lastModifiedDate":"2024-03-26"},{"lineNumber":248,"author":{"gitId":"-"},"content":"| **Selecting Event**                         | `sel \u003cevent index\u003e` \u003cbr\u003e e.g., `sel                                                                                   |","lastModifiedDate":"2024-03-17"},{"lineNumber":249,"author":{"gitId":"-"},"content":"| **Deselecting Event**                       | `desel` deselect the current selected event                                                                           |","lastModifiedDate":"2024-03-17"},{"lineNumber":250,"author":{"gitId":"-"},"content":"| **Deleting a participant from global list** | `del 3` delete the 3rd participant from the global participant list                                                   |","lastModifiedDate":"2024-03-17"},{"lineNumber":251,"author":{"gitId":"-"},"content":"| **Deleting a participant from an event**    | `del 3` delete the 3rd participant from event list of selected event                                                  |","lastModifiedDate":"2024-03-17"},{"lineNumber":252,"author":{"gitId":"nusliuyifan"},"content":"| **Edit existing participant**               | `editp 5 n/ Max p/ 00000000 e/ test@gmail.com` Edits contact details of participant indexed 5                         |","lastModifiedDate":"2024-03-26"},{"lineNumber":253,"author":{"gitId":"nusliuyifan"},"content":"| **Invite person to selected event**         | `inv 5` Adds participant indexed 5 to selected event                                                                  |","lastModifiedDate":"2024-03-26"},{"lineNumber":254,"author":{"gitId":"nusliuyifan"},"content":"| **Locating persons by name**                | `find John` returns `john` and `John Doe`                                                                             |","lastModifiedDate":"2024-03-26"},{"lineNumber":255,"author":{"gitId":"nusliuyifan"},"content":"| **Clear all entries**                       | `clear` clear all entries from eventy                                                                                 |","lastModifiedDate":"2024-03-26"},{"lineNumber":256,"author":{"gitId":"nusliuyifan"},"content":"| **Viewing help**                            | `help` Shows a message explaining how to access the help page                                                         |","lastModifiedDate":"2024-03-26"},{"lineNumber":257,"author":{"gitId":"nusliuyifan"},"content":"| **Listing all persons**                     | `list` Shows a list of all persons in the address book.                                                               |","lastModifiedDate":"2024-03-26"},{"lineNumber":258,"author":{"gitId":"nusliuyifan"},"content":"| **Exiting the program**                     | `exit` Exits the program                                                                                              |","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"Apzure":6,"nusliuyifan":51,"ChocoRagdoll":41,"-":135,"taeewonnn":25}},{"path":"docs/diagrams/DeleteParticipantSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ChocoRagdoll"},"content":"@startuml","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"ChocoRagdoll"},"content":"!include style.puml","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"ChocoRagdoll"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"ChocoRagdoll"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"ChocoRagdoll"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"ChocoRagdoll"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"ChocoRagdoll"},"content":"participant \":DeletePersonCommandParser\" as DeletePersonCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"ChocoRagdoll"},"content":"participant \"d:DeletePersonCommand\" as DeletePersonCommand LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"ChocoRagdoll"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"ChocoRagdoll"},"content":"end box","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"ChocoRagdoll"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"ChocoRagdoll"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"ChocoRagdoll"},"content":"end box","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"ChocoRagdoll"},"content":"[-\u003e LogicManager : execute(\"delp 1\")","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"ChocoRagdoll"},"content":"activate LogicManager","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"ChocoRagdoll"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delp 1\")","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"ChocoRagdoll"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"ChocoRagdoll"},"content":"create DeletePersonCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"ChocoRagdoll"},"content":"AddressBookParser -\u003e DeletePersonCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"ChocoRagdoll"},"content":"activate DeletePersonCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"ChocoRagdoll"},"content":"DeletePersonCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"ChocoRagdoll"},"content":"deactivate DeletePersonCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":29,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":30,"author":{"gitId":"ChocoRagdoll"},"content":"AddressBookParser -\u003e DeletePersonCommandParser : parse(\"1\")","lastModifiedDate":"2024-03-22"},{"lineNumber":31,"author":{"gitId":"ChocoRagdoll"},"content":"activate DeletePersonCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":32,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":33,"author":{"gitId":"ChocoRagdoll"},"content":"create DeletePersonCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":34,"author":{"gitId":"ChocoRagdoll"},"content":"DeletePersonCommandParser -\u003e DeletePersonCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":35,"author":{"gitId":"ChocoRagdoll"},"content":"activate DeletePersonCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":37,"author":{"gitId":"ChocoRagdoll"},"content":"DeletePersonCommand --\u003e DeletePersonCommandParser :","lastModifiedDate":"2024-03-22"},{"lineNumber":38,"author":{"gitId":"ChocoRagdoll"},"content":"deactivate DeletePersonCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":39,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":40,"author":{"gitId":"ChocoRagdoll"},"content":"DeletePersonCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2024-03-22"},{"lineNumber":41,"author":{"gitId":"ChocoRagdoll"},"content":"deactivate DeletePersonCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":42,"author":{"gitId":"ChocoRagdoll"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-03-22"},{"lineNumber":43,"author":{"gitId":"ChocoRagdoll"},"content":"DeletePersonCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-22"},{"lineNumber":44,"author":{"gitId":"ChocoRagdoll"},"content":"destroy DeletePersonCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":45,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":46,"author":{"gitId":"ChocoRagdoll"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2024-03-22"},{"lineNumber":47,"author":{"gitId":"ChocoRagdoll"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-22"},{"lineNumber":48,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":49,"author":{"gitId":"ChocoRagdoll"},"content":"LogicManager -\u003e DeletePersonCommand : execute(m)","lastModifiedDate":"2024-03-22"},{"lineNumber":50,"author":{"gitId":"ChocoRagdoll"},"content":"activate DeletePersonCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":51,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":52,"author":{"gitId":"ChocoRagdoll"},"content":"DeletePersonCommand -\u003e Model : isAnEventSelected()","lastModifiedDate":"2024-03-22"},{"lineNumber":53,"author":{"gitId":"ChocoRagdoll"},"content":"activate Model","lastModifiedDate":"2024-03-22"},{"lineNumber":54,"author":{"gitId":"ChocoRagdoll"},"content":"Model --\u003e DeletePersonCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":55,"author":{"gitId":"ChocoRagdoll"},"content":"deactivate Model","lastModifiedDate":"2024-03-22"},{"lineNumber":56,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":57,"author":{"gitId":"ChocoRagdoll"},"content":"alt isAnEventSelected","lastModifiedDate":"2024-03-22"},{"lineNumber":58,"author":{"gitId":"ChocoRagdoll"},"content":"    DeletePersonCommand -\u003e DeletePersonCommand : deleteFromEvent()","lastModifiedDate":"2024-03-22"},{"lineNumber":59,"author":{"gitId":"ChocoRagdoll"},"content":"    activate DeletePersonCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":60,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":61,"author":{"gitId":"ChocoRagdoll"},"content":"    DeletePersonCommand -\u003e Model : deletePersonFromSelectedEvent(personToDelete)","lastModifiedDate":"2024-03-22"},{"lineNumber":62,"author":{"gitId":"ChocoRagdoll"},"content":"    activate Model","lastModifiedDate":"2024-03-22"},{"lineNumber":63,"author":{"gitId":"ChocoRagdoll"},"content":"    Model --\u003e DeletePersonCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":64,"author":{"gitId":"ChocoRagdoll"},"content":"    deactivate Model","lastModifiedDate":"2024-03-22"},{"lineNumber":65,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":66,"author":{"gitId":"ChocoRagdoll"},"content":"    deactivate DeletePersonCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":67,"author":{"gitId":"ChocoRagdoll"},"content":"else","lastModifiedDate":"2024-03-22"},{"lineNumber":68,"author":{"gitId":"ChocoRagdoll"},"content":"    DeletePersonCommand -\u003e DeletePersonCommand : deleteFromGlobal()","lastModifiedDate":"2024-03-22"},{"lineNumber":69,"author":{"gitId":"ChocoRagdoll"},"content":"    activate DeletePersonCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":70,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":71,"author":{"gitId":"ChocoRagdoll"},"content":"    DeletePersonCommand -\u003e Model : deletePerson(personToDelete)","lastModifiedDate":"2024-03-22"},{"lineNumber":72,"author":{"gitId":"ChocoRagdoll"},"content":"    activate Model","lastModifiedDate":"2024-03-22"},{"lineNumber":73,"author":{"gitId":"ChocoRagdoll"},"content":"    Model --\u003e DeletePersonCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":74,"author":{"gitId":"ChocoRagdoll"},"content":"    deactivate Model","lastModifiedDate":"2024-03-22"},{"lineNumber":75,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":76,"author":{"gitId":"ChocoRagdoll"},"content":"    deactivate DeletePersonCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":77,"author":{"gitId":"ChocoRagdoll"},"content":"end","lastModifiedDate":"2024-03-22"},{"lineNumber":78,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":79,"author":{"gitId":"ChocoRagdoll"},"content":"create CommandResult","lastModifiedDate":"2024-03-22"},{"lineNumber":80,"author":{"gitId":"ChocoRagdoll"},"content":"DeletePersonCommand -\u003e CommandResult","lastModifiedDate":"2024-03-22"},{"lineNumber":81,"author":{"gitId":"ChocoRagdoll"},"content":"activate CommandResult","lastModifiedDate":"2024-03-22"},{"lineNumber":82,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":83,"author":{"gitId":"ChocoRagdoll"},"content":"CommandResult --\u003e DeletePersonCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":84,"author":{"gitId":"ChocoRagdoll"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-22"},{"lineNumber":85,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":86,"author":{"gitId":"ChocoRagdoll"},"content":"DeletePersonCommand --\u003e LogicManager : r","lastModifiedDate":"2024-03-22"},{"lineNumber":87,"author":{"gitId":"ChocoRagdoll"},"content":"deactivate DeletePersonCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":88,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":89,"author":{"gitId":"ChocoRagdoll"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-22"},{"lineNumber":90,"author":{"gitId":"ChocoRagdoll"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-22"},{"lineNumber":91,"author":{"gitId":"ChocoRagdoll"},"content":"@enduml","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"ChocoRagdoll":91}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"    Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyEventBook\" as ReadOnlyEventBook","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"    Class EventBook","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"    Class UniqueEventList","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"    Class Event","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"    Class EventName","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"Model .down.\u003e ReadOnlyEventBook","lastModifiedDate":"2024-03-22"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2024-03-22"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2024-03-22"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"EventBook .up.|\u003e ReadOnlyEventBook","lastModifiedDate":"2024-03-22"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"ModelManager -down-\u003e AddressBook","lastModifiedDate":"2024-03-22"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"ModelManager -left-\u003e EventBook","lastModifiedDate":"2024-03-22"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"ModelManager -left-\u003e UserPrefs","lastModifiedDate":"2024-03-22"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"AddressBook *--\u003e UniquePersonList","lastModifiedDate":"2024-03-22"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"EventBook *--\u003e UniqueEventList","lastModifiedDate":"2024-03-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"UniqueEventList --\u003e \"~* all\" Event","lastModifiedDate":"2024-03-22"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"Event *--\u003e EventName","lastModifiedDate":"2024-03-22"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"Event *--\u003e UniquePersonList","lastModifiedDate":"2024-03-22"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Apzure":22,"-":48}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"    /** Returns an unmodifiable view of the filtered list of events */","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"    /** Returns an unmodifiable view of the filtered list of persons of the selected event */","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonListOfSelectedEvent();","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Apzure":7,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-01"},{"lineNumber":71,"author":{"gitId":"Apzure"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"Apzure"},"content":"        return model.getFilteredEventList();","lastModifiedDate":"2024-03-01"},{"lineNumber":73,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":74,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":75,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"Apzure"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonListOfSelectedEvent() {","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"Apzure"},"content":"        return model.getFilteredPersonListOfSelectedEvent();","lastModifiedDate":"2024-03-15"},{"lineNumber":78,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":79,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Apzure":11,"-":88}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"    public static final String MESSAGE_INVALID_EVENT_DISPLAYED_INDEX \u003d \"The event index provided is invalid\";","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"    public static final String MESSAGE_SELECT_EVENT \u003d \"No event is selected!\";","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-02"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"     * Formats the {@code event} for display to the user.","lastModifiedDate":"2024-03-02"},{"lineNumber":56,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-02"},{"lineNumber":57,"author":{"gitId":"Apzure"},"content":"    public static String format(Event event) {","lastModifiedDate":"2024-03-02"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2024-03-02"},{"lineNumber":59,"author":{"gitId":"Apzure"},"content":"        builder.append(event.getEventName());","lastModifiedDate":"2024-03-02"},{"lineNumber":60,"author":{"gitId":"Apzure"},"content":"        return builder.toString();","lastModifiedDate":"2024-03-02"},{"lineNumber":61,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":62,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Apzure":11,"-":51,"myang2020":1}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"taeewonnn"},"content":"    public static final String COMMAND_WORD \u003d \"addp\";","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":83,"taeewonnn":1}},{"path":"src/main/java/seedu/address/logic/commands/AddEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-02"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-02"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_NAME;","lastModifiedDate":"2024-03-02"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-02"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-02"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-02"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-02"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-02"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-03-02"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":" * Creates and adds an event to the address book.","lastModifiedDate":"2024-03-02"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-03-02"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"    public static final String COMMAND_WORD \u003d \"addev\";","lastModifiedDate":"2024-03-10"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Creates and adds an event to the address book. \"","lastModifiedDate":"2024-03-02"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-02"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"            + PREFIX_EVENT_NAME + \"EVENT_NAME\";","lastModifiedDate":"2024-03-02"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New event created: %1$s\";","lastModifiedDate":"2024-03-02"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"This event already exists in the address book\";","lastModifiedDate":"2024-03-02"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"    private final Event toAdd;","lastModifiedDate":"2024-03-02"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-02"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"     * Creates a CreateEventCommand to add the specified {@code Event}.","lastModifiedDate":"2024-03-02"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-02"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"    public AddEventCommand(Event event) {","lastModifiedDate":"2024-03-10"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"        requireNonNull(event);","lastModifiedDate":"2024-03-02"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"        toAdd \u003d event;","lastModifiedDate":"2024-03-02"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-02"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-02"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-02"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"        if (model.hasEvent(toAdd)) {","lastModifiedDate":"2024-03-02"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2024-03-02"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-02"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"        model.addEvent(toAdd);","lastModifiedDate":"2024-03-02"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2024-03-02"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-02"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-02"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-02"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"            return true;","lastModifiedDate":"2024-03-02"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-02"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-02"},{"lineNumber":56,"author":{"gitId":"Apzure"},"content":"        if (!(other instanceof AddEventCommand)) {","lastModifiedDate":"2024-03-10"},{"lineNumber":57,"author":{"gitId":"Apzure"},"content":"            return false;","lastModifiedDate":"2024-03-02"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-02"},{"lineNumber":59,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":60,"author":{"gitId":"Apzure"},"content":"        AddEventCommand otherCreateEventCommand \u003d (AddEventCommand) other;","lastModifiedDate":"2024-03-10"},{"lineNumber":61,"author":{"gitId":"Apzure"},"content":"        return toAdd.equals(otherCreateEventCommand.toAdd);","lastModifiedDate":"2024-03-02"},{"lineNumber":62,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":63,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":64,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-02"},{"lineNumber":65,"author":{"gitId":"Apzure"},"content":"    public String toString() {","lastModifiedDate":"2024-03-02"},{"lineNumber":66,"author":{"gitId":"Apzure"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-02"},{"lineNumber":67,"author":{"gitId":"Apzure"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2024-03-02"},{"lineNumber":68,"author":{"gitId":"Apzure"},"content":"                .toString();","lastModifiedDate":"2024-03-02"},{"lineNumber":69,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":70,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-03-02"}],"authorContributionMap":{"Apzure":70}},{"path":"src/main/java/seedu/address/logic/commands/DeleteEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"taeewonnn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"taeewonnn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"taeewonnn"},"content":"import java.util.List;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"taeewonnn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"taeewonnn"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"taeewonnn"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"taeewonnn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"taeewonnn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"taeewonnn"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"taeewonnn"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"taeewonnn"},"content":" * Deletes an event identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"taeewonnn"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"taeewonnn"},"content":"public class DeleteEventCommand extends Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"taeewonnn"},"content":"    public static final String COMMAND_WORD \u003d \"delev\";","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"taeewonnn"},"content":"    public static final String MESSAGE_INVALID_DELETE_EVENT \u003d \"Cannot delete the event that is currently selected\";","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"taeewonnn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"taeewonnn"},"content":"            + \": Deletes the event identified by the index number used in the displayed event list.\\n\"","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"taeewonnn"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"taeewonnn"},"content":"            + \"Example: \" + COMMAND_WORD + \"1\";","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"taeewonnn"},"content":"    public static final String MESSAGE_DELETE_EVENT_SUCCESS \u003d \"Deleted Event: %1$s\";","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"taeewonnn"},"content":"    public final Index targetIndex;","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"taeewonnn"},"content":"    public DeleteEventCommand(Index targetIndex) {","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"taeewonnn"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"taeewonnn"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"taeewonnn"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"taeewonnn"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"taeewonnn"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"taeewonnn"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getFilteredEventList();","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"taeewonnn"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"taeewonnn"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"taeewonnn"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"taeewonnn"},"content":"        Event eventToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"taeewonnn"},"content":"        if (model.isSameSelectedEvent(eventToDelete)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"taeewonnn"},"content":"            throw new CommandException(MESSAGE_INVALID_DELETE_EVENT);","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"taeewonnn"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"taeewonnn"},"content":"        model.deleteEvent(eventToDelete);","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"taeewonnn"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_EVENT_SUCCESS, Messages.format(eventToDelete)));","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"taeewonnn"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"taeewonnn"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"taeewonnn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"taeewonnn"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"taeewonnn"},"content":"            return true;","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"taeewonnn"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"taeewonnn"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"taeewonnn"},"content":"        if (!(other instanceof DeleteEventCommand)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"taeewonnn"},"content":"            return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"taeewonnn"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"taeewonnn"},"content":"        DeleteEventCommand otherDeleteEventCommand \u003d (DeleteEventCommand) other;","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"taeewonnn"},"content":"        return targetIndex.equals(otherDeleteEventCommand.targetIndex);","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"taeewonnn"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"taeewonnn"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"taeewonnn"},"content":"    public String toString() {","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"taeewonnn"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"taeewonnn"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"taeewonnn"},"content":"                .toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"taeewonnn"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"taeewonnn"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"taeewonnn":76}},{"path":"src/main/java/seedu/address/logic/commands/DeletePersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChocoRagdoll"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"ChocoRagdoll"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"ChocoRagdoll"},"content":"import java.util.List;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"ChocoRagdoll"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"ChocoRagdoll"},"content":" * When no event is selected, deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"ChocoRagdoll"},"content":" * When an event is selected, deletes a person identified using it\u0027s displayed index from the event.","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"ChocoRagdoll"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"ChocoRagdoll"},"content":"public class DeletePersonCommand extends Command {","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"ChocoRagdoll"},"content":"    public static final String COMMAND_WORD \u003d \"delp\";","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"ChocoRagdoll"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"ChocoRagdoll"},"content":"            + \": When no event is selected, deletes the person identified by the index number used in the displayed \"","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"ChocoRagdoll"},"content":"            + \"person list; when an event is selected, deletes a person identified using it\u0027s displayed index from \"","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"ChocoRagdoll"},"content":"            + \"the event.\\n\"","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"ChocoRagdoll"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"ChocoRagdoll"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"ChocoRagdoll"},"content":"    public static final String MESSAGE_DELETE_PERSON_GLOBAL_SUCCESS \u003d \"Deleted Person: %1$s from the address book.\";","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"ChocoRagdoll"},"content":"    public static final String MESSAGE_DELETE_PERSON_EVENT_SUCCESS \u003d \"Deleted Person: %1$s from the selected event.\";","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"ChocoRagdoll"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"ChocoRagdoll"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"ChocoRagdoll"},"content":"     * Constructor of DeletePersonCommand","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"ChocoRagdoll"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"ChocoRagdoll"},"content":"     * @param targetIndex Index of person user wants to delete.","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"ChocoRagdoll"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"ChocoRagdoll"},"content":"    public DeletePersonCommand(Index targetIndex) {","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"ChocoRagdoll"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"ChocoRagdoll"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"ChocoRagdoll"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"ChocoRagdoll"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"ChocoRagdoll"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"ChocoRagdoll"},"content":"        if (model.isAnEventSelected()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"ChocoRagdoll"},"content":"            return deleteFromEvent(model);","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"ChocoRagdoll"},"content":"        } else {","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"ChocoRagdoll"},"content":"            return deleteFromGlobal(model);","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"ChocoRagdoll"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"ChocoRagdoll"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"ChocoRagdoll"},"content":"     * Handles the deletion of a person from the global list. This method is called when no event is currently","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"ChocoRagdoll"},"content":"     * selected in the model.","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"ChocoRagdoll"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"ChocoRagdoll"},"content":"     * @param model The model from which the person will be deleted globally. Must not be null.","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"ChocoRagdoll"},"content":"     * @return A {@link CommandResult} object containing the success message of the global deletion.","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"ChocoRagdoll"},"content":"     * @throws CommandException If the target index is invalid, i.e., if it is out of bounds of the list size.","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"ChocoRagdoll"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"ChocoRagdoll"},"content":"    public CommandResult deleteFromGlobal(Model model) throws CommandException {","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"ChocoRagdoll"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"ChocoRagdoll"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"ChocoRagdoll"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"ChocoRagdoll"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"ChocoRagdoll"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"ChocoRagdoll"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"ChocoRagdoll"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"ChocoRagdoll"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_GLOBAL_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"ChocoRagdoll"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"ChocoRagdoll"},"content":"     * Handles the deletion of a person from the list of a currently selected event. This method is called","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"ChocoRagdoll"},"content":"     * when an event is selected in the model.","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"ChocoRagdoll"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"ChocoRagdoll"},"content":"     * @param model The model from which the person will be deleted from the selected event. Must not be null.","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"ChocoRagdoll"},"content":"     * @return A {@link CommandResult} object containing the success message of the event-specific deletion.","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"ChocoRagdoll"},"content":"     * @throws CommandException If no event is selected, if the target index is invalid (out of bounds of the","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"ChocoRagdoll"},"content":"     *      list size), or if the person is not part of the selected event.","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"ChocoRagdoll"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"ChocoRagdoll"},"content":"    public CommandResult deleteFromEvent(Model model) throws CommandException {","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"ChocoRagdoll"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"ChocoRagdoll"},"content":"        if (!model.isAnEventSelected()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"ChocoRagdoll"},"content":"            throw new CommandException(Messages.MESSAGE_SELECT_EVENT);","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"ChocoRagdoll"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"ChocoRagdoll"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonListOfSelectedEvent();","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"ChocoRagdoll"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"ChocoRagdoll"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"ChocoRagdoll"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"ChocoRagdoll"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"ChocoRagdoll"},"content":"        model.deletePersonFromSelectedEvent(personToDelete);","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"ChocoRagdoll"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_EVENT_SUCCESS, personToDelete.getName()));","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"ChocoRagdoll"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"ChocoRagdoll"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"ChocoRagdoll"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"ChocoRagdoll"},"content":"            return true;","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"ChocoRagdoll"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"ChocoRagdoll"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"ChocoRagdoll"},"content":"        if (!(other instanceof DeletePersonCommand)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"ChocoRagdoll"},"content":"            return false;","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"ChocoRagdoll"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"ChocoRagdoll"},"content":"        DeletePersonCommand otherDeleteCommand \u003d (DeletePersonCommand) other;","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"ChocoRagdoll"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"ChocoRagdoll"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"ChocoRagdoll"},"content":"    public String toString() {","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"ChocoRagdoll"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"ChocoRagdoll"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"ChocoRagdoll"},"content":"                .toString();","lastModifiedDate":"2024-03-20"},{"lineNumber":122,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"ChocoRagdoll"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"ChocoRagdoll":123}},{"path":"src/main/java/seedu/address/logic/commands/DeselectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":" * Deselects the currently selected event.","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":"public class DeselectCommand extends Command {","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":"    public static final String COMMAND_WORD \u003d \"desel\";","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"            + \": Deselects the currently selected event.\\n\"","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"    public static final String MESSAGE_DESELECT_EVENT_SUCCESS \u003d \"Event deselected.\";","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"     * Executes the deselect command.","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"     * @return Result of the command execution.","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"myang2020"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"myang2020"},"content":"        model.deselectEvent();","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"myang2020"},"content":"        return new CommandResult(MESSAGE_DESELECT_EVENT_SUCCESS);","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"myang2020"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"myang2020"},"content":"        return other \u003d\u003d this || other instanceof DeselectCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"myang2020"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"myang2020"},"content":"        return new ToStringBuilder(this).toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"myang2020"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"myang2020":42}},{"path":"src/main/java/seedu/address/logic/commands/InviteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"import java.util.List;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"myang2020"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":" * Invites a person to an event using their displayed index from the person list.","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"public class InviteCommand extends Command {","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"    public static final String COMMAND_WORD \u003d \"inv\";","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"            + \": Invites the person identified by the index number used in the displayed person list to \"","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"            + \"the selected event.\\n\"","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"    public static final String MESSAGE_INVITE_PERSON_SUCCESS \u003d \"Invited Person: %1$s to the selected event\";","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"myang2020"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the selected event\";","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"myang2020"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"myang2020"},"content":"     * Constructor of InviteCommand","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"myang2020"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"myang2020"},"content":"     * @param targetIndex Index of person user wants to invite to selected event.","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"myang2020"},"content":"    public InviteCommand(Index targetIndex) {","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"myang2020"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"myang2020"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"myang2020"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"myang2020"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"myang2020"},"content":"        if (!model.isAnEventSelected()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"myang2020"},"content":"            throw new CommandException(Messages.MESSAGE_SELECT_EVENT);","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"myang2020"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"myang2020"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"myang2020"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"myang2020"},"content":"        Person personToInvite \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"myang2020"},"content":"        if (model.isPersonInSelectedEvent(personToInvite)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"myang2020"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"myang2020"},"content":"        model.addPersonToSelectedEvent(personToInvite);","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"myang2020"},"content":"        return new CommandResult(String.format(MESSAGE_INVITE_PERSON_SUCCESS, personToInvite.getName()));","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"myang2020"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"myang2020"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"myang2020"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"myang2020"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"myang2020"},"content":"        if (!(other instanceof InviteCommand)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"myang2020"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"myang2020"},"content":"        InviteCommand otherInviteCommand \u003d (InviteCommand) other;","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"myang2020"},"content":"        return targetIndex.equals(otherInviteCommand.targetIndex);","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"myang2020"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"myang2020"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"myang2020"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"myang2020"},"content":"                .toString();","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"myang2020"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"myang2020":84}},{"path":"src/main/java/seedu/address/logic/commands/SelectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"import java.util.List;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":" * Selects an event using its displayed index from the event list.","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"public class SelectCommand extends Command {","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"    public static final String COMMAND_WORD \u003d \"sel\";","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"            + \": Selects the event identified by the index number used in the displayed event list.\\n\"","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"    public static final String MESSAGE_SELECT_EVENT_SUCCESS \u003d \"Selected Event: %1$s\";","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"myang2020"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"myang2020"},"content":"     * Constructor of SelectCommand","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"myang2020"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"myang2020"},"content":"     * @param targetIndex Index of event user wants to select.","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"    public SelectCommand(Index targetIndex) {","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"myang2020"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getFilteredEventList();","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"        Event selectedEvent \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"        model.selectEvent(selectedEvent);","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"        return new CommandResult(String.format(MESSAGE_SELECT_EVENT_SUCCESS, Messages.format(selectedEvent)));","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"Apzure"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"Apzure"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"            return true;","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"Apzure"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"Apzure"},"content":"        if (!(other instanceof SelectCommand)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"Apzure"},"content":"            return false;","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"Apzure"},"content":"        SelectCommand otherSelectCommand \u003d (SelectCommand) other;","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"Apzure"},"content":"        return targetIndex.equals(otherSelectCommand.targetIndex);","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"Apzure"},"content":"    public String toString() {","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"Apzure"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"Apzure"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"Apzure"},"content":"                .toString();","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"Apzure":69,"myang2020":7}},{"path":"src/main/java/seedu/address/logic/parser/AddEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-02"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-02"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_NAME;","lastModifiedDate":"2024-03-02"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-02"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-02"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-02"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2024-03-02"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":" * Parses input arguments and creates a new AddEventCommand object","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"public class AddEventCommandParser implements Parser\u003cAddEventCommand\u003e {","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-02"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"     * Parses the given {@code String} of arguments in the context of the CreateEventCommand","lastModifiedDate":"2024-03-02"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"     * and returns an CreateEventComand object for execution.","lastModifiedDate":"2024-03-02"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-02"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-02"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"    public AddEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-10"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-02"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"             ArgumentTokenizer.tokenize(args, PREFIX_EVENT_NAME);","lastModifiedDate":"2024-03-02"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_EVENT_NAME)","lastModifiedDate":"2024-03-02"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-02"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-10"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-02"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_EVENT_NAME);","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"        EventName eventName \u003d ParserUtil.parseEventName(argMultimap.getValue(PREFIX_EVENT_NAME).get());","lastModifiedDate":"2024-03-02"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"        Event event \u003d new Event(eventName);","lastModifiedDate":"2024-03-02"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"        return new AddEventCommand(event);","lastModifiedDate":"2024-03-10"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-02"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-02"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-02"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-02"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-02"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-02"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-03-02"}],"authorContributionMap":{"Apzure":46}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"taeewonnn"},"content":"import seedu.address.logic.commands.DeleteEventCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"import seedu.address.logic.commands.DeselectCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"import seedu.address.logic.commands.InviteCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"import seedu.address.logic.commands.SelectCommand;","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":87,"author":{"gitId":"Apzure"},"content":"        case AddEventCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-10"},{"lineNumber":88,"author":{"gitId":"Apzure"},"content":"            return new AddEventCommandParser().parse(arguments);","lastModifiedDate":"2024-03-10"},{"lineNumber":89,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":90,"author":{"gitId":"Apzure"},"content":"        case SelectCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-15"},{"lineNumber":91,"author":{"gitId":"Apzure"},"content":"            return new SelectCommandParser().parse(arguments);","lastModifiedDate":"2024-03-15"},{"lineNumber":92,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":93,"author":{"gitId":"myang2020"},"content":"        case DeselectCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"myang2020"},"content":"            return new DeselectCommand();","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"myang2020"},"content":"        case InviteCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"myang2020"},"content":"            return new InviteCommandParser().parse(arguments);","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"ChocoRagdoll"},"content":"        case DeletePersonCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"ChocoRagdoll"},"content":"            return new DeletePersonCommandParser().parse(arguments);","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"taeewonnn"},"content":"        case DeleteEventCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"taeewonnn"},"content":"            return new DeleteEventCommandParser().parse(arguments);","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Apzure":8,"ChocoRagdoll":4,"-":86,"taeewonnn":4,"myang2020":9}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"taeewonnn"},"content":"    public static final Prefix PREFIX_EVENT_NAME \u003d new Prefix(\"ev/\");","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"-":15,"taeewonnn":1}},{"path":"src/main/java/seedu/address/logic/parser/DeleteEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"taeewonnn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"taeewonnn"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"taeewonnn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"taeewonnn"},"content":"import seedu.address.logic.commands.DeleteEventCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"taeewonnn"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"taeewonnn"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"taeewonnn"},"content":" * Parses input arguments and creates a new DeleteEventCommand object","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"taeewonnn"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"taeewonnn"},"content":"public class DeleteEventCommandParser implements Parser\u003cDeleteEventCommand\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"taeewonnn"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"taeewonnn"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteEventCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"taeewonnn"},"content":"     * and returns a DeleteEventCommand object for execution.","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"taeewonnn"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"taeewonnn"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"taeewonnn"},"content":"    public DeleteEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"taeewonnn"},"content":"        try {","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"taeewonnn"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"taeewonnn"},"content":"            return new DeleteEventCommand(index);","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"taeewonnn"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"taeewonnn"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"taeewonnn"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteEventCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"taeewonnn"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"taeewonnn"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"taeewonnn"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"taeewonnn":29}},{"path":"src/main/java/seedu/address/logic/parser/DeletePersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChocoRagdoll"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"ChocoRagdoll"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"ChocoRagdoll"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"ChocoRagdoll"},"content":" * Parses input arguments and creates a new DeletePersonCommand object","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"ChocoRagdoll"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"ChocoRagdoll"},"content":"public class DeletePersonCommandParser implements Parser\u003cDeletePersonCommand\u003e {","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"ChocoRagdoll"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"ChocoRagdoll"},"content":"     * Parses the given {@code String} of arguments in the context of the DeletePersonCommand","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"ChocoRagdoll"},"content":"     * and returns a DeletePersonCommand object for execution.","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"ChocoRagdoll"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"ChocoRagdoll"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"ChocoRagdoll"},"content":"    public DeletePersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"ChocoRagdoll"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"ChocoRagdoll"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"ChocoRagdoll"},"content":"            return new DeletePersonCommand(index);","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"ChocoRagdoll"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"ChocoRagdoll"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"ChocoRagdoll"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeletePersonCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"ChocoRagdoll"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"ChocoRagdoll"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"ChocoRagdoll":28}},{"path":"src/main/java/seedu/address/logic/parser/InviteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"import seedu.address.logic.commands.InviteCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":" * Parses input arguments and creates a new InviteCommand object","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"myang2020"},"content":"public class InviteCommandParser implements Parser\u003cInviteCommand\u003e {","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"     * Parses the given {@code String} of arguments in the context of the InviteCommand","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"     * and returns an InviteCommand object for execution.","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"    public InviteCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"        try {","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"            return new InviteCommand(index);","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, InviteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"myang2020"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"myang2020":28}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2024-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":125,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":126,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-10"},{"lineNumber":127,"author":{"gitId":"Apzure"},"content":"     * Parses {@code String eventName} into a {@code EventName}.","lastModifiedDate":"2024-03-10"},{"lineNumber":128,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-10"},{"lineNumber":129,"author":{"gitId":"Apzure"},"content":"    public static EventName parseEventName(String eventName) {","lastModifiedDate":"2024-03-02"},{"lineNumber":130,"author":{"gitId":"Apzure"},"content":"        requireNonNull(eventName);","lastModifiedDate":"2024-03-02"},{"lineNumber":131,"author":{"gitId":"Apzure"},"content":"        String trimmedEventName \u003d eventName.trim();","lastModifiedDate":"2024-03-02"},{"lineNumber":132,"author":{"gitId":"Apzure"},"content":"        // Currently all event names are valid","lastModifiedDate":"2024-03-02"},{"lineNumber":133,"author":{"gitId":"Apzure"},"content":"        return new EventName(trimmedEventName);","lastModifiedDate":"2024-03-02"},{"lineNumber":134,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":135,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Apzure":12,"-":124}},{"path":"src/main/java/seedu/address/logic/parser/SelectCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"import seedu.address.logic.commands.SelectCommand;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":" * Parses input arguments and creates a new SelectCommand object","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"public class SelectCommandParser implements Parser\u003cSelectCommand\u003e {","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"     * Parses the given {@code String} of arguments in the context of the SelectCommand","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"     * and returns a SelectCommand object for execution.","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"    public SelectCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"        try {","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"            return new SelectCommand(index);","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SelectCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"Apzure":29}},{"path":"src/main/java/seedu/address/model/EventBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.model;","lastModifiedDate":"2024-03-01"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"import java.util.List;","lastModifiedDate":"2024-03-01"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-01"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-01"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.UniqueEventList;","lastModifiedDate":"2024-03-01"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":" * Wraps all data at the event-book level.","lastModifiedDate":"2024-03-01"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":" * Duplicates are not allowed (by .isSameEvent comparison).","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-03-01"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"public class EventBook implements ReadOnlyEventBook {","lastModifiedDate":"2024-03-01"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"    private final UniqueEventList events;","lastModifiedDate":"2024-03-01"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"    private final UniquePersonList personsOfSelectedEvent;","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"    private Event selectedEvent;","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"    // Non-static initialization block","lastModifiedDate":"2024-03-01"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"    {","lastModifiedDate":"2024-03-01"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"        events \u003d new UniqueEventList();","lastModifiedDate":"2024-03-01"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"        personsOfSelectedEvent \u003d new UniquePersonList();","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-10"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"     * Creates an EventBook","lastModifiedDate":"2024-03-10"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-10"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"    public EventBook() {","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"     * Creates an EventBook using the Events in the {@code toBeCopied}.","lastModifiedDate":"2024-03-01"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"    public EventBook(ReadOnlyEventBook toBeCopied) {","lastModifiedDate":"2024-03-01"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"        this();","lastModifiedDate":"2024-03-01"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2024-03-01"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":46,"author":{"gitId":"taeewonnn"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"taeewonnn"},"content":"     * Returns true if the selected event with the same identity as {@code event} exists in the event book.","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"taeewonnn"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"taeewonnn"},"content":"     * @param event","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"taeewonnn"},"content":"     * @return","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"taeewonnn"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"taeewonnn"},"content":"    public boolean isSameSelectedEvent(Event event) {","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"taeewonnn"},"content":"        requireNonNull(event);","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"taeewonnn"},"content":"        return event.equals(selectedEvent);","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"taeewonnn"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"Apzure"},"content":"    // List overwrite operations","lastModifiedDate":"2024-03-01"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":59,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":60,"author":{"gitId":"Apzure"},"content":"     * Replaces the contents of the event list with {@code events}.","lastModifiedDate":"2024-03-01"},{"lineNumber":61,"author":{"gitId":"Apzure"},"content":"     * {@code events} must not contain duplicate events.","lastModifiedDate":"2024-03-01"},{"lineNumber":62,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":63,"author":{"gitId":"Apzure"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2024-03-01"},{"lineNumber":64,"author":{"gitId":"Apzure"},"content":"        this.events.setEvents(events);","lastModifiedDate":"2024-03-01"},{"lineNumber":65,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":66,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":67,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":68,"author":{"gitId":"Apzure"},"content":"     * Resets the existing data of this {@code EventBook} with {@code newData}.","lastModifiedDate":"2024-03-01"},{"lineNumber":69,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":70,"author":{"gitId":"Apzure"},"content":"    public void resetData(ReadOnlyEventBook newData) {","lastModifiedDate":"2024-03-01"},{"lineNumber":71,"author":{"gitId":"Apzure"},"content":"        requireNonNull(newData);","lastModifiedDate":"2024-03-01"},{"lineNumber":72,"author":{"gitId":"Apzure"},"content":"        setEvents(newData.getEventList());","lastModifiedDate":"2024-03-01"},{"lineNumber":73,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":74,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":75,"author":{"gitId":"Apzure"},"content":"    // Event-level operations","lastModifiedDate":"2024-03-01"},{"lineNumber":76,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":77,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":78,"author":{"gitId":"Apzure"},"content":"     * Returns true if an event with the same identity as {@code event} exists in the event book.","lastModifiedDate":"2024-03-01"},{"lineNumber":79,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":80,"author":{"gitId":"Apzure"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2024-03-01"},{"lineNumber":81,"author":{"gitId":"Apzure"},"content":"        requireNonNull(event);","lastModifiedDate":"2024-03-01"},{"lineNumber":82,"author":{"gitId":"Apzure"},"content":"        return events.contains(event);","lastModifiedDate":"2024-03-01"},{"lineNumber":83,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":84,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":85,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":86,"author":{"gitId":"Apzure"},"content":"     * Adds an event to the event book.","lastModifiedDate":"2024-03-01"},{"lineNumber":87,"author":{"gitId":"Apzure"},"content":"     * The event must not already exist in the event book.","lastModifiedDate":"2024-03-01"},{"lineNumber":88,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":89,"author":{"gitId":"Apzure"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2024-03-01"},{"lineNumber":90,"author":{"gitId":"Apzure"},"content":"        events.add(event);","lastModifiedDate":"2024-03-01"},{"lineNumber":91,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":92,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":93,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":94,"author":{"gitId":"Apzure"},"content":"     * Replaces the given event {@code target} in the list with {@code editedEvent}.","lastModifiedDate":"2024-03-01"},{"lineNumber":95,"author":{"gitId":"Apzure"},"content":"     * {@code target} must exist in the event book.","lastModifiedDate":"2024-03-01"},{"lineNumber":96,"author":{"gitId":"Apzure"},"content":"     * The event identity of {@code editedEvent} must not be the same as another existing event in the event book.","lastModifiedDate":"2024-03-01"},{"lineNumber":97,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":98,"author":{"gitId":"Apzure"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2024-03-01"},{"lineNumber":99,"author":{"gitId":"Apzure"},"content":"        requireNonNull(editedEvent);","lastModifiedDate":"2024-03-01"},{"lineNumber":100,"author":{"gitId":"Apzure"},"content":"        events.setEvent(target, editedEvent);","lastModifiedDate":"2024-03-01"},{"lineNumber":101,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":102,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":103,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":104,"author":{"gitId":"Apzure"},"content":"     * Removes {@code key} from this {@code EventBook}.","lastModifiedDate":"2024-03-01"},{"lineNumber":105,"author":{"gitId":"Apzure"},"content":"     * {@code key} must exist in the event book.","lastModifiedDate":"2024-03-01"},{"lineNumber":106,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":107,"author":{"gitId":"Apzure"},"content":"    public void removeEvent(Event key) {","lastModifiedDate":"2024-03-01"},{"lineNumber":108,"author":{"gitId":"Apzure"},"content":"        events.remove(key);","lastModifiedDate":"2024-03-01"},{"lineNumber":109,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":110,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":111,"author":{"gitId":"Apzure"},"content":"    // Select Event Methods","lastModifiedDate":"2024-03-15"},{"lineNumber":112,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":113,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"myang2020"},"content":"     * Checks if an event is currently selected.","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"myang2020"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"myang2020"},"content":"     * @return true if an event is selected, false otherwise","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"myang2020"},"content":"    public boolean isAnEventSelected() {","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"myang2020"},"content":"        return selectedEvent !\u003d null;","lastModifiedDate":"2024-03-17"},{"lineNumber":120,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":123,"author":{"gitId":"Apzure"},"content":"     * Selects the given event {@code event} from this {@code EventBook}","lastModifiedDate":"2024-03-15"},{"lineNumber":124,"author":{"gitId":"Apzure"},"content":"     * @param event must exist in the event book","lastModifiedDate":"2024-03-15"},{"lineNumber":125,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":126,"author":{"gitId":"Apzure"},"content":"    public void selectEvent(Event event) {","lastModifiedDate":"2024-03-15"},{"lineNumber":127,"author":{"gitId":"Apzure"},"content":"        selectedEvent \u003d event;","lastModifiedDate":"2024-03-15"},{"lineNumber":128,"author":{"gitId":"Apzure"},"content":"        personsOfSelectedEvent.setPersons(event.getPersonList());","lastModifiedDate":"2024-03-15"},{"lineNumber":129,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":130,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":131,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":132,"author":{"gitId":"myang2020"},"content":"     * Deselects event.","lastModifiedDate":"2024-03-16"},{"lineNumber":133,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":134,"author":{"gitId":"myang2020"},"content":"    public void deselectEvent() {","lastModifiedDate":"2024-03-16"},{"lineNumber":135,"author":{"gitId":"myang2020"},"content":"        selectedEvent \u003d null;","lastModifiedDate":"2024-03-16"},{"lineNumber":136,"author":{"gitId":"myang2020"},"content":"        personsOfSelectedEvent.setPersons(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-03-16"},{"lineNumber":137,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":138,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":139,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":140,"author":{"gitId":"myang2020"},"content":"     * Checks if a person is part of the selected event.","lastModifiedDate":"2024-03-17"},{"lineNumber":141,"author":{"gitId":"myang2020"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":142,"author":{"gitId":"myang2020"},"content":"     * @param person The person to check.","lastModifiedDate":"2024-03-17"},{"lineNumber":143,"author":{"gitId":"myang2020"},"content":"     * @return {@code true} if the person is part of the selected event, {@code false} otherwise.","lastModifiedDate":"2024-03-17"},{"lineNumber":144,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":145,"author":{"gitId":"myang2020"},"content":"    public boolean isPersonInSelectedEvent(Person person) {","lastModifiedDate":"2024-03-17"},{"lineNumber":146,"author":{"gitId":"myang2020"},"content":"        if (!isAnEventSelected()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":147,"author":{"gitId":"myang2020"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":148,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":149,"author":{"gitId":"myang2020"},"content":"        return selectedEvent.hasPerson(person);","lastModifiedDate":"2024-03-17"},{"lineNumber":150,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":151,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":152,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":153,"author":{"gitId":"myang2020"},"content":"     * Adds a person to the selected event if an event is currently selected.","lastModifiedDate":"2024-03-17"},{"lineNumber":154,"author":{"gitId":"myang2020"},"content":"     * If no event is selected, the person will not be added.","lastModifiedDate":"2024-03-17"},{"lineNumber":155,"author":{"gitId":"myang2020"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":156,"author":{"gitId":"myang2020"},"content":"     * @param person The person to be added to the selected event.","lastModifiedDate":"2024-03-17"},{"lineNumber":157,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":158,"author":{"gitId":"myang2020"},"content":"    public void addPersonToSelectedEvent(Person person) {","lastModifiedDate":"2024-03-17"},{"lineNumber":159,"author":{"gitId":"myang2020"},"content":"        if (isAnEventSelected()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":160,"author":{"gitId":"myang2020"},"content":"            selectedEvent.addPerson(person);","lastModifiedDate":"2024-03-17"},{"lineNumber":161,"author":{"gitId":"ChocoRagdoll"},"content":"            personsOfSelectedEvent.add(person);","lastModifiedDate":"2024-03-20"},{"lineNumber":162,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":163,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":164,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":165,"author":{"gitId":"ChocoRagdoll"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":166,"author":{"gitId":"ChocoRagdoll"},"content":"     * Deletes a person from the selected event if an event is currently selected.","lastModifiedDate":"2024-03-20"},{"lineNumber":167,"author":{"gitId":"ChocoRagdoll"},"content":"     * If no event is selected, the person will not be deleted.","lastModifiedDate":"2024-03-20"},{"lineNumber":168,"author":{"gitId":"ChocoRagdoll"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":169,"author":{"gitId":"ChocoRagdoll"},"content":"     * @param person The person to be added to the selected event.","lastModifiedDate":"2024-03-20"},{"lineNumber":170,"author":{"gitId":"ChocoRagdoll"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":171,"author":{"gitId":"ChocoRagdoll"},"content":"    public void deletePersonFromSelectedEvent(Person person) {","lastModifiedDate":"2024-03-20"},{"lineNumber":172,"author":{"gitId":"ChocoRagdoll"},"content":"        if (isAnEventSelected()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":173,"author":{"gitId":"ChocoRagdoll"},"content":"            selectedEvent.deletePerson(person);","lastModifiedDate":"2024-03-20"},{"lineNumber":174,"author":{"gitId":"ChocoRagdoll"},"content":"            personsOfSelectedEvent.remove(person);","lastModifiedDate":"2024-03-20"},{"lineNumber":175,"author":{"gitId":"ChocoRagdoll"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":176,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":177,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":178,"author":{"gitId":"Apzure"},"content":"    // Util methods","lastModifiedDate":"2024-03-01"},{"lineNumber":179,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":180,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-01"},{"lineNumber":181,"author":{"gitId":"Apzure"},"content":"    public String toString() {","lastModifiedDate":"2024-03-01"},{"lineNumber":182,"author":{"gitId":"Apzure"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-01"},{"lineNumber":183,"author":{"gitId":"Apzure"},"content":"                .add(\"events\", events)","lastModifiedDate":"2024-03-01"},{"lineNumber":184,"author":{"gitId":"Apzure"},"content":"                .toString();","lastModifiedDate":"2024-03-01"},{"lineNumber":185,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":186,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":187,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-01"},{"lineNumber":188,"author":{"gitId":"Apzure"},"content":"    public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2024-03-01"},{"lineNumber":189,"author":{"gitId":"Apzure"},"content":"        return events.asUnmodifiableObservableList();","lastModifiedDate":"2024-03-01"},{"lineNumber":190,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":191,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":192,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":193,"author":{"gitId":"Apzure"},"content":"    public ObservableList\u003cPerson\u003e getPersonsOfSelectedEventList() {","lastModifiedDate":"2024-03-15"},{"lineNumber":194,"author":{"gitId":"Apzure"},"content":"        return personsOfSelectedEvent.asUnmodifiableObservableList();","lastModifiedDate":"2024-03-15"},{"lineNumber":195,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":196,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":197,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-01"},{"lineNumber":198,"author":{"gitId":"Apzure"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-01"},{"lineNumber":199,"author":{"gitId":"Apzure"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-01"},{"lineNumber":200,"author":{"gitId":"Apzure"},"content":"            return true;","lastModifiedDate":"2024-03-01"},{"lineNumber":201,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":202,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":203,"author":{"gitId":"Apzure"},"content":"        if (!(other instanceof EventBook)) {","lastModifiedDate":"2024-03-01"},{"lineNumber":204,"author":{"gitId":"Apzure"},"content":"            return false;","lastModifiedDate":"2024-03-01"},{"lineNumber":205,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":206,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":207,"author":{"gitId":"Apzure"},"content":"        EventBook otherEventBook \u003d (EventBook) other;","lastModifiedDate":"2024-03-01"},{"lineNumber":208,"author":{"gitId":"Apzure"},"content":"        return events.equals(otherEventBook.events);","lastModifiedDate":"2024-03-01"},{"lineNumber":209,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":210,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":211,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-01"},{"lineNumber":212,"author":{"gitId":"Apzure"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-01"},{"lineNumber":213,"author":{"gitId":"Apzure"},"content":"        return events.hashCode();","lastModifiedDate":"2024-03-01"},{"lineNumber":214,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":215,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-03-01"}],"authorContributionMap":{"Apzure":147,"ChocoRagdoll":14,"taeewonnn":11,"myang2020":43}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":89,"author":{"gitId":"Apzure"},"content":"    void setEventBook(ReadOnlyEventBook eventBook);","lastModifiedDate":"2024-03-02"},{"lineNumber":90,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":91,"author":{"gitId":"Apzure"},"content":"    ReadOnlyEventBook getEventBook();","lastModifiedDate":"2024-03-02"},{"lineNumber":92,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":93,"author":{"gitId":"Apzure"},"content":"    boolean hasEvent(Event event);","lastModifiedDate":"2024-03-02"},{"lineNumber":94,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":95,"author":{"gitId":"Apzure"},"content":"    void deleteEvent(Event target);","lastModifiedDate":"2024-03-02"},{"lineNumber":96,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":97,"author":{"gitId":"Apzure"},"content":"    void addEvent(Event event);","lastModifiedDate":"2024-03-02"},{"lineNumber":98,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":99,"author":{"gitId":"Apzure"},"content":"    void setEvent(Event target, Event editedEvent);","lastModifiedDate":"2024-03-02"},{"lineNumber":100,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":101,"author":{"gitId":"myang2020"},"content":"    boolean isAnEventSelected();","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"taeewonnn"},"content":"    boolean isSameSelectedEvent(Event event);","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"Apzure"},"content":"    void selectEvent(Event event);","lastModifiedDate":"2024-03-15"},{"lineNumber":106,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":107,"author":{"gitId":"myang2020"},"content":"    void deselectEvent();","lastModifiedDate":"2024-03-16"},{"lineNumber":108,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":109,"author":{"gitId":"myang2020"},"content":"    boolean isPersonInSelectedEvent(Person person);","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"myang2020"},"content":"    void addPersonToSelectedEvent(Person person);","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"ChocoRagdoll"},"content":"    void deletePersonFromSelectedEvent(Person person);","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":116,"author":{"gitId":"Apzure"},"content":"     * Returns an unmodifiable view of the filtered event list.","lastModifiedDate":"2024-03-15"},{"lineNumber":117,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":118,"author":{"gitId":"Apzure"},"content":"     * @return An unmodifiable view of the filtered event list.","lastModifiedDate":"2024-03-15"},{"lineNumber":119,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":120,"author":{"gitId":"Apzure"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2024-03-01"},{"lineNumber":121,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":122,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":123,"author":{"gitId":"Apzure"},"content":"     * Returns an unmodifiable view of the filtered person list of the selected event.","lastModifiedDate":"2024-03-15"},{"lineNumber":124,"author":{"gitId":"Apzure"},"content":"     * If no event is selected, returns an empty list.","lastModifiedDate":"2024-03-15"},{"lineNumber":125,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":126,"author":{"gitId":"Apzure"},"content":"     * @return An unmodifiable view of the filtered person list of the selected event,","lastModifiedDate":"2024-03-15"},{"lineNumber":127,"author":{"gitId":"Apzure"},"content":"     *         or an empty list if no event is selected.","lastModifiedDate":"2024-03-15"},{"lineNumber":128,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":129,"author":{"gitId":"Apzure"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonListOfSelectedEvent();","lastModifiedDate":"2024-03-15"},{"lineNumber":130,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Apzure":32,"ChocoRagdoll":2,"-":87,"taeewonnn":2,"myang2020":8}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"    private final EventBook eventBook;","lastModifiedDate":"2024-03-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"    private final FilteredList\u003cEvent\u003e filteredEvents;","lastModifiedDate":"2024-03-01"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersonsOfSelectedEvent;","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"        this.eventBook \u003d new EventBook();","lastModifiedDate":"2024-03-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"        filteredEvents \u003d new FilteredList\u003c\u003e(this.eventBook.getEventList());","lastModifiedDate":"2024-03-01"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"        filteredPersonsOfSelectedEvent \u003d new FilteredList\u003c\u003e(this.eventBook.getPersonsOfSelectedEventList());","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"Apzure"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d EventBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-02"},{"lineNumber":156,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":157,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-02"},{"lineNumber":158,"author":{"gitId":"Apzure"},"content":"    public void setEventBook(ReadOnlyEventBook eventBook) {","lastModifiedDate":"2024-03-02"},{"lineNumber":159,"author":{"gitId":"Apzure"},"content":"        this.eventBook.resetData(eventBook);","lastModifiedDate":"2024-03-02"},{"lineNumber":160,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":161,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":162,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-02"},{"lineNumber":163,"author":{"gitId":"Apzure"},"content":"    public ReadOnlyEventBook getEventBook() {","lastModifiedDate":"2024-03-02"},{"lineNumber":164,"author":{"gitId":"Apzure"},"content":"        return eventBook;","lastModifiedDate":"2024-03-02"},{"lineNumber":165,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":166,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":167,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-02"},{"lineNumber":168,"author":{"gitId":"Apzure"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2024-03-02"},{"lineNumber":169,"author":{"gitId":"Apzure"},"content":"        requireNonNull(event);","lastModifiedDate":"2024-03-02"},{"lineNumber":170,"author":{"gitId":"Apzure"},"content":"        return eventBook.hasEvent(event);","lastModifiedDate":"2024-03-02"},{"lineNumber":171,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":172,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":173,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-02"},{"lineNumber":174,"author":{"gitId":"Apzure"},"content":"    public void deleteEvent(Event target) {","lastModifiedDate":"2024-03-02"},{"lineNumber":175,"author":{"gitId":"Apzure"},"content":"        eventBook.removeEvent(target);","lastModifiedDate":"2024-03-02"},{"lineNumber":176,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":177,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":178,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-02"},{"lineNumber":179,"author":{"gitId":"Apzure"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2024-03-02"},{"lineNumber":180,"author":{"gitId":"Apzure"},"content":"        eventBook.addEvent(event);","lastModifiedDate":"2024-03-02"},{"lineNumber":181,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":182,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":183,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-02"},{"lineNumber":184,"author":{"gitId":"Apzure"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2024-03-02"},{"lineNumber":185,"author":{"gitId":"Apzure"},"content":"        requireAllNonNull(target, editedEvent);","lastModifiedDate":"2024-03-02"},{"lineNumber":186,"author":{"gitId":"Apzure"},"content":"        eventBook.setEvent(target, editedEvent);","lastModifiedDate":"2024-03-02"},{"lineNumber":187,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":188,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":189,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":190,"author":{"gitId":"myang2020"},"content":"    public boolean isAnEventSelected() {","lastModifiedDate":"2024-03-17"},{"lineNumber":191,"author":{"gitId":"myang2020"},"content":"        return eventBook.isAnEventSelected();","lastModifiedDate":"2024-03-17"},{"lineNumber":192,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":193,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":194,"author":{"gitId":"taeewonnn"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":195,"author":{"gitId":"taeewonnn"},"content":"    public boolean isSameSelectedEvent(Event event) {","lastModifiedDate":"2024-03-20"},{"lineNumber":196,"author":{"gitId":"taeewonnn"},"content":"        requireNonNull(event);","lastModifiedDate":"2024-03-19"},{"lineNumber":197,"author":{"gitId":"taeewonnn"},"content":"        return eventBook.isSameSelectedEvent(event);","lastModifiedDate":"2024-03-19"},{"lineNumber":198,"author":{"gitId":"taeewonnn"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":199,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":200,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":201,"author":{"gitId":"Apzure"},"content":"    public void selectEvent(Event event) {","lastModifiedDate":"2024-03-15"},{"lineNumber":202,"author":{"gitId":"Apzure"},"content":"        eventBook.selectEvent(event);","lastModifiedDate":"2024-03-15"},{"lineNumber":203,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":204,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":205,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":206,"author":{"gitId":"myang2020"},"content":"    public void deselectEvent() {","lastModifiedDate":"2024-03-16"},{"lineNumber":207,"author":{"gitId":"myang2020"},"content":"        eventBook.deselectEvent();","lastModifiedDate":"2024-03-16"},{"lineNumber":208,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":209,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":210,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":211,"author":{"gitId":"myang2020"},"content":"    public boolean isPersonInSelectedEvent(Person person) {","lastModifiedDate":"2024-03-17"},{"lineNumber":212,"author":{"gitId":"myang2020"},"content":"        requireNonNull(person);","lastModifiedDate":"2024-03-17"},{"lineNumber":213,"author":{"gitId":"myang2020"},"content":"        return eventBook.isPersonInSelectedEvent(person);","lastModifiedDate":"2024-03-17"},{"lineNumber":214,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":215,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":216,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":217,"author":{"gitId":"myang2020"},"content":"    public void addPersonToSelectedEvent(Person person) {","lastModifiedDate":"2024-03-17"},{"lineNumber":218,"author":{"gitId":"myang2020"},"content":"        requireNonNull(person);","lastModifiedDate":"2024-03-17"},{"lineNumber":219,"author":{"gitId":"myang2020"},"content":"        eventBook.addPersonToSelectedEvent(person);","lastModifiedDate":"2024-03-17"},{"lineNumber":220,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":221,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":222,"author":{"gitId":"ChocoRagdoll"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":223,"author":{"gitId":"ChocoRagdoll"},"content":"    public void deletePersonFromSelectedEvent(Person person) {","lastModifiedDate":"2024-03-20"},{"lineNumber":224,"author":{"gitId":"ChocoRagdoll"},"content":"        requireNonNull(person);","lastModifiedDate":"2024-03-20"},{"lineNumber":225,"author":{"gitId":"ChocoRagdoll"},"content":"        eventBook.deletePersonFromSelectedEvent(person);","lastModifiedDate":"2024-03-20"},{"lineNumber":226,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":227,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":228,"author":{"gitId":"Apzure"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Event List and Person List of Selected Event Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-15"},{"lineNumber":229,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-02"},{"lineNumber":230,"author":{"gitId":"Apzure"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2024-03-02"},{"lineNumber":231,"author":{"gitId":"Apzure"},"content":"        return filteredEvents;","lastModifiedDate":"2024-03-02"},{"lineNumber":232,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":233,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":234,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":235,"author":{"gitId":"Apzure"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonListOfSelectedEvent() {","lastModifiedDate":"2024-03-15"},{"lineNumber":236,"author":{"gitId":"Apzure"},"content":"        return filteredPersonsOfSelectedEvent;","lastModifiedDate":"2024-03-15"},{"lineNumber":237,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":238,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Apzure":58,"ChocoRagdoll":5,"-":148,"taeewonnn":6,"myang2020":22}},{"path":"src/main/java/seedu/address/model/ReadOnlyEventBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.model;","lastModifiedDate":"2024-03-01"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-01"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":" * Unmodifiable view of an event book","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"public interface ReadOnlyEventBook {","lastModifiedDate":"2024-03-02"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"     * Returns an unmodifiable view of the events list.","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"     * This list will not contain any duplicate events.","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"    ObservableList\u003cEvent\u003e getEventList();","lastModifiedDate":"2024-03-01"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"     * Returns an unmodifiable view of the persons list of the selected event.","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"     * This list will not contain any duplicate events.","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"     * This list is empty is no event is currently selected.","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"    ObservableList\u003cPerson\u003e getPersonsOfSelectedEventList();","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-03-01"}],"authorContributionMap":{"Apzure":23}},{"path":"src/main/java/seedu/address/model/event/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.model.event;","lastModifiedDate":"2024-03-01"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-04"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"import java.util.List;","lastModifiedDate":"2024-03-04"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-04"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-04"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2024-03-02"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":" * Represents an Event in the event book.","lastModifiedDate":"2024-03-04"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-03-01"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"public class Event {","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"    private final EventName eventName;","lastModifiedDate":"2024-03-01"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2024-03-04"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2024-03-01"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"    public Event(EventName eventName) {","lastModifiedDate":"2024-03-01"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"        requireAllNonNull(eventName);","lastModifiedDate":"2024-03-01"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"        this.eventName \u003d eventName;","lastModifiedDate":"2024-03-01"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2024-03-04"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"    public EventName getEventName() {","lastModifiedDate":"2024-03-01"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"        return eventName;","lastModifiedDate":"2024-03-01"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"    //// person-level operations","lastModifiedDate":"2024-03-04"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2024-03-04"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2024-03-04"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2024-03-04"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2024-03-04"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2024-03-04"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2024-03-04"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"        requireNonNull(person);","lastModifiedDate":"2024-03-04"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"        return persons.contains(person);","lastModifiedDate":"2024-03-04"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"     * Adds a person to the event.","lastModifiedDate":"2024-03-04"},{"lineNumber":56,"author":{"gitId":"Apzure"},"content":"     * The person must not already exist in the event.","lastModifiedDate":"2024-03-04"},{"lineNumber":57,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2024-03-04"},{"lineNumber":59,"author":{"gitId":"Apzure"},"content":"        persons.add(p);","lastModifiedDate":"2024-03-04"},{"lineNumber":60,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":61,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":62,"author":{"gitId":"ChocoRagdoll"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"ChocoRagdoll"},"content":"     * Deletes a person to the event.","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"ChocoRagdoll"},"content":"     * The person must already exist in the event.","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"ChocoRagdoll"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"ChocoRagdoll"},"content":"    public void deletePerson(Person p) {","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"ChocoRagdoll"},"content":"        persons.remove(p);","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":71,"author":{"gitId":"Apzure"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2024-03-04"},{"lineNumber":72,"author":{"gitId":"Apzure"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2024-03-04"},{"lineNumber":73,"author":{"gitId":"Apzure"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2024-03-04"},{"lineNumber":74,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":75,"author":{"gitId":"Apzure"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2024-03-04"},{"lineNumber":76,"author":{"gitId":"Apzure"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2024-03-04"},{"lineNumber":77,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":78,"author":{"gitId":"Apzure"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2024-03-04"},{"lineNumber":79,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":80,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":81,"author":{"gitId":"Apzure"},"content":"    //// util methods","lastModifiedDate":"2024-03-04"},{"lineNumber":82,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":83,"author":{"gitId":"Apzure"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2024-03-04"},{"lineNumber":84,"author":{"gitId":"Apzure"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2024-03-04"},{"lineNumber":85,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":86,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":87,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":88,"author":{"gitId":"Apzure"},"content":"     * Returns true if both events have the same event name.","lastModifiedDate":"2024-03-01"},{"lineNumber":89,"author":{"gitId":"Apzure"},"content":"     * This defines a weaker notion of equality between two events.","lastModifiedDate":"2024-03-01"},{"lineNumber":90,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":91,"author":{"gitId":"Apzure"},"content":"    public boolean isSameEvent(Event otherEvent) {","lastModifiedDate":"2024-03-01"},{"lineNumber":92,"author":{"gitId":"Apzure"},"content":"        if (otherEvent \u003d\u003d this) {","lastModifiedDate":"2024-03-01"},{"lineNumber":93,"author":{"gitId":"Apzure"},"content":"            return true;","lastModifiedDate":"2024-03-01"},{"lineNumber":94,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":95,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":96,"author":{"gitId":"Apzure"},"content":"        return otherEvent !\u003d null","lastModifiedDate":"2024-03-01"},{"lineNumber":97,"author":{"gitId":"Apzure"},"content":"                \u0026\u0026 otherEvent.getEventName().equals(getEventName());","lastModifiedDate":"2024-03-01"},{"lineNumber":98,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":99,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":100,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":101,"author":{"gitId":"Apzure"},"content":"     * Returns true if both events have the same identity and data fields.","lastModifiedDate":"2024-03-01"},{"lineNumber":102,"author":{"gitId":"Apzure"},"content":"     * This defines a stronger notion of equality between two events.","lastModifiedDate":"2024-03-01"},{"lineNumber":103,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":104,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-01"},{"lineNumber":105,"author":{"gitId":"Apzure"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-01"},{"lineNumber":106,"author":{"gitId":"Apzure"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-01"},{"lineNumber":107,"author":{"gitId":"Apzure"},"content":"            return true;","lastModifiedDate":"2024-03-01"},{"lineNumber":108,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":109,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":110,"author":{"gitId":"Apzure"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-01"},{"lineNumber":111,"author":{"gitId":"Apzure"},"content":"        if (!(other instanceof Event)) {","lastModifiedDate":"2024-03-01"},{"lineNumber":112,"author":{"gitId":"Apzure"},"content":"            return false;","lastModifiedDate":"2024-03-01"},{"lineNumber":113,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":114,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":115,"author":{"gitId":"Apzure"},"content":"        Event otherEvent \u003d (Event) other;","lastModifiedDate":"2024-03-01"},{"lineNumber":116,"author":{"gitId":"Apzure"},"content":"        return eventName.equals(otherEvent.eventName);","lastModifiedDate":"2024-03-01"},{"lineNumber":117,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":118,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":119,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-01"},{"lineNumber":120,"author":{"gitId":"Apzure"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-01"},{"lineNumber":121,"author":{"gitId":"Apzure"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2024-03-01"},{"lineNumber":122,"author":{"gitId":"Apzure"},"content":"        return Objects.hash(eventName);","lastModifiedDate":"2024-03-01"},{"lineNumber":123,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":124,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":125,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-01"},{"lineNumber":126,"author":{"gitId":"Apzure"},"content":"    public String toString() {","lastModifiedDate":"2024-03-01"},{"lineNumber":127,"author":{"gitId":"Apzure"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-01"},{"lineNumber":128,"author":{"gitId":"Apzure"},"content":"                .add(\"eventName\", eventName)","lastModifiedDate":"2024-03-01"},{"lineNumber":129,"author":{"gitId":"Apzure"},"content":"                .add(\"persons\", persons.toString())","lastModifiedDate":"2024-03-04"},{"lineNumber":130,"author":{"gitId":"Apzure"},"content":"                .toString();","lastModifiedDate":"2024-03-01"},{"lineNumber":131,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":132,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-03-01"}],"authorContributionMap":{"Apzure":124,"ChocoRagdoll":8}},{"path":"src/main/java/seedu/address/model/event/EventName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.model.event;","lastModifiedDate":"2024-03-01"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":" * Represents an Event\u0027s name.","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":" * Guarantees: immutable","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"public class EventName {","lastModifiedDate":"2024-03-01"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"    public final String eventName;","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"     * Constructs a {@code EventName}.","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"     * @param eventName A valid name.","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"    public EventName(String eventName) {","lastModifiedDate":"2024-03-01"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"        requireNonNull(eventName);","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"        this.eventName \u003d eventName;","lastModifiedDate":"2024-03-01"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-01"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"    public String toString() {","lastModifiedDate":"2024-03-01"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"        return eventName;","lastModifiedDate":"2024-03-01"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-01"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-01"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-01"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"            return true;","lastModifiedDate":"2024-03-01"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-01"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"        if (!(other instanceof EventName)) {","lastModifiedDate":"2024-03-01"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"            return false;","lastModifiedDate":"2024-03-01"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"        EventName otherName \u003d (EventName) other;","lastModifiedDate":"2024-03-01"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"        return eventName.equals(otherName.eventName);","lastModifiedDate":"2024-03-01"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-01"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-01"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"        return eventName.hashCode();","lastModifiedDate":"2024-03-01"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-03-01"}],"authorContributionMap":{"Apzure":46}},{"path":"src/main/java/seedu/address/model/event/UniqueEventList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.model.event;","lastModifiedDate":"2024-03-01"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-03-01"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"import java.util.List;","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-01"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2024-03-01"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":" * A list of events that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2024-03-01"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":" * An event is considered unique by comparing using {@code Event#isSameEvent(Event)}.","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":" * Adding and updating of events use Event#isSameEvent(Event) for equality to ensure that the event being added or","lastModifiedDate":"2024-03-01"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":" * updated is unique in terms of identity in the UniqueEventList.","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":" * However, the removal of an event uses Event#equals(Object) so as to ensure that the event with exactly the same","lastModifiedDate":"2024-03-01"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":" * fields will be removed.","lastModifiedDate":"2024-03-01"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2024-03-01"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":" *","lastModifiedDate":"2024-03-01"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":" * @see Event#isSameEvent(Event)","lastModifiedDate":"2024-03-01"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-03-01"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"public class UniqueEventList implements Iterable\u003cEvent\u003e {","lastModifiedDate":"2024-03-01"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"    private final ObservableList\u003cEvent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-01"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"    private final ObservableList\u003cEvent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2024-03-01"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2024-03-01"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"     * Returns true if the list contains an equivalent event as the given argument.","lastModifiedDate":"2024-03-01"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"    public boolean contains(Event toCheck) {","lastModifiedDate":"2024-03-01"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2024-03-01"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"        return internalList.stream().anyMatch(toCheck::isSameEvent);","lastModifiedDate":"2024-03-01"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"     * Adds an event to the list.","lastModifiedDate":"2024-03-01"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"     * The event must not already exist in the list.","lastModifiedDate":"2024-03-01"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"    public void add(Event toAdd) {","lastModifiedDate":"2024-03-01"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2024-03-01"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2024-03-01"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2024-03-01"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2024-03-01"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"     * Replaces the event {@code target} in the list with {@code editedEvent}.","lastModifiedDate":"2024-03-01"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2024-03-01"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"     * The event identity of {@code editedEvent} must not be the same as another existing event in the list.","lastModifiedDate":"2024-03-01"},{"lineNumber":56,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":57,"author":{"gitId":"Apzure"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2024-03-01"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"        requireAllNonNull(target, editedEvent);","lastModifiedDate":"2024-03-01"},{"lineNumber":59,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":60,"author":{"gitId":"Apzure"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2024-03-01"},{"lineNumber":61,"author":{"gitId":"Apzure"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2024-03-01"},{"lineNumber":62,"author":{"gitId":"Apzure"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2024-03-01"},{"lineNumber":63,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":64,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":65,"author":{"gitId":"Apzure"},"content":"        if (!target.isSameEvent(editedEvent) \u0026\u0026 contains(editedEvent)) {","lastModifiedDate":"2024-03-01"},{"lineNumber":66,"author":{"gitId":"Apzure"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2024-03-01"},{"lineNumber":67,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":68,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":69,"author":{"gitId":"Apzure"},"content":"        internalList.set(index, editedEvent);","lastModifiedDate":"2024-03-01"},{"lineNumber":70,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":71,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":72,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":73,"author":{"gitId":"Apzure"},"content":"     * Removes the equivalent event from the list.","lastModifiedDate":"2024-03-01"},{"lineNumber":74,"author":{"gitId":"Apzure"},"content":"     * The event must exist in the list.","lastModifiedDate":"2024-03-01"},{"lineNumber":75,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":76,"author":{"gitId":"Apzure"},"content":"    public void remove(Event toRemove) {","lastModifiedDate":"2024-03-01"},{"lineNumber":77,"author":{"gitId":"Apzure"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2024-03-01"},{"lineNumber":78,"author":{"gitId":"Apzure"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2024-03-01"},{"lineNumber":79,"author":{"gitId":"Apzure"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2024-03-01"},{"lineNumber":80,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":81,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":82,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":83,"author":{"gitId":"Apzure"},"content":"    public void setEvents(UniqueEventList replacement) {","lastModifiedDate":"2024-03-01"},{"lineNumber":84,"author":{"gitId":"Apzure"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2024-03-01"},{"lineNumber":85,"author":{"gitId":"Apzure"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2024-03-01"},{"lineNumber":86,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":87,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":88,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":89,"author":{"gitId":"Apzure"},"content":"     * Replaces the contents of this list with {@code events}.","lastModifiedDate":"2024-03-01"},{"lineNumber":90,"author":{"gitId":"Apzure"},"content":"     * {@code events} must not contain duplicate events.","lastModifiedDate":"2024-03-01"},{"lineNumber":91,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":92,"author":{"gitId":"Apzure"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2024-03-01"},{"lineNumber":93,"author":{"gitId":"Apzure"},"content":"        requireAllNonNull(events);","lastModifiedDate":"2024-03-01"},{"lineNumber":94,"author":{"gitId":"Apzure"},"content":"        if (!eventsAreUnique(events)) {","lastModifiedDate":"2024-03-01"},{"lineNumber":95,"author":{"gitId":"Apzure"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2024-03-01"},{"lineNumber":96,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":97,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":98,"author":{"gitId":"Apzure"},"content":"        internalList.setAll(events);","lastModifiedDate":"2024-03-01"},{"lineNumber":99,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":100,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":101,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":102,"author":{"gitId":"Apzure"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2024-03-01"},{"lineNumber":103,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":104,"author":{"gitId":"Apzure"},"content":"    public ObservableList\u003cEvent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2024-03-01"},{"lineNumber":105,"author":{"gitId":"Apzure"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2024-03-01"},{"lineNumber":106,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":107,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":108,"author":{"gitId":"Apzure"},"content":"    /// Utils","lastModifiedDate":"2024-03-04"},{"lineNumber":109,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":110,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-01"},{"lineNumber":111,"author":{"gitId":"Apzure"},"content":"    public Iterator\u003cEvent\u003e iterator() {","lastModifiedDate":"2024-03-01"},{"lineNumber":112,"author":{"gitId":"Apzure"},"content":"        return internalList.iterator();","lastModifiedDate":"2024-03-01"},{"lineNumber":113,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":114,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":115,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-01"},{"lineNumber":116,"author":{"gitId":"Apzure"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-01"},{"lineNumber":117,"author":{"gitId":"Apzure"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-01"},{"lineNumber":118,"author":{"gitId":"Apzure"},"content":"            return true;","lastModifiedDate":"2024-03-01"},{"lineNumber":119,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":120,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":121,"author":{"gitId":"Apzure"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-01"},{"lineNumber":122,"author":{"gitId":"Apzure"},"content":"        if (!(other instanceof UniqueEventList)) {","lastModifiedDate":"2024-03-01"},{"lineNumber":123,"author":{"gitId":"Apzure"},"content":"            return false;","lastModifiedDate":"2024-03-01"},{"lineNumber":124,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":125,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":126,"author":{"gitId":"Apzure"},"content":"        UniqueEventList otherUniqueEventList \u003d (UniqueEventList) other;","lastModifiedDate":"2024-03-01"},{"lineNumber":127,"author":{"gitId":"Apzure"},"content":"        return internalList.equals(otherUniqueEventList.internalList);","lastModifiedDate":"2024-03-01"},{"lineNumber":128,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":129,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":130,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-01"},{"lineNumber":131,"author":{"gitId":"Apzure"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-01"},{"lineNumber":132,"author":{"gitId":"Apzure"},"content":"        return internalList.hashCode();","lastModifiedDate":"2024-03-01"},{"lineNumber":133,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":134,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":135,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-03-01"},{"lineNumber":136,"author":{"gitId":"Apzure"},"content":"    public String toString() {","lastModifiedDate":"2024-03-01"},{"lineNumber":137,"author":{"gitId":"Apzure"},"content":"        return internalList.toString();","lastModifiedDate":"2024-03-01"},{"lineNumber":138,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":139,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":140,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":141,"author":{"gitId":"Apzure"},"content":"     * Returns true if {@code events} contains only unique events.","lastModifiedDate":"2024-03-01"},{"lineNumber":142,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":143,"author":{"gitId":"Apzure"},"content":"    private boolean eventsAreUnique(List\u003cEvent\u003e events) {","lastModifiedDate":"2024-03-01"},{"lineNumber":144,"author":{"gitId":"Apzure"},"content":"        for (int i \u003d 0; i \u003c events.size() - 1; i++) {","lastModifiedDate":"2024-03-01"},{"lineNumber":145,"author":{"gitId":"Apzure"},"content":"            for (int j \u003d i + 1; j \u003c events.size(); j++) {","lastModifiedDate":"2024-03-01"},{"lineNumber":146,"author":{"gitId":"Apzure"},"content":"                if (events.get(i).isSameEvent(events.get(j))) {","lastModifiedDate":"2024-03-01"},{"lineNumber":147,"author":{"gitId":"Apzure"},"content":"                    return false;","lastModifiedDate":"2024-03-01"},{"lineNumber":148,"author":{"gitId":"Apzure"},"content":"                }","lastModifiedDate":"2024-03-01"},{"lineNumber":149,"author":{"gitId":"Apzure"},"content":"            }","lastModifiedDate":"2024-03-01"},{"lineNumber":150,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":151,"author":{"gitId":"Apzure"},"content":"        return true;","lastModifiedDate":"2024-03-01"},{"lineNumber":152,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":153,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-03-01"}],"authorContributionMap":{"Apzure":153}},{"path":"src/main/java/seedu/address/model/event/exceptions/DuplicateEventException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2024-03-01"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":" * identity).","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-03-01"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"public class DuplicateEventException extends RuntimeException {","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"    public DuplicateEventException() {","lastModifiedDate":"2024-03-01"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"        super(\"Operation would result in duplicate events\");","lastModifiedDate":"2024-03-01"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-03-01"}],"authorContributionMap":{"Apzure":11}},{"path":"src/main/java/seedu/address/model/event/exceptions/EventNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2024-03-01"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"public class EventNotFoundException extends RuntimeException {}","lastModifiedDate":"2024-03-01"}],"authorContributionMap":{"Apzure":6}},{"path":"src/main/java/seedu/address/ui/EventCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-01"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-01"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-03-01"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":" * A UI component that displays information of an {@code Event}.","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-03-01"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"public class EventCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"    private static final String FXML \u003d \"EventListCard.fxml\";","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"    @FXML","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"    private HBox cardPane;","lastModifiedDate":"2024-03-01"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"    @FXML","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"    private Label id;","lastModifiedDate":"2024-03-01"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"    @FXML","lastModifiedDate":"2024-03-01"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"    private Label name;","lastModifiedDate":"2024-03-01"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"     * Creates a {@code EventCard} with the given {@code Event} and index to display.","lastModifiedDate":"2024-03-01"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"    public EventCard(Event event, int displayedIndex) {","lastModifiedDate":"2024-03-01"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"        super(FXML);","lastModifiedDate":"2024-03-01"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2024-03-01"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"        name.setText(event.getEventName().eventName);","lastModifiedDate":"2024-03-01"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"    public Region getRoot() {","lastModifiedDate":"2024-03-01"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"        return cardPane;","lastModifiedDate":"2024-03-01"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-03-01"}],"authorContributionMap":{"Apzure":35}},{"path":"src/main/java/seedu/address/ui/EventListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-01"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-01"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2024-03-01"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-01"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-01"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":" * Panel containing the list of events.","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-03-01"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"public class EventListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"    private static final String FXML \u003d \"EventListPanel.fxml\";","lastModifiedDate":"2024-03-01"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(EventListPanel.class);","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"    @FXML","lastModifiedDate":"2024-03-01"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"    private ListView\u003cEvent\u003e eventListView;","lastModifiedDate":"2024-03-01"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"     * Creates an {@code EventListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2024-03-01"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"    public EventListPanel(ObservableList\u003cEvent\u003e eventList) {","lastModifiedDate":"2024-03-01"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"        super(FXML);","lastModifiedDate":"2024-03-01"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"        eventListView.setItems(eventList);","lastModifiedDate":"2024-03-01"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"        eventListView.setCellFactory(listView -\u003e new EventListViewCell());","lastModifiedDate":"2024-03-01"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"     * Custom {@code ListCell} that displays the graphics of an {@code Event} using an {@code EventCard}.","lastModifiedDate":"2024-03-01"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"    class EventListViewCell extends ListCell\u003cEvent\u003e {","lastModifiedDate":"2024-03-01"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"        @Override","lastModifiedDate":"2024-03-01"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"        protected void updateItem(Event event, boolean empty) {","lastModifiedDate":"2024-03-01"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"            super.updateItem(event, empty);","lastModifiedDate":"2024-03-01"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"            if (empty || event \u003d\u003d null) {","lastModifiedDate":"2024-03-01"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"                setGraphic(null);","lastModifiedDate":"2024-03-01"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"                setText(null);","lastModifiedDate":"2024-03-01"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"            } else {","lastModifiedDate":"2024-03-01"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"                setGraphic(new EventCard(event, getIndex() + 1).getRoot());","lastModifiedDate":"2024-03-01"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"            }","lastModifiedDate":"2024-03-01"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-03-01"}],"authorContributionMap":{"Apzure":48}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"    private EventListPanel eventListPanel;","lastModifiedDate":"2024-03-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"    @FXML","lastModifiedDate":"2024-03-01"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"    private StackPane eventListPanelPlaceholder;","lastModifiedDate":"2024-03-01"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"    @FXML","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"    private StackPane personListOfSelectedEventPanelPlaceholder;","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":123,"author":{"gitId":"Apzure"},"content":"        eventListPanel \u003d new EventListPanel(logic.getFilteredEventList());","lastModifiedDate":"2024-03-15"},{"lineNumber":124,"author":{"gitId":"Apzure"},"content":"        eventListPanelPlaceholder.getChildren().add(eventListPanel.getRoot());","lastModifiedDate":"2024-03-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":176,"author":{"gitId":"Apzure"},"content":"    public EventListPanel getEventListPanel() {","lastModifiedDate":"2024-03-01"},{"lineNumber":177,"author":{"gitId":"Apzure"},"content":"        return eventListPanel;","lastModifiedDate":"2024-03-01"},{"lineNumber":178,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":179,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Apzure":13,"-":197}},{"path":"src/main/resources/view/EventListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2024-03-01"}],"authorContributionMap":{"Apzure":32}},{"path":"src/main/resources/view/EventListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"  \u003cListView fx:id\u003d\"eventListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2024-03-01"}],"authorContributionMap":{"Apzure":8}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"         title\u003d\"Address App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/address_book_32.png\"/\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\"/\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                           minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"                \u003cSplitPane dividerPositions\u003d\"0.3, 0.6\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"                    \u003citems\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"                        \u003cStackPane fx:id\u003d\"eventListPanelPlaceholder\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"200\" prefWidth\u003d\"200\" SplitPane.resizableWithParent\u003d\"false\"\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"                            \u003cpadding\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"                                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"                            \u003c/padding\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"                        \u003c/StackPane\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":56,"author":{"gitId":"Apzure"},"content":"                        \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"200\" prefWidth\u003d\"200\" SplitPane.resizableWithParent\u003d\"false\"\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"Apzure"},"content":"                            \u003cpadding\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"                                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"Apzure"},"content":"                            \u003c/padding\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"Apzure"},"content":"                        \u003c/StackPane\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"Apzure"},"content":"                    \u003c/items\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":62,"author":{"gitId":"Apzure"},"content":"                \u003c/SplitPane\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Apzure":14,"-":54}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"myang2020"},"content":"    public void getFilteredPersonListOfSelectedEvent_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"myang2020"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonListOfSelectedEvent().remove(0));","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":175,"myang2020":5}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"import seedu.address.testutil.ModelStub;","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"-":123,"myang2020":1}},{"path":"src/test/java/seedu/address/logic/commands/AddEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"import seedu.address.testutil.ModelStub;","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"public class AddEventCommandTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"    public void constructor_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddEventCommand(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"    public void execute_eventAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"        ModelStubAcceptingEventAdded modelStub \u003d new ModelStubAcceptingEventAdded();","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"        Event validEvent \u003d new EventBuilder().build();","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"        CommandResult commandResult \u003d new AddEventCommand(validEvent).execute(modelStub);","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"        assertEquals(String.format(AddEventCommand.MESSAGE_SUCCESS, Messages.format(validEvent)),","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"        assertEquals(Arrays.asList(validEvent), modelStub.eventsAdded);","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"    public void execute_duplicateEvent_throwsCommandException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"        Event validEvent \u003d new EventBuilder().build();","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"        AddEventCommand addEventCommand \u003d new AddEventCommand(validEvent);","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"        ModelStub modelStub \u003d new ModelStubWithEvent(validEvent);","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"        assertThrows(CommandException.class, AddEventCommand.MESSAGE_DUPLICATE_EVENT, (","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"            ) -\u003e addEventCommand.execute(modelStub));","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"        Event eventToAdd \u003d new EventBuilder().withEventName(\"Sample Event\").build();","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"        AddEventCommand addEventCommand \u003d new AddEventCommand(eventToAdd);","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"        String expected \u003d AddEventCommand.class.getCanonicalName() + \"{toAdd\u003d\" + eventToAdd + \"}\";","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"        assertEquals(expected, addEventCommand.toString());","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"     * A Model stub that contains a single event.","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"Apzure"},"content":"    private class ModelStubWithEvent extends ModelStub {","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"Apzure"},"content":"        private final Event event;","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"Apzure"},"content":"        ModelStubWithEvent(Event event) {","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"Apzure"},"content":"            requireNonNull(event);","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"Apzure"},"content":"            this.event \u003d event;","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"Apzure"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"Apzure"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"Apzure"},"content":"            requireNonNull(event);","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"Apzure"},"content":"            return this.event.isSameEvent(event);","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"Apzure"},"content":"     * A Model stub that always accept the Event being added.","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"Apzure"},"content":"    private class ModelStubAcceptingEventAdded extends ModelStub {","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"Apzure"},"content":"        final ArrayList\u003cEvent\u003e eventsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"Apzure"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"Apzure"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"Apzure"},"content":"            requireNonNull(event);","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"Apzure"},"content":"            return eventsAdded.stream().anyMatch(event::isSameEvent);","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"Apzure"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"Apzure"},"content":"        public void addEvent(Event event) {","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"Apzure"},"content":"            requireNonNull(event);","lastModifiedDate":"2024-03-12"},{"lineNumber":90,"author":{"gitId":"Apzure"},"content":"            eventsAdded.add(event);","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":92,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":93,"author":{"gitId":"Apzure"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":94,"author":{"gitId":"Apzure"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2024-03-12"},{"lineNumber":95,"author":{"gitId":"Apzure"},"content":"            return new AddressBook();","lastModifiedDate":"2024-03-12"},{"lineNumber":96,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Apzure":97,"myang2020":1}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_NAME;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"Apzure"},"content":"    public static final String VALID_EVENT_NAME_BINGO \u003d \"bingo\";","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"Apzure"},"content":"    public static final String EVENT_NAME_DESC_BINGO \u003d \" \" + PREFIX_EVENT_NAME + VALID_EVENT_NAME_BINGO;","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Apzure":4,"-":128}},{"path":"src/test/java/seedu/address/logic/commands/DeleteEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"taeewonnn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"taeewonnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"taeewonnn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"taeewonnn"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"taeewonnn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"taeewonnn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"taeewonnn"},"content":"import static seedu.address.testutil.TypicalEvents.getBingoEvent;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"taeewonnn"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"taeewonnn"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"taeewonnn"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_EVENT;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"taeewonnn"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"taeewonnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"taeewonnn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"taeewonnn"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"taeewonnn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"taeewonnn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"taeewonnn"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"taeewonnn"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"taeewonnn"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"taeewonnn"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"taeewonnn"},"content":" * {@code DeleteEventCommand}.","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"taeewonnn"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"taeewonnn"},"content":"public class DeleteEventCommandTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"taeewonnn"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"taeewonnn"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"taeewonnn"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"taeewonnn"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredEventList().size() + 1);","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"taeewonnn"},"content":"        DeleteEventCommand deleteEventCommand \u003d new DeleteEventCommand(outOfBoundIndex);","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"taeewonnn"},"content":"        assertCommandFailure(deleteEventCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"taeewonnn"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"taeewonnn"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"taeewonnn"},"content":"    public void execute_selectModel_throwsCommandException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"taeewonnn"},"content":"        SelectCommand selectCommand \u003d new SelectCommand(Index.fromZeroBased(1));","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"taeewonnn"},"content":"        assertThrows(CommandException.class, () -\u003e new DeleteEventCommand(Index.fromZeroBased(1)).execute(model));","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"taeewonnn"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"taeewonnn"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"taeewonnn"},"content":"    public void execute_deleteEvent_success() throws CommandException {","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"taeewonnn"},"content":"        ModelManager model \u003d new ModelManager();","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"taeewonnn"},"content":"        model.setEventBook(getTypicalEventBook());","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"taeewonnn"},"content":"        DeleteEventCommand deleteEventCommand \u003d new DeleteEventCommand(Index.fromZeroBased(0));","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"taeewonnn"},"content":"        CommandResult commandResult \u003d deleteEventCommand.execute(model);","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"taeewonnn"},"content":"        assertEquals(String.format(DeleteEventCommand.MESSAGE_DELETE_EVENT_SUCCESS,","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"taeewonnn"},"content":"                Messages.format(getBingoEvent())),","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"taeewonnn"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"taeewonnn"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"taeewonnn"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"taeewonnn"},"content":"    public void equals() {","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"taeewonnn"},"content":"        DeleteEventCommand deleteFirstEventCommand \u003d new DeleteEventCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"taeewonnn"},"content":"        DeleteEventCommand deleteSecondEventCommand \u003d new DeleteEventCommand(INDEX_SECOND_EVENT);","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"taeewonnn"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"taeewonnn"},"content":"        assertTrue(deleteFirstEventCommand.equals(deleteFirstEventCommand));","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"taeewonnn"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"taeewonnn"},"content":"        DeleteEventCommand deleteFirstEventCommandCopy \u003d new DeleteEventCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"taeewonnn"},"content":"        assertTrue(deleteFirstEventCommand.equals(deleteFirstEventCommandCopy));","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"taeewonnn"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"taeewonnn"},"content":"        assertFalse(deleteFirstEventCommand.equals(1));","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"taeewonnn"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"taeewonnn"},"content":"        assertFalse(deleteFirstEventCommand.equals(null));","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"taeewonnn"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"taeewonnn"},"content":"        assertFalse(deleteFirstEventCommand.equals(deleteSecondEventCommand));","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"taeewonnn"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"taeewonnn"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"taeewonnn"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"taeewonnn"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"taeewonnn"},"content":"        DeleteEventCommand deleteEventCommand \u003d new DeleteEventCommand(targetIndex);","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"taeewonnn"},"content":"        String expected \u003d DeleteEventCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"taeewonnn"},"content":"        assertEquals(expected, deleteEventCommand.toString());","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"taeewonnn"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"taeewonnn"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"taeewonnn"},"content":"     * Updates {@code model}\u0027s filtered list to show no event.","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"taeewonnn"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"taeewonnn"},"content":"    private void showNoEvent(Model model) {","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"taeewonnn"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"taeewonnn"},"content":"        assertTrue(model.getFilteredEventList().isEmpty());","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"taeewonnn"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"taeewonnn"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"taeewonnn":95}},{"path":"src/test/java/seedu/address/logic/commands/DeletePersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ChocoRagdoll"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"ChocoRagdoll"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"ChocoRagdoll"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"ChocoRagdoll"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"ChocoRagdoll"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"ChocoRagdoll"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"ChocoRagdoll"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"ChocoRagdoll"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"ChocoRagdoll"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"ChocoRagdoll"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"ChocoRagdoll"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"ChocoRagdoll"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"ChocoRagdoll"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"ChocoRagdoll"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"ChocoRagdoll"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"ChocoRagdoll"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"ChocoRagdoll"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"ChocoRagdoll"},"content":"public class DeletePersonCommandTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"ChocoRagdoll"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"ChocoRagdoll"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"ChocoRagdoll"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"ChocoRagdoll"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeletePersonCommand(null));","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"ChocoRagdoll"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"ChocoRagdoll"},"content":"    public void execute_nullModel_throwsNullPointerException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"ChocoRagdoll"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"ChocoRagdoll"},"content":"                new DeletePersonCommand(Index.fromZeroBased(0)).execute(null));","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"ChocoRagdoll"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"ChocoRagdoll"},"content":"    public void deleteFromGlobal_validIndexUnfilteredList_success() {","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"ChocoRagdoll"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"ChocoRagdoll"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"ChocoRagdoll"},"content":"        String expectedMessage \u003d String.format(DeletePersonCommand.MESSAGE_DELETE_PERSON_GLOBAL_SUCCESS,","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"ChocoRagdoll"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"ChocoRagdoll"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"ChocoRagdoll"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"ChocoRagdoll"},"content":"        assertCommandSuccess(deletePersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"ChocoRagdoll"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"ChocoRagdoll"},"content":"    public void deleteFromGlobal_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"ChocoRagdoll"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"ChocoRagdoll"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(outOfBoundIndex);","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"ChocoRagdoll"},"content":"        assertCommandFailure(deletePersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"ChocoRagdoll"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"ChocoRagdoll"},"content":"    public void deleteFromGlobal_validIndexFilteredList_success() {","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"ChocoRagdoll"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"ChocoRagdoll"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"ChocoRagdoll"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"ChocoRagdoll"},"content":"        String expectedMessage \u003d String.format(DeletePersonCommand.MESSAGE_DELETE_PERSON_GLOBAL_SUCCESS,","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"ChocoRagdoll"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"ChocoRagdoll"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"ChocoRagdoll"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"ChocoRagdoll"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"ChocoRagdoll"},"content":"        assertCommandSuccess(deletePersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"ChocoRagdoll"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"ChocoRagdoll"},"content":"    public void deleteFromGlobal_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"ChocoRagdoll"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"ChocoRagdoll"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"ChocoRagdoll"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"ChocoRagdoll"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"ChocoRagdoll"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(outOfBoundIndex);","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"ChocoRagdoll"},"content":"        assertCommandFailure(deletePersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"ChocoRagdoll"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"ChocoRagdoll"},"content":"    public void deleteFromEvent_validIndex_success() throws Exception {","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"ChocoRagdoll"},"content":"        ModelManager model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"ChocoRagdoll"},"content":"        model.setEventBook(getTypicalEventBook());","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"ChocoRagdoll"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(Index.fromZeroBased(0));","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"ChocoRagdoll"},"content":"        Event event \u003d model.getEventBook().getEventList().get(0);","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"ChocoRagdoll"},"content":"        Person personToDelete \u003d getTypicalAddressBook().getPersonList().get(0);","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"ChocoRagdoll"},"content":"        // Select an event first","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"ChocoRagdoll"},"content":"        model.selectEvent(event);","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"ChocoRagdoll"},"content":"        // Add person","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"ChocoRagdoll"},"content":"        event.addPerson(personToDelete);","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"ChocoRagdoll"},"content":"        model.selectEvent(event);","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"ChocoRagdoll"},"content":"        deletePersonCommand.execute(model);","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"ChocoRagdoll"},"content":"        assertFalse(model.isPersonInSelectedEvent(personToDelete));","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"ChocoRagdoll"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"ChocoRagdoll"},"content":"    public void deleteFromEvent_invalidIndex_throwsCommandException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"ChocoRagdoll"},"content":"        ModelManager model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"ChocoRagdoll"},"content":"        model.setEventBook(getTypicalEventBook());","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"ChocoRagdoll"},"content":"        Event event \u003d model.getEventBook().getEventList().get(0);","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"ChocoRagdoll"},"content":"        model.selectEvent(event);","lastModifiedDate":"2024-03-20"},{"lineNumber":122,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"ChocoRagdoll"},"content":"        assertThrows(CommandException.class, () -\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":124,"author":{"gitId":"ChocoRagdoll"},"content":"                new DeletePersonCommand(Index.fromZeroBased(100)).execute(model));","lastModifiedDate":"2024-03-20"},{"lineNumber":125,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":126,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":127,"author":{"gitId":"ChocoRagdoll"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":128,"author":{"gitId":"ChocoRagdoll"},"content":"    public void deleteFromEvent_noEventSelected_throwsCommandException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"ChocoRagdoll"},"content":"        ModelManager model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-20"},{"lineNumber":130,"author":{"gitId":"ChocoRagdoll"},"content":"        model.setEventBook(getTypicalEventBook());","lastModifiedDate":"2024-03-20"},{"lineNumber":131,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":132,"author":{"gitId":"ChocoRagdoll"},"content":"        assertThrows(CommandException.class, () -\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"ChocoRagdoll"},"content":"                new DeletePersonCommand(Index.fromZeroBased(100)).deleteFromEvent(model));","lastModifiedDate":"2024-03-20"},{"lineNumber":134,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":135,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":136,"author":{"gitId":"ChocoRagdoll"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":137,"author":{"gitId":"ChocoRagdoll"},"content":"    public void equals() {","lastModifiedDate":"2024-03-20"},{"lineNumber":138,"author":{"gitId":"ChocoRagdoll"},"content":"        DeletePersonCommand deleteFirstPersonCommand \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-20"},{"lineNumber":139,"author":{"gitId":"ChocoRagdoll"},"content":"        DeletePersonCommand deleteSecondPersonCommand \u003d new DeletePersonCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2024-03-20"},{"lineNumber":140,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":141,"author":{"gitId":"ChocoRagdoll"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-20"},{"lineNumber":142,"author":{"gitId":"ChocoRagdoll"},"content":"        assertTrue(deleteFirstPersonCommand.equals(deleteFirstPersonCommand));","lastModifiedDate":"2024-03-20"},{"lineNumber":143,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":144,"author":{"gitId":"ChocoRagdoll"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-20"},{"lineNumber":145,"author":{"gitId":"ChocoRagdoll"},"content":"        DeletePersonCommand deleteFirstPersonCommandCopy \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-20"},{"lineNumber":146,"author":{"gitId":"ChocoRagdoll"},"content":"        assertTrue(deleteFirstPersonCommandCopy.equals(deleteFirstPersonCommandCopy));","lastModifiedDate":"2024-03-20"},{"lineNumber":147,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":148,"author":{"gitId":"ChocoRagdoll"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":149,"author":{"gitId":"ChocoRagdoll"},"content":"        assertFalse(deleteFirstPersonCommand.equals(1));","lastModifiedDate":"2024-03-20"},{"lineNumber":150,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":151,"author":{"gitId":"ChocoRagdoll"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":152,"author":{"gitId":"ChocoRagdoll"},"content":"        assertFalse(deleteFirstPersonCommand.equals(null));","lastModifiedDate":"2024-03-20"},{"lineNumber":153,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":154,"author":{"gitId":"ChocoRagdoll"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":155,"author":{"gitId":"ChocoRagdoll"},"content":"        assertFalse(deleteFirstPersonCommand.equals(deleteSecondPersonCommand));","lastModifiedDate":"2024-03-20"},{"lineNumber":156,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":157,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":158,"author":{"gitId":"ChocoRagdoll"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":159,"author":{"gitId":"ChocoRagdoll"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-20"},{"lineNumber":160,"author":{"gitId":"ChocoRagdoll"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-20"},{"lineNumber":161,"author":{"gitId":"ChocoRagdoll"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(targetIndex);","lastModifiedDate":"2024-03-20"},{"lineNumber":162,"author":{"gitId":"ChocoRagdoll"},"content":"        String expected \u003d DeletePersonCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2024-03-20"},{"lineNumber":163,"author":{"gitId":"ChocoRagdoll"},"content":"        assertEquals(expected, deletePersonCommand.toString());","lastModifiedDate":"2024-03-20"},{"lineNumber":164,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":165,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":166,"author":{"gitId":"ChocoRagdoll"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":167,"author":{"gitId":"ChocoRagdoll"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2024-03-20"},{"lineNumber":168,"author":{"gitId":"ChocoRagdoll"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":169,"author":{"gitId":"ChocoRagdoll"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2024-03-20"},{"lineNumber":170,"author":{"gitId":"ChocoRagdoll"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2024-03-20"},{"lineNumber":171,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":172,"author":{"gitId":"ChocoRagdoll"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2024-03-20"},{"lineNumber":173,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":174,"author":{"gitId":"ChocoRagdoll"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"ChocoRagdoll":174}},{"path":"src/test/java/seedu/address/logic/commands/DeselectCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":"import seedu.address.testutil.TypicalEvents;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"myang2020"},"content":"public class DeselectCommandTest {","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"    public void execute_deselect_success() throws CommandException {","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"        ModelManager model \u003d new ModelManager();","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":"        model.setEventBook(TypicalEvents.getTypicalEventBook());","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"        model.selectEvent(TypicalEvents.getBingoEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"        DeselectCommand deselectCommand \u003d new DeselectCommand();","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"        CommandResult commandResult \u003d deselectCommand.execute(model);","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"        assertEquals(DeselectCommand.MESSAGE_DESELECT_EVENT_SUCCESS, commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"        DeselectCommand deselectCommand \u003d new DeselectCommand();","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"        String expected \u003d DeselectCommand.class.getCanonicalName() + \"{}\";","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"        assertEquals(expected, deselectCommand.toString());","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"myang2020"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"myang2020":29}},{"path":"src/test/java/seedu/address/logic/commands/InviteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"myang2020"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"public class InviteCommandTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"        assertThrows(NullPointerException.class, () -\u003e new InviteCommand(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"myang2020"},"content":"    public void execute_nullModel_throwsNullPointerException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"myang2020"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"myang2020"},"content":"                new InviteCommand(Index.fromZeroBased(0)).execute(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"myang2020"},"content":"    public void eventIndex_outOfRange_throwsCommandException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"myang2020"},"content":"        ModelManager model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"myang2020"},"content":"        model.setEventBook(getTypicalEventBook());","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"myang2020"},"content":"        assertThrows(CommandException.class, () -\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"myang2020"},"content":"                new InviteCommand(Index.fromZeroBased(100)).execute(model));","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"myang2020"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"myang2020"},"content":"        ModelManager model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"myang2020"},"content":"        model.setEventBook(getTypicalEventBook());","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"myang2020"},"content":"        InviteCommand inviteCommand \u003d new InviteCommand(Index.fromZeroBased(0));","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"myang2020"},"content":"        // Select an event first","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"myang2020"},"content":"        Event event \u003d model.getEventBook().getEventList().get(0);","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"myang2020"},"content":"        model.selectEvent(event);","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"myang2020"},"content":"        // Add person","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"myang2020"},"content":"        event.addPerson(getTypicalAddressBook().getPersonList().get(0));","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"myang2020"},"content":"        model.selectEvent(event);","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"myang2020"},"content":"        assertThrows(CommandException.class, InviteCommand.MESSAGE_DUPLICATE_PERSON, ()","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"myang2020"},"content":"                -\u003e inviteCommand.execute(model));","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"myang2020"},"content":"    public void execute_eventNotSelected_throwsCommandException() throws CommandException {","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"myang2020"},"content":"        ModelManager model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"myang2020"},"content":"        model.setEventBook(getTypicalEventBook());","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"myang2020"},"content":"        InviteCommand inviteCommand \u003d new InviteCommand(Index.fromZeroBased(0));","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"myang2020"},"content":"        assertThrows(CommandException.class, Messages.MESSAGE_SELECT_EVENT, () -\u003e inviteCommand.execute(model));","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"myang2020"},"content":"    public void execute_selectEventAndInvitePerson_successful() throws CommandException {","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"myang2020"},"content":"        ModelManager model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"myang2020"},"content":"        model.setEventBook(getTypicalEventBook());","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"myang2020"},"content":"        InviteCommand inviteCommand \u003d new InviteCommand(Index.fromZeroBased(0));","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"myang2020"},"content":"        // Select an event first","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"myang2020"},"content":"        model.selectEvent(model.getEventBook().getEventList().get(0));","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"myang2020"},"content":"        // Invite person","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"myang2020"},"content":"        inviteCommand.execute(model);","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"myang2020"},"content":"        // Ensure the person is added to the selected event","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"myang2020"},"content":"        Person personToInvite \u003d TypicalPersons.getTypicalPersons().get(0);","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"myang2020"},"content":"        assertTrue(model.isPersonInSelectedEvent(personToInvite));","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"myang2020"},"content":"    public void equals_sameIndex_returnsTrue() {","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"myang2020"},"content":"        InviteCommand one \u003d new InviteCommand(Index.fromZeroBased(5));","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"myang2020"},"content":"        InviteCommand two \u003d new InviteCommand(Index.fromZeroBased(5));","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"myang2020"},"content":"        assertEquals(one, two);","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"myang2020"},"content":"    public void equals_handles_null() {","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"myang2020"},"content":"        InviteCommand one \u003d new InviteCommand(Index.fromZeroBased(5));","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"myang2020"},"content":"        assertNotEquals(null, one);","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"myang2020"},"content":"    public void equals_sameObject_returnsTrue() {","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"myang2020"},"content":"        InviteCommand one \u003d new InviteCommand(Index.fromZeroBased(5));","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"myang2020"},"content":"        assertEquals(one, one);","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"myang2020"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"myang2020"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"myang2020"},"content":"        InviteCommand inviteCommand \u003d new InviteCommand(targetIndex);","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"myang2020"},"content":"        String expected \u003d InviteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"myang2020"},"content":"        assertEquals(expected, inviteCommand.toString());","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"myang2020"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"myang2020":112}},{"path":"src/test/java/seedu/address/logic/commands/SelectCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"myang2020"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"myang2020"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"public class SelectCommandTest {","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"        assertThrows(NullPointerException.class, () -\u003e new SelectCommand(null));","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"    public void execute_nullModel_throwsNullPointerException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"                new SelectCommand(Index.fromZeroBased(0)).execute(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"myang2020"},"content":"    public void eventIndex_outOfRange_throwsCommandException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"myang2020"},"content":"        ModelManager model \u003d new ModelManager();","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"myang2020"},"content":"        model.setEventBook(getTypicalEventBook());","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"myang2020"},"content":"        assertThrows(CommandException.class, () -\u003e new SelectCommand(Index.fromZeroBased(100)).execute(model));","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"myang2020"},"content":"    public void equals_sameIndex_returnsTrue() {","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"myang2020"},"content":"        SelectCommand one \u003d new SelectCommand(Index.fromZeroBased(5));","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"myang2020"},"content":"        SelectCommand two \u003d new SelectCommand(Index.fromZeroBased(5));","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"myang2020"},"content":"        assertEquals(one, two);","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"myang2020"},"content":"    public void equals_handles_null() {","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"myang2020"},"content":"        SelectCommand one \u003d new SelectCommand(Index.fromZeroBased(5));","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"myang2020"},"content":"        assertNotEquals(null, one);","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"myang2020"},"content":"    public void equals_sameObject_returnsTrue() {","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"myang2020"},"content":"        SelectCommand one \u003d new SelectCommand(Index.fromZeroBased(5));","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"myang2020"},"content":"        assertEquals(one, one);","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"myang2020"},"content":"    public void execute_selectSuccessful() throws CommandException {","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"myang2020"},"content":"        ModelManager model \u003d new ModelManager();","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"myang2020"},"content":"        model.setEventBook(getTypicalEventBook());","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"myang2020"},"content":"        SelectCommand selectCommand \u003d new SelectCommand(Index.fromZeroBased(0));","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"myang2020"},"content":"        CommandResult commandResult \u003d selectCommand.execute(model);","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"myang2020"},"content":"        assertEquals(String.format(SelectCommand.MESSAGE_SELECT_EVENT_SUCCESS,","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"myang2020"},"content":"                        Messages.format(model.getEventBook().getEventList().get(0))),","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"myang2020"},"content":"                            commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"myang2020"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"myang2020"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"myang2020"},"content":"        SelectCommand selectCommand \u003d new SelectCommand(targetIndex);","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"myang2020"},"content":"        String expected \u003d SelectCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"myang2020"},"content":"        assertEquals(expected, selectCommand.toString());","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"myang2020"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"myang2020":74}},{"path":"src/test/java/seedu/address/logic/parser/AddEventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EVENT_NAME_DESC_BINGO;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_NAME_BINGO;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_NAME;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":"import static seedu.address.testutil.TypicalEvents.getBingoEvent;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"public class AddEventCommandParserTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"    private AddEventCommandParser parser \u003d new AddEventCommandParser();","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"        Event expectedEvent \u003d new EventBuilder(getBingoEvent()).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"        assertParseSuccess(parser, EVENT_NAME_DESC_BINGO, new AddEventCommand(expectedEvent));","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"        String validExpectedEventString \u003d EVENT_NAME_DESC_BINGO;","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"        assertParseFailure(parser, EVENT_NAME_DESC_BINGO + validExpectedEventString,","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EVENT_NAME));","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddEventCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"        assertParseFailure(parser, VALID_EVENT_NAME_BINGO, expectedMessage);","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Apzure":41,"myang2020":2}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"taeewonnn"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"taeewonnn"},"content":"import seedu.address.logic.commands.DeleteEventCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"myang2020"},"content":"import seedu.address.logic.commands.SelectCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"taeewonnn"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"ChocoRagdoll"},"content":"    public void parseCommand_deleteEvent() throws Exception {","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"taeewonnn"},"content":"        DeleteEventCommand command \u003d (DeleteEventCommand) parser.parseCommand(","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"taeewonnn"},"content":"                DeleteEventCommand.COMMAND_WORD + \" \" + INDEX_FIRST_EVENT.getOneBased());","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"taeewonnn"},"content":"        assertEquals(new DeleteEventCommand(INDEX_FIRST_EVENT), command);","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"taeewonnn"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"ChocoRagdoll"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"ChocoRagdoll"},"content":"    public void parseCommand_deleteParticipant() throws Exception {","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"ChocoRagdoll"},"content":"        assertTrue(parser.parseCommand(DeletePersonCommand.COMMAND_WORD + \" 3\")","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"ChocoRagdoll"},"content":"            instanceof DeletePersonCommand);","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":119,"author":{"gitId":"myang2020"},"content":"    public void parseCommand_select() throws Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":120,"author":{"gitId":"myang2020"},"content":"        SelectCommand selectCommand \u003d (SelectCommand) parser.parseCommand(","lastModifiedDate":"2024-03-16"},{"lineNumber":121,"author":{"gitId":"myang2020"},"content":"                SelectCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2024-03-16"},{"lineNumber":122,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"ChocoRagdoll":8,"-":101,"taeewonnn":8,"myang2020":6}},{"path":"src/test/java/seedu/address/logic/parser/DeleteEventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"taeewonnn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"taeewonnn"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"taeewonnn"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"taeewonnn"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"taeewonnn"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"taeewonnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"taeewonnn"},"content":"import seedu.address.logic.commands.DeleteEventCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"taeewonnn"},"content":"public class DeleteEventCommandParserTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"taeewonnn"},"content":"    private DeleteEventCommandParser parser \u003d new DeleteEventCommandParser();","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"taeewonnn"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"taeewonnn"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"taeewonnn"},"content":"        assertParseSuccess(parser, \"1\", new DeleteEventCommand(INDEX_FIRST_EVENT));","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"taeewonnn"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"taeewonnn"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"taeewonnn"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"taeewonnn"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"taeewonnn"},"content":"                DeleteEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"taeewonnn"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"taeewonnn"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"taeewonnn":26}},{"path":"src/test/java/seedu/address/logic/parser/DeletePersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ChocoRagdoll"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"ChocoRagdoll"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"ChocoRagdoll"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"ChocoRagdoll"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"ChocoRagdoll"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"ChocoRagdoll"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"ChocoRagdoll"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"ChocoRagdoll"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"ChocoRagdoll"},"content":" * Tests the DeletePersonCommandParser class.","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"ChocoRagdoll"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"ChocoRagdoll"},"content":"public class DeletePersonCommandParserTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"ChocoRagdoll"},"content":"    private DeletePersonCommandParser parser \u003d new DeletePersonCommandParser();","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"ChocoRagdoll"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"ChocoRagdoll"},"content":"    public void parse_validArgs_returnsDeletePersonCommand() {","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"ChocoRagdoll"},"content":"        assertParseSuccess(parser, \"1\", new DeletePersonCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"ChocoRagdoll"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"ChocoRagdoll"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"ChocoRagdoll"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"ChocoRagdoll"},"content":"                DeletePersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"ChocoRagdoll"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"ChocoRagdoll":29}},{"path":"src/test/java/seedu/address/logic/parser/InviteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":"import seedu.address.logic.commands.InviteCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"myang2020"},"content":" * Contains unit tests for InviteCommandParser.","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"public class InviteCommandParserTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"    private final InviteCommandParser parser \u003d new InviteCommandParser();","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"    public void parse_validArgs_returnsInviteCommand() {","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"        assertParseSuccess(parser, \"1\", new InviteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"        assertParseFailure(parser, \"a\", String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"                InviteCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"myang2020"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"myang2020":29}},{"path":"src/test/java/seedu/address/logic/parser/SelectCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":"import seedu.address.logic.commands.SelectCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"myang2020"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"myang2020"},"content":"public class SelectCommandParserTest {","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"    private SelectCommandParser selectCommandParser \u003d new SelectCommandParser();","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"    public void parse_success() {","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"        assertParseSuccess(selectCommandParser, \"1\", new SelectCommand(Index.fromZeroBased(0)));","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"    public void parse_failure() throws ParseException {","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"        assertParseFailure(selectCommandParser, \"0abd\",","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SelectCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"myang2020":26}},{"path":"src/test/java/seedu/address/model/EventBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.model;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"import static seedu.address.testutil.TypicalEvents.getBingoEvent;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"import java.util.Collection;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"import java.util.List;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"public class EventBookTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"    private final EventBook eventBook \u003d new EventBook();","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"    public void constructor() {","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"        assertEquals(Collections.emptyList(), eventBook.getEventList());","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"        assertThrows(NullPointerException.class, () -\u003e eventBook.resetData(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"    public void resetData_withValidReadOnlyEventBook_replacesData() {","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"        EventBook newData \u003d getTypicalEventBook();","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"        eventBook.resetData(newData);","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"        assertEquals(newData, eventBook);","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"    public void resetData_withDuplicateEvents_throwsDuplicateEventException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"        // Two events with the same identity fields","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"myang2020"},"content":"        Event editedBingo \u003d new EventBuilder(getBingoEvent())","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"                .build();","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"myang2020"},"content":"        List\u003cEvent\u003e newEvents \u003d Arrays.asList(getBingoEvent(), editedBingo);","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"        EventBookStub newData \u003d new EventBookStub(newEvents);","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e eventBook.resetData(newData));","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"Apzure"},"content":"    public void hasEvent_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"        assertThrows(NullPointerException.class, () -\u003e eventBook.hasEvent(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"Apzure"},"content":"    public void hasEvent_eventNotInEventBook_returnsFalse() {","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"myang2020"},"content":"        assertFalse(eventBook.hasEvent(getBingoEvent()));","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"Apzure"},"content":"    public void hasEvent_eventInEventBook_returnsTrue() {","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"myang2020"},"content":"        eventBook.addEvent(getBingoEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"myang2020"},"content":"        assertTrue(eventBook.hasEvent(getBingoEvent()));","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"Apzure"},"content":"    public void hasEvent_eventWithSameIdentityFieldsInEventBook_returnsTrue() {","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"myang2020"},"content":"        eventBook.addEvent(getBingoEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"myang2020"},"content":"        Event editedBingo \u003d new EventBuilder(getBingoEvent())","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"Apzure"},"content":"                .build();","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"Apzure"},"content":"        assertTrue(eventBook.hasEvent(editedBingo));","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"Apzure"},"content":"    public void getEventList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"Apzure"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e eventBook.getEventList().remove(0));","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"Apzure"},"content":"    public void equals_sameObject_returnsTrue() {","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"Apzure"},"content":"        EventBook eventBook \u003d new EventBook();","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"Apzure"},"content":"        assertTrue(eventBook.equals(eventBook));","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":90,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":92,"author":{"gitId":"Apzure"},"content":"    public void equals_differentClass_returnsFalse() {","lastModifiedDate":"2024-03-12"},{"lineNumber":93,"author":{"gitId":"Apzure"},"content":"        EventBook eventBook \u003d new EventBook();","lastModifiedDate":"2024-03-12"},{"lineNumber":94,"author":{"gitId":"Apzure"},"content":"        Object differentObject \u003d new Object();","lastModifiedDate":"2024-03-12"},{"lineNumber":95,"author":{"gitId":"Apzure"},"content":"        assertFalse(eventBook.equals(differentObject));","lastModifiedDate":"2024-03-12"},{"lineNumber":96,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":99,"author":{"gitId":"Apzure"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-12"},{"lineNumber":100,"author":{"gitId":"Apzure"},"content":"        String expected \u003d EventBook.class.getCanonicalName() + \"{events\u003d\" + eventBook.getEventList() + \"}\";","lastModifiedDate":"2024-03-12"},{"lineNumber":101,"author":{"gitId":"Apzure"},"content":"        assertEquals(expected, eventBook.toString());","lastModifiedDate":"2024-03-12"},{"lineNumber":102,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":103,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":104,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":105,"author":{"gitId":"Apzure"},"content":"     * A stub ReadOnlyEventBook whose events list can violate interface constraints.","lastModifiedDate":"2024-03-12"},{"lineNumber":106,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"Apzure"},"content":"    private static class EventBookStub implements ReadOnlyEventBook {","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"Apzure"},"content":"        private final ObservableList\u003cEvent\u003e events \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-12"},{"lineNumber":109,"author":{"gitId":"Apzure"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-15"},{"lineNumber":110,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":111,"author":{"gitId":"Apzure"},"content":"        EventBookStub(Collection\u003cEvent\u003e events) {","lastModifiedDate":"2024-03-12"},{"lineNumber":112,"author":{"gitId":"Apzure"},"content":"            this.events.setAll(events);","lastModifiedDate":"2024-03-12"},{"lineNumber":113,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":114,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":115,"author":{"gitId":"Apzure"},"content":"        @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":116,"author":{"gitId":"Apzure"},"content":"        public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2024-03-12"},{"lineNumber":117,"author":{"gitId":"Apzure"},"content":"            return events;","lastModifiedDate":"2024-03-12"},{"lineNumber":118,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":119,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":120,"author":{"gitId":"Apzure"},"content":"        @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":121,"author":{"gitId":"Apzure"},"content":"        public ObservableList\u003cPerson\u003e getPersonsOfSelectedEventList() {","lastModifiedDate":"2024-03-15"},{"lineNumber":122,"author":{"gitId":"Apzure"},"content":"            return persons;","lastModifiedDate":"2024-03-15"},{"lineNumber":123,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":124,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":125,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Apzure":117,"myang2020":8}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":"import static seedu.address.testutil.TypicalEvents.getBingoEvent;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"        assertEquals(new EventBook(), new EventBook(modelManager.getEventBook()));","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":102,"author":{"gitId":"Apzure"},"content":"    public void hasEvent_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":103,"author":{"gitId":"Apzure"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasEvent(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":104,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":105,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":106,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"Apzure"},"content":"    public void hasEvent_eventNotInEventBook_returnsFalse() {","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"myang2020"},"content":"        assertFalse(modelManager.hasEvent(getBingoEvent()));","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":110,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":111,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":113,"author":{"gitId":"Apzure"},"content":"    public void hasEvent_eventInEventBook_returnsTrue() {","lastModifiedDate":"2024-03-12"},{"lineNumber":114,"author":{"gitId":"myang2020"},"content":"        modelManager.addEvent(getBingoEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"myang2020"},"content":"        assertTrue(modelManager.hasEvent(getBingoEvent()));","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":117,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":118,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":119,"author":{"gitId":"Apzure"},"content":"    public void deleteEvent_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":120,"author":{"gitId":"Apzure"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.deleteEvent(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":121,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":122,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":123,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":124,"author":{"gitId":"Apzure"},"content":"    public void deleteEvent_eventNotInEventBook_throwsEventNotFoundException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":125,"author":{"gitId":"myang2020"},"content":"        assertThrows(EventNotFoundException.class, () -\u003e modelManager.deleteEvent(getBingoEvent()));","lastModifiedDate":"2024-03-17"},{"lineNumber":126,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":127,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":128,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":129,"author":{"gitId":"Apzure"},"content":"    public void deleteEvent_eventInEventBook_removesEvent() {","lastModifiedDate":"2024-03-12"},{"lineNumber":130,"author":{"gitId":"myang2020"},"content":"        modelManager.addEvent(getBingoEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"myang2020"},"content":"        modelManager.deleteEvent(getBingoEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":132,"author":{"gitId":"myang2020"},"content":"        assertFalse(modelManager.hasEvent(getBingoEvent()));","lastModifiedDate":"2024-03-17"},{"lineNumber":133,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":134,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":135,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":136,"author":{"gitId":"Apzure"},"content":"    public void setEventBook_nullEventBook_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":137,"author":{"gitId":"Apzure"},"content":"        ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2024-03-12"},{"lineNumber":138,"author":{"gitId":"Apzure"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setEventBook(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":139,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":140,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":141,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":142,"author":{"gitId":"Apzure"},"content":"    public void setEventBook_validEventBook_success() {","lastModifiedDate":"2024-03-12"},{"lineNumber":143,"author":{"gitId":"Apzure"},"content":"        ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2024-03-12"},{"lineNumber":144,"author":{"gitId":"Apzure"},"content":"        ReadOnlyEventBook newEventBook \u003d new EventBook();","lastModifiedDate":"2024-03-12"},{"lineNumber":145,"author":{"gitId":"Apzure"},"content":"        modelManager.setEventBook(newEventBook);","lastModifiedDate":"2024-03-12"},{"lineNumber":146,"author":{"gitId":"Apzure"},"content":"        assertEquals(newEventBook, modelManager.getEventBook());","lastModifiedDate":"2024-03-12"},{"lineNumber":147,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":148,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":149,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":150,"author":{"gitId":"Apzure"},"content":"    public void setEvent_nullTargetAndEditedEvent_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":151,"author":{"gitId":"Apzure"},"content":"        ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2024-03-12"},{"lineNumber":152,"author":{"gitId":"Apzure"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setEvent(null, null));","lastModifiedDate":"2024-03-12"},{"lineNumber":153,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":154,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":155,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":156,"author":{"gitId":"Apzure"},"content":"    public void setEvent_nullTargetEvent_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":157,"author":{"gitId":"Apzure"},"content":"        ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2024-03-12"},{"lineNumber":158,"author":{"gitId":"Apzure"},"content":"        Event editedEvent \u003d new EventBuilder().build();","lastModifiedDate":"2024-03-12"},{"lineNumber":159,"author":{"gitId":"Apzure"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setEvent(null, editedEvent));","lastModifiedDate":"2024-03-12"},{"lineNumber":160,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":161,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":162,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":163,"author":{"gitId":"Apzure"},"content":"    public void setEvent_nullEditedEvent_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":164,"author":{"gitId":"Apzure"},"content":"        ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2024-03-12"},{"lineNumber":165,"author":{"gitId":"Apzure"},"content":"        Event targetEvent \u003d new EventBuilder().build();","lastModifiedDate":"2024-03-12"},{"lineNumber":166,"author":{"gitId":"Apzure"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setEvent(targetEvent, null));","lastModifiedDate":"2024-03-12"},{"lineNumber":167,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":168,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":169,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":170,"author":{"gitId":"Apzure"},"content":"    public void setEvent_validTargetAndEditedEvent_success() {","lastModifiedDate":"2024-03-12"},{"lineNumber":171,"author":{"gitId":"Apzure"},"content":"        ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2024-03-12"},{"lineNumber":172,"author":{"gitId":"Apzure"},"content":"        Event targetEvent \u003d new EventBuilder().build();","lastModifiedDate":"2024-03-12"},{"lineNumber":173,"author":{"gitId":"Apzure"},"content":"        Event editedEvent \u003d new EventBuilder().withEventName(\"Edited Event\").build();","lastModifiedDate":"2024-03-12"},{"lineNumber":174,"author":{"gitId":"Apzure"},"content":"        modelManager.addEvent(targetEvent);","lastModifiedDate":"2024-03-12"},{"lineNumber":175,"author":{"gitId":"Apzure"},"content":"        modelManager.setEvent(targetEvent, editedEvent);","lastModifiedDate":"2024-03-12"},{"lineNumber":176,"author":{"gitId":"Apzure"},"content":"        assertTrue(modelManager.getFilteredEventList().contains(editedEvent));","lastModifiedDate":"2024-03-12"},{"lineNumber":177,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":178,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":179,"author":{"gitId":"taeewonnn"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":180,"author":{"gitId":"taeewonnn"},"content":"    public void isEqualSelectedEvent_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":181,"author":{"gitId":"taeewonnn"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.isSameSelectedEvent(null));","lastModifiedDate":"2024-03-20"},{"lineNumber":182,"author":{"gitId":"taeewonnn"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":183,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":184,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":185,"author":{"gitId":"Apzure"},"content":"    public void getFilteredEventList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":186,"author":{"gitId":"Apzure"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredEventList().remove(0));","lastModifiedDate":"2024-03-12"},{"lineNumber":187,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":188,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"Apzure":79,"-":132,"taeewonnn":6,"myang2020":8}},{"path":"src/test/java/seedu/address/model/event/EventNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.model.event;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"public class EventNameTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EventName(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"    public void equals() {","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"        EventName eventName \u003d new EventName(\"Valid EventName\");","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"        assertTrue(eventName.equals(new EventName(\"Valid EventName\")));","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"        assertTrue(eventName.equals(eventName));","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"        assertFalse(eventName.equals(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"        assertFalse(eventName.equals(5.0f));","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"        assertFalse(eventName.equals(new EventName(\"Other Valid EventName\")));","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Apzure":36}},{"path":"src/test/java/seedu/address/model/event/EventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.model.event;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"public class EventTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"        Event event \u003d new EventBuilder().build();","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"        assertThrows(NullPointerException.class, () -\u003e event.hasPerson(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"    public void hasPerson_personNotInEvent_returnsFalse() {","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"        Event event \u003d new EventBuilder().build();","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"        assertFalse(event.hasPerson(ALICE));","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"    public void hasPerson_personInEvent_returnsTrue() {","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"        Event event \u003d new EventBuilder().withPerson(ALICE).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"        assertTrue(event.hasPerson(ALICE));","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"    public void addPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"        Event event \u003d new EventBuilder().build();","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"        assertThrows(NullPointerException.class, () -\u003e event.addPerson(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"    public void addPerson_personAlreadyInEvent_throwsDuplicatePersonException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"        Event event \u003d new EventBuilder().withPerson(ALICE).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e event.addPerson(ALICE));","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"    public void setPerson_nullTarget_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"        Event event \u003d new EventBuilder().build();","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"        assertThrows(NullPointerException.class, () -\u003e event.setPerson(null, ALICE));","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"Apzure"},"content":"        Event event \u003d new EventBuilder().build();","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"Apzure"},"content":"        assertThrows(NullPointerException.class, () -\u003e event.setPerson(ALICE, null));","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"Apzure"},"content":"    public void setPerson_targetNotInEvent_throwsPersonNotFoundException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"Apzure"},"content":"        Event event \u003d new EventBuilder().build();","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"Apzure"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e event.setPerson(ALICE, BENSON));","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"Apzure"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"Apzure"},"content":"        Event event \u003d new EventBuilder().withPerson(ALICE).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"Apzure"},"content":"        event.setPerson(ALICE, ALICE);","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"Apzure"},"content":"        assertTrue(event.getPersonList().contains(ALICE));","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"Apzure"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"Apzure"},"content":"        Event event \u003d new EventBuilder().withPerson(ALICE).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"Apzure"},"content":"        event.setPerson(ALICE, BENSON);","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"Apzure"},"content":"        assertFalse(event.getPersonList().contains(ALICE));","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"Apzure"},"content":"        assertTrue(event.getPersonList().contains(BENSON));","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"Apzure"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"Apzure"},"content":"        Event event \u003d new EventBuilder().build();","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"Apzure"},"content":"        String expected \u003d Event.class.getCanonicalName() + \"{eventName\u003d\" + event.getEventName()","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"Apzure"},"content":"                + \", persons\u003d\" + event.getPersonList().toString() + \"}\";","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"Apzure"},"content":"        assertEquals(expected, event.toString());","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Apzure":89}},{"path":"src/test/java/seedu/address/model/event/UniqueEventListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.model.event;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"import static seedu.address.testutil.TypicalEvents.getBingoEvent;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":"import static seedu.address.testutil.TypicalEvents.getHikingEvent;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"import java.util.List;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"public class UniqueEventListTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"    private final UniqueEventList uniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"    public void contains_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.contains(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"    public void contains_eventNotInList_returnsFalse() {","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"myang2020"},"content":"        assertFalse(uniqueEventList.contains(getBingoEvent()));","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"    public void contains_eventInList_returnsTrue() {","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"myang2020"},"content":"        uniqueEventList.add(getBingoEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"myang2020"},"content":"        assertTrue(uniqueEventList.contains(getBingoEvent()));","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"    public void contains_eventWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"myang2020"},"content":"        uniqueEventList.add(getBingoEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"myang2020"},"content":"        Event editedBingo \u003d new EventBuilder(getBingoEvent()).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"        assertTrue(uniqueEventList.contains(editedBingo));","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"    public void add_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.add(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"    public void add_duplicateEvent_throwsDuplicateEventException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"myang2020"},"content":"        uniqueEventList.add(getBingoEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"myang2020"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e uniqueEventList.add(getBingoEvent()));","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"Apzure"},"content":"    public void setEvent_nullTargetEvent_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"myang2020"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvent(null, getBingoEvent()));","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"Apzure"},"content":"    public void setEvent_nullEditedEvent_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"myang2020"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvent(getBingoEvent(), null));","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"Apzure"},"content":"    public void setEvent_targetEventNotInList_throwsEventNotFoundException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"myang2020"},"content":"        assertThrows(EventNotFoundException.class, () -\u003e uniqueEventList.setEvent(getBingoEvent(), getBingoEvent()));","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"Apzure"},"content":"    public void setEvent_editedEventIsSameEvent_success() {","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"myang2020"},"content":"        uniqueEventList.add(getBingoEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"myang2020"},"content":"        uniqueEventList.setEvent(getBingoEvent(), getBingoEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"Apzure"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"myang2020"},"content":"        expectedUniqueEventList.add(getBingoEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"Apzure"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"Apzure"},"content":"    public void setEvent_editedEventHasSameIdentity_success() {","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"myang2020"},"content":"        uniqueEventList.add(getBingoEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"myang2020"},"content":"        Event editedBingo \u003d new EventBuilder(getBingoEvent()).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"myang2020"},"content":"        uniqueEventList.setEvent(getBingoEvent(), editedBingo);","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"Apzure"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"Apzure"},"content":"        expectedUniqueEventList.add(editedBingo);","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"Apzure"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2024-03-12"},{"lineNumber":90,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":92,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":93,"author":{"gitId":"Apzure"},"content":"    public void setEvent_editedEventHasDifferentIdentity_success() {","lastModifiedDate":"2024-03-12"},{"lineNumber":94,"author":{"gitId":"myang2020"},"content":"        uniqueEventList.add(getBingoEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"myang2020"},"content":"        uniqueEventList.setEvent(getBingoEvent(), getHikingEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"Apzure"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"myang2020"},"content":"        expectedUniqueEventList.add(getHikingEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"Apzure"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2024-03-12"},{"lineNumber":99,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":100,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":101,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":102,"author":{"gitId":"Apzure"},"content":"    public void setEvent_editedEventHasNonUniqueIdentity_throwsDuplicateEventException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":103,"author":{"gitId":"myang2020"},"content":"        uniqueEventList.add(getBingoEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"myang2020"},"content":"        uniqueEventList.add(getHikingEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"myang2020"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e uniqueEventList.setEvent(getBingoEvent(), getHikingEvent()));","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":109,"author":{"gitId":"Apzure"},"content":"    public void remove_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":110,"author":{"gitId":"Apzure"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.remove(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":111,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":112,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":113,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":114,"author":{"gitId":"Apzure"},"content":"    public void remove_eventDoesNotExist_throwsEventNotFoundException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":115,"author":{"gitId":"myang2020"},"content":"        assertThrows(EventNotFoundException.class, () -\u003e uniqueEventList.remove(getBingoEvent()));","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":117,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":118,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":119,"author":{"gitId":"Apzure"},"content":"    public void remove_existingEvent_removesEvent() {","lastModifiedDate":"2024-03-12"},{"lineNumber":120,"author":{"gitId":"myang2020"},"content":"        uniqueEventList.add(getBingoEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"myang2020"},"content":"        uniqueEventList.remove(getBingoEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"Apzure"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2024-03-12"},{"lineNumber":123,"author":{"gitId":"Apzure"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2024-03-12"},{"lineNumber":124,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":125,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":126,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":127,"author":{"gitId":"Apzure"},"content":"    public void setEvents_nullUniqueEventList_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":128,"author":{"gitId":"Apzure"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvents((UniqueEventList) null));","lastModifiedDate":"2024-03-12"},{"lineNumber":129,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":130,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":131,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":132,"author":{"gitId":"Apzure"},"content":"    public void setEvents_uniqueEventList_replacesOwnListWithProvidedUniqueEventList() {","lastModifiedDate":"2024-03-12"},{"lineNumber":133,"author":{"gitId":"myang2020"},"content":"        uniqueEventList.add(getBingoEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"Apzure"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2024-03-12"},{"lineNumber":135,"author":{"gitId":"myang2020"},"content":"        expectedUniqueEventList.add(getHikingEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":136,"author":{"gitId":"Apzure"},"content":"        uniqueEventList.setEvents(expectedUniqueEventList);","lastModifiedDate":"2024-03-12"},{"lineNumber":137,"author":{"gitId":"Apzure"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2024-03-12"},{"lineNumber":138,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":139,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":140,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":141,"author":{"gitId":"Apzure"},"content":"    public void setEvents_nullList_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":142,"author":{"gitId":"Apzure"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvents((List\u003cEvent\u003e) null));","lastModifiedDate":"2024-03-12"},{"lineNumber":143,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":144,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":145,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":146,"author":{"gitId":"Apzure"},"content":"    public void setEvents_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2024-03-12"},{"lineNumber":147,"author":{"gitId":"myang2020"},"content":"        uniqueEventList.add(getBingoEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":148,"author":{"gitId":"myang2020"},"content":"        List\u003cEvent\u003e eventList \u003d Collections.singletonList(getHikingEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":149,"author":{"gitId":"Apzure"},"content":"        uniqueEventList.setEvents(eventList);","lastModifiedDate":"2024-03-12"},{"lineNumber":150,"author":{"gitId":"Apzure"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2024-03-12"},{"lineNumber":151,"author":{"gitId":"myang2020"},"content":"        expectedUniqueEventList.add(getHikingEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":152,"author":{"gitId":"Apzure"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2024-03-12"},{"lineNumber":153,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":154,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":155,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":156,"author":{"gitId":"Apzure"},"content":"    public void setEvents_listWithDuplicateEvents_throwsDuplicateEventException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":157,"author":{"gitId":"myang2020"},"content":"        List\u003cEvent\u003e listWithDuplicateEvents \u003d Arrays.asList(getBingoEvent(), getBingoEvent());","lastModifiedDate":"2024-03-17"},{"lineNumber":158,"author":{"gitId":"Apzure"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e uniqueEventList.setEvents(listWithDuplicateEvents));","lastModifiedDate":"2024-03-12"},{"lineNumber":159,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":160,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":161,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":162,"author":{"gitId":"Apzure"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":163,"author":{"gitId":"Apzure"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2024-03-12"},{"lineNumber":164,"author":{"gitId":"Apzure"},"content":"            -\u003e uniqueEventList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2024-03-12"},{"lineNumber":165,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":166,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":167,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":168,"author":{"gitId":"Apzure"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-12"},{"lineNumber":169,"author":{"gitId":"Apzure"},"content":"        assertEquals(uniqueEventList.asUnmodifiableObservableList().toString(), uniqueEventList.toString());","lastModifiedDate":"2024-03-12"},{"lineNumber":170,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":171,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Apzure":138,"myang2020":33}},{"path":"src/test/java/seedu/address/testutil/EventBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"import java.util.List;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":" * A utility class to help with building Event objects.","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"public class EventBuilder {","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"    public static final String DEFAULT_EVENT_NAME \u003d \"Sample Event\";","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"    private EventName eventName;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"    private List\u003cPerson\u003e personList;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"     * Creates an {@code EventBuilder} with the default details.","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"    public EventBuilder() {","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"        eventName \u003d new EventName(DEFAULT_EVENT_NAME);","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"        personList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"     * Initializes the EventBuilder with the data of {@code eventToCopy}.","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"    public EventBuilder(Event eventToCopy) {","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"        eventName \u003d eventToCopy.getEventName();","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"        personList \u003d eventToCopy.getPersonList();","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"     * Sets the {@code EventName} of the {@code Event} that we are building.","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"    public EventBuilder withEventName(String eventName) {","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"        this.eventName \u003d new EventName(eventName);","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"        return this;","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"     * Sets the {@code UniquePersonList} of the {@code Event} that we are building.","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"    public EventBuilder withPersonList(List\u003cPerson\u003e personList) {","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"        this.personList \u003d personList;","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"        return this;","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"     * Adds a person to the {@code UniquePersonList} of the {@code Event} that we are building.","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"    public EventBuilder withPerson(Person person) {","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"Apzure"},"content":"        this.personList.add(person);","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"Apzure"},"content":"        return this;","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"Apzure"},"content":"     * Builds the event based on the fields filled in earlier","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"Apzure"},"content":"     * @return event with fields","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"Apzure"},"content":"    public Event build() {","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"Apzure"},"content":"        Event event \u003d new Event(eventName);","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"Apzure"},"content":"        event.setPersons(personList);","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"Apzure"},"content":"        return event;","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Apzure":69}},{"path":"src/test/java/seedu/address/testutil/ModelStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":"import seedu.address.model.ReadOnlyEventBook;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"myang2020"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"myang2020"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":" * A stub class for Model.","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"public class ModelStub implements Model {","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"myang2020"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"myang2020"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"myang2020"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"myang2020"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"myang2020"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"myang2020"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"myang2020"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"myang2020"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"myang2020"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"myang2020"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"myang2020"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"myang2020"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"myang2020"},"content":"    public void setEventBook(ReadOnlyEventBook eventBook) {","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"myang2020"},"content":"    public ReadOnlyEventBook getEventBook() {","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"myang2020"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"myang2020"},"content":"    public void deleteEvent(Event target) {","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"myang2020"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"myang2020"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":120,"author":{"gitId":"myang2020"},"content":"    public boolean isAnEventSelected() {","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":125,"author":{"gitId":"taeewonnn"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":126,"author":{"gitId":"taeewonnn"},"content":"    public boolean isSameSelectedEvent(Event event) {","lastModifiedDate":"2024-03-20"},{"lineNumber":127,"author":{"gitId":"taeewonnn"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":128,"author":{"gitId":"taeewonnn"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":129,"author":{"gitId":"taeewonnn"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":130,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"myang2020"},"content":"    public void selectEvent(Event event) {","lastModifiedDate":"2024-03-17"},{"lineNumber":132,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":133,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":135,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":136,"author":{"gitId":"myang2020"},"content":"    public void deselectEvent() {","lastModifiedDate":"2024-03-17"},{"lineNumber":137,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":138,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":139,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":140,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":141,"author":{"gitId":"myang2020"},"content":"    public boolean isPersonInSelectedEvent(Person person) {","lastModifiedDate":"2024-03-17"},{"lineNumber":142,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":143,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":144,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":145,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":146,"author":{"gitId":"myang2020"},"content":"    public void addPersonToSelectedEvent(Person person) {","lastModifiedDate":"2024-03-17"},{"lineNumber":147,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":148,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":149,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":150,"author":{"gitId":"ChocoRagdoll"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":151,"author":{"gitId":"ChocoRagdoll"},"content":"    public void deletePersonFromSelectedEvent(Person person) {","lastModifiedDate":"2024-03-20"},{"lineNumber":152,"author":{"gitId":"ChocoRagdoll"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":153,"author":{"gitId":"ChocoRagdoll"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":154,"author":{"gitId":"ChocoRagdoll"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":155,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":156,"author":{"gitId":"myang2020"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2024-03-17"},{"lineNumber":157,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":158,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":159,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":160,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":161,"author":{"gitId":"myang2020"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonListOfSelectedEvent() {","lastModifiedDate":"2024-03-17"},{"lineNumber":162,"author":{"gitId":"myang2020"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":163,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":164,"author":{"gitId":"myang2020"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"ChocoRagdoll":5,"taeewonnn":6,"myang2020":153}},{"path":"src/test/java/seedu/address/testutil/TypicalEvents.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.EventBook;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":" * A utility class containing a list of {@code Event} objects to be used in tests.","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"public class TypicalEvents {","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"    private TypicalEvents() {","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"    } // prevents instantiation","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"     * Returns the getBingoEvent() event.","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"    public static Event getBingoEvent() {","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"        return new EventBuilder().withEventName(\"bingo\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"     * Returns the getHikingEvent() event.","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"    public static Event getHikingEvent() {","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"        return new EventBuilder().withEventName(\"hiking\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"myang2020"},"content":"     * Returns the CONCERT event.","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"myang2020"},"content":"    public static Event getConcertEvent() {","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"myang2020"},"content":"        return new EventBuilder().withEventName(\"concert\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"myang2020"},"content":"     * Returns the PARTY event.","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"myang2020"},"content":"    public static Event getPartyEvent() {","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"myang2020"},"content":"        return new EventBuilder().withEventName(\"party\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"myang2020"},"content":"     * Returns the CONFERENCE event.","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"myang2020"},"content":"    public static Event getConferenceEvent() {","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"myang2020"},"content":"        return new EventBuilder().withEventName(\"conference\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"     * Returns an {@code EventBook} with all the typical events.","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"    public static EventBook getTypicalEventBook() {","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"        EventBook eventBook \u003d new EventBook();","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"        for (Event event : getTypicalEvents()) {","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"            eventBook.addEvent(event);","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"Apzure"},"content":"        return eventBook;","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"myang2020"},"content":"     * Returns an {@code EventBook} with all the typical events.","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"Apzure"},"content":"    public static Event[] getTypicalEvents() {","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"myang2020"},"content":"        Event bingo \u003d getBingoEvent();","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"myang2020"},"content":"        Event hiking \u003d getHikingEvent();","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"myang2020"},"content":"        Event concert \u003d getConcertEvent();","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"myang2020"},"content":"        Event party \u003d getPartyEvent();","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"myang2020"},"content":"        Event conference \u003d getConferenceEvent();","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"myang2020"},"content":"        return new Event[]{bingo, hiking, concert, party, conference};","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Apzure":27,"myang2020":44}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"taeewonnn"},"content":"    public static final Index INDEX_FIRST_EVENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"taeewonnn"},"content":"    public static final Index INDEX_SECOND_EVENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"-":12,"taeewonnn":2}}]
